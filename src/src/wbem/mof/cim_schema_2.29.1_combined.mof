// Copyright 1998-2008 Distributed Management Task Force, Inc. (DMTF).
// All rights reserved.
// DMTF is a not-for-profit association of industry members dedicated
// to promoting enterprise and systems management and interoperability.
// DMTF specifications and documents may be reproduced by
// members and non-members, provided that correct attribution is given.
// As DMTF specifications may be revised from time to time,
// the particular version and release date should always be noted.
// 
// Implementation of certain elements of this standard or proposed
// standard may be subject to third party patent rights, including
// provisional patent rights (herein "patent rights"). DMTF makes
// no representations to users of the standard as to the existence
// of such rights, and is not responsible to recognize, disclose, or
// identify any or all such third party patent right, owners or
// claimants, nor for any incomplete or inaccurate identification or
// disclosure of such rights, owners or claimants. DMTF shall have no
// liability to any party, in any manner or circumstance, under any
// legal theory whatsoever, for failure to recognize, disclose, or
// identify any such third party patent rights, or for such party's
// reliance on the standard or incorporation thereof in its product,
// protocols or testing procedures. DMTF shall have no liability to
// any party implementing such standard, whether such implementation
// is foreseeable or not, nor to any patent owner or claimant, and shall
// have no liability or responsibility for costs or losses incurred if
// a standard is withdrawn or modified after publication, and shall be
// indemnified and held harmless by any party implementing the
// standard from any and all claims of infringement by a patent owner
// for such implementations.
// 
// For information about patents held by third-parties which have
// notified the DMTF that, in their opinion, such patent may relate to
// or impact implementations of DMTF standards, visit
// http://www.dmtf.org/about/policies/disclosures.php.
#pragma locale ("en_US")
// Copyright (c) 2007 DMTF.  All rights reserved.
//===============
//Meta Qualifiers
//===============

Qualifier Association : boolean = false, 
    Scope(association), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Indication : boolean = false, 
    Scope(class, indication), 
    Flavor(DisableOverride, ToSubclass);

//===================
//Standard Qualifiers
//===================

Qualifier Abstract : boolean = false, 
    Scope(class, association, indication), 
    Flavor(EnableOverride, Restricted);

Qualifier Aggregate : boolean = false, 
    Scope(reference), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Aggregation : boolean = false, 
    Scope(association), 
    Flavor(DisableOverride, ToSubclass);

Qualifier ArrayType : string = "Bag", 
    Scope(property, parameter), 
    Flavor(DisableOverride, ToSubclass);

Qualifier BitMap : string[], 
    Scope(property, method, parameter);

Qualifier BitValues : string[], 
    Scope(property, method, parameter), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier ClassConstraint : string[], 
    Scope(class, association, indication);

Qualifier Composition : boolean = false, 
    Scope(association), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Correlatable : string[], 
    Scope(property);

Qualifier Counter : boolean = false, 
    Scope(property, method, parameter);

Qualifier Deprecated : string[], 
    Scope(any), 
    Flavor(EnableOverride, Restricted);

Qualifier Description : string = null, 
    Scope(any), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier DisplayName : string = null, 
    Scope(any), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier DN : boolean = false, 
    Scope(property, method, parameter), 
    Flavor(DisableOverride, ToSubclass);

Qualifier EmbeddedInstance : string = null, 
    Scope(property, method, parameter);

Qualifier EmbeddedObject : boolean = false, 
    Scope(property, method, parameter), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Exception : boolean = false, 
    Scope(class, indication), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Experimental : boolean = false, 
    Scope(any), 
    Flavor(EnableOverride, Restricted);

Qualifier Gauge : boolean = false, 
    Scope(property, method, parameter);

Qualifier In : boolean = true, 
    Scope(parameter), 
    Flavor(DisableOverride, ToSubclass);

Qualifier IsPUnit : boolean = false, 
    Scope(property, method, parameter);

Qualifier Key : boolean = false, 
    Scope(property, reference), 
    Flavor(DisableOverride, ToSubclass);

Qualifier MappingStrings : string[], 
    Scope(any);

Qualifier Max : uint32 = null, 
    Scope(reference);

Qualifier MaxLen : uint32 = null, 
    Scope(property, method, parameter);

Qualifier MaxValue : sint64 = null, 
    Scope(property, method, parameter);

Qualifier MethodConstraint : string[], 
    Scope(method);

Qualifier Min : uint32 = 0, 
    Scope(reference);

Qualifier MinLen : uint32 = 0, 
    Scope(property, method, parameter);

Qualifier MinValue : sint64 = null, 
    Scope(property, method, parameter);

Qualifier ModelCorrespondence : string[], 
    Scope(any);

/*
The Nonlocal qualifer has been removed (as an errata) as of CIM 2.3
For more information see CR1461.
*/
Qualifier Nonlocal : string = null, 
    Scope(reference);

/*
The NonlocalType qualifer has been removed (as an errata) as of CIM 2.3
For more information see CR1461.
*/
Qualifier NonlocalType : string = null, 
    Scope(reference);

Qualifier NullValue : string = null, 
    Scope(property), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Octetstring : boolean = false, 
    Scope(property, method, parameter), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Out : boolean = false, 
    Scope(parameter), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Override : string = null, 
    Scope(property, reference, method), 
    Flavor(EnableOverride, Restricted);

Qualifier Propagated : string = null, 
    Scope(property), 
    Flavor(DisableOverride, ToSubclass);

Qualifier PropertyConstraint : string[], 
    Scope(property, reference);

Qualifier PUnit : string = null, 
    Scope(property, method, parameter);

Qualifier Read : boolean = true, 
    Scope(property);

Qualifier Required : boolean = false, 
    Scope(property, reference, method, parameter), 
    Flavor(DisableOverride, ToSubclass);

//  The Revision qualifier has been deprecated. For the replacement,
//  see the usage rule for the version qualifier in the CIM
//  Specification.

Qualifier Revision : string = null, 
    Scope(class, association, indication), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier Schema : string = null, 
    Scope(property, method), 
    Flavor(DisableOverride, ToSubclass, Translatable);

/*
The Source qualifer has been removed (as an errata) as of CIM 2.3
For more information see CR1461.
*/
Qualifier Source : string = null, 
    Scope(class, association, indication);

/*
The SourceType qualifer has been removed (as an errata) as of CIM 2.3
For more information see CR1461.
*/
Qualifier SourceType : string = null, 
    Scope(class, association, indication, reference);

Qualifier Static : boolean = false, 
    Scope(property, method), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Terminal : boolean = false, 
    Scope(class, association, indication);

Qualifier UMLPackagePath : string = null, 
    Scope(class, association, indication);

Qualifier Units : string = null, 
    Scope(property, method, parameter), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier ValueMap : string[], 
    Scope(property, method, parameter);

Qualifier Values : string[], 
    Scope(property, method, parameter), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier Version : string = null, 
    Scope(class, association, indication), 
    Flavor(EnableOverride, Restricted, Translatable);

Qualifier Weak : boolean = false, 
    Scope(reference), 
    Flavor(DisableOverride, ToSubclass);

Qualifier Write : boolean = false, 
    Scope(property);


// Copyright (c) 2007 DMTF.  All rights reserved.
// <change cr="ArchCR00071.005" type="add">Add new 
//DisplayDescription qualifier.</change>
// ==================================================================
// Optional Qualifiers
// Defined in the CIM Infrastructure Specification Section 2.5.3 
// ==================================================================

Qualifier Alias : string = null, 
    Scope(property, reference, method), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier Delete : boolean = false, 
    Scope(association, reference);

Qualifier DisplayDescription : string = null, 
    Scope(any), 
    Flavor(EnableOverride, ToSubclass, Translatable);

Qualifier Expensive : boolean = false, 
    Scope(any);

Qualifier Ifdeleted : boolean = false, 
    Scope(association, reference);

Qualifier Invisible : boolean = false, 
    Scope(class, association, property, reference, method);

Qualifier Large : boolean = false, 
    Scope(class, property);

Qualifier PropertyUsage : string = "CurrentContext", 
    Scope(property);

Qualifier Provider : string = null, 
    Scope(any);

Qualifier SyntaxType : string = null, 
    Scope(property, reference, method, parameter);

Qualifier Syntax : string = null, 
    Scope(property, reference, method, parameter);

Qualifier TriggerType : string = null, 
    Scope(class, association, indication, property, reference, method);

Qualifier UnknownValues : string[], 
    Scope(property), 
    Flavor(DisableOverride, ToSubclass);

Qualifier UnsupportedValues : string[], 
    Scope(property), 
    Flavor(DisableOverride, ToSubclass);


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "ManagedElement is an abstract class that provides a common "
       "superclass (or top of the inheritance tree) for the "
       "non-association classes in the CIM Schema." )]
class CIM_ManagedElement {

      [Description ( 
          "InstanceID is an optional property that may be used to "
          "opaquely and uniquely identify an instance of this class "
          "within the scope of the instantiating Namespace. Various "
          "subclasses of this class may override this property to "
          "make it required, or a key. Such subclasses may also "
          "modify the preferred algorithms for ensuring uniqueness "
          "that are defined below.\n"
          "To ensure uniqueness within the NameSpace, the value of "
          "InstanceID should be constructed using the following "
          "\"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If not null and the above "
          "\"preferred\" algorithm is not used, the defining entity "
          "must assure that the resulting InstanceID is not reused "
          "across any InstanceIDs produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "If not set to null for DMTF-defined instances, the "
          "\"preferred\" algorithm must be used with the <OrgID> "
          "set to CIM." )]
   string InstanceID;

      [Description ( 
          "The Caption property is a short textual description "
          "(one- line string) of the object." ), 
       MaxLen ( 64 )]
   string Caption;

      [Description ( 
          "The Description property provides a textual description "
          "of the object." )]
   string Description;

      [Description ( 
          "A user-friendly name for the object. This property "
          "allows each instance to define a user-friendly name in "
          "addition to its key properties, identity data, and "
          "description information. \n"
          "Note that the Name property of ManagedSystemElement is "
          "also defined as a user-friendly name. But, it is often "
          "subclassed to be a Key. It is not reasonable that the "
          "same property can convey both identity and a "
          "user-friendly name, without inconsistencies. Where Name "
          "exists and is not a Key (such as for instances of "
          "LogicalDevice), the same information can be present in "
          "both the Name and ElementName properties. Note that if "
          "there is an associated instance of "
          "CIM_EnabledLogicalElementCapabilities, restrictions on "
          "this properties may exist as defined in ElementNameMask "
          "and MaxElementNameLen properties defined in that class." )]
   string ElementName;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Abstract, Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_ManagedSystemElement is the base class for the System "
       "Element hierarchy. Any distinguishable component of a System "
       "is a candidate for inclusion in this class. Examples of system "
       "components include: \n"
       "- software components such as application servers, databases, "
       "and applications \n"
       "- operating system components such as files, processes, and "
       "threads \n"
       "- device components such as disk drives, controllers, "
       "processors, and printers \n"
       "- physical components such as chips and cards." )]
class CIM_ManagedSystemElement : CIM_ManagedElement {

      [Description ( 
          "A datetime value that indicates when the object was "
          "installed. Lack of a value does not indicate that the "
          "object is not installed." ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.5" }]
   datetime InstallDate;

      [Description ( 
          "The Name property defines the label by which the object "
          "is known. When subclassed, the Name property can be "
          "overridden to be a Key property." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "Indicates the current statuses of the element. Various "
          "operational statuses are defined. Many of the "
          "enumeration\'s values are self-explanatory. However, a "
          "few are not and are described here in more detail. \n"
          "\"Stressed\" indicates that the element is functioning, "
          "but needs attention. Examples of \"Stressed\" states are "
          "overload, overheated, and so on. \n"
          "\"Predictive Failure\" indicates that an element is "
          "functioning nominally but predicting a failure in the "
          "near future. \n"
          "\"In Service\" describes an element being configured, "
          "maintained, cleaned, or otherwise administered. \n"
          "\"No Contact\" indicates that the monitoring system has "
          "knowledge of this element, but has never been able to "
          "establish communications with it. \n"
          "\"Lost Communication\" indicates that the ManagedSystem "
          "Element is known to exist and has been contacted "
          "successfully in the past, but is currently unreachable. \n"
          "\"Stopped\" and \"Aborted\" are similar, although the "
          "former implies a clean and orderly stop, while the "
          "latter implies an abrupt stop where the state and "
          "configuration of the element might need to be updated. \n"
          "\"Dormant\" indicates that the element is inactive or "
          "quiesced. \n"
          "\"Supporting Entity in Error\" indicates that this "
          "element might be \"OK\" but that another element, on "
          "which it is dependent, is in error. An example is a "
          "network service or endpoint that cannot function due to "
          "lower-layer networking problems. \n"
          "\"Completed\" indicates that the element has completed "
          "its operation. This value should be combined with either "
          "OK, Error, or Degraded so that a client can tell if the "
          "complete operation Completed with OK (passed), Completed "
          "with Error (failed), or Completed with Degraded (the "
          "operation finished, but it did not complete OK or did "
          "not report an error). \n"
          "\"Power Mode\" indicates that the element has additional "
          "power model information contained in the Associated "
          "PowerManagementService association. \n"
          "\"Relocating\" indicates the element is being relocated.\n"
          "OperationalStatus replaces the Status property on "
          "ManagedSystemElement to provide a consistent approach to "
          "enumerations, to address implementation needs for an "
          "array property, and to provide a migration path from "
          "today\'s environment to the future. This change was not "
          "made earlier because it required the deprecated "
          "qualifier. Due to the widespread use of the existing "
          "Status property in management applications, it is "
          "strongly recommended that providers or instrumentation "
          "provide both the Status and OperationalStatus "
          "properties. Further, the first value of "
          "OperationalStatus should contain the primary status for "
          "the element. When instrumented, Status (because it is "
          "single-valued) should also provide the primary status of "
          "the element." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "OK", "Degraded", "Stressed", 
          "Predictive Failure", "Error", "Non-Recoverable Error", 
          "Starting", "Stopping", "Stopped", "In Service", 
          "No Contact", "Lost Communication", "Aborted", "Dormant", 
          "Supporting Entity in Error", "Completed", "Power Mode", 
          "Relocating", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.StatusDescriptions" }]
   uint16 OperationalStatus[];

      [Description ( 
          "Strings describing the various OperationalStatus array "
          "values. For example, if \"Stopping\" is the value "
          "assigned to OperationalStatus, then this property may "
          "contain an explanation as to why an object is being "
          "stopped. Note that entries in this array are correlated "
          "with those at the same array index in OperationalStatus." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.OperationalStatus" }]
   string StatusDescriptions[];

      [Deprecated { "CIM_ManagedSystemElement.OperationalStatus" }, 
       Description ( 
          "A string indicating the current status of the object. "
          "Various operational and non-operational statuses are "
          "defined. This property is deprecated in lieu of "
          "OperationalStatus, which includes the same semantics in "
          "its enumeration. This change is made for 3 reasons: \n"
          "1) Status is more correctly defined as an array. This "
          "definition overcomes the limitation of describing status "
          "using a single value, when it is really a multi-valued "
          "property (for example, an element might be OK AND "
          "Stopped. \n"
          "2) A MaxLen of 10 is too restrictive and leads to "
          "unclear enumerated values. \n"
          "3) The change to a uint16 data type was discussed when "
          "CIM V2.0 was defined. However, existing V1.0 "
          "implementations used the string property and did not "
          "want to modify their code. Therefore, Status was "
          "grandfathered into the Schema. Use of the deprecated "
          "qualifier allows the maintenance of the existing "
          "property, but also permits an improved definition using "
          "OperationalStatus." ), 
       ValueMap { "OK", "Error", "Degraded", "Unknown", "Pred Fail", 
          "Starting", "Stopping", "Service", "Stressed", 
          "NonRecover", "No Contact", "Lost Comm", "Stopped" }, 
       MaxLen ( 10 )]
   string Status;

      [Description ( 
          "Indicates the current health of the element. This "
          "attribute expresses the health of this element but not "
          "necessarily that of its subcomponents. The possible "
          "values are 0 to 30, where 5 means the element is "
          "entirely healthy and 30 means the element is completely "
          "non-functional. The following continuum is defined: \n"
          "\"Non-recoverable Error\" (30) - The element has "
          "completely failed, and recovery is not possible. All "
          "functionality provided by this element has been lost. \n"
          "\"Critical Failure\" (25) - The element is "
          "non-functional and recovery might not be possible. \n"
          "\"Major Failure\" (20) - The element is failing. It is "
          "possible that some or all of the functionality of this "
          "component is degraded or not working. \n"
          "\"Minor Failure\" (15) - All functionality is available "
          "but some might be degraded. \n"
          "\"Degraded/Warning\" (10) - The element is in working "
          "order and all functionality is provided. However, the "
          "element is not working to the best of its abilities. For "
          "example, the element might not be operating at optimal "
          "performance or it might be reporting recoverable errors. \n"
          "\"OK\" (5) - The element is fully functional and is "
          "operating within normal operational parameters and "
          "without error. \n"
          "\"Unknown\" (0) - The implementation cannot report on "
          "HealthState at this time. \n"
          "DMTF has reserved the unused portion of the continuum "
          "for additional HealthStates in the future." ), 
       ValueMap { "0", "5", "10", "15", "20", "25", "30", "..", 
          "32768..65535" }, 
       Values { "Unknown", "OK", "Degraded/Warning", 
          "Minor failure", "Major failure", "Critical failure", 
          "Non-recoverable error", "DMTF Reserved", "Vendor Specific" }]
   uint16 HealthState;

      [Description ( 
          "CommunicationStatus indicates the ability of the "
          "instrumentation to communicate with the underlying "
          "ManagedElement. CommunicationStatus consists of one of "
          "the following values: Unknown, None, Communication OK, "
          "Lost Communication, or No Contact. \n"
          "A Null return indicates the implementation (provider) "
          "does not implement this property. \n"
          "\"Unknown\" indicates the implementation is in general "
          "capable of returning this property, but is unable to do "
          "so at this time. \n"
          "\"Not Available\" indicates that the implementation "
          "(provider) is capable of returning a value for this "
          "property, but not ever for this particular piece of "
          "hardware/software or the property is intentionally not "
          "used because it adds no meaningful information (as in "
          "the case of a property that is intended to add "
          "additional info to another property). \n"
          "\"Communication OK \" indicates communication is "
          "established with the element, but does not convey any "
          "quality of service. \n"
          "\"No Contact\" indicates that the monitoring system has "
          "knowledge of this element, but has never been able to "
          "establish communications with it. \n"
          "\"Lost Communication\" indicates that the Managed "
          "Element is known to exist and has been contacted "
          "successfully in the past, but is currently unreachable." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000.." }, 
       Values { "Unknown", "Not Available", "Communication OK", 
          "Lost Communication", "No Contact", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 CommunicationStatus;

      [Description ( 
          "DetailedStatus compliments PrimaryStatus with additional "
          "status detail. It consists of one of the following "
          "values: Not Available, No Additional Information, "
          "Stressed, Predictive Failure, Error, Non-Recoverable "
          "Error, SupportingEntityInError. Detailed status is used "
          "to expand upon the PrimaryStatus of the element. \n"
          "A Null return indicates the implementation (provider) "
          "does not implement this property. \n"
          "\"Not Available\" indicates that the implementation "
          "(provider) is capable of returning a value for this "
          "property, but not ever for this particular piece of "
          "hardware/software or the property is intentionally not "
          "used because it adds no meaningful information (as in "
          "the case of a property that is intended to add "
          "additional info to another property). \n"
          "\"No Additional Information\" indicates that the element "
          "is functioning normally as indicated by PrimaryStatus = "
          "\"OK\". \n"
          "\"Stressed\" indicates that the element is functioning, "
          "but needs attention. Examples of \"Stressed\" states are "
          "overload, overheated, and so on. \n"
          "\"Predictive Failure\" indicates that an element is "
          "functioning normally but a failure is predicted in the "
          "near future. \n"
          "\"Non-Recoverable Error \" indicates that this element "
          "is in an error condition that requires human "
          "intervention. \n"
          "\"Supporting Entity in Error\" indicates that this "
          "element might be \"OK\" but that another element, on "
          "which it is dependent, is in error. An example is a "
          "network service or endpoint that cannot function due to "
          "lower-layer networking problems." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Not Available", "No Additional Information", 
          "Stressed", "Predictive Failure", "Non-Recoverable Error", 
          "Supporting Entity in Error", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.PrimaryStatus", 
          "CIM_ManagedSystemElement.HealthState" }]
   uint16 DetailedStatus;

      [Description ( 
          "OperatingStatus provides a current status value for the "
          "operational condition of the element and can be used for "
          "providing more detail with respect to the value of "
          "EnabledState. It can also provide the transitional "
          "states when an element is transitioning from one state "
          "to another, such as when an element is transitioning "
          "between EnabledState and RequestedState, as well as "
          "other transitional conditions.\n"
          "OperatingStatus consists of one of the following values: "
          "Unknown, Not Available, In Service, Starting, Stopping, "
          "Stopped, Aborted, Dormant, Completed, Migrating, "
          "Emmigrating, Immigrating, Snapshotting. Shutting Down, "
          "In Test \n"
          "A Null return indicates the implementation (provider) "
          "does not implement this property. \n"
          "\"Unknown\" indicates the implementation is in general "
          "capable of returning this property, but is unable to do "
          "so at this time. \n"
          "\"None\" indicates that the implementation (provider) is "
          "capable of returning a value for this property, but not "
          "ever for this particular piece of hardware/software or "
          "the property is intentionally not used because it adds "
          "no meaningful information (as in the case of a property "
          "that is intended to add additional info to another "
          "property). \n"
          "\"Servicing\" describes an element being configured, "
          "maintained, cleaned, or otherwise administered. \n"
          "\"Starting\" describes an element being initialized. \n"
          "\"Stopping\" describes an element being brought to an "
          "orderly stop. \n"
          "\"Stopped\" and \"Aborted\" are similar, although the "
          "former implies a clean and orderly stop, while the "
          "latter implies an abrupt stop where the state and "
          "configuration of the element might need to be updated. \n"
          "\"Dormant\" indicates that the element is inactive or "
          "quiesced. \n"
          "\"Completed\" indicates that the element has completed "
          "its operation. This value should be combined with either "
          "OK, Error, or Degraded in the PrimaryStatus so that a "
          "client can tell if the complete operation Completed with "
          "OK (passed), Completed with Error (failed), or Completed "
          "with Degraded (the operation finished, but it did not "
          "complete OK or did not report an error). \n"
          "\"Migrating\" element is being moved between host "
          "elements. \n"
          "\"Immigrating\" element is being moved to new host "
          "element. \n"
          "\"Emigrating\" element is being moved away from host "
          "element. \n"
          "\"Shutting Down\" describes an element being brought to "
          "an abrupt stop. \n"
          "\"In Test\" element is performing test functions. \n"
          "\"Transitioning\" describes an element that is between "
          "states, that is, it is not fully available in either its "
          "previous state or its next state. This value should be "
          "used if other values indicating a transition to a "
          "specific state are not applicable.\n"
          "\"In Service\" describes an element that is in service "
          "and operational." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "..", "0x8000.." }, 
       Values { "Unknown", "Not Available", "Servicing", "Starting", 
          "Stopping", "Stopped", "Aborted", "Dormant", "Completed", 
          "Migrating", "Emigrating", "Immigrating", "Snapshotting", 
          "Shutting Down", "In Test", "Transitioning", "In Service", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 OperatingStatus;

      [Description ( 
          "PrimaryStatus provides a high level status value, "
          "intended to align with Red-Yellow-Green type "
          "representation of status. It should be used in "
          "conjunction with DetailedStatus to provide high level "
          "and detailed health status of the ManagedElement and its "
          "subcomponents. \n"
          "PrimaryStatus consists of one of the following values: "
          "Unknown, OK, Degraded or Error. \"Unknown\" indicates "
          "the implementation is in general capable of returning "
          "this property, but is unable to do so at this time. \n"
          "\"OK\" indicates the ManagedElement is functioning "
          "normally. \n"
          "\"Degraded\" indicates the ManagedElement is functioning "
          "below normal. \n"
          "\"Error\" indicates the ManagedElement is in an Error "
          "condition." ), 
       ValueMap { "0", "1", "2", "3", "..", "0x8000.." }, 
       Values { "Unknown", "OK", "Degraded", "Error", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.DetailedStatus", 
          "CIM_ManagedSystemElement.HealthState" }]
   uint16 PrimaryStatus;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00713.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MethodParameters
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::MethodParms" ), 
    Description ( 
       "CIM_MethodParameters represents a set of values to be used as "
       "the parameters of a method. These parameters can be passed to "
       "the method, directly used by the method in its invocation, or "
       "accessed by the method when it is called. The properties of a "
       "concrete subclass of MethodParameters are mapped to the "
       "parameters of a method by the method itself or by the method "
       "caller. This mapping is an implementation detail that is "
       "independent of the definition of the class. For ease of use, "
       "property names should match parameter names. \n"
       "Property values should be set before the method is invoked. "
       "The ModelCorrespondence qualifier can be used to indicate if "
       "the property value should come from the property of another "
       "class. The instances that the property values should be "
       "gleaned from should be associated with MethodParameters using "
       "the Parameter ValueSources association. \n"
       "If the property is declared as an array, then the same "
       "property value (identified by the Model Correspondence) will "
       "be retrieved from all appropriate ParameterValueSources "
       "instances and stored in the array. \n"
       "If the property is declared as an array and the Model "
       "Correspondence is to an array property, then only one instance "
       "of the array will be copied from one ParameterValueSource. \n"
       "If the property is not declared as an array and there are "
       "multiple instances of the class and property associated with "
       "it through ModelCorrespondence where the values are not all "
       "the same, then an error will occur and the value of the "
       "property will not be set. \n"
       "Several MethodParameters instances can be associated with any "
       "of the ManagedElement methods. This association allows the "
       "maintenance of \'canned\' method invocation and reduces the "
       "overhead of re-creating all method parameters for every method "
       "invocation." )]
class CIM_MethodParameters : CIM_ManagedElement {

      [Description ( 
          "The identifier by which the MethodParameters object is known."
           ), 
       MaxLen ( 256 )]
   string MethodParametersId;


      [Description ( 
          "The resetValues method updates the values of the "
          "properties of MethodParameters, which have "
          "ModelCorrespondence to the SourceME ManagedElement. This "
          "update allows several source candidates to be associated "
          "with the MethodParameters and one candidate to be "
          "selected as the source for this set of values. If "
          "resetValues is invoked and sourceME is null, then all "
          "associated ManagedElements in ParameterValueSources will "
          "be used to set the values of the MethodParameters "
          "properties." )]
   uint32 ResetValues(
         [IN, Description ( "The source ManagedElement." )]
      CIM_ManagedElement REF SourceME);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00713.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ParametersForMethod
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::MethodParms" ), 
    Description ( 
       "ParametersForMethod represents the association between "
       "MethodParameters classes and a ManagedElement that has a "
       "method that can use the MethodParameters during its "
       "invocation. This association is optional. The Method "
       "Parameters instance can be passed as a parameter to a method "
       "or used to create a method signature before the method is "
       "invoked. This association is useful for finding all the valid "
       "MethodParameters instances for a particular method. It might "
       "be particularly useful for user-oriented interfaces and "
       "automated or policy driven method invocations." )]
class CIM_ParametersForMethod {

      [Key, Description ( 
          "The MethodParameters instance, which can be used by the "
          "ParametersForMethod\'s method invocation." )]
   CIM_MethodParameters REF Parameters;

      [Key, Description ( 
          "The ManagedElement that has a method that can use this "
          "instance of MethodParameters." )]
   CIM_ManagedElement REF TheMethod;

      [Key, Description ( 
          "The name of the method that can use the referenced "
          "instance of MethodParameters during its invocation." ), 
       MaxLen ( 64 )]
   string MethodName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00713.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ParameterValueSources
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::MethodParms" ), 
    Description ( 
       "ParameterValueSources represents the association between a "
       "MethodParameters instance and the ManagedElement instances, "
       "which contain properties to be used to create values for the "
       "MethodParameters properties." )]
class CIM_ParameterValueSources {

      [Key, Description ( 
          "The MethodParameters instance whose property values are to be set."
           )]
   CIM_MethodParameters REF Parameters;

      [Key, Description ( 
          "The ManagedElement that contains properties to be used "
          "to populate the values of the properties of the "
          "MethodParameters instance." )]
   CIM_ManagedElement REF ValueSource;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00714.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalElement
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Physical" ), 
    Description ( 
       "Subclasses of CIM_PhysicalElement define any component of a "
       "System that has a distinct physical identity. Instances of "
       "this class can be defined as an object that can be seen or "
       "touched. All Processes, Files, and LogicalDevices are "
       "considered not to be Physical Elements. For example, it is not "
       "possible to touch the functionality of a \'modem.\' You can "
       "touch only the card or package that implements the modem. The "
       "same card could also implement a LAN adapter. PhysicalElements "
       "are tangible ManagedSystemElements that have a physical "
       "manifestation of some sort. \n"
       "\n"
       "Note that the properties of PhysicalElement describe a "
       "hardware entity. Possible replacement (FRU) information is "
       "defined by following the ElementFRU association to one or more "
       "instances of the ReplacementFRU class. This definition allows "
       "a client to determine what hardware can be replaced (FRUed) "
       "and what \'spare\' parts might be required by a customer or "
       "engineer doing the replacement. If it can be instrumented or "
       "manually determined that an element actually replaced (FRUed) "
       "another, then this can be described in the model using the "
       "ElementHasBeenFRUed association." )]
class CIM_PhysicalElement : CIM_ManagedSystemElement {

      [Key, Description ( 
          "An arbitrary string that uniquely identifies the "
          "Physical Element and serves as the key of the Element. "
          "The Tag property can contain information such as asset "
          "tag or serial number data. The key for PhysicalElement "
          "is placed very high in the object hierarchy in order to "
          "independently identify the hardware or entity, "
          "regardless of physical placement in or on Cabinets, "
          "Adapters, and so on. For example, a hotswappable or "
          "removable component can be taken from its containing "
          "(scoping) Package and be temporarily unused. The object "
          "still continues to exist and can even be inserted into a "
          "different scoping container. Therefore, the key for "
          "Physical Element is an arbitrary string and is defined "
          "independently of any placement or location-oriented "
          "hierarchy." ), 
       MaxLen ( 256 )]
   string Tag;

      [Override ( "Description" ), 
       Description ( "A textual description of the PhysicalElement." ), 
       MappingStrings { "MIF.DMTF|FRU|003.3" }]
   string Description;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Override ( "ElementName" ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalName" }]
   string ElementName;

      [Description ( 
          "The name of the organization responsible for producing "
          "the PhysicalElement. This organization might be the "
          "entity from whom the Element is purchased, but this is "
          "not necessarily true. The latter information is "
          "contained in the Vendor property of CIM_Product." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalMfgName", 
          "MIF.DMTF|FRU|003.4" }]
   string Manufacturer;

      [Description ( 
          "The name by which the PhysicalElement is generally known." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalDescr", 
          "MIF.DMTF|FRU|003.5" }]
   string Model;

      [Description ( 
          "The stock-keeping unit number for this PhysicalElement." ), 
       MaxLen ( 64 )]
   string SKU;

      [Description ( 
          "A manufacturer-allocated number used to identify the "
          "Physical Element." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalSerialNum", 
          "MIF.DMTF|FRU|003.7" }]
   string SerialNumber;

      [Description ( 
          "A string that indicates the version of the PhysicalElement."
           ), 
       MaxLen ( 64 ), 
       MappingStrings { 
          "MIB.IETF|Entity-MIB.entPhysicalHardwareRev", 
          "MIF.DMTF|FRU|003.8" }]
   string Version;

      [Description ( 
          "The part number assigned by the organization that is "
          "responsible for producing or manufacturing the "
          "PhysicalElement." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalModelName" }]
   string PartNumber;

      [Write, Description ( 
          "OtherIdentifyingInfo captures data in addition to Tag "
          "information. This information could be used to identify "
          "a Physical Element. One example is bar code data "
          "associated with an Element that also has an asset tag. "
          "Note that if only bar code data is available and is "
          "unique or able to be used as an Element key, this "
          "property would be null and the bar code data would be "
          "used as the class key, in the Tag property." ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalAlias" }]
   string OtherIdentifyingInfo;

      [Description ( 
          "Boolean that indicates whether the PhysicalElement is "
          "powered on (TRUE) or is currently off (FALSE)." )]
   boolean PoweredOn;

      [Description ( 
          "The date that this PhysicalElement was manufactured." )]
   datetime ManufactureDate;

      [Description ( 
          "A vendor-specific hardware type for the PhysicalElement. "
          "It describes the specific equipment type for the "
          "element, as defined by the vendor or manufacturer." ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalVendorType" }]
   string VendorEquipmentType;

      [Write, Description ( 
          "User-assigned and writeable asset-tracking identifier "
          "for the PhysicalElement." ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalAssetID" }]
   string UserTracking;

      [Description ( 
          "Boolean that indicates whether this PhysicalElement can "
          "be FRUed (TRUE) or not (FALSE)." ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalIsFRU" }]
   boolean CanBeFRUed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "CIM_Product is a concrete class that aggregates "
       "PhysicalElements, software (SoftwareIdentity and "
       "SoftwareFeatures), Services and/or other Products, and is "
       "acquired as a unit. Acquisition implies an agreement between "
       "supplier and consumer which may have implications to Product "
       "licensing, support and warranty. Non-commercial (e.g., "
       "in-house developed Products) should also be identified as an "
       "instance of CIM_Product. \n"
       "Note that software is handled a bit differently in the list of "
       "aggregated entities, above. This is because software can be "
       "viewed as a tangible asset (similar to PhysicalElements) AND/ "
       "OR as a set of features that make up a Product and are "
       "deployed. These are two different concepts, usually managed by "
       "different units in a business\' organization. When software "
       "\'features\' are described, the CIM_SoftwareFeature class from "
       "the Application Model is instantiated (where Features are Weak "
       "to/scoped by a Product). When a specific piece of software is "
       "acquired and perhaps warrantied as part of a Product, this is "
       "addressed by the class, SoftwareIdentity." )]
class CIM_Product : CIM_ManagedElement {

      [Key, Description ( "Commonly used Product name." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.2" }, 
       ModelCorrespondence { "PRS_Product.ProductName" }]
   string Name;

      [Key, Description ( 
          "Product identification such as a serial number on "
          "software, a die number on a hardware chip, or (for "
          "non-commercial Products) a project number." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.4" }]
   string IdentifyingNumber;

      [Key, Description ( 
          "The name of the Product\'s supplier, or entity selling "
          "the Product (the manufacturer, reseller, OEM, etc.). "
          "Corresponds to the Vendor property in the Product object "
          "in the DMTF Solution Exchange Standard." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.1" }, 
       ModelCorrespondence { "PRS_Product.Vendor" }]
   string Vendor;

      [Key, Description ( "Product version information." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.3" }, 
       ModelCorrespondence { "PRS_Product.Version" }]
   string Version;

      [Description ( "Product SKU (stock keeping unit) information." ), 
       MaxLen ( 64 )]
   string SKUNumber;

      [Description ( 
          "If this Product is under warranty, the start date of the warranty."
           ), 
       MappingStrings { "MIF.DMTF|FRU|002.9" }, 
       ModelCorrespondence { "CIM_Product.WarrantyDuration" }]
   datetime WarrantyStartDate;

      [Description ( 
          "If this Product is under warranty, the duration of the "
          "warranty in days." ), 
       Units ( "Days" ), 
       MappingStrings { "MIF.DMTF|FRU|002.10" }, 
       ModelCorrespondence { "CIM_Product.WarrantyStartDate" }, 
       PUnit ( "day" )]
   uint32 WarrantyDuration;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductParentChild 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "The CIM_ProductParentChild association defines a parent child "
       "hierarchy among Products. For example, a Product may come "
       "bundled with other Products." )]
class CIM_ProductParentChild {

      [Key, Aggregate, Description ( 
          "The parent Product in the association." )]
   CIM_Product REF Parent;

      [Key, Description ( "The child Product in the association." )]
   CIM_Product REF Child;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductPhysicalElements 
// ==================================================================
   [Association, Deprecated { "CIM_ProductPhysicalComponent" }, 
    Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "Indicates the PhysicalElement(s) that make up a Product. This "
       "association is deprecated in order to correctly place it in "
       "the inheritance hierarchy and align the definition with other "
       "new classes that are being added to the model, such as "
       "CIM_ProductServiceComponent. ProductPhysicalElements was "
       "defined in the original CIM V2.0 release, when a Managed "
       "Element and a Component relationship between ManagedElements "
       "did not exist." )]
class CIM_ProductPhysicalElements {

      [Deprecated { "CIM_ProductPhysicalComponent.GroupComponent" }, 
       Key, Aggregate, Max ( 1 ), 
       Description ( "The Product." )]
   CIM_Product REF Product;

      [Deprecated { "CIM_ProductPhysicalComponent.PartComponent" }, 
       Key, Description ( 
          "The PhysicalElement which is a part of the Product." )]
   CIM_PhysicalElement REF Component;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductProductDependency 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "CIM_ProductProductDependency is an association between two "
       "Products, indicating that one must be installed, or must be "
       "absent, for the other to function. This is conceptually "
       "equivalent to the ServiceServiceDependency association." )]
class CIM_ProductProductDependency {

      [Key, Description ( "The required Product." )]
   CIM_Product REF RequiredProduct;

      [Key, Description ( 
          "The Product that is dependent on another Product." )]
   CIM_Product REF DependentProduct;

      [Description ( 
          "The nature of the Product dependency. This property "
          "describes that the associated Product must be installed "
          "(value=2) or must be absent (value=3) in order for the "
          "Product to function." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Product Must Be Installed", 
          "Product Must Not Be Installed" }]
   uint16 TypeOfDependency;


};

// Copyright (c) 2012 DMTF.  All rights reserved.
   [Abstract, Version ( "2.33.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SettingData is used to represent configuration and and "
       "operational parameters for CIM_ManagedElement instances. There "
       "are a number of different uses of CIM_SettingData supported in "
       "the model today. Additional uses may be defined in the future.\n"
       "Instances of CIM_SettingData may represent Aspects of a "
       "CIM_ManagedElement instance. This is modeled using the "
       "CIM_SettingsDefineState association. CIM_SettingData may be "
       "used to define capabilities when associated to an instance of "
       "CIM_Capabilities through the CIM_SettingsDefineCapabilities "
       "association. \n"
       "Instances of CIM_SettingData may represent different types of "
       "configurations for a CIM_ManagedElement, including persistent "
       "configurations, in progress configuration changes, or "
       "requested configurations. The CIM_ElementSettingData "
       "association is used to model the relationship between a "
       "CIM_SettingData instance and the CIM_ManagedElement for which "
       "it is a configuration. \n"
       "When an instance of CIM_SettingData represents a "
       "configuration, the current operational values for the "
       "parameters of the element are reflected by properties in the "
       "Element itself or by properties in its associations. These "
       "properties do not have to be the same values that are present "
       "in the SettingData object. For example, a modem might have a "
       "SettingData baud rate of 56Kb/sec but be operating at "
       "19.2Kb/sec. \n"
       "Note: The CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model because "
       "many implementations have successfully used CIM_Setting. "
       "However, issues have arisen that could not be resolved without "
       "defining a new class. Therefore, until a new major release "
       "occurs, both classes will exist in the model. Refer to the "
       "Core White Paper for additional information. SettingData "
       "instances can be aggregated together into higher- level "
       "SettingData objects using ConcreteComponent associations." )]
class CIM_SettingData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of SettingData. "
          "In addition, the user-friendly name can be used as an "
          "index property for a search or query. (Note: The name "
          "does not have to be unique within a namespace.)" )]
   string ElementName;

      [Description ( 
          "Enumeration indicating the type of setting. 0 \"Not "
          "Changeable - Persistent\" indicates the instance of "
          "SettingData represents primordial settings and shall not "
          "be modifiable. 1 \"Changeable - Transient\" indicates "
          "the SettingData represents modifiable settings that are "
          "not persisted. Establishing persistent settings from "
          "transient settings may be supported. 2 \"Changeable - "
          "Persistent\" indicates the SettingData represents a "
          "persistent configuration that may be modified. 3 \"Not "
          "Changeable - Transient\" indicates the SettingData "
          "represents a snapshot of the settings of the associated "
          "ManagedElement and is not persistent." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Not Changeable - Persistent", 
          "Changeable - Transient", "Changeable - Persistent", 
          "Not Changeable - Transient" }]
   uint16 ChangeableType;

      [Description ( 
          "An instance of CIM_SettingData may correspond to a "
          "well-known configuration that exists for an associated "
          "CIM_ManagedElement. If the ConfigurationName property is "
          "non-NULL, the instance of CIM_SettingData shall "
          "correspond to a well-known configuration for a Managed "
          "Element, the value of the ConfigurationName property "
          "shall be the name of the configuration, and the "
          "ChangeableType property shall have the value 0 or 2. A "
          "value of NULL for the ConfigurationName property shall "
          "mean that the instance of CIM_SettingData does not "
          "correspond to a well-known configuration for a Managed "
          "Element or that this information is unknown." )]
   string ConfigurationName;


};


// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "SettingsDefineState is used to associate an instance of "
       "SettingData with an instance of ManagedElement. This "
       "association indicates that the SettingData instance provides "
       "additional information about the Current State of the "
       "associated ManagedElement. State is broadly defined to include "
       "the configuration, status, capabilities, and other information "
       "of an instance. \n"
       "Use of the same instance of SettingData to represent more than "
       "one of Current State (SettingsDefineState) and Desired State "
       "(ElementSettingData) and Possible State "
       "(SettingsDefineCapabilities) for a ManagedElement is not "
       "recommended." )]
class CIM_SettingsDefineState {

      [Key, Description ( "The managed element." )]
   CIM_ManagedElement REF ManagedElement;

      [Key, Description ( 
          "The SettingData object that provides additional "
          "information about the current state and configuration of "
          "the ManagedElement." )]
   CIM_SettingData REF SettingData;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalData is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedElements. These statistics MUST represent "
       "the most recent observations and MUST NOT be provided if "
       "irrelevant or stale. Note that this class uses a simplified "
       "naming/identity algorithm as compared to "
       "CIM_StatisticalInformation." )]
class CIM_StatisticalData : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "StatisticalData. In addition, the user friendly name can "
          "be used as a index property for a search of query. "
          "(Note: Name does not have to be unique within a "
          "namespace.)" )]
   string ElementName;

      [Description ( 
          "The time, relative to managed element where the "
          "statistic was collected, when the first measurement was "
          "taken. If the statistic is reset, the StartStatisticTime "
          "is the time when the reset was performed." )]
   datetime StartStatisticTime;

      [Description ( 
          "The time the most recent measurement was taken, relative "
          "to the managed element where the statistic was "
          "collected." )]
   datetime StatisticTime;

      [Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property provides the sample interval so "
          "that client applications can determine the minimum time "
          "that new statistics should be pulled. If the statistics "
          "are not sampled at consistent time intervals, this "
          "property must be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";


      [Description ( 
          "Method to reset one or more of the instance\'s "
          "statistics. The method takes one parameter as input - an "
          "array of strings indicating which statistics to reset. "
          "If all the statistics in the instance should be reset, "
          "the first element of the array MUST be set to \"All\" or "
          "\"ALL\". If one or more individual statistics should be "
          "reset, the corresponding property names are entered into "
          "the elements of the array. \n"
          "The method returns 0 if successful, 1 if not supported, "
          "and any other value if an error occurred. A method is "
          "specified so that the StatisticalInformation\'s "
          "provider/ instrumentation, which calculates the "
          "statistics, can reset its internal processing, counters, "
          "etc. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetSelectedStats(
         [IN, Description ( 
             "Array of strings indicating which statistics to reset."
              )]
      string SelectedStatistics[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StatisticalInformation 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalInformation is a root class for any arbitrary "
       "collection of statistical data and/or metrics applicable to "
       "one or more ManagedSystemElements. Note that the CIM_ "
       "StatisticalData class uses a simplified naming/identity "
       "algorithm as compared to this class. StatisticalInformation is "
       "not deprecated since its naming algorithm is still in use in "
       "various implementations." )]
class CIM_StatisticalInformation : CIM_ManagedElement {

      [Description ( 
          "The Name property defines the label by which the "
          "statistic or metric is known. When subclassed, the "
          "property can be overridden to be a Key property." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StatisticalSetting 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_StatisticalSetting is the class for setting the collection "
       "criteria of statistical data and/or metrics applicable to one "
       "or more ManagedElements." )]
class CIM_StatisticalSetting : CIM_SettingData {

      [Write, Description ( 
          "The time, relative to managed element where the "
          "statistic is to be collected, when the first measurement "
          "is to be taken." ), 
       ModelCorrespondence { "CIM_StatisticalData.StartStatisticTime" }]
   datetime StartStatisticTime;

      [Write, Description ( 
          "The time, relative to managed element where the "
          "statistic is to be collected, when the measurement is to "
          "end." )]
   datetime EndStatisticTime;

      [Write, Description ( 
          "Some statistics are sampled at consistent time "
          "intervals. This property when set indicates the desired "
          "minimum time that new statistics should be polled or "
          "calculated." ), 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   datetime SampleInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Statistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_Statistics is an association that relates Managed Elements "
       "to the StatisticalGroup(s) that apply to them." )]
class CIM_Statistics {

      [Key, Description ( "The statistic information/object." )]
   CIM_StatisticalInformation REF Stats;

      [Key, Description ( 
          "The ManagedElement for which statistical or metric data "
          "is defined." )]
   CIM_ManagedElement REF Element;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SupportAccess 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "The CIM_SupportAccess association defines how to obtain "
       "assistance for a Product." )]
class CIM_SupportAccess : CIM_ManagedElement {

      [Key, Description ( 
          "SupportAccessID is an arbitrary, free form string "
          "defined by the Product Vendor or by the organization "
          "that deploys the Product. This property, since it is a "
          "key, should be unique throughout the enterprise." ), 
       MaxLen ( 256 )]
   string SupportAccessId;

      [Override ( "Description" ), 
       Description ( 
          "A textual description of the type of Support provided." ), 
       MappingStrings { "MIF.DMTF|Support|001.3" }]
   string Description;

      [Description ( 
          "CommunicationInfo provides the details of the "
          "Communication Mode. For example, if the "
          "CommunicationMode is \'Phone\', CommunicationInfo "
          "specifies the phone number to be called." ), 
       MappingStrings { "MIF.DMTF|FRU|002.11", "MIF.DMTF|FRU|002.12" }]
   string CommunicationInfo;

      [Description ( 
          "CommunicationMode defines the form of communication in "
          "order to obtain support. For example, phone "
          "communication (value =2), fax (3) or email (8) can be "
          "specified." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Other", "Phone", "Fax", "BBS", "Online Service", 
          "Web Page", "FTP", "E-mail" }, 
       MappingStrings { "MIF.DMTF|Support|001.5" }]
   uint16 CommunicationMode;

      [Description ( 
          "Locale defines the geographic region and/or language "
          "dialect to which this Support resource pertains." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Support|001.2" }]
   string Locale;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Synchronized
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "Indicates that two ManagedElements were aligned or made to be "
       "equivalent at the specified point in time. If the Boolean "
       "property SyncMaintained is true, then synchronization of the "
       "Elements is preserved. Both like and unlike objects can be "
       "synchronized. For example, two WatchDog timers can be aligned, "
       "or the contents of a LogicalFile can be synchronized with the "
       "contents of a StorageExtent." )]
class CIM_Synchronized {

      [Key, Description ( 
          "SystemElement represents one ManagedElement that is "
          "synchronized with the entity referenced as "
          "SyncedElement." )]
   CIM_ManagedElement REF SystemElement;

      [Key, Description ( 
          "SyncedElement represents another ManagedElement that is "
          "synchronized with the entity referenced as "
          "SystemElement." )]
   CIM_ManagedElement REF SyncedElement;

      [Description ( 
          "The point in time that the Elements were synchronized." )]
   datetime WhenSynced;

      [Description ( 
          "Boolean indicating whether synchronization is maintained." )]
   boolean SyncMaintained;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemConfiguration
// ==================================================================
   [Deprecated { "CIM_ScopedSettingData", "CIM_SystemSetting" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: Similar to the deprecation of CIM_Configuration, this "
       "peer class is also deprecated in favor of aggregating "
       "instances of Setting or SettingData into \"higher-level\" "
       "Settings or SettingData objects using the ConcreteComponent "
       "association. \n"
       "Deprecated description: CIM_SystemConfiguration represents the "
       "general concept of a CIM_Configuration that is scoped by a "
       "System. This class is a peer of CIM_Configuration because the "
       "key structure of Configuration is currently defined and cannot "
       "be modified with additional properties." )]
class CIM_SystemConfiguration : CIM_ManagedElement {

      [Deprecated { "CIM_SystemSetting.SystemCreationClassName" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The CreationClassName of the scoping "
          "system." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_SystemSetting.SystemName" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Name of the scoping system." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Deprecated { "CIM_SystemSetting.CreationClassName" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: CreationClassName indicates the name of the "
          "class or the subclass used in the creation of an "
          "instance. When used with the other key properties of "
          "this class, this property allows all instances of this "
          "class and its subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_ScopedSettingData.InstanceID", 
          "CIM_SystemSetting.SettingID" }, 
       Key, Description ( 
          "The label by which the Configuration object is known." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemStatisticalInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "Statistical information associated with a System object or one "
       "of its subclasses." )]
class CIM_SystemStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property, inherited from "
          "StatisticalInformation, serves as part of the object "
          "key." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Abstract, Version ( "2.26.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "View is an abstract class that provides a common superclass "
       "for classes providing de-normalized, aggregate representations "
       "of managed resources. The definition of each sub-class will "
       "include properties propagated from the the graph of classes "
       "that are used to model the resource in the normalized view. "
       "The classes may be resource classes or associations. The "
       "definition of how a value is propagated (i.e. source class and "
       "value transformations) is required to be specified. \n"
       "Sub-classes may be explicitly constrained to be read only. If "
       "a sub-class is not constrained as read only, the designers are "
       "strongly encouraged to carefully consider the data "
       "synchronization and consistencies issues that may result. The "
       "ElementView association may be used to find the instances that "
       "form the normalized view of the managed resource." )]
class CIM_View : CIM_ManagedElement {


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.25.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "CIM_VirtualSystemSettingData defines the virtual aspects of a "
       "virtual system through a set of virtualization specific "
       "properties. CIM_VirtualSystemSettingData is also used as the "
       "top level class of virtual system configurations. Virtual "
       "system configurations model configuration information about "
       "virtual systems and their components. A virtual system "
       "configuration consists of one top-level instance of class "
       "CIM_VirtualSystemSettingData that aggregates a number of "
       "instances of class CIM_ResourceAllocationSettingData, using "
       "association CIM_ConcreteComponent. \n"
       "Virtual system configurations may for example be used to "
       "reflect configurations of \n"
       "- virtual systems that are defined at a virtualization "
       "platform, \n"
       "- virtual systems that are currently active, \n"
       "- input requests to create new virtual systems, \n"
       "- input requests to modify existing virtual systems, or \n"
       "- snapshots of virtual systems." )]
class CIM_VirtualSystemSettingData : CIM_SettingData {

      [Description ( 
          "VirtualSystemIdentifier shall reflect a unique name for "
          "the system as it is used within the virtualization "
          "platform. Note that the VirtualSystemIdentifier is not "
          "the hostname assigned to the operating system instance "
          "running within the virtual system, nor is it an IP "
          "address or MAC address assigned to any of its network "
          "ports. \n"
          "On create requests VirtualSystemIdentifier may contain "
          "implementation specific rules (like simple patterns or "
          "regular expresssion) that may be interpreted by the "
          "implementation when assigning a VirtualSystemIdentifier." )]
   string VirtualSystemIdentifier;

      [Description ( 
          "VirtualSystemType shall reflect a particular type of "
          "virtual system.\n"
          "The property value shall conform to this format (in "
          "ABNF): vs-type = dmtf-value / other-org-value / "
          "legacy-value; dmtf-value = \"DMTF:\" defining-org \":\" "
          "org-vs-type; other-org-value = defining-org \":\" org-vs-type;\n"
          "Where: dmtf-value:\n"
          "is a property value defined by DMTF and is defined in "
          "the description of this property. other-org-value:\n"
          "is a property value defined by a business entity other "
          "than DMTF and is not defined in the description of this "
          "property. legacy-value:\n"
          "is a property value defined by a business entity other "
          "than DMTF and is not defined in the description of this "
          "property. These values are permitted but recommended to "
          "be deprecated over time. defining-org:\n"
          "is an identifier for the business entity that defines "
          "the virtual system type. It shall include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "that business entity. It shall not be \"DMTF\" and shall "
          "not contain a colon (:). org-vs-type:\n"
          "is an identifier for the virtual system type within the "
          "defining business entity. It shall be unique within the "
          "defining-org. It may use any character allowed for CIM "
          "strings, except for the following: U0000-U001F (Unicode "
          "C0 controls) U0020 (space), note that the reason is that "
          "OVF allows for multiple space-separated vs-type values "
          "in this property. U007F (Unicode C0 controls) "
          "U0080-U009F (Unicode C1 controls)\n"
          "If there is a need to structure the value into segments, "
          "the segments should be separated with a single colon (:).\n"
          "The values of this property shall be processed case "
          "sensitively. They are intended to be processed "
          "programmatically (instead of being a display name) and "
          "should be short.\n"
          "As stated in the class description, instances of this "
          "class may be used for various purposes. A management "
          "application intending to use an instance of this class "
          "as input parameter to an operation that creates or "
          "modifies a virtual system should first determine the set "
          "of valid virtual system types that are supported by the "
          "virtualization platform hosting the virtual system by "
          "inspecting values of array property "
          "VirtualSystemTypesSupported of the instance of class "
          "CIM_VirtualSystemManagementCapabilities that describes "
          "the capabilities of the virtualization platform.\n"
          "The following DMTF values are defined: DMTF:unknown - "
          "the virtual system type is unknown or cannot be "
          "determined" )]
   string VirtualSystemType;

      [Description ( 
          "End-user supplied notes that are related to the virtual system."
           )]
   string Notes[];

      [Description ( 
          "Time when the virtual system configuration was created." )]
   datetime CreationTime;

      [Description ( 
          "Unique id of the virtual system configuration. Note that "
          "the ConfigurationID is different from the InstanceID as "
          "it is assigned by the implementation to a virtual system "
          "or a virtual system configuration. It is not a key, and "
          "the same value may occur within more than one instance." )]
   string ConfigurationID;

      [Description ( 
          "Filepath of a directory where information about the "
          "virtual system configuration is stored.Format shall be "
          "URI based on RFC 2079." )]
   string ConfigurationDataRoot;

      [Description ( 
          "Filepath of a file where information about the virtual "
          "system configuration is stored. A relative path appends "
          "to the value of the ConfigurationDataRoot "
          "property.Format shall be URI based on RFC 2079." )]
   string ConfigurationFile;

      [Description ( 
          "Filepath of a directory where information about virtual "
          "system snapshots is stored. A relative path appends to "
          "the value of the ConfigurationDataRoot property.Format "
          "shall be URI based on RFC 2079." )]
   string SnapshotDataRoot;

      [Description ( 
          "Filepath of a directory where suspend related "
          "information about the virtual system is stored. A "
          "relative path appends to the value of the "
          "ConfigurationDataRoot property.Format shall be URI based "
          "on RFC 2079." )]
   string SuspendDataRoot;

      [Description ( 
          "Filepath of a directory where swapfiles of the virtual "
          "system are stored. A relative path appends to the value "
          "of the ConfigurationDataRoot property.Format shall be "
          "URI based on RFC 2079." )]
   string SwapFileDataRoot;

      [Description ( 
          "Filepath of a directory where log information about the "
          "virtual system is stored. A relative path appends to the "
          "value of the ConfigurationDataRoot property.Format shall "
          "be URI based on RFC 2079." )]
   string LogDataRoot;

      [Description ( 
          "Action to take for the virtual system when the host is started."
           ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "None", "Restart if previously active", 
          "Always startup", "DMTF Reserved" }]
   uint16 AutomaticStartupAction;

      [Description ( 
          "Delay applicable to startup action. The value shall be "
          "in the interval variant of the datetime datatype." )]
   datetime AutomaticStartupActionDelay;

      [Description ( 
          "Number indicating the relative sequence of virtual "
          "system activation when the host system is started. A "
          "lower number indicates earlier activation. If one or "
          "more configurations show the same value, the sequence is "
          "implementation dependent. A value of 0 indicates that "
          "the sequence is implementation dependent." )]
   uint16 AutomaticStartupActionSequenceNumber;

      [Description ( 
          "Action to take for the virtual system when the host is shut down."
           ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "Turn Off", "Save state", "Shutdown", "DMTF Reserved" }]
   uint16 AutomaticShutdownAction;

      [Description ( 
          "Action to take for the virtual system when the software "
          "executed by the virtual system fails. Failures in this "
          "case means a failure that is detectable by the host "
          "platform, such as a non-interuptable wait state "
          "condition." ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "None", "Restart", "Revert to snapshot", 
          "DMTF Reserved" }]
   uint16 AutomaticRecoveryAction;

      [Description ( 
          "Filepath of a file where recovery relateded information "
          "of the virtual system is stored.Format shall be URI "
          "based on RFC 2079." )]
   string RecoveryFile;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "This class contains the specific settings that identify the "
       "degree to which the high-level database capabilities that are "
       "defined in the CIM_CommonDatabaseCapabilities class are "
       "supported by a CommonDatabase. Specific values for the "
       "properties in this class must correspond to a valid capability "
       "that has been defined in the CIM_CommonDatabaseCapabilities "
       "class. \n"
       "Instances in the CIM_CommonDatabaseSettingData class are tied "
       "to the CommonDatabase using the ElementSettingData "
       "association." )]
class CIM_CommonDatabaseSettingData : CIM_SettingData {

      [Write, Description ( 
          "RecoverabilityOption indicates the specific "
          "recoverability mode for the associated CommonDatabase." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Recoverable", "Non-Recoverable", 
          "Rebuildable" }, 
       ModelCorrespondence { 
          "CIM_CommonDatabaseSettingData.OtherRecoverabilityOption", 
          "CIM_CommonDatabaseCapabilities.RecoverabilityOptions" }]
   uint16 RecoverabilityOption;

      [Write, Description ( 
          "This property contains additional recovery information "
          "for the CommonDatabase. This property must be specified "
          "when the Recoverability property is \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_CommonDatabaseSettingData.RecoverabilityOption", 
          "CIM_CommonDatabaseCapabilities.OtherRecoverabilityOptions" }]
   string OtherRecoverabilityOption;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::Statistics" ), 
    Description ( 
       "The CIM_CommonDatabaseStatistics class contains the current "
       "statistics for a database." )]
class CIM_CommonDatabaseStatistics : CIM_StatisticalData {

      [Description ( 
          "The estimated amount of disk space (in units) that is "
          "currently used by the database." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoSizeUsed" }]
   uint32 SizeUsed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::Statistics" ), 
    Description ( 
       "The CIM_DatabaseServiceStatistics class contains the current "
       "statistics for a database resource. This class maps to the "
       "database and server-limited resource tables in the SNMP RDBMS "
       "MIB as defined in RFC 1697." )]
class CIM_DatabaseResourceStatistics : CIM_StatisticalData {

      [Description ( 
          "The current value of a limited database resource." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsDbLimitedResourceCurrent" }]
   uint64 Current;

      [Description ( 
          "The maximum value that the database resource can attain." ), 
       MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsDbLimitedResourceLimit" }]
   uint64 Limit;

      [Description ( 
          "The number of database resources used, as measured from "
          "the time when the first service was started for the "
          "database. \n"
          "Other external factors, such as an explicit reset of the "
          "statistics might cause this measurement to begin at a "
          "later point in time." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsDbLimitedResourceHighwater" }]
   uint64 Highwater;

      [Description ( 
          "The number of times that the system wanted to exceed the "
          "database resource limit that is measured from the time "
          "when the first service was started for the database." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsDbLimitedResourceFailures" }]
   uint32 Failures;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::Statistics" ), 
    Description ( 
       "The CIM_DatabaseServiceStatistics class contains the current "
       "statistics for a database service. These statistics are "
       "counters that are relative to the start of the service or from "
       "the time when a reset was issued." )]
class CIM_DatabaseServiceStatistics : CIM_StatisticalData {

      [Description ( 
          "The date and time when the most recent inbound activity "
          "was observed for the database service. A value of all "
          "zeros indicates that no inbound activity has taken place "
          "since the service was started." ), 
       MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoLastInboundActivity" }]
   datetime LastActivity;

      [Description ( 
          "The number of active inbound connections that are "
          "currently using the service." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoapplInboundAssociation" }]
   uint64 ActiveConnections;

      [Description ( 
          "The total number of inbound connections to the service "
          "since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoapplAccumulatedInboundAssociations" }]
   uint64 CumulativeConnections;

      [Description ( 
          "The total number of inbound connections that were "
          "rejected by the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoapplRejectedInboundAssociations" }]
   uint64 RejectedConnections;

      [Description ( 
          "The total number of transactions that have been "
          "completed by a commit or abort. Some database "
          "operations, such as read-only queries, might not create "
          "a transaction." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoFinishedTransactions" }]
   uint64 CompletedTransactions;

      [Description ( 
          "The total number of database file reads that were issued "
          "by the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoDiskReads" }]
   uint64 DiskReads;

      [Description ( 
          "The total number of database file writes that were "
          "issued by the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoDiskWrites" }]
   uint64 DiskWrites;

      [Description ( 
          "The total number of logical database file reads that "
          "were issued by the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoLogicalReads" }]
   uint64 LogicalReads;

      [Description ( 
          "The total number of logical database file writes that "
          "were issued by the service since it was started. A "
          "logical write is a count of the number of times that "
          "parts of database files have been marked dirty to "
          "indicate that they need to be written to disk." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoLogicalWrites" }]
   uint64 LogicalWrites;

      [Description ( 
          "The total number of database pages that have been read "
          "by the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoPageReads" }]
   uint64 PageReads;

      [Description ( 
          "The total number of database pages that have been "
          "written by the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoPageWrites" }]
   uint64 PageWrites;

      [Description ( 
          "The total number of times that the database requested "
          "disk space and it was not available since the service "
          "was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoDiskOutOfSpaces" }]
   uint64 DiskSpaceUnavailable;

      [Description ( 
          "The total number of requests that have been received by "
          "the service since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoHandledRequests" }]
   uint64 RequestsHandled;

      [Description ( 
          "The total number of receive operations made by the "
          "service during request processing since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoRequestRecvs" }]
   uint64 RequestsReceived;

      [Description ( 
          "The total number of send operations made by the service "
          "during request processing since it was started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoRequestsSent" }]
   uint64 RequestsSent;

      [Description ( 
          "The maximum number of active inbound connections that "
          "have been concurrently using the service since it was "
          "started." ), 
       Counter, MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoHighwaterInboundAssociations" }]
   uint64 HighwaterConnections;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "Instances of this class define a list of supported or desired "
       "properties of BlockStatisticalData instances. In the case "
       "where a BlockStatisticsManifest instance is a member of a "
       "BlockStatisticsManifestCollection used in a "
       "BlockStatisticsService.GetStatisticsCollection request, for "
       "each of the boolean \"include\" properties set to true in that "
       "BlockStatisticsManifest, the corresponding "
       "BlockStatisticalData property will be included, if available, "
       "in the statistics returned for BlockStatisticalData instances "
       "whose ElementType matches the ElementType of the "
       "BlockStatisticsManifest." )]
class CIM_BlockStatisticsManifest : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Description ( 
          "Determines the type of elements that this "
          "BlockStatisticsManifest can be applied to (e.g. during a "
          "GetStatisticsCollection request). This is used when the "
          "same set of statistical metrics is calculated for "
          "several types of devices. In this way, a single "
          "BlockStatisticsManifest instance can be used to filter "
          "all the StatsiticalData instances that contain metrics "
          "for the same type of element in a StatisticsCollection. "
          "If used, a subclass should override this property to "
          "specify the element types supported by that class, "
          "preferably through ValueMap and Values qualifiers to "
          "allow clients to programmatically retrieve those "
          "supported types." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000.." }, 
       Values { "Computer System", "Front-end Computer System", 
          "Peer Computer System", "Back-end Computer System", 
          "Front-end Port", "Back-end Port", "Volume", "Extent", 
          "Disk Drive", "Arbitrary LUs", "Remote Replica Group", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.ElementType" }]
   uint16 ElementType;

      [Description ( 
          "Indicates whether or not the Statistics property of "
          "StatisticsService.GetStatisticsCollection method will "
          "include the time at time when statistics for this "
          "BlockStatisticsManifest were first captured." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.StartStatisticTime" }]
   boolean IncludeStartStatisticTime = false;

      [Description ( 
          "Indicates whether or not the Statistics property of "
          "StatisticsService.GetStatisticsCollection method will "
          "include the time when statistics for this "
          "BlockStatisticsManifest were last captured." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.StatisticTime" }]
   boolean IncludeStatisticTime = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of I/Os for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.StatisticTime" }]
   boolean IncludeTotalIOs = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of data transferred in Kbytes for that "
          "element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.KBytesTransferred" }]
   boolean IncludeKBytesTransferred = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed I/O time (number of Clock Tick "
          "Intervals) for all I/Os for that element as defined in "
          "\'Total I/Os\'." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.IOTimeCounter" }]
   boolean IncludeIOTimeCounter = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of all reads for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.ReadIOs" }]
   boolean IncludeReadIOs = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of all read cache hits (Reads from "
          "Cache) for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.ReadHitIOs" }]
   boolean IncludeReadHitIOs = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed time for all cumulative Read I/Os for "
          "that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.ReadIOTimeCounter" }]
   boolean IncludeReadIOTimeCounter = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed time for all Read I/Os read from "
          "cache for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.ReadHitIOTimeCounter" }]
   boolean IncludeReadHitIOTimeCounter = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of data read in Kbytes for that "
          "element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.KBytesRead" }]
   boolean IncludeKBytesRead = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of all writes for tat element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.WriteIOs" }]
   boolean IncludeWriteIOs = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of Write Cache Hits (Writes that went "
          "directly to Cache) for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.WriteHitIOs" }]
   boolean IncludeWriteHitIOs = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed time for all Write I/Os for that "
          "element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.WriteIOTimeCounter" }]
   boolean IncludeWriteIOTimeCounter = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed time for all Write I/Os written to "
          "cache for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.WriteHitIOTimeCounter" }]
   boolean IncludeWriteHitIOTimeCounter = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of data written in Kbytes for that "
          "element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.KBytesWritten" }]
   boolean IncludeKBytesWritten = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed idle time for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.IdleTimeCounter" }]
   boolean IncludeIdleTimeCounter = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative count of all maintenance operations for that "
          "element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.MaintOp" }]
   boolean IncludeMaintOp = false;

      [Description ( 
          "Whether to include in a filter for a metered element the "
          "cumulative elapsed maintenance time for that element." ), 
       ModelCorrespondence { 
          "CIM_BlockStorageStatisticalData.MaintTimeCounter" }]
   boolean IncludeMaintTimeCounter = false;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "A subclass of StatisticalData which identifies individual "
       "statistics for an element of a block storage system. This "
       "class defines the metrics that MAY be kept for managed "
       "elements of the system." )]
class CIM_BlockStorageStatisticalData : CIM_StatisticalData {

      [Required, Description ( 
          "Defines the role that the element played for which this "
          "statistics record was collected. If the metered element "
          "is a system or a component of a system associated to a "
          "RegisteredProfile, then that profile may provide a more "
          "specialized definition and additional usage information "
          "for this property. \n"
          "Generally, the ElementTypes defined here have the "
          "following meaning in the context of this class: 2, "
          "\"Computer System\": Cumulative statistics for the "
          "storage system. In the case of a complex system with "
          "multiple component Computer Systems, these are the "
          "statistics for the top-level aggregate Computer System. "
          "3, \"Front-end Computer System\": Statistics for a "
          "component computer system that communicate with systems "
          "that initiate IO requests. 4, \"Peer Computer System\": "
          "Statistics for a component computer system that "
          "communicates with peer storage systems e.g. to provide "
          "remote mirroring of a volume. 5, \"Back-end Computer "
          "System\": Statistics for a component computer system "
          "that communicates with back-end storage. 6, \"Front-end "
          "Port\": Statistics for a port that communicates with "
          "systems that initiate IO requests. 7, \"Back-end Port\": "
          "Statistics for a port that initiates IO requests to "
          "storage devices. 8, \"Volume\": Statistics for an "
          "exposable storage extent, such as a StorageVolume or "
          "LogicalDisk. 9, \"Extent\": Statistics for an "
          "intermediate storage extent, i.e. an extent that is "
          "neither a volume or a disk. 10, \"Disk Drive: Statistics "
          "for a StorageExtent that is associated to a DiskDrive "
          "through the MediaPresent association. 11, \"Arbitrary "
          "LUs\": Statistics that derive from access to Logical "
          "Units that are NOT StorageVolumes (e.g., controller "
          "commands). 12, \"Remote Replica Group\": Statistics for "
          "control IOs between an array and a remote mirror across "
          "a Network. Note that statistics for the actual movement "
          "of data to the remote mirror are attributed to the "
          "targeted StorageVolume (or LogicalDisk). Note that a "
          "particular element could be associated to multiple "
          "BlockStorageStatisticalData instances if it had multiple "
          "roles. For example, a storage array could contain "
          "redundant component computer systems that communicate "
          "both with hosts on the front end and disks on the back "
          "end. Such a device could have one "
          "BlockStorageStatisticalData instance where ElementType=3 "
          "and another instance where ElementType=5." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000.." }, 
       Values { "Computer System", "Front-end Computer System", 
          "Peer Computer System", "Back-end Computer System", 
          "Front-end Port", "Back-end Port", "Volume", "Extent", 
          "Disk Drive", "Arbitrary LUs", "Remote Replica Group", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 ElementType;

      [Description ( "The cumulative count of I/Os for the object." ), 
       Counter]
   uint64 TotalIOs;

      [Description ( 
          "The cumulative count of data transferred in Kbytes "
          "(1024bytes = 1KByte)." ), 
       Units ( "KiloBytes" ), 
       Counter, PUnit ( "byte * 10^3" )]
   uint64 KBytesTransferred;

      [Description ( 
          "The cumulative count of data written in Kbytes "
          "(1024bytes = 1KByte)." ), 
       Units ( "KiloBytes" ), 
       Counter, PUnit ( "byte * 10^3" )]
   uint64 KBytesWritten;

      [Description ( 
          "The cumulative elapsed I/O time (number of Clock Tick "
          "Intervals) for all I/Os as defined in \'Total I/Os\'. "
          "I/O response time is added to this counter at the "
          "completion of each measured I/O using ClockTickInterval "
          "units. This value can be divided by number of IOs to "
          "obtain an average response time." ), 
       Counter]
   uint64 IOTimeCounter;

      [Description ( "The cumulative count of all reads." ), 
       Counter]
   uint64 ReadIOs;

      [Description ( 
          "The cumulative count of all read cache hits (Reads from Cache)."
           ), 
       Counter]
   uint64 ReadHitIOs;

      [Description ( 
          "The cumulative elapsed time for all Read I/Os for all "
          "cumulative Read I/Os." ), 
       Counter]
   uint64 ReadIOTimeCounter;

      [Description ( 
          "The cumulative elapsed time for all Read I/Os read from "
          "cache for all cumulative Read I/Os." ), 
       Counter]
   uint64 ReadHitIOTimeCounter;

      [Description ( 
          "The cumulative count of data read in Kbytes (1024bytes = 1KByte)."
           ), 
       Units ( "KiloBytes" ), 
       Counter, PUnit ( "byte * 10^3" )]
   uint64 KBytesRead;

      [Description ( "The cumulative count of all writes." ), 
       Counter]
   uint64 WriteIOs;

      [Description ( 
          "The cumulative count of Write Cache Hits (Writes that "
          "went directly to Cache)." ), 
       Counter]
   uint64 WriteHitIOs;

      [Description ( 
          "The cumulative elapsed time for all Write I/Os for all "
          "cumulative Writes." ), 
       Counter]
   uint64 WriteIOTimeCounter;

      [Description ( 
          "The cumulative elapsed time using ClockTickInterval "
          "units for all Write I/Os written to cache for all "
          "cumulative Write I/Os." ), 
       Counter]
   uint64 WriteHitIOTimeCounter;

      [Description ( 
          "The cumulative elapsed idle time using ClockTickInterval "
          "units (Cumulative Number of Time Units for all idle time "
          "in the array)." ), 
       Counter]
   uint64 IdleTimeCounter;

      [Description ( 
          "The cumulative count of all disk maintenance operations "
          "(SCSI commands such as: Verify, skip-mask, XOR read, XOR "
          "write-read, etc).This is needed to understand the load "
          "on the disks that may interfere with normal read and "
          "write operations." ), 
       Counter]
   uint64 MaintOp;

      [Description ( 
          "The cumulative elapsed disk mainenance time. "
          "Maintainance response time is added to this counter at "
          "the completion of each measured maintenance operation "
          "using ClockTickInterval units." ), 
       Counter]
   uint64 MaintTimeCounter;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceErrorCounts
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "DeviceErrorCounts is a statistical class containing error- "
       "related counters for a LogicalDevice. The types of errors are "
       "defined by CCITT (Rec X.733) and ISO (IEC 10164-4). Note that "
       "the CIM_DeviceErrorCountData class uses a simplified naming or "
       "identity algorithm as compared to this class. "
       "DeviceErrorCounts is not deprecated because its naming "
       "algorithm is still in use in various implementations." )]
class CIM_DeviceErrorCounts : CIM_StatisticalInformation {

      [Key, Description ( 
          "The CreationClassName of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalDevice.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The Name of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalDevice.SystemName" )]
   string SystemName;

      [Key, Description ( 
          "The CreationClassName of the scoping Device." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalDevice.CreationClassName" )]
   string DeviceCreationClassName;

      [Key, Description ( "The ID of the scoping Device." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_LogicalDevice.DeviceID" )]
   string DeviceID;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as part of the key for the "
          "DeviceErrorCounts instance. The object is scoped by the "
          "LogicalDevice to which the statistics apply." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( "Count of the indeterminate errors." ), 
       Counter]
   uint64 IndeterminateErrorCount;

      [Description ( "Count of the critical errors." ), 
       Counter, MappingStrings { "MIF.DMTF|Operational State|006.7" }]
   uint64 CriticalErrorCount;

      [Description ( "Count of the major errors." ), 
       Counter, MappingStrings { "MIF.DMTF|Operational State|006.8" }]
   uint64 MajorErrorCount;

      [Description ( "Count of the minor errors." ), 
       Counter]
   uint64 MinorErrorCount;

      [Description ( "Count of the warnings." ), 
       Counter, MappingStrings { "MIF.DMTF|Operational State|006.9" }]
   uint64 WarningCount;


      [Description ( 
          "Method to reset the error and warning counters. The "
          "method takes one parameter as input, an integer that "
          "indicates which counter to reset. For this input "
          "parameter, 0 indicates all, 1 indicates a reset of the "
          "indeterminate error counter, 2 the critical error "
          "counter, 3 the major error counter, 4 the minor error "
          "counter, and 5 the warning counter. The method returns 0 "
          "if successful, 1 if not supported, and any other value "
          "if an error occurred. A method is specified so that the "
          "instrumentation of the LogicalDevice, which tabulates "
          "the errors and warnings, can also reset its internal "
          "processing and counters. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "can also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5" }, 
          Values { "All", "Indeterminate Error Counter", 
             "Critical Error Counter", "Major Error Counter", 
             "Minor Error Counter", "Warning Counter" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceErrorData
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "DeviceErrorData is a statistical class that contains error- "
       "related counters for a LogicalDevice. The types of errors are "
       "defined by CCITT (Rec X.733) and ISO (IEC 10164-4). The "
       "element, whose statistics are described, is associated using "
       "the relationship, ElementStatisticalData. Note that this class "
       "uses a simplified identity or naming algorithm over "
       "CIM_DeviceErrorCounts." )]
class CIM_DeviceErrorData : CIM_StatisticalData {

      [Description ( "Count of the indeterminate errors." ), 
       Counter]
   uint64 IndeterminateErrorCount;

      [Description ( "Count of the critical errors." ), 
       Counter, MappingStrings { "MIF.DMTF|Operational State|006.7" }]
   uint64 CriticalErrorCount;

      [Description ( "Count of the major errors." ), 
       Counter, MappingStrings { "MIF.DMTF|Operational State|006.8" }]
   uint64 MajorErrorCount;

      [Description ( "Count of the minor errors." ), 
       Counter]
   uint64 MinorErrorCount;

      [Description ( "Count of the warnings." ), 
       Counter, MappingStrings { "MIF.DMTF|Operational State|006.9" }]
   uint64 WarningCount;

      [Description ( 
          "LastErrorCode captures the last error code reported by "
          "the LogicalDevice. While the device is in this error "
          "condition, then the OperationalStatus of the "
          "LogicalDevice should not reflect an \'Okay\' status. "
          "When this error condition is cleared, then the "
          "OperationalStatus of the LogicalDevice should report an "
          "\'Okay\' status." )]
   string LastErrorCode;

      [Description ( 
          "ErrorDescription is a free-form string that supplies "
          "more information about the error recorded in "
          "LastErrorCode, and information on any corrective actions "
          "that might be taken." )]
   string ErrorDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FCPortRateStatistics
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "FCPortRateStatistics is the performance rate for the FCPort. "
       "The Frame and Byte rates report the average of a counter "
       "change per second and the maximum counter change per second "
       "over a specified interval, the SampleInterval, which is "
       "defined in the parent class, StatisticalData." )]
class CIM_FCPortRateStatistics : CIM_StatisticalData {

      [Description ( 
          "TxFrameRate is the instantaneous transmit frame rate." ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1.SWAPI_STATS_LBL_TFRR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 TxFrameRate;

      [Description ( 
          "RxFrameRate is the instantaneous receive frame rate." ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1.SWAPI_STATS_LBL_RFRR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 RxFrameRate;

      [Description ( 
          "MaxTxFrameRate is the maximum transmit frame rate achieved."
           ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1.SWAPI_STATS_LBL_TFPR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 MaxTxFrameRate;

      [Description ( 
          "MaxRxFrameRate is the maximum receive frame rate achieved."
           ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1.SWAPI_STATS_LBL_RFPR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 MaxRxFrameRate;

      [Description ( 
          "TxRate is the instantaneous transmit byte rate." ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1. SWAPI_STATS_LBL_TBYR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 TxRate;

      [Description ( 
          "RxRate is the instantaneous receive byte rate." ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1.SWAPI_STATS_LBL_RBYR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 RxRate;

      [Description ( 
          "PeakTxRate is the maximum transmit byte rate achieved." ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1. SWAPI_STATS_LBL_TBPR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 PeakTxRate;

      [Description ( 
          "PeakRxRate is the maximum receive byte rate achieved." ), 
       MappingStrings { 
          "FC-SWAPI.T11|PerformanceRates|1. SWAPI_STATS_LBL_RBPR" }, 
       ModelCorrespondence { "CIM_StatisticalData.SampleInterval" }]
   uint64 PeakRxRate;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "A ComputerSystem that supports FC Switch capabilities and can "
       "be configured using the FCSwitchConfig class." )]
class CIM_FCSwitchSettings : CIM_SettingData {

      [Write, Description ( 
          "The preferred domainID for the switch. If DomainIDLocked "
          "is true, then this property will be the required "
          "DomainID for the switch." ), 
       MinValue ( 1 ), 
       MaxValue ( 239 ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|UcUnitConfigGetDomainID", 
          "GC-GS.INCITS-T11|InterconnectElement|DomainIdentifier" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.DomainIDLocked" }]
   uint8 PreferredDomainID;

      [Write, Description ( 
          "Boolean that indicates if the switch can negotiate a new "
          "domainID when the configured domainID is unavailable. If "
          "this value is true, a domainID conflict will cause the "
          "fabric merge process to fail." ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|UcUnitConfigGetDomainIDLocked" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.PreferredDomainID" }]
   boolean DomainIDLocked;

      [Write, Description ( 
          "This value affects the selection of a principal switch "
          "within the fabric. The value indirectly corresponds to "
          "the FC-FS switch_priority value used during principal "
          "switch selection. \n"
          "- Principal: Attempt to become the principal switch in "
          "the fabric. \n"
          "- Subordinate: Attempt not to become the principal "
          "switch in the fabric. \n"
          "- Any: No preference." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Principal", "Subordinate", "Any" }, 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_PRINCIPAL_PRIORITY_T" }]
   uint16 PrincipalPriority = 3;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LabelReaderStatData 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "Statistics for a LabelReader, related to read successes, "
       "failures and retries. The element whose statistics are "
       "described is associated using the relationship, "
       "ElementStatisticalData." )]
class CIM_LabelReaderStatData : CIM_StatisticalData {

      [Description ( 
          "The number of successful physical label scans." ), 
       Counter]
   uint64 ScanSuccesses;

      [Description ( "The number of failed physical label scans." ), 
       Counter]
   uint64 ScanFailures;

      [Description ( "The number of retried physical label scans." ), 
       Counter]
   uint64 ScanRetries;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "A LogicalPort may be configured via the LogicalPortSettings "
       "class. The configuration changes are expected to be stored to "
       "non-volatile memory." )]
class CIM_LogicalPortSettings : CIM_SettingData {

      [Write, Description ( 
          "The requested bandwidth of the Port in Bits per Second. "
          "The actual bandwidth is reported in LogicalPort.Speed." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|UcPortConfigSetLinkSpeed" }, 
       ModelCorrespondence { "CIM_LogicalPort.Speed" }, 
       PUnit ( "bit / second" )]
   uint64 RequestedSpeed;

      [Write, Description ( 
          "A boolean indicating whether the LogicalPort should "
          "automatically negotiate an optimal bandwidth (TRUE), or "
          "attempt to communicate only at the RequestedSpeed "
          "(FALSE). The actual bandwidth is reported in "
          "LogicalPort.Speed. Changing this value to (FALSE) may "
          "cause the OperationalStatus to change to [stopped] if "
          "the RequestedSpeed is not compatible with the attached "
          "device \n"
          "Check LogicalPortCapabilities.AutoSenseSpeedConfigurable "
          "to see if this value may be changed." ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|UcPortConfigSetLinkSpeed" }, 
       ModelCorrespondence { "CIM_LogicalPort.Speed", 
          "CIM_LogicalPortCapabilities.AutoSenseSpeedConfigurable" }]
   boolean AutoSenseSpeed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaAccessStatData 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Statistics related to reading and writing at a specific "
       "MediaAccessDevice, or for a specific StorageExtent. The same "
       "class is used to represent this data - whether for the "
       "MediaAccessDevice (independent of the StorageExtent), OR for "
       "the Extent (independent of its AccessDevice). The element "
       "whose statistics are described is associated using the "
       "relationship, ElementStatisticalData. Note that this class "
       "models the same properties as MediaAccessStatInfo. This class, "
       "however, uses the simplified key mechanisms of its superclass, "
       "StatisticalData." )]
class CIM_MediaAccessStatData : CIM_StatisticalData {

      [Description ( "The number of attempted read operations." ), 
       Counter]
   uint64 ReadOperations;

      [Description ( "The number of unrecoverable read operations." ), 
       Counter]
   uint64 UnrecoverableReadOperations;

      [Description ( "The number of attempted write operations." ), 
       Counter]
   uint64 WriteOperations;

      [Description ( "The number of unrecoverable write operations." ), 
       Counter]
   uint64 UnrecoverableWriteOperations;

      [Description ( "The number of recovered read operations." ), 
       Counter]
   uint64 RecoveredReadOperations;

      [Description ( "The number of recovered write operations." ), 
       Counter]
   uint64 RecoveredWriteOperations;

      [Description ( "The number of recovered seek operations." ), 
       Counter]
   uint64 RecoveredSeekOperations;

      [Description ( "The number of unrecoverable seek operations." ), 
       Counter]
   uint64 UnrecoverableSeekOperations;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_NetworkPortStatistics
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "The NetworkPortStatistics class describes the statistics for "
       "the NetworkPort." )]
class CIM_NetworkPortStatistics : CIM_StatisticalData {

      [Description ( 
          "The total number of bytes that are transmitted, "
          "including framing characters." ), 
       Units ( "Bytes" ), 
       Counter, MappingStrings { "MIB.IETF|MIB-II.ifOutOctets", 
          "MIF.DMTF|Network Adapter 802 Port|001.7" }, 
       PUnit ( "byte" )]
   uint64 BytesTransmitted;

      [Description ( 
          "The total number of bytes that are received, including "
          "framing characters." ), 
       Units ( "Bytes" ), 
       Counter, MappingStrings { "MIB.IETF|MIB-II.ifInOctets", 
          "MIF.DMTF|Network Adapter 802 Port|001.9" }, 
       PUnit ( "byte" )]
   uint64 BytesReceived;

      [Description ( 
          "The total number of packets that are transmitted." ), 
       Counter]
   uint64 PacketsTransmitted;

      [Description ( 
          "The total number of packets that are received." ), 
       Counter]
   uint64 PacketsReceived;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PickerStatData 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "Statistics for a PickerElement, related to pick/put successes, "
       "retries and failures. The element whose statistics are "
       "described is associated using the relationship, "
       "ElementStatisticalData." )]
class CIM_PickerStatData : CIM_StatisticalData {

      [Description ( "The number of successful picks." ), 
       Counter]
   uint64 PickSuccesses;

      [Description ( "The number of failed picks." ), 
       Counter]
   uint64 PickFailures;

      [Description ( "The number of retried picks." ), 
       Counter]
   uint64 PickRetries;

      [Description ( "The number of successful puts." ), 
       Counter]
   uint64 PutSuccesses;

      [Description ( "The number of failed puts." ), 
       Counter]
   uint64 PutFailures;

      [Description ( "The number of retried puts." ), 
       Counter]
   uint64 PutRetries;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::SCSI" ), 
    Description ( 
       "A class derived from CIM_SettingData describing settings "
       "related to management of multiple paths to SCSI devices. It is "
       "associated to one of more instances of subclasses of "
       "LogicalDevice that represent SCSI logical units. If a "
       "LogicalDevice instance is associated to an instance of "
       "SCSIPathConfigurationService and is not associated to an "
       "instance of this class, the the default values for properties "
       "below and the polling values from the associated "
       "CIM_SCSIMultipathConfigurationCapabilities instance apply." )]
class CIM_SCSIMultipathSettings : CIM_SettingData {

      [Write, Description ( 
          "A boolean indicating whether the associated logical unit "
          "has asymmetric multipath access. If Asymmetric is true, "
          "then there MUST be a SCSITargetPortGroup instance "
          "associated to the LogicalDevice." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|asymmetric" }]
   boolean Asymmetric = false;

      [Write, Description ( 
          "The load balance type for the associated logical unit." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "No Load Balancing", 
          "Round Robin", "Least Blocks", "Least IO", 
          "Product Specific", "Service Wide Default" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|currentLoadBalanceType" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathSettings.OtherCurrentLoadBalanceType" }]
   uint16 CurrentLoadBalanceType = 7;

      [Write, Description ( 
          "A string describing the current load balance algorithm "
          "if CurrentLoadBalanceType is 1 (\'Other\'). This string "
          "MUST be identical to one of the strings from "
          "CIM_SCSIMultipathConfigurationCapabilities "
          "OtherSupportedLoadBalanceAlgorithmNames." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|currentLoadBalanceType" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.OtherSupportedLoadBalanceAlgorithmNames", 
          "CIM_SCSIMultipathSettings.CurrentLoadBalanceType" }]
   string OtherCurrentLoadBalanceType;

      [Write, Description ( 
          "The auto-failback setting for the associated logical "
          "units. Either enabled, disabled, or all associated "
          "logical units follow the service-wide setting from the "
          "capabilities class associated with the appropriate "
          "service." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Enabled for the associated logical units", 
          "Disabled for the associated logical units", 
          "The associated logical units use the service-wide setting" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|autoFailbackEnabled" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.AutoFailbackEnabled" }]
   uint16 AutoFailbackEnabled = 4;

      [Write, Description ( 
          "The maximum polling rate (in seconds) supported by the "
          "driver if different from the service-wide max from the "
          "capabilities instance. Zero (0) indicates the driver "
          "either does not poll for autofailback or has not "
          "provided an interface to set the polling rate for "
          "multipath logical units. If this property and the "
          "service PollingRateMax are non-zero, this value has "
          "precedence for the associate logical units. The "
          "instrumentation should not instantiate this property if "
          "the value from "
          "CIM_SCSIMultipathConfigurationCapabilities is used for "
          "the associated logical units." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|pollingRateMax" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.PollingRateMax" }]
   uint32 PollingRateMax;

      [Write, Description ( 
          "The current polling rate (in seconds) for auto-failback. "
          "This cannot exceed PollingRateMax. If this property and "
          "the service-wide Capabilities instance "
          "CurrentPollingRate are non-zero, this value has "
          "precedence for the associated logical units. The "
          "instrumentation should not instantiate this property if "
          "the value from "
          "CIM_SCSIMultipathConfigurationCapabilities is used for "
          "the associated logical units." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|currentPollingRate" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.CurrentPollingRate" }]
   uint32 CurrentPollingRate;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageError 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "StorageError defines blocks of media or memory space that are "
       "mapped \'out of use\' due to errors. The Key of the class is "
       "the StartingAddress of the bytes in error." )]
class CIM_StorageError : CIM_ManagedElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_StorageExtent.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_StorageExtent.SystemName" )]
   string SystemName;

      [Key, Description ( 
          "The scoping StorageExtent\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_StorageExtent.CreationClassName" )]
   string DeviceCreationClassName;

      [Key, Description ( "The scoping StorageExtent\'s DeviceID." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_StorageExtent.DeviceID" )]
   string DeviceID;

      [Key, Description ( 
          "The starting address of the bytes in error." )]
   uint64 StartingAddress;

      [Description ( "The ending address of the bytes in error." )]
   uint64 EndingAddress;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "StorageSetting is roughly equivalent to a Service Level "
       "Agreement (SLA) It defines the characteristics, qualities of "
       "service and goals when used in a CreateOrModifyElement "
       "FromStoragePool or CreateOrModifyStoragePool method in the "
       "StorageConfigurationService. It specifies a series of "
       "properties with Maximum and Minimum values that define the "
       "(inclusive) bounds that the object should maintain. Note that "
       "the setting is associated to a StorageVolume or LogicalDisk, "
       "using ElementSetting. \n"
       "The use of these properties differs depending on whether the "
       "StorageSetting instance is being used as a goal for a "
       "configuration operation or being used as a Service Level "
       "Agreement for a created Volume. In addition the properties "
       "fall into two categories: The QOS "
       "properties(PackageRedundancy, Data Redundancy, & "
       "NoSinglePointOfFailure) and the Detailed RAID "
       "properties(ExtentStripeLength, ParityLayout, and "
       "UserDataStripeDepth). In a Setting used as a goal, the QOS "
       "properties are required as a set; The Detailed RAID "
       "properties(if supported as indicated by the scoping "
       "StorageCapabilities instance) may be used optionally in any "
       "combination. The implementation MUST supply it\'s own best "
       "practice in the case where one or more supported RAID "
       "properties are not supplied. In this situation the use of "
       "StorageSettingWithHints can be useful to provide direction to "
       "the implementation. \n"
       "In a Setting used as a service agreement for a Volume, the QOS "
       "properties reflect the Service Level Agreement, with goal, "
       "min, & max. The actual current service level is exposed by "
       "corresponding values in StorageExtent. \n"
       "The Detailed RAID properties, by contrast, reflect specific "
       "values that reflect the RAID construction of the Volume. Only "
       "the primary values are meaningful; Min and Max are set to "
       "match. \n"
       "Certain StorageSetting instances may be classed as \"Fixed\", "
       "by using the \"ChangeableType\" property, indicating the "
       "setting is preset. Such settings are used when the possible "
       "setting variations are low enough to be instantiated in their "
       "entirety. The StorageCapabilities \"CreateSetting\" method MAY "
       "NOT be used to return settings that are not changeable. \n"
       "Other StorageSetting instances are created using the "
       "\"CreateSetting\" method. If the capabilities specifies "
       "ranges, then the setting can be used by a client to narrow the "
       "range to particular values within the range. In other words, "
       "the capabilities MAY be broad, but the related setting MUST be "
       "as capable or less capable, that is more narrowly defined, "
       "before it is used to create or modify resources. \n"
       "These created StorageSetting instances MUST have their "
       "\"ChangeableType\" property = 1, \"Changeable - Transient\". \n"
       "GeneratedSettings MAY not remain after the restart or reset of "
       "the implementation. They may be deleted by implementation at "
       "any time. A reasonable minimal time to retain the generated "
       "transient settings is five minutes, although there is no "
       "minimal retention time." )]
class CIM_StorageSetting : CIM_SettingData {

      [Write, Description ( 
          "Indicates the desired value for No Single Point of "
          "Failure. Possible values are false = single point of "
          "failure, and true = no single point of failure." )]
   boolean NoSinglePointOfFailure;

      [Write, Description ( 
          "DataRedundancyMax describes the maximum number of "
          "complete copies of data to be maintained. Examples would "
          "be RAID 5 where 1 copy is maintained and RAID 1 where 2 "
          "or more copies are maintained. Possible values are 1 to "
          "n. The desired redundancy is specified using "
          "DataRedundancyGoal, while the minimum is defined by "
          "DataRedundancyMin." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { "CIM_StorageSetting.DataRedundancyMin", 
          "CIM_StorageSetting.DataRedundancyGoal" }]
   uint16 DataRedundancyMax;

      [Write, Description ( 
          "DataRedundancyMin describes the minimum number of "
          "complete copies of data to be maintained. Examples would "
          "be RAID 5 where 1 copy is maintained and RAID 1 where 2 "
          "or more copies are maintained. Possible values are 1 to "
          "n. The desired redundancy is specified using "
          "DataRedundancyGoal, while the maximum is defined by "
          "DataRedundancyMax." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { "CIM_StorageSetting.DataRedundancyMax", 
          "CIM_StorageSetting.DataRedundancyGoal" }]
   uint16 DataRedundancyMin;

      [Write, Description ( 
          "DataRedundancyGoal describes the desired number of "
          "complete copies of data to be maintained. Examples would "
          "be RAID 5 where 1 copy is maintained and RAID 1 where 2 "
          "or more copies are maintained. Possible values are 1 to "
          "n. The bounds (max and min) for redundancy are defined "
          "using the properties, DataRedundancyMax and "
          "DataRedundancyMin." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { "CIM_StorageSetting.DataRedundancyMax", 
          "CIM_StorageSetting.DataRedundancyMin" }]
   uint16 DataRedundancyGoal;

      [Write, Description ( 
          "PackageRedundancyMax describes the maximum number of "
          "redundant packages to be used. For example, in the "
          "storage domain, package redundancy describes how many "
          "disk spindles can fail without data loss including, at "
          "most, one spare. An example would be RAID5 with a spare "
          "disk which would have a PackageRedundancy of 2. Possible "
          "values are 0 to n. The desired redundancy is specified "
          "using PackageRedundancyGoal, while the minimum is "
          "defined by PackageRedundancyMin." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyMin", 
          "CIM_StorageSetting.PackageRedundancyGoal" }]
   uint16 PackageRedundancyMax;

      [Write, Description ( 
          "PackageRedundancyMin describes the minimum number of "
          "redundant packages to be used. For example, in the "
          "storage domain, package redundancy describes how many "
          "disk spindles can fail without data loss including, at "
          "most, one spare. An example would be RAID5 with a spare "
          "disk which would have a PackageRedundancy of 2. Possible "
          "values are 0 to n. The desired redundancy is specified "
          "using PackageRedundancyGoal, while the maximum is "
          "defined by PackageRedundancyMax." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyMax", 
          "CIM_StorageSetting.PackageRedundancyGoal" }]
   uint16 PackageRedundancyMin;

      [Write, Description ( 
          "PackageRedundancyGoal describes the desired number of "
          "redundant packages to be used. For example, in the "
          "storage domain, package redundancy describes how many "
          "disk spindles can fail without data loss including, at "
          "most, one spare. An example would be RAID5 with a spare "
          "disk which would have a PackageRedundancy of 2. Possible "
          "values are 0 to n. The bounds (max and min) for "
          "redundancy are defined using the properties, "
          "PackageRedundancyMax and PackageRedundancyMin." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyMax", 
          "CIM_StorageSetting.PackageRedundancyMin" }]
   uint16 PackageRedundancyGoal;

      [Write, Description ( 
          "DeltaReservationMax is a number between 1 (1%) and a 100 "
          "(100%) which specifies the maximum amount of space that "
          "should be reserved in a replica for caching changes. For "
          "a complete copy this would be 100%. The desired "
          "reservation is specified using DeltaReservationGoal, "
          "while the minimum is defined by DeltaReservationMin." ), 
       Units ( "Percentage" ), 
       MinValue ( 1 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.DeltaReservationMin", 
          "CIM_StorageSetting.DeltaReservationGoal" }]
   uint8 DeltaReservationMax;

      [Write, Description ( 
          "DeltaReservationMin is a number between 1 (1%) and a 100 "
          "(100%) which specifies the minimum amount of space that "
          "should be reserved in a replica for caching changes. For "
          "a complete copy this would be 100%. The desired "
          "reservation is specified using DeltaReservationGoal, "
          "while the maximum is defined by DeltaReservationMax." ), 
       Units ( "Percentage" ), 
       MinValue ( 1 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.DeltaReservationMax", 
          "CIM_StorageSetting.DeltaReservationGoal" }]
   uint8 DeltaReservationMin;

      [Write, Description ( 
          "DeltaReservationGoal is a number between 1 (1%) and a "
          "100 (100%) which specifies the desired amount of space "
          "that should be reserved in a replica for caching "
          "changes. For a complete copy this would be 100%. The "
          "bounds (max and min) for the reservation are defined "
          "using the properties, DeltaReservationMax and "
          "DeltaReservationMin." ), 
       Units ( "Percentage" ), 
       MinValue ( 1 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.DeltaReservationMin", 
          "CIM_StorageSetting.DeltaReservationMax" }]
   uint8 DeltaReservationGoal;

      [Description ( 
          "Enumeration indicating the type of setting. \"Fixed - "
          "Not Changeable\" settings are primordial. These setting "
          "are defined at the implementor of the class. \"Changeable "
          "- Transient\" is the type of setting produced by the "
          "\"CreateSetting\" method. A client can subsequently "
          "request that the implementation persist the generated "
          "and potentially modified setting indefinately. Only a "
          "\"Changeable - Transient\" setting SHALL be converted to "
          "a \"Changeable = Persistent\" setting; the setting SHALL "
          "NOT be changed back." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Fixed - Not Changeable", "Changeable - Transient", 
          "Changeable - Persistent" }]
   uint16 ChangeableType;

      [Write, Description ( 
          "ExtentStripeLength describes the number of underlying "
          "StorageExtents across which data is striped in the "
          "common striping-based storage organizations. This is "
          "also known as the number of \'members\' or \'columns\'. "
          "When used in a goal setting instance, ExtentStripeLength "
          "is the optimal desired value. The bounds (max and min) "
          "for Stripe Length are defined using the properties "
          "ExtentStripeLengthMax and ExtentStripeLengthMin. "
          "ExtentStripeLength MUST be set to NULL if the scoping "
          "StorageCapablities indicates that it is not supported in "
          "this context. ExtentStripeLength can be used in "
          "conjunction with CreateOrModifyElementFromELements to "
          "explicitly configure storage. An example would be RAID "
          "0+1 with mirroring two stripe sets, each set being three "
          "wide. In this case CreateOrModifyElementFromElements "
          "would be passed a goal setting with DataRedundancy = 2 "
          "and ExtentStripeLength = 3. The size of the InElements "
          "array would be 6 and would contain the StorageExtents to "
          "be used to construct the StorageElement as a RAID 0+1. "
          "ExtentStripeLengthMin and ExtentStripeLengthMax are "
          "meaningless and wouldbe set to NULL. If the property is "
          "supported, and is part of StorageSettingWithHints it MAY "
          "be set to NULL. If used it will constrain the effects of "
          "Hint selections. When used in a Setting instance "
          "associated to a Volume, this property indicates the "
          "specific value that the Volume was created with, and "
          "ExtentStripeLengthMin and ExtentStripeLengthMax will be "
          "set to the same specific value." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.ExtentStripeLengthMax", 
          "CIM_StorageSetting.ExtentStripeLengthMin" }]
   uint16 ExtentStripeLength;

      [Write, Description ( 
          "ExtentStripeLength describes the number of underlying "
          "StorageExtents across which data is striped in the "
          "common striping-based storage organizations. This is "
          "also known as the number of \'members\' or \'columns\'. "
          "When used in a goal setting instance, "
          "ExtentStripeLengthMin is the minimum acceptable value. "
          "The desired Stripe Length is specified using "
          "ExtentStripeLength, while the maximum is defined by "
          "ExtentStripeLengthMax. ExtentStripeLengthMin MUST be set "
          "to NULL if the scoping StorageCapablities indicates that "
          "it is not supported in this context. If the property is "
          "supported, and is part of StorageSettingWithHints it MAY "
          "be set to NULL. If used it will constrain the effects of "
          "Hint selections. When used in a Setting instance "
          "associated to a Volume, this property is set to the "
          "specific value of ExtentStripeLength." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.ExtentStripeLengthMax", 
          "CIM_StorageSetting.ExtentStripeLength" }]
   uint16 ExtentStripeLengthMin;

      [Write, Description ( 
          "ExtentStripeLength describes the number of underlying "
          "StorageExtents across which data is striped in the "
          "common striping-based storage organizations. This is "
          "also known as the number of \'members\' or \'columns\'. "
          "When used in a goal setting instance, "
          "ExtentStripeLengthMax is the maximum acceptable value. "
          "The desired Stripe Length is specified using "
          "ExtentStripeLength, while the minimum is defined by "
          "ExtentStripeLengthMin. ExtentStripeLengthMax MUST be set "
          "to NULL if the scoping StorageCapablities indicates that "
          "it is not supported in this context. If the property is "
          "supported, and is part of StorageSettingWithHints it MAY "
          "be set to NULL. If used it will constrain the effects of "
          "Hint selections. When used in a Setting instance "
          "associated to a Volume, this property is set to the "
          "specific value of ExtentStripeLength." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.ExtentStripeLengthMin", 
          "CIM_StorageSetting.ExtentStripeLength" }]
   uint16 ExtentStripeLengthMax;

      [Write, Description ( 
          "ParityLayout specifies whether a parity-based storage "
          "organization is using rotated or non-rotated parity. "
          "When used in a goal setting instance, ParityLayout is "
          "the desired value. It MUST be set to NULL if the scoping "
          "StorageCapablities indicates that it is not supported in "
          "this context. If the property is supported, and is part "
          "of StorageSettingWithHints it MAY be set to NULL. If "
          "used it will constrain the effects of Hint selections. "
          "When used in a Setting instance associated to a Volume, "
          "this property indicates the specific value that the "
          "Volume was created with." ), 
       ValueMap { "1", "2" }, 
       Values { "Non-rotated Parity", "Rotated Parity" }]
   uint16 ParityLayout;

      [Write, Description ( 
          "UserDataStripeDepth describes the number of bytes "
          "forming a strip in common striping-based storage "
          "organizations. The strip is defined as the size of the "
          "portion of a stripe that lies on one extent. Thus, "
          "ExtentStripeLength * UserDataStripeDepth will yield the "
          "size of one stripe of user data. When used in a goal "
          "setting instance, UserDataStripeDepth is the optimal "
          "desired value. The bounds (max and min) for Stripe Depth "
          "are defined using the properties UserDataStripeDepthMax "
          "and UserDataStripeDepthMin. UserDataStripeDepth MUST be "
          "set to NULL if the scoping StorageCapablities indicates "
          "that it is not supported in this context. If the "
          "property is supported, and is part of "
          "StorageSettingWithHints it MAY be set to NULL. If used "
          "it will constrain the effects of Hint selections. When "
          "used in a Setting instance associated to a Volume, this "
          "property indicates the specific value that the Volume "
          "was created with, and UserDataStripeDepthMin and "
          "UserDataStripeDepthMax will be set to the same specific "
          "value." ), 
       Units ( "Bytes" ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.UserDataStripeDepthMax", 
          "CIM_StorageSetting.UserDataStripeDepthMin" }]
   uint64 UserDataStripeDepth;

      [Write, Description ( 
          "UserDataStripeDepth describes the number of bytes "
          "forming a strip in common striping-based storage "
          "organizations. The strip is defined as the size of the "
          "portion of a stripe that lies on one extent. Thus, "
          "ExtentStripeLength * UserDataStripeDepth will yield the "
          "size of one stripe of user data. When used in a goal "
          "setting instance, UserDataStripeDepthMin is the minimum "
          "acceptable value. The desired Stripe Depth is specified "
          "using UserDataStripeDepth, while the maximum is defined "
          "by UserDataStripeDepthMax. UserDataStripeDepthMin MUST "
          "be set to NULL if the scoping StorageCapablities "
          "indicates that it is not supported in this context. If "
          "the property is supported, and is part of "
          "StorageSettingWithHints it MAY be set to NULL. If used "
          "it will constrain the effects of Hint selections. When "
          "used in a Setting instance associated to a Volume, this "
          "property is set to the specific value of "
          "UserDataStripeDepth." ), 
       Units ( "Bytes" ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.UserDataStripeDepthMax", 
          "CIM_StorageSetting.UserDataStripeDepth" }]
   uint64 UserDataStripeDepthMin;

      [Write, Description ( 
          "UserDataStripeDepth describes the number of bytes "
          "forming a strip in common striping-based storage "
          "organizations. The strip is defined as the size of the "
          "portion of a stripe that lies on one extent. Thus, "
          "ExtentStripeLength * UserDataStripeDepth will yield the "
          "size of one stripe of user data. When used in a goal "
          "setting instance, UserDataStripeDepthMax is the maximum "
          "acceptable value. The desired Stripe Depth is specified "
          "using UserDataStripeDepthGoal, while the minimum is "
          "defined by UserDataStripeDepthMin. "
          "UserDataStripeDepthMax MUST be set to NULL if the "
          "scoping StorageCapablities indicates that it is not "
          "supported in this context. If the property is supported, "
          "and is part of StorageSettingwWithHints it MAY be set to "
          "NULL. If used it will constrain the effects of Hint "
          "selections. When used in a Setting instance associated "
          "to a Volume, this property is set to the specific value "
          "of UserDataStripeDepth." ), 
       Units ( "Bytes" ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.UserDataStripeDepthMin", 
          "CIM_StorageSetting.UserDataStripeDepth" }]
   uint64 UserDataStripeDepthMax;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_StorageSettingWithHints 
// ==================================================================
   [Version ( "2.7.1" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This subclass of StorageSetting allows a client to specify "
       "\'hint\'s for optimization of the volume performance. The "
       "effect of these hints is implementation dependent." )]
class CIM_StorageSettingWithHints : CIM_StorageSetting {

      [Write, Description ( 
          "This hint is an indication from a client of the "
          "importance placed on data availability. Values are "
          "0=Don\'t Care to 10=Very Important." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 DataAvailabilityHint;

      [Write, Description ( 
          "This hint is an indication from a client of the "
          "randomness of accesses. Values are 0=Entirely Sequential "
          "to 10=Entirely Random." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 AccessRandomnessHint;

      [Write, Description ( 
          "This hint is an indication from a client of the "
          "direction of accesses. Values are 0=Entirely Read to "
          "10=Entirely Write." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 AccessDirectionHint;

      [Write, Description ( 
          "This hint is an indication from a client of the optimal "
          "access sizes (in bytes). Since this property is an "
          "array, several sizes can be specified." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint16 AccessSizeHint[];

      [Write, Description ( 
          "This hint is an indication from a client how important "
          "access latency is. Values are 0=Don\'t Care to 10=Very "
          "Important." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 AccessLatencyHint;

      [Write, Description ( 
          "This hint is an indication from a client of bandwidth "
          "prioritization. Values are 0=Don\'t Care to 10=Very "
          "Important." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 AccessBandwidthWeight;

      [Write, Description ( 
          "This hint is an indication of the importance the client "
          "places on the cost of storage. Values are 0=Don\'t Care "
          "to 10=Very Important. A StorageVolume provider might "
          "choose to place data on low cost or high cost drives "
          "based on this parameter." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 StorageCostHint;

      [Write, Description ( 
          "This hint is an indication of the importance placed on "
          "storage space efficiency by the client. Values are "
          "0=Don\'t Care to 10=Very Important. A StorageVolume "
          "provider might choose different RAID levels based on "
          "this hint." ), 
       MinValue ( 0 ), 
       MaxValue ( 10 )]
   uint16 StorageEfficiencyHint;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageSynchronized 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "Indicates that two Storage objects were replicated at the "
       "specified point in time. If the CopyType property is set to "
       "\'Sync\' (=3), then synchronization of the Storage objects is "
       "preserved." )]
class CIM_StorageSynchronized : CIM_Synchronized {

      [Override ( "SystemElement" ), 
       Description ( 
          "SystemElement represents the Storage that is the source "
          "of the replication." )]
   CIM_ManagedElement REF SystemElement;

      [Override ( "SyncedElement" ), 
       Description ( 
          "SyncedElement represents the Storage that is the target "
          "of the replication." )]
   CIM_ManagedElement REF SyncedElement;

      [Description ( 
          "CopyType describes the Replication Policy. Values are: \n"
          "Async: create and maintain an asynchronous copy of the "
          "source. \n"
          "Sync: create and maintain a synchronized copy of the "
          "source. \n"
          "UnSyncAssoc: create an unsynchronized copy and maintain "
          "an association to the source." ), 
       ValueMap { "2", "3", "4", "..", "0x8000.." }, 
       Values { "Async", "Sync", "UnSyncAssoc", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 CopyType;

      [Description ( 
          "ReplicaType provides information on how the Replica is "
          "being maintained. Values are: \n"
          "Full Copy: This indicates that a full copy of the source "
          "object is (or will be) generated . \n"
          "Before Delta: This indicates that the source object will "
          "be maintained as a delta data from the replica. \n"
          "After Delta: This indicates that the replica will be "
          "maintained as delta data from the source object. \n"
          "Log: This indicates that the replica object is being "
          "maintained as a log of changes to the source. \n"
          "Not Specified: The method of maintaining the copy is not "
          "specified." ), 
       ValueMap { "0", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Not Specified", "Full Copy", "Before Delta", 
          "After Delta", "Log", "DMTF Reserved", "Vendor Specific" }]
   uint16 ReplicaType;

      [Description ( 
          "SyncState describes the state of the association with "
          "respect to Replication activity. Values are: \n"
          "Initialized: The link to enable replication is "
          "established. \n"
          "PrepareInProgress: Preparation for Replication is in "
          "progress. \n"
          "Prepared: All necessary preparation has completed. \n"
          "ResyncInProgress: Synchronization or Resynchronization "
          "is in progress. \n"
          "This may be the initial \'copy\' or subsequent changes "
          "being copied. \n"
          "Synchronized: An Async or Sync replication is currently "
          "synchronized. When this value is set, SyncMaintained "
          "will be true. \n"
          "FractureInProgress: An operation to fracture an Async or "
          "Sync replication is in progress. \n"
          "Fractured: An Async or Sync replication is fractured. \n"
          "QuiesceInProgress: A quiesce operation is in progress. \n"
          "Quiesced: The replication has been quiesced and is ready "
          "for a change. \n"
          "RestoreInProgress: An operation is in progress to copy "
          "the Synced object to the System object. \n"
          "Idle: The \'normal\' state for an UnSyncAssoc replica. \n"
          "Broken: The relationship is non-functional due to errors "
          "in the source, the target, the path between the two or "
          "space constraints." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "0x8000.." }, 
       Values { "Initialized", "PrepareInProgress", "Prepared", 
          "ResyncInProgress", "Synchronized", 
          "Fracture In Progress", "QuiesceInProgress", "Quiesced", 
          "Restore In Progresss", "Idle", "Broken", "Fractured", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 SyncState;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TokenRingPortStatistics
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "The TokenRingPortStatistics class describes the statistics for "
       "the TokenRingPort." )]
class CIM_TokenRingPortStatistics : CIM_NetworkPortStatistics {

      [Description ( 
          "This counter is incremented when a station detects the "
          "absence of transitions for five half-bit timers "
          "(burst-five errors)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsBurstErrors" }]
   uint32 BurstErrors;

      [Description ( 
          "This counter is incremented when a station receives an "
          "AMP or SMP frame in which A is equal to C and C is equal "
          "to 0, and then receives another SMP frame with A equal "
          "to C and C equal to 0 without first receiving an AMP "
          "frame. This condition indicates a station that cannot "
          "set the AC bits properly." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsACErrors" }]
   uint32 ACErrors;

      [Description ( 
          "This counter is incremented when a station transmits an "
          "abort delimiter while transmitting data." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsAbortTransErrors" }]
   uint32 AbortTransErrors;

      [Description ( 
          "This counter is incremented when a station recognizes an "
          "internal error." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsInternalErrors" }]
   uint32 InternalErrors;

      [Description ( 
          "This counter is incremented when a station is "
          "transmitting and its TRR timer expires. This condition "
          "indicates where a transmitting station in strip mode "
          "does not receive the trailer of the frame before the TRR "
          "timer goes off." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsLostFrameErrors" }]
   uint32 LostFrameErrors;

      [Description ( 
          "This counter is incremented when a station recognizes a "
          "frame addressed to its specific address but has no "
          "available buffer space, which indicates that the station "
          "is congested." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsReceiveCongestions" }]
   uint32 ReceiveCongestions;

      [Description ( 
          "This counter is incremented when a station recognizes a "
          "frame addressed to its specific address and detects that "
          "the FS field A bits are set to 1, which indicates a "
          "possible line hit or duplicate address." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsFrameCopiedErrors" }]
   uint32 FrameCopiedErrors;

      [Description ( 
          "This counter is incremented when a station acting as the "
          "active monitor recognizes an error condition that needs "
          "a token transmitted." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsTokenErrors" }]
   uint32 TokenErrors;

      [Description ( 
          "The number of Soft Errors that the Device has detected. "
          "This condition directly corresponds to the number of "
          "Report Error MAC frames that this Device has "
          "transmitted. Soft Errors are those which are recoverable "
          "by the MAC layer protocols." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsSoftErrors" }]
   uint32 SoftErrors;

      [Description ( 
          "The number of times this Device has detected an "
          "immediately recoverable fatal error. The number of times "
          "this Device is either transmitting or receiving beacon "
          "MAC frames." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsHardErrors" }]
   uint32 HardErrors;

      [Description ( 
          "The number of times this Device has detected the loss of "
          "a signal condition from the ring." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsSignalLoss" }]
   uint32 SignalLossCount;

      [Description ( 
          "The number of times this Device has transmitted a beacon frame."
           ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsTransmitBeacons" }]
   uint32 TransmittedBeacons;

      [Description ( 
          "The number of Claim Token MAC frames that are received "
          "or transmitted after the Device has received a Ring "
          "Purge MAC frame. This counter signifies the number of "
          "times that the ring has been purged and is being "
          "recovered back into a normal operating state." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsRecoverys" }]
   uint32 Recoverys;

      [Description ( 
          "The number of times that the Device has detected an open "
          "or short circuit in the lobe data path. The port will be "
          "closed and RingState will signify this condition." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsLobeWires" }]
   uint32 LobeWires;

      [Description ( 
          "The number of times that the Device has received a "
          "Remove Ring Station MAC frame request. When this frame "
          "is received, the Device will enter the close state and "
          "RingState will signify this condition." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsRemoves" }]
   uint32 Removes;

      [Description ( 
          "The number of times that the Device has sensed that it "
          "is the only station on the ring. This condition occurs "
          "if the Device is the first one up on a ring or if there "
          "is a hardware problem." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsSingles" }]
   uint32 Singles;

      [Description ( 
          "The number of times that the Device has detected that "
          "the frequency of the incoming signal differs from the "
          "expected frequency by more than that specified by the "
          "IEEE 802.5 standard." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsFreqErrors" }]
   uint32 FrequencyErrors;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Indication, Abstract, Version ( "2.24.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_Indication is the abstract root class for all "
       "notifications about changes in schema, objects and their data, "
       "and about events detected by providers and instrumentation. "
       "Subclasses represent specific types of notifications. \n"
       "\n"
       "To receive an Indication, a consumer (or subscriber) must "
       "create an instance of CIM_IndicationFilter describing the "
       "criteria of the notification, an instance of "
       "CIM_ListenerDestination describing the delivery of the "
       "notification, and an instance of CIM_IndicationSubscription "
       "associating the Filter and Handler." )]
class CIM_Indication {

      [Description ( 
          "An identifier for the Indication. This property is "
          "similar to a key value in that it can be used for "
          "identification, when correlating Indications (see the "
          "CorrelatedIndications array). Its value SHOULD be unique "
          "as long as correlations are reported, but MAY be reused "
          "or left NULL if no future Indications will reference it "
          "in their CorrelatedIndications array.To ensure "
          "uniqueness, the value of IndicationIdentifier should be "
          "constructed using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "IndicationIdentifier or that is a recognized ID that is "
          "assigned to the business entity by a recognized global "
          "authority. (This requirement is similar to the <Schema "
          "Name>_<Class Name> structure of Schema class names.) In "
          "addition, to ensure uniqueness <OrgID> must not contain "
          "a colon (:). When using this algorithm, the first colon "
          "to appear in IndicationIdentifier must appear between "
          "<OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be re-used to identify different underlying "
          "(real-world) elements. \n"
          "If the above \"preferred\" algorithm is not used, the "
          "defining entity should assure that the resulting "
          "IndicationIdentifier is not re-used across any "
          "IndicationIdentifiers that are produced by this or other "
          "providers for the NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "should be used with the <OrgID> set to CIM." ), 
       MappingStrings { 
          "Recommendation.ITU|X733.Notification identifier" }]
   string IndicationIdentifier;

      [Description ( 
          "A list of IndicationIdentifiers whose notifications are "
          "correlated with (related to) this one." ), 
       MappingStrings { 
          "Recommendation.ITU|X733.Correlated notifications" }, 
       ModelCorrespondence { "CIM_Indication.IndicationIdentifier" }]
   string CorrelatedIndications[];

      [Description ( 
          "The time and date of creation of the Indication. The "
          "property may be set to NULL if the entity creating the "
          "Indication is not capable of determining this "
          "information. Note that IndicationTime may be the same "
          "for two Indications that are generated in rapid "
          "succession." )]
   datetime IndicationTime;

      [Description ( 
          "An enumerated value that describes the severity of the "
          "Indication from the notifier\'s point of view: \n"
          "1 - Other, by CIM convention, is used to indicate that "
          "the Severity\'s value can be found in the OtherSeverity "
          "property. \n"
          "3 - Degraded/Warning should be used when its appropriate "
          "to let the user decide if action is needed. \n"
          "4 - Minor should be used to indicate action is needed, "
          "but the situation is not serious at this time. \n"
          "5 - Major should be used to indicate action is needed "
          "NOW. \n"
          "6 - Critical should be used to indicate action is needed "
          "NOW and the scope is broad (perhaps an imminent outage "
          "to a critical resource will result). \n"
          "7 - Fatal/NonRecoverable should be used to indicate an "
          "error occurred, but it\'s too late to take remedial "
          "action. \n"
          "2 and 0 - Information and Unknown (respectively) follow "
          "common usage. Literally, the Indication is purely "
          "informational or its severity is simply unknown." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", ".." }, 
       Values { "Unknown", "Other", "Information", 
          "Degraded/Warning", "Minor", "Major", "Critical", 
          "Fatal/NonRecoverable", "DMTF Reserved" }, 
       MappingStrings { "Recommendation.ITU|X733.Perceived severity" }]
   uint16 PerceivedSeverity;

      [Description ( 
          "Holds the value of the user defined severity value when "
          "\'PerceivedSeverity\' is 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_AlertIndication.PerceivedSeverity" }]
   string OtherSeverity;

      [Description ( 
          "An identifier for the indication filter that selects "
          "this indication and causes it to be sent. This property "
          "is to be filled out by the indication sending service. "
          "The value shall be correlatable with the Name property "
          "of the instance of CIM_IndicationFilter describing the "
          "criteria of the indication. The value of the "
          "IndicationFilterName should be formatted using the "
          "following algorithm: < OrgID > : < LocalID >, where < "
          "OrgID > and < LocalID > are separated by a colon (:) and "
          "< OrgID > shall include a copyrighted, trademarked, or "
          "otherwise unique name that is owned by the business "
          "entity that is creating or defining the value or that is "
          "a registered ID assigned to the business entity by a "
          "recognized global authority. In addition, to ensure "
          "uniqueness, < OrgID > shall not contain a colon (:).When "
          "using this algorithm, the first colon to appear in the "
          "value shall appear between < OrgID > and < LocalID >. < "
          "LocalID > is chosen by the business entity and shall be "
          "used uniquely." ), 
       ModelCorrespondence { "CIM_IndicationFilter.Name" }]
   string IndicationFilterName;

      [Description ( 
          "The sequence context portion of a sequence identifier "
          "for the indication. The sequence number portion of the "
          "sequence identifier is provided by the SequenceNumber "
          "property. The combination of both property values "
          "represents the sequence identifier for the indication.\n"
          "The sequence identifier for the indication enables a CIM "
          "listener to identify duplicate indications when the CIM "
          "service attempts the delivery retry of indications, to "
          "reorder indications that arrive out-of-order, and to "
          "detect lost indications.\n"
          "If a CIM service does not support sequence identifiers "
          "for indications, this property shall be NULL.\n"
          "If a CIM service supports sequence identifiers for "
          "indications, this property shall be maintained by the "
          "CIM service for each registered listener destination, "
          "and its value shall uniquely identify the CIM service "
          "and the indication service within the CIM service such "
          "that restarts of the CIM service and deregistration of "
          "listener destinations to the CIM service cause the value "
          "to change, without reusing earlier values for a "
          "sufficiently long time.\n"
          "When retrying the delivery of an indication, this "
          "property shall have the same value as in the original delivery.\n"
          "To guarantee this uniqueness, the property value should "
          "be constructed using the following format (defined in "
          "ABNF): sequence-context = indication-service-name \"#\" "
          "cim-service-start-id \"#\" listener-destination-creation-time\n"
          "Where: indication-service-name is the value of the Name "
          "property of the CIM_IndicationService instance "
          "responsible for delivering the indication. "
          "cim-service-start-id is an identifier that uniquely "
          "identifies the CIM service start, for example via a "
          "timestamp of the start time, or via a counter that "
          "increases for each start or restart. "
          "listener-destination-creation-time is a timestamp of the "
          "creation time of the CIM_ListenerDestination instance "
          "representing the listener destination.\n"
          "Since this format is only a recommendation, CIM clients "
          "shall treat the value as an opaque identifier for the "
          "sequence context and shall not rely on this format." ), 
       ModelCorrespondence { "CIM_Indication.SequenceNumber" }]
   string SequenceContext;

      [Description ( 
          "The sequence number portion of a sequence identifier for "
          "the indication. The sequence context portion of the "
          "sequence identifier is provided by the SequenceContext "
          "property. The combination of both property values "
          "represents the sequence identifier for the indication.\n"
          "The sequence identifier for the indication enables a CIM "
          "listener to identify duplicate indications when the CIM "
          "service attempts the delivery retry of indications, to "
          "reorder indications that arrive out-of-order, and to "
          "detect lost indications.\n"
          "If a CIM service does not support sequence identifiers "
          "for indications, this property shall be NULL.\n"
          "If a CIM service supports sequence identifiers for "
          "indications, this property shall be maintained by the "
          "CIM service for each registered listener destination, "
          "and its value shall uniquely identify the indication "
          "within the sequence context provided by SequenceContext. "
          "It shall start at 0 whenever the sequence context string "
          "changes. Otherwise, it shall be increased by 1 for every "
          "new indication to that listener destination, and it "
          "shall wrap to 0 when the value range is exceeded.\n"
          "When retrying the delivery of an indication, this "
          "property shall have the same value as in the original "
          "delivery." ), 
       ModelCorrespondence { "CIM_Indication.SequenceContext" }]
   sint64 SequenceNumber;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_IndicationFilter defines the criteria for generating an "
       "instance of CIM_Indication and what data should be returned in "
       "that instance. It is derived from CIM_ManagedElement to allow "
       "modeling the dependency of the filter on a specific service.\n"
       "If used with the \"DMTF:CQLT\" language, the processing and "
       "CQLT tokens that must be supported are described in the "
       "description of the QueryLanguage property" )]
class CIM_IndicationFilter : CIM_ManagedElement {

      [Key, Description ( 
          "A System\'s CreationClassName. The Filter is defined in "
          "the context of a CIM_System, where it is hosted or to "
          "which it applies. In a future release, a weak "
          "relationship will be explicitly added to the model. This "
          "is not done now to allow further refinement of the "
          "Filter definition and its inheritance tree. Keys are "
          "defined now to allow the class to be instantiated." ), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Key, Description ( 
          "A System\'s Name. The Filter is defined in the context "
          "of a CIM_System, where it is hosted or to which it "
          "applies. In a future release, a weak relationship will "
          "be explicitly added to the model. This is not done now "
          "to allow further refinement of the Filter definition and "
          "its inheritance tree. Keys are defined now to allow the "
          "class to be instantiated." ), 
       MaxLen ( 256 )]
   string SystemName;

      [Key, Description ( 
          "Indicates the name of the class or the subclass used in "
          "the creation of an instance. When used with the other "
          "key properties of this class, it allows all instances of "
          "this class and its subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( "The name of the filter." )]
   string Name;

      [Deprecated { "CIM_IndicationFilter.SourceNamespaces" }, 
       Description ( 
          "The path to a local namespace where the Indications "
          "originate. If NULL, the namespace of the Filter "
          "registration is assumed." )]
   string SourceNamespace;

      [Description ( 
          "The names of the local namespaces where the Indications "
          "originate. If NULL, the namespace of the Filter "
          "registration is assumed. SourceNamespaces replaces the "
          "SourceNamespace property on IndicationFilter to provide "
          "a means of defining the multiple namespaces where "
          "indications may originate." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Namespace.Name" }]
   string SourceNamespaces[];

      [Description ( 
          "If IndividualSubscriptionSupported is true, the "
          "implementation shall support direct subscription to this "
          "IndicationFilter. If IndividualSubscriptionSupported is "
          "false, the implementation shall not support direct "
          "subscription to this IndicationFilter." )]
   boolean IndividualSubscriptionSupported = true;

      [Required, Description ( 
          "A query expression that defines the condition(s) under "
          "which instances of CIM_Indication will be generated. For "
          "CIM_InstIndication subclasses of CIM_Indication classes, "
          "the query expression may also define the instance "
          "properties to be copied to the CIM_InstIndication\'s "
          "SourceInstance and PreviousInstance properties. Query "
          "language semantics include projection (e.g., Select), "
          "range (e.g., From) and predicate (e.g., Where). \n"
          "When used with QueryLanguage set to \"DMTF:CQL\" or "
          "\"DMTF:CQLT\", the FROM clause shall contain at least "
          "one subclass of CIM_Indication and may contain any "
          "number of other classes or subqueries. If only one "
          "subclass of CIM_Indication is named, it defines the "
          "CIM_Indication that this Instance of "
          "CIM_IndicationFilter will produce. If more than one "
          "subclass of CIM_Indication is named, then one of them "
          "must be named explicitly in the select-list. \n"
          "The select-list must refer explicitly or implicitly to "
          "exactly one CIM_Indication subclass. In addition, it "
          "shall conform to one of several options: \n"
          "1) only a \"*\": This may only be used if the Indication "
          "subclass is the only entry on the FROM list. \n"
          "2) only a \"<Indicationclass or alias>.*\": This form "
          "may be used if the FROM clause contains more than one "
          "Indication subclass. \n"
          "3) a list of the form \"<propertyname>*[\",\"[<literal> "
          "AS ]<propertyname>]\": This form may only be used if the "
          "CIM_Indication subclass is the only entry on the FROM "
          "list. In this form, the literal is assigned to the named "
          "property of the selected CIM_Indication subclass \n"
          "4) a list of the form \"<Indicationname>.<propertyname> "
          "*[\",\" [<Indicationname>.<propertyname> |\"\": "
          "<literal> AS <propertyname> | <fromname>.<propertyname> "
          "AS <propertyname> ] ]\" : The first term selects the "
          "appropriate CIM_Indication subclass to produce. "
          "Subsequent terms allow other properties of that "
          "indication, or allow a literal or property of another "
          "class to be assigned to the output as one of the "
          "properties of the selected CIM_Indication subclass. \n"
          "Note that in all cases, only the property names of the "
          "selected CIM_Indication subclass may be referred to in "
          "the select-list.\n"
          "When used with \"DMTF:CQLT\", the additional string "
          "array property TemplateVariable should be used to "
          "provide additional filtering information to the query." ), 
       ModelCorrespondence { "CIM_IndicationFilter.QueryLanguage", 
          "CIM_IndicationFilter.TemplateVariable" }]
   string Query;

      [Required, Description ( 
          "The language in which the query is expressed. . \n"
          "\"DMTF:CQL\" indicates a CIM Query Language string. \n"
          "\"DMTF:CQLT\" indicates a CIM Query Language Template "
          "string. When used, the identifiers recognized in the "
          "$identifier$ tokens are \"SELF\" and the property names "
          "of this class, or one of its subclasses. As seen by a "
          "CIM client, the value of the Query property is not "
          "changed as a result of template processing. Template "
          "processing conceptually produces a new query string, "
          "which defines the actual conditions that will trigger "
          "production of a CIM_Indication instance. When used in "
          "the Query string, $SELF$ will be replaced by a string "
          "corresponding to a WBEM URI referencing the instance of "
          "this class that contains the Query template string. "
          "Tokens of the form $<propertyname>$ will be replaced by "
          "a string representing the corresponding property value "
          "of the instance of this class that contains the Query "
          "string. The Query string must be evaluated when the "
          "CIM_IndicationFilter is created and at any time when one "
          "any modification of any property referenced by tokens in "
          "the Query string are modified." ), 
       ModelCorrespondence { "CIM_IndicationFilter.Query", 
          "CIM_IndicationFilter.TemplateVariable" }]
   string QueryLanguage;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "An IndicationService is a Service of the CIM Object Manager "
       "that is responsible for delivering indications. The following "
       "are available settings for the Indication Service. The "
       "following describes a possible configuration of settings for "
       "the associated Indication Service." )]
class CIM_IndicationServiceSettingData : CIM_SettingData {

      [Write, Description ( 
          "The FilterCreationEnabled property controls whether or "
          "not clients can create indication filters. If this value "
          "is set to false, only the indication filters that exist "
          "can be subscribed to. If this value is true clients may "
          "attempt to create filters.\n"
          "Note that implementations may preset this setting and "
          "not allow this value to be modified." )]
   boolean FilterCreationEnabled = false;

      [Write, Description ( 
          "Defines the number of retries that the indication "
          "service will try to deliver an indication to a "
          "particular listener destination. This does not effect "
          "the original delivery attempt, thus if set to 0, it will "
          "only try to deliver the indication once. Note that "
          "implementations may preset this setting and not allow "
          "this value to be modified." ), 
       MinValue ( 0 ), 
       ModelCorrespondence { 
          "CIM_IndicationServiceSettingData.DeliveryRetryInterval" }]
   uint16 DeliveryRetryAttempts = 3;

      [Write, Description ( 
          "Defines the minimal time interval in seconds for the "
          "indication service to use before delivering an "
          "indication to a particular listener destination that "
          "previously failed. The implementation may take longer "
          "due to QoS or other processing. Note that "
          "implementations may preset this setting and not allow "
          "this value to be modified." ), 
       ModelCorrespondence { 
          "CIM_IndicationServiceSettingData.DeliveryRetryAttempts" }, 
       PUnit ( "Seconds" )]
   uint32 DeliveryRetryInterval = 30;

      [Write, Description ( 
          "Defines the removal action for subscriptions that have "
          "two failed indication deliveries without any successful "
          "indication deliveries in between and the time between "
          "the failed deliveries exceeded the timeout defined in "
          "the SubscriptionRemovalTimeInterval property. \"Remove\" "
          "defines the subscription is to be removed. \n"
          "\"Disable\" indicates that subscription removal process "
          "isnot being enforced.\n"
          "\"Ignore\" indicates that the removal action is "
          "temporarily not enforced.\n"
          "Implementations may preset this setting and not allow "
          "this value to be modified." ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "Remove", "Disable", "Ignore", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_IndicationServiceSettingData.SubscriptionRemovalTimeInterval" }]
   uint16 SubscriptionRemovalAction;

      [Write, Description ( 
          "Minimum time between two failed indication deliveries "
          "without any successful indication deliveries in between "
          "before the SubscriptionRemovalPolicy goes into effect." ), 
       ModelCorrespondence { 
          "CIM_IndicationServiceSettingData.SubscriptionRemovalAction" }, 
       PUnit ( "Seconds" )]
   uint32 SubscriptionRemovalTimeInterval;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Indication, Abstract, Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_InstIndication is an abstract superclass describing "
       "changes to instances. Subclasses represent specific types of "
       "change notifications, such as instance creation, deletion and "
       "modification." )]
class CIM_InstIndication : CIM_Indication {

      [Required, Description ( 
          "A copy of the instance that changed to generate the "
          "Indication. SourceInstance contains the current values "
          "of the properties selected by the Indication Filter\'s "
          "Query. In the case of CIM_InstDeletion, the property "
          "values are copied before the instance is deleted." ), 
       EmbeddedObject]
   string SourceInstance;

      [Description ( 
          "The Model Path of the SourceInstance. The following "
          "format MUST be used to encode the Model Path: \n"
          "<NamespacePath>:<ClassName>.<Prop1>=\"<Value1>\", \n"
          "<Prop2>=\"<Value2>\", ..." ), 
       ModelCorrespondence { "CIM_InstIndication.SourceInstance" }]
   string SourceInstanceModelPath;

      [Description ( 
          "The host name or IP address of the SourceInstance." ), 
       ModelCorrespondence { "CIM_InstIndication.SourceInstance" }]
   string SourceInstanceHost;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_InstMethodCall notifies when an instance\'s method is invoked."
        )]
class CIM_InstMethodCall : CIM_InstIndication {

      [Required, Description ( "The name of the method invoked." )]
   string MethodName;

      [Description ( 
          "The parameters of the method, formatted as an "
          "EmbeddedObject (with a predefined class name of "
          "\"__MethodParameters\"." ), 
       EmbeddedObject]
   string MethodParameters;

      [Description ( 
          "ReturnValue\'s data is dependent on the PreCall "
          "property. When PreCall is TRUE, this property is NULL "
          "describing that there is no method return value (since "
          "the method has not yet executed). When PreCall is FALSE, "
          "ReturnValue contains a string representation of the "
          "method\'s return value." ), 
       ModelCorrespondence { "CIM_InstMethodCall.PreCall" }]
   string ReturnValue;

      [Required, Description ( 
          "Boolean indicating whether the Indication is sent before "
          "the method begins executing (TRUE) or when the method "
          "completes (FALSE). When TRUE, the inherited property "
          "SourceInstance contains the value of the instance (the "
          "properties defined by the Filter\'s Query clause), "
          "before execution of the method. When PreCall is FALSE, "
          "SourceInstance embeds the instance as it appears after "
          "the completion of the method." )]
   boolean PreCall;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Indication, Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_InstModification notifies when an instance is modified." )]
class CIM_InstModification : CIM_InstIndication {

      [Description ( 
          "A copy of the \'previous\' instance whose change "
          "generated the Indication. PreviousInstance contains "
          "\'older\' values of an instance\'s properties (as "
          "compared to SourceInstance), selected by the "
          "IndicationFilter\'s Query." ), 
       EmbeddedObject]
   string PreviousInstance;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_InstRead notifies when an instance is read but not modified."
        )]
class CIM_InstRead : CIM_InstIndication {


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "The description of a CIM Listener destination. A CIM_Listener "
       "is an entity capable of receiving CIM Export Messages (e.g., "
       "Indications or responses to an asynchronous CIM Operation)." )]
class CIM_ListenerDestination : CIM_ManagedElement {

      [Key, Description ( 
          "A System\'s CreationClassName. A CIM Listener "
          "destination is defined in context of a CIM_System (e.g., "
          "the sending system." ), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Key, Description ( 
          "A System\'s Name. A CIM Listener destination is defined "
          "in context of a CIM_System (e.g., the sending system." ), 
       MaxLen ( 256 )]
   string SystemName;

      [Key, Description ( 
          "Indicates the name of the class or the subclass used in "
          "the creation of an instance. When used with the other "
          "key properties of this class, it allows all instances of "
          "this class and its subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "Indicates the name of the CIM Listener destination." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "Describes the Persistence Type of the destination "
          "defined by this instance. If the value of "
          "PersistenceType is not specified, the value of "
          "PersistenceType MUST be treated as 2 (\"Permanent\"). A "
          "value of 2 (\"Permanent\") declares that the destination "
          "is always expected to be available (e.g., system log "
          "file). Inability to access this destination MUST be "
          "treated as an error condition. A value of 3 "
          "(\"Transient\") indicates that the destination is "
          "short-lived. Inability to access the destination MAY be "
          "treated as a normal termination condition. Subscriptions "
          "with \"Transient\" destinations MAY be deleted when the "
          "destination terminates or is no longer available." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Permanent", "Transient" }, 
       ModelCorrespondence { 
          "CIM_ListenerDestination.OtherPersistenceType" }]
   uint16 PersistenceType;

      [Description ( 
          "A string describing (\"Other\") values for "
          "PersistenceType. This value MUST be set to a non NULL "
          "value when the PersistenceType is 1 (\"Other\"). For all "
          "other values of PersistenceType, the value of "
          "OtherPersistenceType MUST be NULL." ), 
       ModelCorrespondence { 
          "CIM_ListenerDestination.PersistenceType" }]
   string OtherPersistenceType;

      [Description ( 
          "The destination IETF URI to which Export Messages are to "
          "be delivered. The scheme in the URI must be supported by "
          "theprotocol selected in the Protocol property." )]
   string Destination;

      [Description ( 
          "A free-form string providing a description of the "
          "supported protocols when 1, \"Other\", is specified for "
          "the Protocol." ), 
       ModelCorrespondence { "CIM_ListenerDestination.Protocol" }]
   string OtherProtocol;

      [Description ( 
          "Protocol describes an encoding and protocol which will "
          "be used to deliver the indication. If Other is used, the "
          "value for OtherProtocol must not be null.\n"
          "If a protocol is not specified, 2 \"CIM-XML\" must be "
          "assumed." ), 
       ValueMap { "1", "2", "3", "4", "5", ".." }, 
       Values { "Other", "CIM-XML", "SM CLP", "WS-Management", 
          "WSDM", "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_ListenerDestination.OtherProtocol" }]
   uint16 Protocol = 2;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_ListenerDestinationCIMXML describes the destination for "
       "CIM Export Messages to be delivered via CIM-XML." )]
class CIM_ListenerDestinationCIMXML : CIM_ListenerDestination {

      [Required, Override ( "Destination" ), 
       Description ( 
          "The destination URL to which CIM-XML Export Messages are "
          "to be delivered.The scheme prefix MUST be consistent "
          "with the DMTF CIM-XML specifications.If a scheme prefix "
          "is not specified, the scheme \"http:\" MUST be assumed." )]
   string Destination;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_ListenerDestinationWSManagement describes the destination "
       "for CIM indications to be delivered via WS-Management." )]
class CIM_ListenerDestinationWSManagement : CIM_ListenerDestination {

      [Required, Override ( "Destination" ), 
       Description ( 
          "The destination URL defined in the WS-Eventing Subscribe "
          "message. This must match the wsa:Address element in the "
          "wse:NotifyTo EPR. The value may be the WS-Addressing "
          "anonymous URI if the subscription uses or employs a Pull "
          "mode." )]
   string Destination;

      [Description ( 
          "Separate To address for notice of abnormal subscription "
          "termination." )]
   string DestinationEndTo;

      [Description ( 
          "If the events contain localized content, the service "
          "should accept a subscription with this Locale block "
          "acting as a hint. The language of the event message is "
          "encoded in an xml:lang attribute using RFC 3066 language "
          "codes. The service should attempt to localize any "
          "descriptive content to the specified language when "
          "delivering such events." )]
   string Locale;

      [Description ( 
          "This block acts as a hint to indicate how the delivered "
          "events should be encoded. The two standard tokens "
          "defined for this purpose are \"UTF-8\" or \"UTF-16\", "
          "although other encoding formats may be specified if "
          "necessary." )]
   string ContentEncoding;

      [Description ( 
          "Method by which the service is to deliver events to the "
          "client. Values are as follows. Push (2): the event is "
          "sent to the destination address; depending on the "
          "protocol, delivery may not be guaranteed. PushWithAck "
          "(3): the service sends the event and waits for a "
          "specific acknowledgment message from the subscriber. "
          "Events (4): the service collects events into batches and "
          "sends the batches to the subscriber. Pull (5): the "
          "service collects the events into batches and the "
          "subscriber pulls each batch from the service using "
          "wxf:Pull." ), 
       ValueMap { "2", "3", "4", "5", "..", "32787.." }, 
       Values { "Push", "PushWithAck", "Events", "Pull", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 DeliveryMode;

      [Description ( 
          "Specifies how often heartbeat events are added to the "
          "event stream at the specified interval." ), 
       Units ( "Seconds" )]
   uint64 Heartbeat;

      [Description ( 
          "A property element that instructs the service to send a "
          "bookmark with each event. Bookmarks apply to all "
          "delivery modes. The bookmark is a token which represents "
          "an abstract pointer in the event stream, but whether it "
          "points to the last delivered event or the last event "
          "plus one (the upcoming event) makes no difference since "
          "the token is supplied to the same implementation during "
          "a subsequent wse:Subscribe operation. The service may "
          "thus attach any service-specific meaning and structure "
          "to the bookmark with no change to the client." )]
   boolean SendBookmark;

      [Description ( 
          "This element may contain a duration that indicates the "
          "maximum amount of time the service should allow to "
          "elapse while batching EVENT bodies. That is, this time "
          "may not be exceeded between the encoding of the first "
          "event in the batch and the dispatching of the batch for "
          "delivery." ), 
       Units ( "Seconds" )]
   uint64 MaxTime;

      [Description ( 
          "A URI identifying the WS-Management security profile to "
          "be used by the service (acting as publisher) when "
          "authenticating to the event sink (consumer) at event "
          "delivery time." )]
   string DeliveryAuth;

      [Description ( 
          "Specifies the treatment of Indication subclasses, "
          "whether subclasses are to be included and with what set "
          "of properties. Valid values are: None, "
          "IncludeSubclassProperties, and "
          "ExcludeSubclassProperties. Using None, only instances of "
          "the parent class are included in the output (event "
          "stream). For other modes, subclass instances are "
          "included with the sets of properties stated." ), 
       ValueMap { "1", "2", "3", ".." }, 
       Values { "None", "IncludeSubclassProperties", 
          "ExcludeSubclassProperties", "DMTF Reserved" }]
   uint16 PolyMorphismMode;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Indication, Abstract, Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "An abstract superclass for specialized Indication classes, "
       "addressing specific changes and alerts published by providers "
       "and instrumentation. Subclasses include AlertIndication (with "
       "properties such as PerceivedSeverity and ProbableCause), and "
       "SNMPTrapIndication (which recasts Traps as CIM indications)." )]
class CIM_ProcessIndication : CIM_Indication {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "A concrete class for mapping an SNMP Trap to CIM based on the "
       "IETF RFC 1157. The usefulness of this class is to describe "
       "common trap semantics. But, a complete understanding of any "
       "trap data received relies on the Indicaton recipient having "
       "access to the sender\'s MIB. Understanding can be improved by "
       "mapping the SNMP domain to CIM, and using CIM LifeCycle and "
       "standard subclasses of CIM_ProcessIndication." )]
class CIM_SNMPTrapIndication : CIM_ProcessIndication {

      [Description ( "Type of object generating the trap." ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.enterprise" }]
   string Enterprise;

      [Description ( "Address of the object generating the trap." ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.agent-addr" }]
   string AgentAddress;

      [Description ( 
          "An enumerated value that describes the generic trap "
          "type: \n"
          "- The coldStart(0) trap signifies that the sending "
          "protocol entity is reinitializing itself such that the "
          "agent\'s configuration or the protocol entity "
          "implementation may be altered. \n"
          "- The warmStart(1) trap signifies that the sending "
          "protocol entity is reinitializing itself such that "
          "neither the agent configuration nor the protocol entity "
          "implementation is altered. \n"
          "- The linkDown(2) trap signifies that the sending "
          "protocol recognizes a failure in one of the "
          "communication links represented in the agent\'s "
          "configuration. The Trap-PDU of type linkDown contains as "
          "the first element of its variable-bindings the name and "
          "value of the ifIndex instance for the affected "
          "interface. \n"
          "- The linkUp(3) trap signifies that the sending protocol "
          "entity recognizes that one of the communication links "
          "represented in the agent\'s configuration has come up. "
          "The Trap-PDU of type linkUp contains as the first "
          "element of its variable-bindings, the name and value of "
          "the ifIndex instance for the affected interface. \n"
          "- An authenticationFailure(4) trap signifies that the "
          "sending protocol entity is the adressee of a protocol "
          "message that was not properly authenticated. While "
          "implementations of SNMP must be capable of generating "
          "this trap, they must also be capable of suppressing the "
          "emission of such traps via an implementation- specific "
          "mechanism. \n"
          "- An egpNeighborLoss(5) trap signifies that an EGP "
          "neighbor for whom the sending protocol entity was an EGP "
          "peer has been marked as down and the peer relationship "
          "no longer pertains. The Trap-PDU of type egpNeighborLoss "
          "contains as the first element of its variable-bindings, "
          "the name and value of the egpNeighAddr instance for the "
          "affected neighbor. \n"
          "- An enterpriseSpecific(6) trap signifies that the "
          "sending protocol entity recognizes that some "
          "enterprise-specific event has occurred. The "
          "specific-trap field identifies the particular trap which "
          "occurred." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Cold Start", "Warm Start", "Link Down", "Link Up", 
          "Authentication Failure", "EGP Neighbor Loss", 
          "Enterprise Specific" }, 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.generic-trap" }]
   uint16 GenericTrap;

      [Description ( "Specific trap code." ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.specific-trap" }]
   uint32 SpecificTrap;

      [Description ( 
          "Time elapsed between the last (re)intialization of the "
          "managed entity and the generation of the trap." ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.time-stamp" }]
   datetime TimeStamp;

      [Description ( 
          "Object naming information (an OID) from the \'variable "
          "binding\' portion of the Trap. This array is correlated "
          "with the VarBindSyntaxes and VarBindValues arrays. Each "
          "entry is related to the entries in the other arrays, "
          "that are located at the same index. In this way, the "
          "variable binding\'s name/syntax/value tuple can be "
          "constructed." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.variable-bindings" }, 
       ModelCorrespondence { 
          "CIM_SNMPTrapIndication.VarBindSyntaxes", 
          "CIM_SNMPTrapIndication.VarBindValues" }]
   string VarBindNames[];

      [Description ( 
          "Object syntax information (defined as an enumerated "
          "value) from the \'variable binding\' portion of the "
          "Trap. This array is correlated with the VarBindNames and "
          "VarBindValues arrays. Each entry is related to the "
          "entries in the other arrays, that are located at the "
          "same index. In this way, the variable binding\'s "
          "name/syntax/value tuple can be constructed." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Integer", "OctetString", "ObjectIdentifier", 
          "NetworkAddress", "Counter", "Gauge", "TimeTicks", "Opaque" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.variable-bindings" }, 
       ModelCorrespondence { "CIM_SNMPTrapIndication.VarBindNames", 
          "CIM_SNMPTrapIndication.VarBindValues" }]
   uint16 VarBindSyntaxes[];

      [Description ( 
          "An OctetString representing object value information "
          "from the \'variable binding\' portion of the Trap. This "
          "array is correlated with the VarBindNames and "
          "VarBindSyntaxes arrays. Each entry is related to the "
          "entries in the other arrays, that are located at the "
          "same index. In this way, the variable binding\'s "
          "name/syntax/value tuple can be constructed." ), 
       OctetString, ArrayType ( "Indexed" ), 
       MappingStrings { "PDU.IETF|RFC1157-TRAP-PDU.variable-bindings" }, 
       ModelCorrespondence { "CIM_SNMPTrapIndication.VarBindNames", 
          "CIM_SNMPTrapIndication.VarBindSyntaxes" }]
   string VarBindValues[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CIM_CIMOMStatisticalData provides statistical data about the "
       "performance of the CIM Object Manager. Each object of this "
       "class provides elapsed time and size data for a particular "
       "type of CIM operation. All operations of that type, regardless "
       "of the CIM operations protocol being used, are accumulated in "
       "one object and covers the CIM operations issued by all clients "
       "of the Object Manager scoping the instance. Batched CIM "
       "operations are accumulated into a separate operation type for "
       "\"Batched\". The counters in this class SHOULD be implemented "
       "such that they always increment and naturally wrap around when "
       "their numerical limit is exceeded. A client that calculates "
       "the difference of two snapshots of a counter at the beginning "
       "and end of a measurement interval should get the correct "
       "result, even if there was a wrap-around in between obtaining "
       "the two snapshots. (Two or more wrap arounds will result in "
       "wrong data being calculated.) The gathering of the data can be "
       "controlled through the property, "
       "CIM_ObjectManager.GatherStatisticalData. The time interval to "
       "which the statistical data applies, ends at the current time "
       "and therefore includes the most current CIM operations. The "
       "interval starts when the statistical data gathering was last "
       "turned on for the Object Manager." )]
class CIM_CIMOMStatisticalData : CIM_StatisticalData {

      [Override ( "InstanceID" ), 
       Description ( 
          "The InstanceID property opaquely identifies a unique "
          "instance of CIMOMStatisticalData and MUST be unique "
          "within a namespace. In order to ensure uniqueness, the "
          "value of InstanceID MUST be constructed in the following "
          "manner: \n"
          "CIM<ID> \n"
          "The <ID> MUST include a CIM Object Manager specified "
          "unique identifier." )]
   string InstanceID;

      [Required, Description ( 
          "The OperationType property identifies the type of CIM "
          "operation for which data is reported in this instance. "
          "Batched CIM operations (consisting of multiple simple "
          "CIM operations) are reported against the \"Batched\" "
          "type only." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26" }, 
       Values { "Unknown", "Other", "Batched", "GetClass", 
          "GetInstance", "DeleteClass", "DeleteInstance", 
          "CreateClass", "CreateInstance", "ModifyClass", 
          // 10              
          "ModifyInstance", 
          "EnumerateClasses", "EnumerateClassNames", 
          "EnumerateInstances", "EnumerateInstanceNames", 
          "ExecQuery", "Associators", "AssociatorNames", 
          "References", "ReferenceNames", 
          // 20              
          "GetProperty", 
          "SetProperty", "GetQualifier", "SetQualifier", 
          "DeleteQualifier", "EnumerateQualifiers", 
          "IndicationDelivery" }, 
       ModelCorrespondence { 
          "CIM_CIMOMStatisticalData.OtherOperationType" }]
   uint16 OperationType;

      [Description ( 
          "The OtherOperationType property identifies the operation "
          "if the OperationType property has a value of 1 "
          "(\"Other\"). For all other values of OperationType, the "
          "property is NULL." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_CIMOMStatisticalData.OperationType" }]
   string OtherOperationType;

      [Required, Description ( 
          "The NumberOfOperations property contains the number of "
          "CIM operations of the specified type. This property can "
          "be used to calculate average values per CIM operation." ), 
       Counter]
   uint64 NumberOfOperations;

      [Required, Description ( 
          "The CimomElapsedTime property contains the elapsed time "
          "spent in the CIM Object Manager for this operation type, "
          "not counting the elapsed time spent in providers and the "
          "underlying instrumentation. The measurement points for "
          "this property SHOULD be at the transport layer interface "
          "on the network side, and at the provider interface on "
          "the instrumentation side of the CIM Object Manager." )]
   datetime CimomElapsedTime;

      [Required, Description ( 
          "The ProviderElapsedTime property contains the elapsed "
          "time spent in all providers involved with this operation "
          "type, including the underlying instrumentation. The "
          "measurement point for this property SHOULD be from the "
          "provider interface of the CIM Object Manager." )]
   datetime ProviderElapsedTime;

      [Description ( 
          "The RequestSize property contains the size of the "
          "operation requests sent to the CIM Object Manager. Any "
          "overhead of protocols above the transport protocol "
          "SHOULD be included in the count. For example, for the "
          "HTTP protocol, the size would include the size of the "
          "HTTP payload and the size of the HTTP headers." ), 
       Units ( "Bytes" ), 
       Counter, PUnit ( "byte" )]
   uint64 RequestSize;

      [Description ( 
          "The ResponseSize property contains the size of the "
          "operation responses sent back from the CIM Object "
          "Manager. Any overhead of protocols above the transport "
          "protocol SHOULD be included in the count. For example, "
          "for the HTTP protocol, the size would include the size "
          "of the HTTP payload and the size of the HTTP headers." ), 
       Units ( "Bytes" ), 
       Counter, PUnit ( "byte" )]
   uint64 ResponseSize;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Indication, Version ( "2.22.1" ), 
    Exception, UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CIM_Error is a specialized class that contains information "
       "about the severity, cause, recommended actions and other data "
       "related to the failure of a CIM Operation. Instances of this "
       "type MAY be included as part of the response to a CIM "
       "Operation." )]
class CIM_Error {

      [Description ( 
          "Primary classification of the error. The following "
          "values are defined: \n"
          "2 - Communications Error. Errors of this type are "
          "principally associated with the procedures and/or "
          "processes required to convey information from one point "
          "to another. \n"
          "3 - Quality of Service Error. Errors of this type are "
          "principally associated with failures that result in "
          "reduced functionality or performance. \n"
          "4 - Software Error. Error of this type are principally "
          "associated with a software or processing fault. \n"
          "5 - Hardware Error. Errors of this type are principally "
          "associated with an equipment or hardware failure. \n"
          "6 - Environmental Error. Errors of this type are "
          "principally associated with a failure condition relating "
          "the to facility, or other environmental considerations. \n"
          "7 - Security Error. Errors of this type are associated "
          "with security violations, detection of viruses, and "
          "similar issues. \n"
          "8 - Oversubscription Error. Errors of this type are "
          "principally associated with the failure to allocate "
          "sufficient resources to complete the operation. \n"
          "9 - Unavailable Resource Error. Errors of this type are "
          "principally associated with the failure to access a "
          "required resource. \n"
          "10 -Unsupported Operation Error. Errors of this type are "
          "principally associated with requests that are not "
          "supported." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", ".." }, 
       Values { "Unknown", "Other", "Communications Error", 
          "Quality of Service Error", "Software Error", 
          "Hardware Error", "Environmental Error", "Security Error", 
          "Oversubscription Error", "Unavailable Resource Error", 
          "Unsupported Operation Error", "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_Error.OtherErrorType" }]
   uint16 ErrorType;

      [Description ( 
          "A free-form string describing the ErrorType when 1, "
          "\"Other\", is specified as the ErrorType." ), 
       ModelCorrespondence { "CIM_Error.ErrorType" }]
   string OtherErrorType;

      [Description ( 
          "A string that uniquely identifies the entity that owns "
          "the definition of the format of the Message described in "
          "this instance. OwningEntity MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity or standards body defining the "
          "format." )]
   string OwningEntity;

      [Required, Description ( 
          "An opaque string that uniquely identifies, within the "
          "scope of the OwningEntity, the format of the Message." ), 
       ModelCorrespondence { "CIM_Error.Message", 
          "CIM_Error.MessageArguments" }]
   string MessageID;

      [Description ( 
          "The formatted message. This message is constructed by "
          "combining some or all of the dynamic elements specified "
          "in the MessageArguments property with the static "
          "elements uniquely identified by the MessageID in a "
          "message registry or other catalog associated with the "
          "OwningEntity." ), 
       ModelCorrespondence { "CIM_Error.MessageID", 
          "CIM_Error.MessageArguments" }]
   string Message;

      [Description ( 
          "An array containing the dynamic content of the message." ), 
       ModelCorrespondence { "CIM_Error.MessageID", 
          "CIM_Error.Message" }]
   string MessageArguments[];

      [Description ( 
          "An enumerated value that describes the severity of the "
          "Indication from the notifier\'s point of view: \n"
          "0 - the Perceived Severity of the indication is unknown "
          "or indeterminate. \n"
          "1 - Other, by CIM convention, is used to indicate that "
          "the Severity\'s value can be found in the OtherSeverity "
          "property. \n"
          "2 - Information should be used when providing an "
          "informative response. \n"
          "3 - Degraded/Warning should be used when its appropriate "
          "to let the user decide if action is needed. \n"
          "4 - Minor should be used to indicate action is needed, "
          "but the situation is not serious at this time. \n"
          "5 - Major should be used to indicate action is needed "
          "NOW. \n"
          "6 - Critical should be used to indicate action is needed "
          "NOW and the scope is broad (perhaps an imminent outage "
          "to a critical resource will result). \n"
          "7 - Fatal/NonRecoverable should be used to indicate an "
          "error occurred, but it\'s too late to take remedial "
          "action. \n"
          "2 and 0 - Information and Unknown (respectively) follow "
          "common usage. Literally, the Error is purely "
          "informational or its severity is simply unknown." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", ".." }, 
       Values { "Unknown", "Other", "Information", 
          "Degraded/Warning", "Minor", "Major", "Critical", 
          "Fatal/NonRecoverable", "DMTF Reserved" }, 
       MappingStrings { "Recommendation.ITU|X733.Perceived severity" }]
   uint16 PerceivedSeverity;

      [Description ( 
          "An enumerated value that describes the probable cause of "
          "the error." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110", "111", "112", "113", "114", "115", 
          "116", "117", "118", "119", "120", "121", "122", "123", 
          "124", "125", "126", "127", "128", "129", "130", ".." }, 
       Values { "Unknown", "Other", "Adapter/Card Error", 
          "Application Subsystem Failure", "Bandwidth Reduced", 
          "Connection Establishment Error", 
          "Communications Protocol Error", 
          "Communications Subsystem Failure", 
          "Configuration/Customization Error", "Congestion", 
          "Corrupt Data", "CPU Cycles Limit Exceeded", 
          "Dataset/Modem Error", "Degraded Signal", 
          "DTE-DCE Interface Error", "Enclosure Door Open", 
          "Equipment Malfunction", "Excessive Vibration", 
          "File Format Error", "Fire Detected", "Flood Detected", 
          "Framing Error", "HVAC Problem", "Humidity Unacceptable", 
          "I/O Device Error", "Input Device Error", "LAN Error", 
          "Non-Toxic Leak Detected", 
          "Local Node Transmission Error", "Loss of Frame", 
          "Loss of Signal", 
          //31 
          "Material Supply Exhausted", 
          "Multiplexer Problem", "Out of Memory", 
          "Output Device Error", "Performance Degraded", 
          "Power Problem", "Pressure Unacceptable", 
          "Processor Problem (Internal Machine Error)", 
          "Pump Failure", "Queue Size Exceeded", "Receive Failure", 
          "Receiver Failure", "Remote Node Transmission Error", 
          "Resource at or Nearing Capacity", 
          "Response Time Excessive", 
          "Retransmission Rate Excessive", "Software Error", 
          "Software Program Abnormally Terminated", 
          "Software Program Error (Incorrect Results)", 
          "Storage Capacity Problem", "Temperature Unacceptable", 
          "Threshold Crossed", "Timing Problem", 
          "Toxic Leak Detected", "Transmit Failure", 
          "Transmitter Failure", "Underlying Resource Unavailable", 
          "Version Mismatch", "Previous Alert Cleared", 
          //60 
          "Login Attempts Failed", 
          "Software Virus Detected", "Hardware Security Breached", 
          "Denial of Service Detected", 
          "Security Credential Mismatch", "Unauthorized Access", 
          "Alarm Received", "Loss of Pointer", "Payload Mismatch", 
          "Transmission Error", "Excessive Error Rate", 
          "Trace Problem", "Element Unavailable", "Element Missing", 
          "Loss of Multi Frame", "Broadcast Channel Failure", 
          "Invalid Message Received", "Routing Failure", 
          "Backplane Failure", "Identifier Duplication", 
          "Protection Path Failure", "Sync Loss or Mismatch", 
          "Terminal Problem", "Real Time Clock Failure", 
          "Antenna Failure", "Battery Charging Failure", 
          "Disk Failure", "Frequency Hopping Failure", 
          "Loss of Redundancy", "Power Supply Failure", 
          "Signal Quality Problem", 
          //91 
          "Battery Discharging", "Battery Failure", 
          "Commercial Power Problem", "Fan Failure", 
          "Engine Failure", "Sensor Failure", "Fuse Failure", 
          "Generator Failure", "Low Battery", "Low Fuel", 
          "Low Water", "Explosive Gas", "High Winds", "Ice Buildup", 
          "Smoke", "Memory Mismatch", "Out of CPU Cycles", 
          "Software Environment Problem", 
          "Software Download Failure", "Element Reinitialized", 
          "Timeout", "Logging Problems", "Leak Detected", 
          "Protection Mechanism Failure", 
          //115 
          "Protecting Resource Failure", 
          "Database Inconsistency", "Authentication Failure", 
          "Breach of Confidentiality", "Cable Tamper", 
          "Delayed Information", "Duplicate Information", 
          "Information Missing", "Information Modification", 
          "Information Out of Sequence", "Key Expired", 
          "Non-Repudiation Failure", "Out of Hours Activity", 
          "Out of Service", "Procedural Error", 
          "Unexpected Information", "DMTF Reserved" }, 
       MappingStrings { "Recommendation.ITU|X733.Probable cause", 
          "Recommendation.ITU|M3100.probableCause", 
          "ITU-IANA-ALARM-TC" }, 
       ModelCorrespondence { "CIM_Error.ProbableCauseDescription" }]
   uint16 ProbableCause;

      [Description ( 
          "A free-form string describing the probable cause of the error."
           ), 
       ModelCorrespondence { "CIM_Error.ProbableCause" }]
   string ProbableCauseDescription;

      [Description ( 
          "A free-form string describing recommended actions to "
          "take to resolve the error." )]
   string RecommendedActions[];

      [Description ( 
          "The identifying information of the entity (i.e., the "
          "instance) generating the error. If this entity is "
          "modeled in the CIM Schema, this property contains the "
          "path of the instance encoded as a string parameter. If "
          "not modeled, the property contains some identifying "
          "string that names the entity that generated the error. "
          "The path or identifying string is formatted per the "
          "ErrorSourceFormat property." ), 
       ModelCorrespondence { "CIM_Error.ErrorSourceFormat" }]
   string ErrorSource;

      [Description ( 
          "The format of the ErrorSource property is interpretable "
          "based on the value of this property. Values are defined "
          "as: \n"
          "0 - Unknown. The format is unknown or not meaningfully "
          "interpretable by a CIM client application. \n"
          "1 - Other. The format is defined by the value of the "
          "OtherErrorSourceFormat property.2 - CIMObjectPath. A CIM "
          "Object Path as defined in the CIM Infrastructure "
          "specification. Note: CIM 2.5 and earlier used the term "
          "object names." ), 
       ValueMap { "0", "1", "2", ".." }, 
       Values { "Unknown", "Other", "CIMObjectPath", "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_Error.ErrorSource", 
          "CIM_Error.OtherErrorSourceFormat" }]
   uint16 ErrorSourceFormat = 0;

      [Description ( 
          "A string defining \"Other\" values for "
          "ErrorSourceFormat. This value MUST be set to a non NULL "
          "value when ErrorSourceFormat is set to a value of 1 "
          "(\"Other\"). For all other values of ErrorSourceFormat, "
          "the value of this string must be set to NULL." ), 
       ModelCorrespondence { "CIM_Error.ErrorSourceFormat" }]
   string OtherErrorSourceFormat;

      [Description ( 
          "The CIM status code that characterizes this instance. \n"
          "This property defines the status codes that MAY be "
          "return by a conforming CIM Server or Listener. Note that "
          "not all status codes are valid for each operation. The "
          "specification for each operation SHOULD define the "
          "status codes that may be returned by that operation. \n"
          "The following values for CIM status code are defined: \n"
          "1 - CIM_ERR_FAILED. A general error occurred that is not "
          "covered by a more specific error code. \n"
          "2 - CIM_ERR_ACCESS_DENIED. Access to a CIM resource was "
          "not available to the client. \n"
          "3 - CIM_ERR_INVALID_NAMESPACE. The target namespace does "
          "not exist. \n"
          "4 - CIM_ERR_INVALID_PARAMETER. One or more parameter "
          "values passed to the method were invalid. \n"
          "5 - CIM_ERR_INVALID_CLASS. The specified Class does not "
          "exist. \n"
          "6 - CIM_ERR_NOT_FOUND. The requested object could not be "
          "found. \n"
          "7 - CIM_ERR_NOT_SUPPORTED. The requested operation is "
          "not supported. \n"
          "8 - CIM_ERR_CLASS_HAS_CHILDREN. Operation cannot be "
          "carried out on this class since it has instances. \n"
          "9 - CIM_ERR_CLASS_HAS_INSTANCES. Operation cannot be "
          "carried out on this class since it has instances. \n"
          "10 - CIM_ERR_INVALID_SUPERCLASS. Operation cannot be "
          "carried out since the specified superclass does not "
          "exist. \n"
          "11 - CIM_ERR_ALREADY_EXISTS. Operation cannot be carried "
          "out because an object already exists. \n"
          "12 - CIM_ERR_NO_SUCH_PROPERTY. The specified Property "
          "does not exist. \n"
          "13 - CIM_ERR_TYPE_MISMATCH. The value supplied is "
          "incompatible with the type. \n"
          "14 - CIM_ERR_QUERY_LANGUAGE_NOT_SUPPORTED. The query "
          "language is not recognized or supported. \n"
          "15 - CIM_ERR_INVALID_QUERY. The query is not valid for "
          "the specified query language. \n"
          "16 - CIM_ERR_METHOD_NOT_AVAILABLE. The extrinsic Method "
          "could not be executed. \n"
          "17 - CIM_ERR_METHOD_NOT_FOUND. The specified extrinsic "
          "Method does not exist. \n"
          "18 - CIM_ERR_UNEXPECTED_RESPONSE. The returned response "
          "to the asynchronous operation was not expected. \n"
          "19 - CIM_ERR_INVALID_RESPONSE_DESTINATION. The specified "
          "destination for the asynchronous response is not valid. \n"
          "20 - CIM_ERR_NAMESPACE_NOT_EMPTY. The specified "
          "Namespace is not empty.\n"
          "21 - CIM_ERR_INVALID_ENUMERATION_CONTEXT. The "
          "enumeration context supplied is not valid.\n"
          "22 - CIM_ERR_INVALID_OPERATION_TIMEOUT. The specified "
          "Namespace is not empty.\n"
          "23 - CIM_ERR_PULL_HAS_BEEN_ABANDONED. The specified "
          "Namespace is not empty.\n"
          "24 - CIM_ERR_PULL_CANNOT_BE_ABANDONED. The attempt to "
          "abandon a pull operation has failed.\n"
          "25 - CIM_ERR_FILTERED_ENUMERATION_NOT_SUPPORTED. "
          "Filtered Enumeratrions are not supported.\n"
          "26 - CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED. "
          "Continue on error is not supported.\n"
          "27 - CIM_ERR_SERVER_LIMITS_EXCEEDED. The WBEM Server "
          "limits have been exceeded (e.g. memory, connections, ...).\n"
          "28 - CIM_ERR_SERVER_IS_SHUTTING_DOWN. The WBEM Server is "
          "shutting down.\n"
          "29 - CIM_ERR_QUERY_FEATURE_NOT_SUPPORTED. The specified "
          "Query Feature is not supported." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", ".." }, 
       Values { "CIM_ERR_FAILED", "CIM_ERR_ACCESS_DENIED", 
          "CIM_ERR_INVALID_NAMESPACE", "CIM_ERR_INVALID_PARAMETER", 
          "CIM_ERR_INVALID_CLASS", "CIM_ERR_NOT_FOUND", 
          "CIM_ERR_NOT_SUPPORTED", "CIM_ERR_CLASS_HAS_CHILDREN", 
          "CIM_ERR_CLASS_HAS_INSTANCES", 
          "CIM_ERR_INVALID_SUPERCLASS", "CIM_ERR_ALREADY_EXISTS", 
          "CIM_ERR_NO_SUCH_PROPERTY", "CIM_ERR_TYPE_MISMATCH", 
          "CIM_ERR_QUERY_LANGUAGE_NOT_SUPPORTED", 
          "CIM_ERR_INVALID_QUERY", "CIM_ERR_METHOD_NOT_AVAILABLE", 
          "CIM_ERR_METHOD_NOT_FOUND", "CIM_ERR_UNEXPECTED_RESPONSE", 
          "CIM_ERR_INVALID_RESPONSE_DESTINATION", 
          "CIM_ERR_NAMESPACE_NOT_EMPTY", 
          "CIM_ERR_INVALID_ENUMERATION_CONTEXT", 
          "CIM_ERR_INVALID_OPERATION_TIMEOUT", 
          "CIM_ERR_PULL_HAS_BEEN_ABANDONED", 
          "CIM_ERR_PULL_CANNOT_BE_ABANDONED", 
          "CIM_ERR_FILTERED_ENUMERATION_NOT_SUPPORTED", 
          "CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED", 
          "CIM_ERR_SERVER_LIMITS_EXCEEDED", 
          "CIM_ERR_SERVER_IS_SHUTTING_DOWN", 
          "CIM_ERR_QUERY_FEATURE_NOT_SUPPORTED", "DMTF Reserved" }, 
       MappingStrings { "DSP0201.DMTF|ERROR.CODE|2.3", 
          "DSP0200.DMTF|CIMError|1.3" }, 
       ModelCorrespondence { "CIM_Error.CIMStatusCodeDescription" }]
   uint32 CIMStatusCode;

      [Description ( 
          "A free-form string containing a human-readable "
          "description of CIMStatusCode. This description MAY "
          "extend, but MUST be consistent with, the definition of "
          "CIMStatusCode." ), 
       MappingStrings { "DSP0201.DMTF|ERROR.DESCRIPTION|2.3", 
          "DSP0200.DMTF|CIMError|1.3" }, 
       ModelCorrespondence { "CIM_Error.CIMStatusCode" }]
   string CIMStatusCodeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "Namespace provides a domain (in other words, a container), in "
       "which the instances [of a class] are guaranteed to be unique "
       "per the KEY qualifier definitions. It is named relative to the "
       "CIM_ObjectManager implementation that provides such a domain." )]
class CIM_Namespace : CIM_ManagedElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ObjectManager.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ObjectManager.SystemName" )]
   string SystemName;

      [Key, Description ( 
          "The scoping ObjectManager\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ObjectManager.CreationClassName" )]
   string ObjectManagerCreationClassName;

      [Key, Description ( "The scoping ObjectManager\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ObjectManager.Name" )]
   string ObjectManagerName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A string to uniquely identify the Namespace within the "
          "ObjectManager." ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_Namespace.ClassType" }, 
       Required, Write, Description ( 
          "Enumeration indicating the organization/schema of the "
          "Namespace\'s objects. For example, they may be instances "
          "of classes of a specific CIM version." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "200", "201", "202" }, 
       Values { "Unknown", "Other", "CIM 1.0", "CIM 2.0", "CIM 2.1", 
          "CIM 2.2", "CIM 2.3", "CIM 2.4", "CIM 2.5", "CIM 2.6", 
          "CIM 2.7", "CIM 2.8", "DMI Recast", "SNMP Recast", 
          "CMIP Recast" }, 
       ModelCorrespondence { "CIM_Namespace.DescriptionOfClassInfo" }]
   uint16 ClassInfo;

      [Deprecated { "CIM_Namespace.DescriptionOfClassType" }, 
       Write, Description ( 
          "A string providing more detail (beyond the general "
          "classification in ClassInfo) for the object hierarchy of "
          "the Namespace." ), 
       ModelCorrespondence { "CIM_Namespace.ClassInfo" }]
   string DescriptionOfClassInfo;

      [Write, Description ( 
          "Enumeration indicating the schema of the Namespace\'s "
          "objects. For example, they may be instances of classes "
          "of a specific CIM version or a mapping from another "
          "standard, such as SNMP. If \'Other\' is selected, the "
          "DescriptionOfClassType property MUST be populated." ), 
       ValueMap { "0", "1", "2", "200", "201", "202" }, 
       Values { "Unknown", "Other", "CIM", "DMI Recast", 
          "SNMP Recast", "CMIP Recast" }, 
       ModelCorrespondence { "CIM_Namespace.DescriptionOfClassType", 
          "CIM_Namespace.ClassTypeVersion" }]
   uint16 ClassType;

      [Write, Description ( 
          "The version of the objects in this namespace. The string "
          "representing the version MUST be in the form: \n"
          "M + \".\" + N + \".\" + U \n"
          "Where: \n"
          "M - The major version (in numeric form) \n"
          "N - The minor version (in numeric form) \n"
          "U - The update (e.g. errata, patch, ..., in numeric "
          "form)" ), 
       ModelCorrespondence { "CIM_Namespace.DescriptionOfClassType", 
          "CIM_Namespace.ClassType" }]
   string ClassTypeVersion;

      [Write, Description ( 
          "A string providing more detail (beyond the general "
          "classification in ClassInfo) for the object hierarchy of "
          "the Namespace." ), 
       ModelCorrespondence { "CIM_Namespace.ClassType", 
          "CIM_Namespace.ClassTypeVersion" }]
   string DescriptionOfClassType;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A RegisteredProfile describes a set of CIM Schema classes with "
       "required properties and/or methods, necessary to manage a "
       "real-world entity or to support a usage scenario, in an "
       "interoperable fashion. RegisteredProfiles can be defined by "
       "the DMTF or other standards organizations. Note that this "
       "class should not be confused with CIM_Profile, which collects "
       "SettingData instances, to be applied as a \'configuration "
       "profile\' for an element. \n"
       "A RegisteredProfile is a named \'standard\' for CIM-based "
       "management of a particular System, subsystem, Service or other "
       "entity, for a specified set of uses. It is a complete, "
       "standalone definition, as opposed to the subclass "
       "RegisteredSubProfile, which requires a scoping profile for "
       "context. \n"
       "The uses for a RegisteredProfile or SubProfile MUST be "
       "specified in the document that defines the profile. Examples "
       "of Profiles are to manage various aspects of an Operating "
       "System, Storage Array, or Database. The name of the profile is "
       "defined and scoped by its authoring organization." )]
class CIM_RegisteredProfile : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness, "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the organizational entity and "
          "SHOULD not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Description ( 
          "The organization that defines this profile." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", ".." }, 
       Values { "Other", "DMTF", "CompTIA", 
          "Consortium for Service Innovation", "FAST", "GGF", 
          "INTAP", "itSMF", "NAC", 
          //10
          "Northwest Energy Efficiency Alliance", 
          "SNIA", "TM Forum", "The Open Group", "ANSI", "IEEE", 
          "IETF", "INCITS", "ISO", "W3C", //20
          "OGF", 
          "The Green Grid", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_RegisteredProfile.OtherRegisteredOrganization" }]
   uint16 RegisteredOrganization;

      [Description ( 
          "A free-form string providing a description of the "
          "organization when 1, \"Other\", is specified for the "
          "RegisteredOrganization." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_RegisteredProfile.RegisteredOrganization" }]
   string OtherRegisteredOrganization;

      [Required, Description ( 
          "The name of this registered profile. Since multiple "
          "versions can exist for the same RegisteredName, the "
          "combination of RegisteredName, RegisteredOrganization, "
          "and RegisteredVersion MUST uniquely identify the "
          "registered profile within the scope of the organization." ), 
       MaxLen ( 256 )]
   string RegisteredName;

      [Required, Description ( 
          "The version of this profile. The string representing the "
          "version MUST be in the form: \n"
          "M + \".\" + N + \".\" + U \n"
          "Where: \n"
          "M - The major version (in numeric form) describing the "
          "profile\'s creation or last modification. \n"
          "N - The minor version (in numeric form) describing the "
          "profile\'s creation or last modification. \n"
          "U - The update (e.g. errata, patch, ..., in numeric "
          "form) describing the profile\'s creation or last "
          "modification." )]
   string RegisteredVersion;

      [Required, Description ( 
          "This property signifies the advertisement for the "
          "profile information. It is used by the advertising "
          "services of the WBEM infrastructure to determine what "
          "should be advertised, via what mechanisms. The property "
          "is an array so that the profile MAY be advertised using "
          "several mechanisms. Note: If this property is "
          "null/uninitialized, this is equivalent to specifying the "
          "value 2, \"Not Advertised\"." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Not Advertised", "SLP" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_RegisteredProfile.AdvertiseTypeDescriptions" }]
   uint16 AdvertiseTypes[];

      [Description ( 
          "A free-form string providing additional information "
          "related to the AdvertiseType. A description MUST be "
          "provided when the AdvertiseType is 1, \"Other\". An "
          "entry in this array corresponds to the entry in the "
          "AdvertiseTypes array at the same index. It is not "
          "expected that additional descriptions are needed if the "
          "Type is set to \"Not Advertised\" or \"SLP\". However, "
          "as the SLP template expands, or as other advertisement "
          "mechanisms are defined, support for additional "
          "descriptions may be needed. This array is defined to "
          "support this." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_RegisteredProfile.AdvertiseTypes" }]
   string AdvertiseTypeDescriptions[];

      [Description ( 
          "Profiles may gather a set of provisions together that "
          "are implemented, (or not implemented), as a whole by a "
          "conformant implementation. Such sets are known as "
          "profile features.\n"
          "If a profile does not define features, then this "
          "property shall be null. \n"
          "If not null, an implementation shall put the profile "
          "defined feature name of each implemented feature in a "
          "separate entry of this array." )]
   string ImplementedFeatures[];


      [Description ( 
          "This operation is used to close a session to enumerate "
          "central and scoping class instances." )]
   uint32 CloseConformantInstances(
         [IN, Description ( 
             "The EnumerationContext parameter is the "
             "enumeration context value representing the "
             "enumeration session to be used." )]
      string EnumerationContext);

      [Description ( 
          "This operation is used to establish and open a session "
          "to enumerate central and scoping class instances of this "
          "registered profile instance and optionally to retrieve a "
          "first set of such instances." )]
   uint32 OpenConformantInstances(
         [IN, Description ( 
             "NULL, or a class name that acts as a filter to "
             "select only those central or scoping instances "
             "that a kind of the specified class. This is useful "
             "to select particular subclasses or to select a "
             "particular instances when more than one is defined "
             "for a profile." )]
      string ResultClass, 
         [IN, Description ( 
             "NULL, or unordered set of property names, acting "
             "as a restricting filter on the properties included "
             "in the returned instance. An empty list specifies "
             "to return no properties. The instance path shall "
             "always be returned." )]
      string IncludedPropertyList[], 
         [IN, Description ( 
             "The operation timeout is the minimum time the CIM "
             "Server shall maintain the open enumeration session "
             "after the last OpenConformantInstances or "
             "PullConformantInstances invocation, (unless the "
             "enumeration session was closed during that last "
             "invocation). If the operation timeout is exceeded, "
             "the enumeration session may be closed at any time, "
             "releasing any possibly allocated resources related "
             "to the enumeration session. \n"
             "An OperationTimeout of 0 means that there is no "
             "operation timeout, i.e. the enumeration session is "
             "never closed based on time.\n"
             "If OperationTimeout is NULL, the operation timeout "
             "is implementation dependent. \n"
             "All other values for OperationTimeout specify the "
             "operation timeout in seconds.\n"
             "The implementation may restrict the set of "
             "allowable values for OperationTimeout. This "
             "specifically includes the possibility to not allow "
             "0 (no timeout).\n"
             "If the specified value is not an allowable value, "
             "the method shall return failure with return code "
             "CIM_ERR_INVALID_OPERATION_TIMEOUT." )]
      uint32 OperationTimeout, 
         [IN, Description ( 
             "TRUE requests continuation on error. Continuation "
             "on error is the ability to resume an enumeration "
             "session successfully after an invocation of this "
             "method that returned an error. A conformant "
             "implementation may support continuation on error.\n"
             "If ContinueOnError is true and the method does not "
             "support continuation on error, it shall return "
             "failure with return code "
             "CIM_ERR_CONTINUATION_ON_ERROR_NOT_SUPPORTED \n"
             "If the implementation supports continuation on "
             "error, it shall support it as follows: If "
             "ContinueOnErroris true, the enumeration session "
             "shall remain open when this or a subsequent "
             "PullConformantInstances invocation returns "
             "failure, and any subsequent successful "
             "PullConformantInstances operations process the set "
             "of instances that would have remained if the "
             "failing invocation had been successful, subject to "
             "the consistency rules defined for pulled "
             "enumerations, see DSP0223.\n"
             "If ContinueOnError is false, the enumeration "
             "session shall be closed when this method returns "
             "failure." )]
      boolean ContinueOnError, 
         [IN, Description ( 
             "The MaxObjectCount input parameter defines the "
             "maximum number of elements that may be returned by "
             "this Pull operation. Any uint32 number is valid, "
             "including 0. The implementation may deliver any "
             "number of elements up to MaxObjectCount but shall "
             "not deliver more than MaxObjectCount.elements. The "
             "CIM Client may use a MaxObjectCount value of 0 as "
             "a means of restarting the OperationTimeout for the "
             "enumeration session, while it wishes to not "
             "retrieve any elements." )]
      uint32 MaxObjectCount, 
         [IN ( false ), OUT, Description ( 
             "The EnumerationContext parameter is the "
             "enumeration context value representing the "
             "enumeration session to be used.\n"
             "If the session is closed as a result of this "
             "invocation, the output EnumerationContext shall be "
             "NULL. Otherwise, the output EnumerationContext "
             "shall provide the information necessary for a "
             "subsequent PullConformantInstances call." )]
      string EnumerationContext, 
         [IN ( false ), OUT, Description ( 
             "The EndOfSequence output parameter indicates to "
             "the CIM Client whether the enumeration session is "
             "exhausted. If EndOfSequence is true upon "
             "successful completion of this invocation, no more "
             "elements are available and the implmeentation "
             "shall close the enumeration session, releasing any "
             "possibly allocated resources related to the "
             "enumeration session. If EndOfSequence is false, "
             "there may be additional elements available and "
             "implementation shall not close the enumeration "
             "session." )]
      boolean EndOfSequence, 
         [IN ( false ), OUT, Description ( 
             "On successful completion, an array corresponding "
             "to the InstanceWithPathList that indicates whether "
             "the entry is a scoping instance, a central "
             "instance, or both." ), 
          ValueMap { "2", "3", "4", ".." }, 
          Values { "Central Instance", "Scoping Instance", 
             "Central and Scoping Instance", "DMTF Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ProfileRegistration.OpenConformantInstances(InstanceWithPathList)" }]
      uint16 InstanceType[], 
         [IN ( false ), OUT, Description ( 
             "On successful completion, an correlated, but "
             "unordered set of the enumerated instances and "
             "their addresses, with a number of entries from 0, "
             "up to a maximum defined by MaxObjectCount, that "
             "meet the criteria defined in the Open operation "
             "that established this enumeration session. Note "
             "that returning no entries in the array does not "
             "imply that the enumeration session has been "
             "exhausted. Only the EndOfSequence output parameter "
             "indicates whether the enumeration session has been "
             "exhausted." ), 
          EmbeddedInstance ( "CIM_ManagedElement" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ProfileRegistration.OpenConformantInstances(InstanceType)" }]
      string InstanceWithPathList[]);

      [Description ( 
          "This operation is used to continue enumeration central "
          "class instances in the context of a session established "
          "by OpenConformantInstances." )]
   uint32 PullConformantInstances(
         [IN, Description ( 
             "The MaxObjectCount input parameter defines the "
             "maximum number of elements that may be returned by "
             "this method. Any uint32 number is valid, including "
             "0. The implementation may deliver any number of "
             "elements up to MaxObjectCount but shall not "
             "deliver more than MaxObjectCount elements. The CIM "
             "Client may use a MaxObjectCount value of 0 as a "
             "means of restarting the OperationTimeout for the "
             "enumeration session, while it wishes to not "
             "retrieve any elements." )]
      uint32 MaxObjectCount, 
         [IN, OUT, Description ( 
             "The EnumerationContext parameter is the "
             "enumeration context value representing the "
             "enumeration session to be used.\n"
             "On input, it shall be the EnumerationContext ouput "
             "value from the previous invocation of "
             "OpenConformantInstances or PullConformantInstances "
             "within an open enumeration session.If the session "
             "is closed as a result of this invocation, the "
             "output EnumerationContext shall be NULL. "
             "Otherwise, the output EnumerationContext shall "
             "provide the information necessary for a subsequent "
             "PullConformantInstances call." )]
      string EnumerationContext, 
         [IN ( false ), OUT, Description ( 
             "The EndOfSequence output parameter indicates to "
             "the CIM Client whether the enumeration session is "
             "exhausted. If EndOfSequence is true upon "
             "successful completion of this method, no more "
             "elements are available and the enumeration session "
             "shall be closed, releasing any possibly allocated "
             "resources related to the enumeration session. If "
             "EndOfSequence is false, there may be additional "
             "elements available and enumeration session shall "
             "be remain open unless there is an error in which "
             "case, ContinueOnError governs whether or not the "
             "session is closed or not." )]
      boolean EndOfSequence, 
         [IN ( false ), OUT, Description ( 
             "On successful completion, an array corresponding "
             "to the InstanceWithPathList that indicates whether "
             "the entry is a scoping instance, a central "
             "instance, or both." ), 
          ValueMap { "2", "3", "4", ".." }, 
          Values { "Central Instance", "Scoping Instance", 
             "Central and Scoping Instance", "DMTF Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ProfileRegistration.PullConformantInstances(InstanceWithPathList)" }]
      uint16 InstanceType[], 
         [IN ( false ), OUT, Description ( 
             "On successful completion, a correlated, but "
             "unordered set of the enumerated instances and "
             "their addresses, with a number of entries from 0, "
             "up to a maximum defined by MaxObjectCount, that "
             "meet the criteria defined in the "
             "OpenConformantInstances operation that established "
             "this enumeration session. Note that returning no "
             "entries in the array does not imply that the "
             "enumeration session has been exhausted. Only the "
             "EndOfSequence output parameter indicates whether "
             "the enumeration session has been exhausted." ), 
          EmbeddedInstance ( "CIM_ManagedElement" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ProfileRegistration.PullConformantInstances(InstanceType)" }]
      string InstanceWithPathList[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A RegisteredSubProfile subclasses RegisteredProfile to "
       "indicate that a scoping profile is required to provide "
       "context. The latter is specified by the mandatory association, "
       "SubProfileRequiresProfile." )]
class CIM_RegisteredSubProfile : CIM_RegisteredProfile {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A Namespace may represent data for one or many systems, that "
       "are local, remote (different than the system on which the "
       "ObjectManager is running) or aggregated. The System "
       "Identification class provides enough data to identify the "
       "system(s) represented in the Namespace. It is weak to the "
       "Namespace." )]
class CIM_SystemIdentification : CIM_ManagedElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Namespace.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Namespace.SystemName" )]
   string SystemName;

      [Key, Description ( 
          "The scoping ObjectManager\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Namespace.ObjectManagerCreationClassName" )]
   string ObjectManagerCreationClassName;

      [Key, Description ( "The scoping ObjectManager\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Namespace.ObjectManagerName" )]
   string ObjectManagerName;

      [Key, Description ( 
          "The scoping Namespace\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Namespace.CreationClassName" )]
   string NamespaceCreationClassName;

      [Key, Description ( "The scoping Namespace\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Namespace.Name" )]
   string NamespaceName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A string uniquely identifying the name of the system "
          "represented in the Namespace." ), 
       MaxLen ( 256 )]
   string Name;

      [Required, Write, Description ( 
          "Enumeration indicating the format of the system "
          "identification and/or addressing information." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "Short DNS Name", 
          "Fully qualified DNS Name", "Windows Domain Name", 
          "NetWare Server Name", "Unix Hostname", 
          "Globally Unique System Identifier", "IP Address", 
          "Modem Dialup String", "MAC Address", "IPMI Address" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SystemIdentification.IdentificationData", 
          "CIM_SystemIdentification.FormatDescriptions" }]
   uint16 IdentificationFormats[];

      [Write, Description ( 
          "Strings further describing the format of the system "
          "identification information." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SystemIdentification.IdentificationFormats", 
          "CIM_SystemIdentification.IdentificationData" }]
   string FormatDescriptions[];

      [Write, Description ( 
          "Strings containing the system identification "
          "information. The format is described by the "
          "corresponding array item in IdentificationFormats." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SystemIdentification.IdentificationFormats", 
          "CIM_SystemIdentification.FormatDescriptions" }]
   string IdentificationData[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "SystemInNamespace is an association that allows enumeration of "
       "the system(s) represented in a Namespace." )]
class CIM_SystemInNamespace {

      [Key, Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The Namespace containing management objects from one or "
          "more systems." )]
   CIM_Namespace REF ManagedNamespace;

      [Key, Weak, Description ( 
          "Identification information for systems in the Namespace." )]
   CIM_SystemIdentification REF Identification;

      [Required, Write, Description ( 
          "A list of enumerated values providing a high level "
          "description of the data contained and allowed in the "
          "Namespace. Additional clarification is provided in the "
          "DescriptionOfContainedData array." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Local System Data", 
          "Data Aggregated from Multiple Systems", "Proxied Data" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SystemInNamespace.DescriptionOfContainedData" }]
   uint16 ScopeOfContainedData[];

      [Write, Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for the data/objects contained in the "
          "Namespace, as described by the ContainedData array. "
          "Note, each entry of this array is related to the entry "
          "in the ContainedData array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SystemInNamespace.ScopeOfContainedData" }]
   string DescriptionOfContainedData[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "CIM_BaseMetricDefinition represents the definitional aspects "
       "of a metric, i.e., a definition template containing meta data "
       "about a new metric. Since CIM_BaseMetricDefinition does not "
       "capture metric instance information, it does not contain the "
       "value of the metric. The associated class CIM_BaseMetricValue "
       "holds the metric value and encapsulates its runtime behavior. "
       "The purpose of CIM_BaseMetricDefinition is to provide a "
       "convenient mechanism for introducing a new metric definition "
       "at runtime and capturing its instance values in a separate "
       "class. This mechanism is targeted specifically at CIM users "
       "who would like to enhance existing CIM schemas by introducing "
       "domain-specific metrics that are not captured in the existing "
       "CIM schemas. In addition, vendors of managed resources may "
       "make use of this mechanism if a small subset of a potentially "
       "large and heterogeneous amount of performance-related data "
       "needs to be exposed, based on the context in which the data is "
       "captured. Additional meta data for a metric can be provided by "
       "subclassing from CIM_BaseMetricDefinition. The "
       "CIM_BaseMetricDefinition should be associated with the "
       "CIM_ManagedElement(s) to which it applies." )]
class CIM_BaseMetricDefinition : CIM_ManagedElement {

      [Key, Description ( 
          "A string that uniquely identifies the metric definition. "
          "The use of OSF UUID/GUIDs is recommended." )]
   string Id;

      [Description ( 
          "The name of the metric. This name does not have to be "
          "unique, but should be descriptive and may contain "
          "blanks." )]
   string Name;

      [Description ( 
          "The data type of the metric. For example, \"boolean\" "
          "(value=1) or \"datetime\" (=3) may be specified. These "
          "types represent the datatypes defined for CIM." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14" }, 
       Values { "boolean", "char16", "datetime", "real32", "real64", 
          "sint16", "sint32", "sint64", "sint8", "string", "uint16", 
          "uint32", "uint64", "uint8" }]
   uint16 DataType;

      [Description ( 
          "An enumerated value that describes the characteristics "
          "of the metric, for purposes of performing calculations. "
          "The property can take one of the following values: \n"
          "1=\"Non-calculable\" -> a string. Arithmetic makes no "
          "sense. \n"
          "2=\"Summable\" -> It is reasonable to sum this value "
          "over many instances of e.g., UnitOfWork, such as the "
          "number of files processed in a backup job. For example, "
          "if each backup job is a UnitOfWork, and each job backs "
          "up 27,000 files on average, then it makes sense to say "
          "that 100 backup jobs processed 2,700,000 files. \n"
          "3=\"Non-summable\" -> It does not make sense to sum this "
          "value over many instances of UnitOfWork. An example "
          "would be a metric that measures the queue length when a "
          "job arrives at a server. If each job is a UnitOfWork, "
          "and the average queue length when each job arrives is "
          "33, it does not make sense to say that the queue length "
          "for 100 jobs is 3300. It does make sense to say that the "
          "mean is 33." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Non-calculable", "Summable", "Non-summable" }]
   uint16 Calculable;

      [Description ( 
          "Identifies the specific units of a value. Examples are "
          "Bytes, Packets, Jobs, Files, Milliseconds, and Amps." )]
   string Units;

      [Description ( 
          "Defines one or more strings that can be used to refine "
          "(break down) queries against the BaseMetricValues along "
          "a certain dimension. An example is a transaction name, "
          "allowing the break down of the total value for all "
          "transactions into a set of values, one for each "
          "transaction name. Other examples might be application "
          "system or user group name. The strings are free format "
          "and should be meaningful to the end users of the metric "
          "data. The strings indicate which break down dimensions "
          "are supported for this metric definition, by the "
          "underlying instrumentation." )]
   string BreakdownDimensions[];

      [Description ( 
          "IsContinuous indicates whether or not the metric value "
          "is continuous or scalar. Performance metrics are an "
          "example of a linear metric. Examples of non-linear "
          "metrics include error codes or operational states. "
          "Continuous metrics can be compared using the \"greater "
          "than\" relation." )]
   boolean IsContinuous;

      [Description ( 
          "ChangeType indicates how the metric value changes, in "
          "the form of typical combinations of finer grain "
          "attributes such as direction change, minimum and maximum "
          "values, and wrapping semantics. \n"
          "0=\"Unknown\": The metric designer did not qualify the "
          "ChangeType. \n"
          "2=\"N/A\": If the \"IsContinuous\" property is \"false\", "
          "ChangeType does not make sense and MUST be is set to "
          "\"N/A\". \n"
          "3=\"Counter\": The metric is a counter metric. These "
          "have non-negative integer values which increase "
          "monotonically until reaching the maximum representable "
          "number and then wrap around and start increasing from 0. "
          "Such counters, also known as rollover counters, can be "
          "used for instance to count the number of network errors "
          "or the number of transactions processed. The only way "
          "for a client application to keep track of wrap arounds "
          "is to retrieve the value of the counter in appropriately "
          "short intervals. \n"
          "4=\"Gauge\": The metric is a gauge metric. These have "
          "integer or float values that can increase and decrease "
          "arbitrarily. A gauge MUST NOT wrap when reaching the "
          "minimum or maximum representable number, instead, the "
          "value \"sticks\" at that number. Minimum or maximum "
          "values inside of the representable value range at which "
          "the metric value \"sticks\", may or may not be defined. \n"
          "Vendors may extend this property in the vendor reserved "
          "range." ), 
       ValueMap { "0", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "N/A", "Counter", "Gauge", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_BaseMetricDefinition.IsContinuous" }]
   uint16 ChangeType;

      [Description ( 
          "TimeScope indicates the time scope to which the metric "
          "value applies. \n"
          "0=\"Unknown\" indicates the time scope was not qualified "
          "by the metric designer, or is unknown to the provider. \n"
          "2=\"Point\" indicates that the metric applies to a point "
          "in time. On the corresponding BaseMetricValue instances, "
          "TimeStamp specifies the point in time and Duration is "
          "always 0. \n"
          "3=\"Interval\" indicates that the metric applies to a "
          "time interval. On the corresponding BaseMetricValue "
          "instances, TimeStamp specifies the end of the time "
          "interval and Duration specifies its duration. \n"
          "4=\"StartupInterval\" indicates that the metric applies "
          "to a time interval that began at the startup of the "
          "measured resource (i.e. the ManagedElement associated by "
          "MetricDefForMe). On the corresponding BaseMetricValue "
          "instances, TimeStamp specifies the end of the time "
          "interval. If Duration is 0, this indicates that the "
          "startup time of the measured resource is unknown. Else, "
          "Duration specifies the duration between startup of the "
          "resource and TimeStamp." ), 
       ValueMap { "0", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "Point", "Interval", "StartupInterval", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_BaseMetricValue.TimeStamp", 
          "CIM_BaseMetricValue.Duration" }]
   uint16 TimeScope;

      [Description ( 
          "GatheringType indicates how the metric values are "
          "gathered by the underlying instrumentation. This allows "
          "the client application to choose the right metric for "
          "the purpose. \n"
          "0=\"Unknown\": Indicates that the GatheringType is not "
          "known. \n"
          "2=\"OnChange\": Indicates that the CIM metric values get "
          "updated immediately when the values inside of the "
          "measured resource change. The values of OnChange metrics "
          "truly reflect the current situation within the resource "
          "at any time. An example is the number of logged on users "
          "that gets updated immediately as users log on and off. \n"
          "3=\"Periodic\": Indicates that the CIM metric values get "
          "updated periodically. For instance, to a client "
          "application, a metric value applying to the current time "
          "will appear constant during each gathering interval, and "
          "then jumps to the new value at the end of each gathering "
          "interval. \n"
          "4=\"OnRequest\": Indicates that the CIM metric value is "
          "determined each time a client application reads it. The "
          "values of OnRequest metrics truly return the current "
          "situation within the resource if somebody asks for it. "
          "However, they do not change \"unobserved\", and "
          "therefore subscribing for value changes of OnRequest "
          "metrics is NOT RECOMMENDED." ), 
       ValueMap { "0", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "OnChange", "Periodic", "OnRequest", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 GatheringType;

      [Description ( 
          "Identifies the specific units of a value. The value of "
          "this property shall be a legal value of the Programmatic "
          "Units qualifier as defined in Appendix C.1 of DSP0004 "
          "V2.4 or later." )]
   string ProgrammaticUnits;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "Each CIM_BaseMetricValue object represents the instance value "
       "of a metric. Since the gathering of metric information can "
       "involve large quantities of information there may be many "
       "instances of this class. The use of this class as an "
       "instrumentation source may be inefficient unless the rate of "
       "metrics are known. The length of time a CIM_BaseMetricValue "
       "instance exists after the metric information is captured is "
       "not defined and is implementation dependent. \n"
       "Most metric data values change over time. There are two ways "
       "of mapping this into CIM_BaseMetricValue objects: The value "
       "for the next point in time may use the same object and just "
       "change its properties (such as the value or timestamp), or the "
       "existing objects remain unchanged and a new object is created "
       "for the new point in time. The first method is typically used "
       "for snapshot data and the second method for historical data. "
       "Which method is used, is indicated by the Volatile property." )]
class CIM_BaseMetricValue : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          ": \n"
          "Where and are separated by a colon \':\', and where MUST "
          "include a copyrighted, trademarked or otherwise unique "
          "name that is owned by the business entity "
          "creating/defining the InstanceID, or is a registered ID "
          "that is assigned to the business entity by a recognized "
          "global authority (This is similar to the <Schema "
          "Name>_<Class Name> structure of Schema class names.) In "
          "addition, to ensure uniqueness MUST NOT contain a colon "
          "(\':\'). When using this algorithm, the first colon to "
          "appear in InstanceID MUST appear between and . \n"
          "is chosen by the business entity and SHOULD not be "
          "re-used to identify different underlying (real-world) "
          "elements. If the above \'preferred\' algorithm is not "
          "used, the defining entity MUST assure that the resultant "
          "InstanceID is not re-used across any InstanceIDs "
          "produced by this or other providers for this instance\'s "
          "NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the set to \'CIM\'." )]
   string InstanceID;

      [Required, Description ( 
          "The key of the BaseMetricDefinition instance for this "
          "CIM_BaseMetricValue instance value." ), 
       ModelCorrespondence { "CIM_BaseMetricDefinition.Id" }]
   string MetricDefinitionId;

      [Description ( 
          "A descriptive name for the element to which the metric "
          "value belongs (i.e., the measured element). This "
          "property is required by behavior if there is no "
          "association defined to a ManagedElement, but may be used "
          "in other cases to provide supplemental information. This "
          "allows metrics to be captured independently of any "
          "ManagedElement. An example is where a metric value "
          "belongs to a combination of elements, such as the input "
          "and output ports of the traffic in a switch. If there "
          "are multiple ManagedElements associated with the metric "
          "value, then usually there is one that naturally belongs "
          "to the metric value and that one should be used to "
          "create the supplemental information. The property is not "
          "meant to be used as a foreign key to search on the "
          "measured element. Instead, the association to the "
          "ManagedElement should be used." )]
   string MeasuredElementName;

      [Description ( 
          "Identifies the time when the value of a metric instance "
          "is computed. Note that this is different from the time "
          "when the instance is created. For a given "
          "CIM_BaseMetricValue instance, the TimeStamp changes "
          "whenever a new measurement snapshot is taken if Volatile "
          "is true. A managmenet application may establish a time "
          "series of metric data by retrieving the instances of "
          "CIM_BaseMetricValue and sorting them according to their "
          "TimeStamp." ), 
       ModelCorrespondence { "CIM_BaseMetricDefinition.TimeScope", 
          "CIM_BaseMetricValue.Duration" }]
   datetime TimeStamp;

      [Description ( 
          "Property that represents the time duration over which "
          "this metric value is valid. This property should not "
          "exist for timestamps that apply only to a point in time "
          "but should be defined for values that are considered "
          "valid for a certain time period (ex. sampling). If the "
          "\"Duration\" property exists and is nonNull, the "
          "TimeStamp is to be considered the end of the interval." ), 
       ModelCorrespondence { "CIM_BaseMetricDefinition.TimeScope", 
          "CIM_BaseMetricValue.TimeStamp" }]
   datetime Duration;

      [Required, Description ( 
          "The value of the metric represented as a string. Its "
          "original data type is specified in "
          "CIM_BaseMetricDefinition." )]
   string MetricValue;

      [Description ( 
          "If present, specifies one BreakdownDimension from the "
          "BreakdownDimensions array defined in the associated CIM_ "
          "BaseMetricDefinition. This is the dimension along which "
          "this set of metric values is broken down. For a "
          "description of the concept, see the class "
          "CIM_BaseMetricDefinition." )]
   string BreakdownDimension;

      [Description ( 
          "Defines a value of the BreakdownDimension property "
          "defined for this metric value instance. For instance, if "
          "the BreakdownDimension is \"TransactionName\", this "
          "property could name the actual transaction to which this "
          "particular metric value applies." )]
   string BreakdownValue;

      [Description ( 
          "If true, Volatile indicates that the value for the next "
          "point in time may use the same object and just change "
          "its properties (such as the value or timestamp). If "
          "false, the existing objects remain unchanged and a new "
          "object is created for the new point in time." )]
   boolean Volatile;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "The metrics that are associated with a UnitOfWork. These "
       "metrics usually describe some aspect of a UnitOfWork such as "
       "how much work was done, or the size of the UnitOfWork. For "
       "example, the size of a print job or the number of pages "
       "printed could be metrics of a \'print\' UnitOfWork." )]
class CIM_MetricDefinition : CIM_BaseMetricDefinition {

      [Override ( "Id" ), 
       Description ( 
          "A 16 byte value that uniquely identifies the Metric "
          "Definition. The use of OSF UUID/GUIDs is recommended." ), 
       MaxLen ( 16 )]
   string Id;

      [Description ( 
          "An enumerated value describing when the Metric may be "
          "considered valid. Some metrics are valid only at the "
          "beginning of a transaction (e.g., bytes to print), while "
          "the transaction is running (e.g., percent complete), or "
          "when the transaction is finished (e.g., pages printed). "
          "If a metric is valid at more than one of the enumerated "
          "values, such as both when the unit of work starts and "
          "when it stops, it is recommended to not use Validity." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "At Start", "In Middle", "At Stop" }]
   uint16 Validity;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "TraceLevelType defines the encoding and semantics of trace "
       "levels. A trace is data that is produced during the execution "
       "of program code in order to provide information on the "
       "behaviour of the code (e.g. textual data written to files). "
       "Traces may be used for error detection/analysis or debugging. "
       "Trace levels define the granularity and/or type of the traces "
       "that are to be produced by the program code. Depending on the "
       "program implementation, levels may be applied on the fly. The "
       "possible levels are also implementation dependent, since no "
       "general rules or standards exist. In consequence, program "
       "developers could reuse their existing trace level scheme. \n"
       "Traces are valuable information sources for management "
       "applications in cases of error detection/analysis. In order to "
       "correctly set trace levels to the level needed (exciting "
       "exhaustive tracing by accident may result in significant "
       "system resources consumption in terms of processing time and "
       "storage) and to efficiently interpret which level of detail to "
       "expect from traces already produced by some resource, the "
       "possible trace level values and their meaning (semantics) must "
       "be known by the user and/or the management application. The "
       "type does not define the location or access method of the "
       "traces, since traces of a particular type can have multiple "
       "locations as well as multiple access methods." )]
class CIM_TraceLevelType : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          ": \n"
          "Where and are separated by a colon \':\', and where MUST "
          "include a copyrighted, trademarked or otherwise unique "
          "name that is owned by the business entity "
          "creating/defining the InstanceID, or is a registered ID "
          "that is assigned to the business entity by a recognized "
          "global authority (This is similar to the <Schema "
          "Name>_<Class Name> structure of Schema class names.) In "
          "addition, to ensure uniqueness MUST NOT contain a colon "
          "(\':\'). When using this algorithm, the first colon to "
          "appear in InstanceID MUST appear between and . \n"
          "is chosen by the business entity and SHOULD not be "
          "re-used to identify different underlying (real-world) "
          "elements. If the above \'preferred\' algorithm is not "
          "used, the defining entity MUST assure that the resultant "
          "InstanceID is not re-used across any InstanceIDs "
          "produced by this or other providers for this instance\'s "
          "NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the set to \'CIM\'." ), 
       MaxLen ( 16 ), 
       ModelCorrespondence { 
          "CIM_UnitOfWorkDefinition.TraceLevelTypeId" }]
   string InstanceID;

      [Description ( 
          "Describes the technical encoding of the trace level. \n"
          "0: bit map = switches to turn on/off appropriate trace "
          "production (e.g. 0x00000010, 0x0000F000); the use of bit "
          "maps implies that the switches can be or-ed bitwise: "
          "Values[1] | Values[2] | ... . \n"
          "1: number = plain numbers that define levels (e.g. 1, 2, "
          "7); the recommended and most common encoding scheme \n"
          "2: any other encoding scheme you could think of (e.g. "
          "mixture of bit maps and numbers)." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Bitmap", "Number" }]
   uint16 BaseType;

      [Required, Description ( 
          "Each entry in the array is one possible value of the "
          "trace level of this type. Depending on the base type, "
          "these are either switches defined as bit maps (e.g. "
          "0x00000001, 0x000000F0, ...) or plain numbers (1, 2, 3, "
          "...). In either encoding, the value 0 is reserved for "
          "the equivalent of \'no trace\'." ), 
       ArrayType ( "Indexed" )]
   uint32 TraceValues[];

      [Required, Description ( 
          "The index corresponds to TraceLevelType.TraceValues[]. "
          "The array provides human-readable descriptions of the "
          "semantics of each value entered in the TraceValues "
          "array." ), 
       ArrayType ( "Indexed" )]
   string ValueDescriptions[];


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "Each instance of UnitOfWork identifies a transaction that is "
       "either in-process or already completed. Because instances of "
       "\'in-process\' UnitsOfWork can be very short-lived and there "
       "can be a great number of active ones, use of this class as an "
       "instrumentation source for determining response time may be "
       "incorrect or inefficient, unless the rate and duration of the "
       "UnitsOfWork are known. The intended use is to respond to "
       "queries about currently active or recently completed "
       "UnitsOfWork. The length of time that a UnitOfWork instance "
       "exists after the UnitOfWork completes is not defined and "
       "should be assumed to be implementation-dependent. This class "
       "is weak to its definition (CIM_UnitOfWorkDefintion)." )]
class CIM_UnitOfWork : CIM_ManagedElement {

      [Override ( "Description" ), 
       Description ( 
          "Since UnitOfWork is designed to be an extremely "
          "lightweight object, it is recommended that this property "
          "not be used. The Description specified for the "
          "instance\'s associated CIM_UnitOfWorkDefintion should "
          "apply." )]
   string Description;

      [Key, Description ( 
          "The identifier of the UnitOfWork, within the context of "
          "the UnitOfWorkDefinition." )]
   sint64 Id;

      [Key, Description ( 
          "A 16 byte value that uniquely identifies the UnitOfWork "
          "Definition. The use of OSF UUID/GUIDs is recommended." ), 
       MaxLen ( 16 ), 
       Propagated ( "CIM_UnitOfWorkDefinition.Id" )]
   string UoWDefId;

      [Description ( 
          "The name of the user who initiated the UnitOfWork. This "
          "may be a real user\'s login name or a logical name "
          "representing an application." )]
   string UserName;

      [Description ( "The time that the UnitOfWork was started." )]
   datetime StartTime;

      [Description ( 
          "The elapsed time since the UnitOfWork was started. Upon "
          "completion of the UnitOfWork, this property contains the "
          "total amount of time taken in processing the entire "
          "UnitOfWork." )]
   datetime ElapsedTime;

      [Description ( 
          "An enumeration identifing the status of the UnitOfWork. "
          "Most of the property values are self-explanatory, but a "
          "few need additional text: \n"
          "3=\"Completed\" - Should be used to represent a "
          "\'completed\' transaction whose status (\'good\', "
          "\'failed\' or \'aborted\') is unknown. \n"
          "6=\"Completed Aborted\" - Should be used when a "
          "UnitOfWork has completed but was not allowed to end "
          "normally. An example would be when the Stop or Back "
          "buttons are selected from a web browser, before a page "
          "is fully loaded." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Active", "Suspended", "Completed", 
          "Completed Good", "Completed Failed", "Completed Aborted" }]
   uint16 Status;

      [Description ( 
          "Indicates the granularity at which traces are written "
          "for this particular instance of UnitOfWork. Traces allow "
          "providing more detailed information on the course of the "
          "execution of the UnitOfWork than just the status and the "
          "elapsed time. The trace level does not indicate where "
          "the traces are found (i.e. in which file or CIM "
          "instances). TraceLevel cannot be set (i.e. written) "
          "since an instance of UnitOfWork only publishes "
          "information. So, the application code that executes the "
          "unit of work must receive the desired trace level by its "
          "caller (e.g. the parent module, the user or some remote "
          "system that initiates the unit of work). \n"
          "If its value is 0, no traces are available. If its value "
          "is > 0, traces are available. Except 0, the possible "
          "values and their semantics are implementation dependent. "
          "Two instances of UnitOfWork (even with the same "
          "definition) may have different trace levels since the "
          "desired or required granularity of traces may be "
          "dependent on the execution context (detection of an "
          "error, analysis of an error, etc.) of the unit of work. \n"
          "The trace level can be encoded as a bit map (each "
          "individual bit indicates a certain trace type and/or "
          "level of detail) or numbers (that are further defined by "
          "a value map). No encoding scheme is imposed since no "
          "general rules or standards exist and in consequence, "
          "application developers could reuse their existing trace "
          "level scheme." )]
   uint32 TraceLevel;

      [Description ( 
          "A string that uniquely identifies the mutual context of "
          "UnitOfWork instances. The context is defined as an "
          "individual action that several UnitOfWork instances "
          "participate in. The use of Ids such as OSF UUID/GUIDs is "
          "recommended, although some implementations may require "
          "longer Ids. (This is the reason why no maxlen(16) "
          "qualifier has been used.) \n"
          "MutualContextId explicitly identifies the context for "
          "instances of UnitOfWork, that is otherwise provided "
          "implicitly by SubUoW association instances. In addition, "
          "one can query directly (i.e. without following the "
          "associations) for UnitOfWork instances that participate "
          "in some individual action (i.e., the mutual context). If "
          "no mutual context is needed or if it is not supported by "
          "the implementation, the value is NULL. \n"
          "Note that the MutualContextId value is to be transferred "
          "internally between the participating UnitOfWork "
          "implementations such that each UnitOfWork instance "
          "implementation receives its value from its "
          "predecessor/parent or initially creates the value if it "
          "is the first instance of the context." )]
   string MutualContextId;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPEndpointStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This class contains statistical information for a connection "
       "on a BGPProtocolEndpoint. It is defined as a subclass of "
       "StatisticalData and associated with the Endpoint using the "
       "relationship, ElementStatisticalData." )]
class CIM_BGPEndpointStatistics : CIM_StatisticalData {

      [Description ( 
          "This is the number of BGP UPDATE messages received on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerInUpdates" }]
   uint32 InUpdates;

      [Description ( 
          "This is the number of BGP UPDATE messages transmitted on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerOutUpdates" }]
   uint32 OutUpdates;

      [Description ( 
          "This is the total number of BGP messages received on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerInTotalMessages" }]
   uint32 InTotalMessages;

      [Description ( 
          "This is the total number of BGP messages transmitted on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerOutTotalMessages" }]
   uint32 OutTotalMessages;

      [Description ( 
          "This contains the last error code and error subcode for "
          "this router\'s BGP connection. If no error has occurred, "
          "then each integer in the array is zero." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerLastError" }]
   uint8 LastError[];

      [Description ( 
          "This contains the total number of times that the BGP "
          "Finite State Machine has transitioned into the "
          "established state for this router\'s BGP connection. "
          "This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerFsmEstablishedTransitions" }]
   uint32 FsmEstablishedTransitions;

      [Description ( 
          "This indicates how long, in seconds, this peer has been "
          "in the established state, or how long since this peer "
          "was last in the established state. It is set to zero "
          "when a new peer is configured or when the router is "
          "booted. This has the semantics of a 32-bit gauge." ), 
       Units ( "Seconds" ), 
       Gauge, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerFsmEstablishedTime" }]
   uint32 FsmEstablishedTime;

      [Description ( 
          "This defines the time in seconds since the last BGP "
          "UPDATE message was received from the peer. This has the "
          "semantics of a 32-bit gauge." ), 
       Units ( "Seconds" ), 
       Gauge, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerInUpdateElapsedTime" }]
   uint32 InUpdateElapsedTime;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A representation of the SettingData of a CLProtocol. The "
       "relationship between the SettingData and the CLP Service is "
       "described by instantiating the ProvidesEndpoint association, "
       "with an association to the transport (TelnetProtocolEndpoint "
       "or SSHProtocolEndpoint) with a BindsTo association." )]
class CIM_CLPSettingData : CIM_SettingData {

      [Description ( 
          "Identifies the initial Current Default Target when a CLP "
          "Session is established. The Current Default Target is "
          "the CLP session environment setting that establishes a "
          "default base address for all command targets that are "
          "expressed as a relative target address and is used as "
          "the command target if no command target is specified in "
          "a command. The CLP specification requires this value to "
          "be fixed at the root of the address space being managed. "
          "Therefore this value does not have a write qualifier." ), 
       ModelCorrespondence { 
          "CIM_CLPProtocolEndpoint.CurrentDefaultTarget" }]
   string CurrentDefaultTarget;

      [Write, Description ( 
          "Establishes the amount of time in seconds that the CLP "
          "Session should retain a CLP command job status. A "
          "KeepTime value of zero shall be interpreted to mean keep "
          "forever." ), 
       Units ( "Seconds" ), 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.KeepTime" }, 
       PUnit ( "second" )]
   uint16 KeepTime;

      [Write, Description ( 
          "When TRUE the CLP Session will not return a command "
          "response until all spawned jobs have completed, "
          "otherwise it may." ), 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.WaitBehavior" }]
   boolean WaitBehavior;

      [Write, Description ( 
          "OutputFormat establishes the default CLP Session command "
          "output format, as described in SM CLP Specification, "
          "DMTF document DSP0214." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000..0xFFFF" }, 
       Values { "Text", "clpcsv", "Keyword", "clpxml", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.OutputFormat" }]
   uint16 OutputFormat;

      [Write, Description ( 
          "OutputVerbosity establishes the default CLP Session "
          "output level of detail, as described in SM CLP "
          "Specification, DMTF document DSP0214." ), 
       ValueMap { "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Error", "Terse", "Verbose", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_CLPProtocolEndpoint.OutputVerbosity" }]
   uint16 OutputVerbosity;

      [Write, Description ( 
          "Establishes the default CLP Session command output "
          "language. As described in SM CLP Specification, DMTF "
          "document DSP0214, the language value is a 3-character "
          "string identifier of language as specified in ISO 639.2; "
          "\"eng\" is the default." )]
   string OutputLanguage;

      [Write, Description ( 
          "OutputPosition establishes the default CLP Session "
          "command output beginning position when multiple items "
          "are returned in the command output, as described in SM "
          "CLP Specification, DMTF document DSP0214." ), 
       ValueMap { "2", "3", "..", "0x8000..0xFFFF" }, 
       Values { "Begin", "End", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.OutputPosition" }]
   uint16 OutputPosition;

      [Write, Description ( 
          "OutputOrder establishes the default CLP Session command "
          "output order when multiple items are returned in the "
          "command output as described in SM CLP Specification, "
          "DMTF document DSP0214." ), 
       ValueMap { "2", "3", "..", "0x8000..0xFFFF" }, 
       Values { "Default", "Reverse", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.OutputOrder" }]
   uint16 OutputOrder;

      [Write, Description ( 
          "Establishes the default CLP Session command output count "
          "number when multiple items are returned in the output as "
          "described in SM CLP Specification, DMTF document "
          "DSP0214. The value 0xFFFFFFFF shall be interpreted to "
          "mean that all items are to be returned. The maximum "
          "value for the count number is determined by the class of "
          "the target." ), 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.OutputCount" }]
   uint32 OutputCount;

      [Write, Description ( 
          "Establishes the default value for the display option. "
          "The argument string is stored \"as-is\" without "
          "normalization beyond capitalization. The argument string "
          "is compliant with the SM CLP command line grammar." ), 
       ModelCorrespondence { "CIM_CLPProtocolEndpoint.DisplayOption" }]
   string DisplayOption;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConnectivityMembershipSettingData 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "ConnectivityMembershipSettingData provides the identification "
       "criteria for possible members of a ConnectivityCollection." )]
class CIM_ConnectivityMembershipSettingData : CIM_SettingData {

      [Required, Description ( 
          "ConnectivityMemberType specifies the type of "
          "identification used in the ConnectivityMemberID field." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "Permanent Address", 
          "Network Address", "Switch Port ID", "Logical Port Group", 
          "Connectivity Collection", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ConnectivityMembershipSettingData.ConnectivityMemberID", 
          "CIM_ConnectivityMembershipSettingData.OtherConnectivityMemberType" }]
   uint16 ConnectivityMemberType;

      [Description ( 
          "This property specifies the type of identification used "
          "in the ConnectivityMemberID field, when "
          "ConnectivityMemberType is 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_ConnectivityMembershipSettingData.ConnectivityMemberType" }]
   string OtherConnectivityMemberType;

      [Required, Description ( 
          "The identification of the member, based on the type "
          "specified by ConnectivityMemberType." ), 
       ModelCorrespondence { 
          "CIM_ConnectivityMembershipSettingData.ConnectivityMemberType" }]
   string ConnectivityMemberID;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::IEEE8021x" ), 
    Description ( 
       "IEEE8021xSettings specifies a set of IEEE 802.1x Port-Based "
       "Network Access Control settings that can be applied to a ISO "
       "OSI layer 2 ProtocolEndpoint." )]
class CIM_IEEE8021xSettings : CIM_SettingData {

      [Description ( 
          "AuthenticationProtocol shall indicate the desired EAP "
          "(Extensible Authentication Protocol) type.\n"
          "\t* EAP-TLS (0): shall indicate that the desired EAP "
          "type is the Transport Layer Security EAP type specified "
          "in RFC 2716. If AuthenticationProtocol contains 0, "
          "Username should not be null, ServerCertificateName and "
          "ServerCertificateNameComparison may be null or not null, "
          "and RoamingIdentity, Password, Domain, "
          "ProtectedAccessCredential, PACPassword, and PSK should "
          "be null.\n"
          "\t* EAP-TTLS/MSCHAPv2 (1): shall indicate that the "
          "desired EAP type is the Tunneled TLS Authentication "
          "Protocol EAP type specified in "
          "draft-ietf-pppext-eap-ttls, with Microsoft PPP CHAP "
          "Extensions, Version 2 (MSCHAPv2) as the inner "
          "authentication method. If AuthenticationProtocol "
          "contains 1, Username and Password should not be null, "
          "RoamingIdentity, ServerCertificateName, "
          "ServerCertificateNameComparison, and Domain may be null "
          "or not null, and ProtectedAccessCredential, PACPassword, "
          "and PSK should be null.\n"
          "\t* PEAPv0/EAP-MSCHAPv2 (2): shall indicate that the "
          "desired EAP type is the Protected Extensible "
          "Authentication Protocol (PEAP) Version 0 EAP type "
          "specified in draft-kamath-pppext-peapv0, with Microsoft "
          "PPP CHAP Extensions, Version 2 (MSCHAPv2) as the inner "
          "authentication method. If AuthenticationProtocol "
          "contains2, Username and Password should not be null, "
          "RoamingIdentity, ServerCertificateName, "
          "ServerCertificateNameComparison, and Domain may be null "
          "or not null, and ProtectedAccessCredential, PACPassword, "
          "and PSK should be null.\n"
          "\t* PEAPv1/EAP-GTC (3): shall indicate that the desired "
          "EAP type is the Protected Extensible Authentication "
          "Protocol (PEAP) Version 1 EAP type specified in "
          "draft-josefsson-pppext-eap-tls-eap, with Generic Token "
          "Card (GTC) as the inner authentication method. If "
          "AuthenticationProtocol contains 3, Username and Password "
          "should not be null, RoamingIdentity, "
          "ServerCertificateName, ServerCertificateNameComparison, "
          "and Domain may be null or not null, and "
          "ProtectedAccessCredential, PACPassword, and PSK should "
          "be null.\n"
          "\t* EAP-FAST/MSCHAPv2 (4): shall indicate that the "
          "desired EAP type is the Flexible Authentication "
          "Extensible Authentication Protocol EAP type specified in "
          "IETF RFC 4851, with Microsoft PPP CHAP Extensions, "
          "Version 2 (MSCHAPv2) as the inner authentication method. "
          "If AuthenticationProtocol contains 4, Username and "
          "Password should not be null, RoamingIdentity, "
          "ServerCertificateName, ServerCertificateNameComparison, "
          "Domain, ProtectedAccessCredential, and PACPassword may "
          "be null or not null, and PSK should be null.\n"
          "\t* EAP-FAST/GTC (5): shall indicate that the desired "
          "EAP type is the Flexible Authentication Extensible "
          "Authentication Protocol EAP type specified in IETF RFC "
          "4851, with Generic Token Card (GTC) as the inner "
          "authentication method. If AuthenticationProtocol "
          "contains 5, Username and Password should not be null, "
          "RoamingIdentity, ServerCertificateName, "
          "ServerCertificateNameComparison, Domain, "
          "ProtectedAccessCredential, and PACPassword may be null "
          "or not null, and PSK should be null.\n"
          "\t* EAP-MD5 (6): shall indicate that the desired EAP "
          "type is the EAP MD5 authentication method, specified in "
          "RFC 3748. If AuthenticationProtocol contains 6, Username "
          "and Password should not be null, Domain may be null or "
          "not null, and RoamingIdentity, ServerCertificateName, "
          "ServerCertificateNameComparison, "
          "ProtectedAccessCredential, PACPassword, and PSK should "
          "be null.\n"
          "\t* EAP-PSK (7): shall indicate that the desired EAP "
          "type is the EAP-PSK (Pre-Shared Key) EAP type specified "
          "in RFC 4764. If AuthenticationProtocol contains 7, "
          "Username and PSK should not be null, Domain and "
          "RoamingIdentity may be null or not null, and Password, "
          "ServerCertificateName, ServerCertificateNameComparison, "
          "ProtectedAccessCredential, and PACPassword should be null.\n"
          "\t* EAP-SIM (8): shall indicate that the desired EAP "
          "type is the Extensible Authentication Protocol Method "
          "for Global System for Mobile Communications (GSM) "
          "Subscriber Identity Modules (EAP-SIM), specified in RFC "
          "4186. If AuthenticationProtocol contains 8, Username and "
          "PSK should not be null, Domain and RoamingIdentity may "
          "be null or not null, and Password, "
          "ServerCertificateName, ServerCertificateNameComparison, "
          "ProtectedAccessCredential, and PACPassword should be null.\n"
          "\t* EAP-AKA (9): shall indicate that the desired EAP "
          "type is the EAP Method for 3rd Generation Authentication "
          "and Key Agreement (EAP-AKA), specified in RFC 4187. If "
          "AuthenticationProtocol contains 9, Username and PSK "
          "should not be null, Domain and RoamingIdentity may be "
          "null or not null, and Password, ServerCertificateName, "
          "ServerCertificateNameComparison, "
          "ProtectedAccessCredential, and PACPassword should be null.\n"
          "\t* EAP-FAST/TLS (10): shall indicate that the desired "
          "EAP type is the Flexible Authentication EAP type "
          "specified in IETF RFC 4851, with TLS as the inner "
          "authentication method. If AuthenticationProtocol "
          "contains 10, Username and Password should not be null, "
          "RoamingIdentity, ServerCertificateName, "
          "ServerCertificateNameComparison, Domain, "
          "ProtectedAccessCredential, and PACPassword may be null "
          "or not null, and PSK should be null." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", ".." }, 
       Values { "EAP-TLS", "EAP-TTLS/MSCHAPv2", 
          "PEAPv0/EAP-MSCHAPv2", "PEAPv1/EAP-GTC", 
          "EAP-FAST/MSCHAPv2", "EAP-FAST/GTC", "EAP-MD5", "EAP-PSK", 
          "EAP-SIM", "EAP-AKA", "EAP-FAST/TLS", "DMTF Reserved" }, 
       MappingStrings { "RFC4017.IETF", "RFC2716.IETF", 
          "draft-ietf-pppext-eap-ttls.IETF", 
          "draft-kamath-pppext-peapv0.IETF", 
          "draft-josefsson-pppext-eap-tls-eap", "RFC4851.IETF", 
          "RFC3748.IETF", "RFC4764.IETF", "RFC4186.IETF", 
          "RFC4187.IETF" }]
   uint16 AuthenticationProtocol;

      [Description ( 
          "A string presented to the authentication server in "
          "802.1x protocol exchange. The AAA server determines the "
          "format of this string. Formats supported by AAA servers "
          "include: <domain>\\<username>, <username>@<domain>." )]
   string RoamingIdentity;

      [Description ( 
          "The name that shall be compared against the subject name "
          "field in the certificate provided by the AAA server. "
          "Shall contain either the fully qualified domain name of "
          "the AAA server, in which case "
          "ServerCertificateNameComparison shall contain "
          "\"FullName\", or the domain suffix of the AAA server, in "
          "which case ServerCertificateNameComparison shall contain "
          "\"DomainSuffix\"." ), 
       ModelCorrespondence { 
          "CIM_IEEE8021xSettings.ServerCertificateNameComparison" }]
   string ServerCertificateName;

      [Description ( 
          "The comparison algorithm that shall be used by the "
          "server to validate the subject name field of the "
          "certificate presented by the AAA server against the "
          "value of the ServerCertificateName property." ), 
       ValueMap { "1", "2", "3", ".." }, 
       Values { "Other", "FullName", "DomainSuffix", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_IEEE8021xSettings.ServerCertificateName" }]
   uint16 ServerCertificateNameComparison;

      [Description ( 
          "Identifies the user requesting access to the network." ), 
       MappingStrings { "RFC2716.IETF", 
          "draft-ietf-pppext-eap-ttls.IETF", 
          "draft-kamath-pppext-peapv0.IETF", 
          "draft-josefsson-pppext-eap-tls-eap", "RFC4851.IETF", 
          "RFC3748.IETF", "RFC4764.IETF", "RFC4186.IETF", 
          "RFC4187.IETF" }]
   string Username;

      [Description ( 
          "A password associated with the user identified by "
          "Username within Domain." ), 
       MappingStrings { "draft-ietf-pppext-eap-ttls.IETF", 
          "draft-kamath-pppext-peapv0.IETF", 
          "draft-josefsson-pppext-eap-tls-eap", "RFC4851.IETF", 
          "RFC3748.IETF" }]
   string Password;

      [Description ( 
          "The domain (also known as realm) within which Username is unique."
           ), 
       MappingStrings { "draft-ietf-pppext-eap-ttls.IETF", 
          "draft-kamath-pppext-peapv0.IETF", 
          "draft-josefsson-pppext-eap-tls-eap", "RFC4851.IETF", 
          "RFC3748.IETF", "RFC4764.IETF", "RFC4186.IETF", 
          "RFC4187.IETF" }]
   string Domain;

      [Description ( 
          "A credential used by the supplicant and AAA server to "
          "establish a mutually authenticated encrypted tunnel for "
          "confidential user authentication." ), 
       OctetString, MappingStrings { "RFC4851.IETF" }]
   uint8 ProtectedAccessCredential[];

      [Description ( 
          "Optional password to extract the PAC (Protected Access "
          "Credential) information from the PAC data." ), 
       MappingStrings { "RFC4851.IETF" }]
   string PACPassword;

      [Description ( 
          "A pre-shared key used for pre-shared key EAP types such "
          "as EAP-PSK, EAP-SIM, and EAP-AKA." ), 
       OctetString, MappingStrings { "RFC4764.IETF", "RFC4186.IETF", 
          "RFC4187.IETF" }]
   uint8 PSK[];


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Network::IP" ), 
    Description ( 
       "This SettingData instance is the aggregation point identifying "
       "an IP configuration. Multiple IP configurations could exist "
       "for a target. Each configuration is represented with an "
       "instance of IPAssignmentSettingData. The details of the IP "
       "configuration are defined by instances of sub-classes of this "
       "class (i.e. StaticIPAssignmentSettingData, DHCPSettingData, "
       "DNSSettingData). These instances are associated with the "
       "IPAssignmentSettingData instance using the OrderedComponent or "
       "ConcreteComponent associations. For example, a static IP "
       "configuration would be represented by an instance of "
       "IPAssignmentSettingData and an instance of "
       "StaticIPAssignmentSettingData associated via an instance of "
       "ConcreteComponent. A static IP configuration including DNS "
       "would be modeled using an instance of IPAssignmentSettingData, "
       "DNSSettingData, and StaticIPAssignmentSettingData. The "
       "DNSSettingData and StaticIPAssignmentSettingData instance "
       "would be associated with the IPAssignmentSettingData using "
       "instances of ConcreteComponent." )]
class CIM_IPAssignmentSettingData : CIM_SettingData {

      [Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask for IPv4 or Prefix Length for IPv6, "
          "and Gateway shall be assigned to the IPProtocolEndpoint. \n"
          "A value of 3 \"Static\" shall indicate the values for "
          "IPv4 will be assigned manually. \n"
          "A value of 4 \"DHCP\" shall indicate the values will be "
          "assigned utilizing the Dynamic Host Configuration "
          "Protocol. See RFC 2131 and related. \n"
          "A value of 5 \"BOOTP\" shall indicate the values will be "
          "assigned utilizing BOOTP. See RFC 951 and related. \n"
          "A value of 6 \"IPv4 Link Local\" shall indicate the "
          "values will be assigned using the IPv4 Link Local "
          "protocol. See RFC 3927.\n"
          "A value of 7 \"DHCPv6\" shall indicate the values will "
          "be assigned using DHCPv6. See RFC 3315. \n"
          "A value of 8 \"IPv6 AutoConfig \" shall indicate the "
          "values will be assigned using the IPv6 AutoConfig. See "
          "RFC 4862. \n"
          "A value of 9 \"Stateless\" shall indicate Stateless will "
          "be assigned. \n"
          "A value of 10 \"Link Local\" shall indicate Link Local "
          "values will be assigned." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "..", "32768.." }, 
       Values { "Unknown", "Other", "Not Applicable", "Static", 
          "DHCP", "BOOTP", "IPv4 Link Local", "DHCPv6", 
          "IPv6AutoConfig", "Stateless", "Link Local", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 AddressOrigin = 0;

      [Description ( "An enumeration that describes the IP version." ), 
       ValueMap { "0", "..", "4096", "4097", "32768.." }, 
       Values { "Unknown", "DMTF Reserved", "IPv4", "IPv6", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_ProtocolEndpoint.ProtocolIFType" }]
   uint16 ProtocolIFType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "The settings for the usage of an iSCSI NetworkPortal by an "
       "iSCSIProtcolEndpoint. These settings are the starting point "
       "for negotiation for connection establishment. If an "
       "implmentation supports different connections settings for a "
       "NetworkPortal for each iSCSIProtocolEndpoint that is bound to "
       "it, an instance of this class will be associated by "
       "ElementSettingData to an instance of iSCSIProtocolEndpoint. If "
       "an implementation supports the same connection settings for a "
       "NetworkPortal for all iSCSIProtocolEndpoints then an instance "
       "of this class will be associated by ElementSettingData to an "
       "instance of either TCPProtocolEndpoint (When the NetworkPortal "
       "is a target) or IPProtocolEndpoint (When the NetworkPortal is "
       "an initiator). The properties that reflect the actual outcome "
       "of the negotiation are found in the iSCSIConnection class." )]
class CIM_iSCSIConnectionSettings : CIM_SettingData {

      [Write, Description ( 
          "The maximum PDU length this portal can receive. This MAY "
          "be constrained by hardware characteristics and "
          "individual implementations MAY choose not to allow this "
          "property to be changed." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiPortalMaxRecvDataSegLength" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.MaxReceiveDataSegmentLength" }]
   uint32 MaxReceiveDataSegmentLength = 8192;

      [Write, Description ( 
          "The preferred header digest for this portal." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "No Digest", "CRC32C" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiPortalPrimaryHdrDigest" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.HeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.OtherPrimaryHeaderDigestMethod" }]
   uint16 PrimaryHeaderDigestMethod = 3;

      [Write, Description ( 
          "A string describing the preferred Header Digest method "
          "when PrimaryHeaderDigestMethod is equal to the value 1, "
          "\"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.OtherHeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.PrimaryHeaderDigestMethod" }]
   string OtherPrimaryHeaderDigestMethod;

      [Write, Description ( 
          "The preferred data digest method for this portal." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "No Digest", "CRC32C" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiPortalPrimaryDataDigest" }, 
       ModelCorrespondence { "CIM_iSCSIConnection.DataDigestMethod", 
          "CIM_iSCSIConnectionSettings.OtherPrimaryDataDigestMethod" }]
   uint16 PrimaryDataDigestMethod = 3;

      [Write, Description ( 
          "A string describing the preferred Data Digest method "
          "when PrimaryDataDigestMethod is equal to the value 1, "
          "\"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.OtherDataDigestMethod", 
          "CIM_iSCSIConnectionSettings.PrimaryDataDigestMethod" }]
   string OtherPrimaryDataDigestMethod;

      [Write, Description ( 
          "The secondary header digest preference for this portal." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "No Digest", "CRC32C", 
          "No Secondary Preference" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiPortalSecondaryHdrDigest" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.HeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.OtherSecondaryHeaderDigestMethod" }]
   uint16 SecondaryHeaderDigestMethod = 2;

      [Write, Description ( 
          "A string describing the alternate Header Digest method "
          "preference when SecondaryHeaderDigestMethod is equal to "
          "the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.OtherHeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.SecondaryHeaderDigestMethod" }]
   string OtherSecondaryHeaderDigestMethod;

      [Write, Description ( 
          "The secondary data digest preference for this portal." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "No Digest", "CRC32C", 
          "No Secondary Preference" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiPortalSecondaryDataDigest" }, 
       ModelCorrespondence { "CIM_iSCSIConnection.DataDigestMethod", 
          "CIM_iSCSIConnectionSettings.OtherSecondaryDataDigestMethod" }]
   uint16 SecondaryDataDigestMethod = 2;

      [Write, Description ( 
          "A string describing the alternate Data Digest method "
          "preference when SecondaryDataDigestMethod is equal to "
          "the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSIConnection.OtherDataDigestMethod", 
          "CIM_iSCSIConnectionSettings.SecondaryDataDigestMethod" }]
   string OtherSecondaryDataDigestMethod;

      [Write, Description ( 
          "This property indicates whether or not this portal will "
          "request markers in it\'s incoming data stream." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiPortalRecvMarker" }, 
       ModelCorrespondence { "CIM_iSCSIConnection.ReceivingMarkers" }]
   boolean RequestingMarkersOnReceive = false;

      [Description ( 
          "The preferred primary authentication method for "
          "connections, as communicated during the login phase." ), 
       ValueMap { "2", "3", "4", "5", "6" }, 
       Values { "None", "No Authentication", "SRP", "CHAP", 
          "Kerberos" }, 
       MappingStrings { "MIB.IETF|IPS-AUTH-MIB.ipsAuthCredAuthMethod" }, 
       ModelCorrespondence { 
          "CIM_iSCSICapabilities.AuthenticationMethodsSupported", 
          "CIM_iSCSIConnectionSettings.SecondaryAuthenticationMethod", 
          "CIM_iSCSIConnection.AuthenticationMethodUsed" }]
   uint16 PrimaryAuthenticationMethod = 5;

      [Description ( 
          "The preferred secondary authentication method for "
          "connections, as communicated during the login phase." ), 
       ValueMap { "2", "3", "4", "5", "6" }, 
       Values { "None", "No Authentication", "SRP", "CHAP", 
          "Kerberos" }, 
       MappingStrings { "MIB.IETF|IPS-AUTH-MIB.ipsAuthCredAuthMethod" }, 
       ModelCorrespondence { 
          "CIM_iSCSICapabilities.AuthenticationMethodsSupported", 
          "CIM_iSCSIConnectionSettings.PrimaryAuthenticationMethod", 
          "CIM_iSCSIConnection.AuthenticationMethodUsed" }]
   uint16 SecondaryAuthenticationMethod = 3;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "Statistics for Logins and Logouts to or from an iSCSI Node. An "
       "instance of this class will be associated by "
       "ElementStatisticalData to an instance of "
       "SCSIProtocolController that represents the Node. The Node can "
       "be either an Initiator or Target and so the interpretation of "
       "the properties in this class varies accordingly." )]
class CIM_iSCSILoginStatistics : CIM_StatisticalData {

      [Description ( 
          "This property counts the number of times a login attempt "
          "from this node(initiator) or to this node(target) has "
          "failed." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginFailures", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginFailures" }]
   uint64 LoginFailures;

      [Description ( 
          "The timestamp of the most recent failure of a login "
          "attempt from this node(initiator) or to this "
          "node(target). A value of zero indicates that no such "
          "failures have occurred since the last system boot." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastFailureTime", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastFailureTime" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName" }]
   datetime LastLoginFailureTime;

      [Description ( 
          "The type of the most recent failure of a login attempt "
          "from this node(initiator) or to this node(target)." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Negotiate", "Authenticate", "Authorize", 
          "Redirect" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastFailureType", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastFailureType" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.OtherLastLoginFailureType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureTime", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName" }]
   uint16 LastLoginFailureType;

      [Description ( 
          "A string describing the type of the last login failure "
          "when LastLoginFailureType is equal to the value 1, "
          "\"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureType" }]
   string OtherLastLoginFailureType;

      [Description ( 
          "The iSCSI name of the remote node that failed the last "
          "login attempt." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastTgtFailureName", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastIntrFailureName" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureTime", 
          "CIM_iSCSILoginStatistics.LastLoginFailureType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddressType", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddress" }]
   string LastLoginFailureRemoteNodeName;

      [Description ( 
          "The type of Internet Network Address of the remote node "
          "that failed the last login attempt." ), 
       ValueMap { "1", "2" }, 
       Values { "IPv4", "IPv6" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastTgtFailureAddrType", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastIntrFailureAddrType" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddress" }]
   uint16 LastLoginFailureRemoteAddressType;

      [Description ( 
          "An Internet Network Address giving the host address of "
          "the remote node that failed the last login attempt." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLastTgtFailureAddr", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLastIntrFailureAddr" }, 
       ModelCorrespondence { 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteNodeName", 
          "CIM_iSCSILoginStatistics.LastLoginFailureRemoteAddressType" }]
   uint32 LastLoginFailureRemoteAddress;

      [Description ( 
          "The count of Login Response PDUs with status 0x0000, "
          "Accept Login, received by this node(initator), or "
          "transmitted by this node (target)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginAcceptRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginAccepts" }]
   uint64 SuccessfulLogins;

      [Description ( 
          "If the node is an initiator this property is the number "
          "of times it has aborted a login because parameter "
          "negotiation with the target failed. \n"
          "If the node is a target the property is the number of "
          "times a it has effectively refused a login because the "
          "parameter negotiation failed. While this situation can "
          "occur, the exact mechanism is as yet undefined in the "
          "iSCSI Protocol Spec." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginNegotiateFails", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginNegotiateFails" }]
   uint64 NegotiationLoginFailures;

      [Description ( 
          "If the node is an initiator this property is the number "
          "of times it has aborted a login because the target could "
          "not be authenticated. If the node is a target this "
          "property is the count of Login Response PDUs with status "
          "0x0201, Authentication Failed, transmitted by this "
          "target." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginAuthenticateFails", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginAuthenticateFails" }]
   uint64 AuthenticationLoginFailures;

      [Description ( 
          "If the node is an initiator this property is the count "
          "of Login Response PDUs with status class 0x201, "
          "\'Authentication Failed\', received by this initiator. "
          "If the node is a target the property is the count of "
          "Login Response PDUs with status 0x0202, \'Forbidden "
          "Target\', transmitted by this target." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginAuthFailRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginAuthorizeFails" }]
   uint64 AuthorizationLoginFailures;

      [Description ( 
          "The count of Login Response PDUs with status class 0x01, "
          "Redirection, received by this node(initiator) or "
          "transmitted by this node(target)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginRedirectRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginRedirects" }]
   uint64 LoginRedirects;

      [Description ( 
          "The number of failure Login Response PDUs which were "
          "received by this node(initiator) or were transmitted by "
          "this node(target), and which were not counted by any "
          "other property in this class." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLoginOtherFailRsps", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLoginOtherFails" }]
   uint64 OtherLoginFailures;

      [Description ( 
          "The count of Logout Command PDUs generated by this node "
          "(initiator) or received by this node(target), with "
          "reason code 0 (closes the session)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLogoutNormals", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLogoutNormals" }]
   uint64 NormalLogouts;

      [Description ( 
          "The count of Logout Command PDUs generated by this node, "
          "(initiator) or received by this node(target), with any "
          "reason code other than 0." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiIntrLogoutOthers", 
          "MIB.IETF|iSCSI-MIB.iscsiTgtLogoutOthers" }]
   uint64 OtherLogouts;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "Failure Statistics for Sessions associated with a iSCSI Node. "
       "An instance of this class will be associated by "
       "ElementStatisticalData to an instance of "
       "SCSIProtocolController representing an iSCSI Node. These "
       "statistics are associated to a Node since they describe the "
       "aggregated Session data for all failed Sessions associated to "
       "iSCSI protocol endpoints used by the Node." )]
class CIM_iSCSISessionFailures : CIM_StatisticalData {

      [Description ( 
          "The number of times a session belonging to this Network "
          "Entity has been failed." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiInstSsnFailures" }]
   uint64 SessionFailures;

      [Description ( "The type of the last session failure." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Digest", "Timeout", "Format" }, 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiInstLastSsnFailureType" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionFailures.OtherLastSessionFailureType", 
          "CIM_iSCSISessionFailures.LastSessionFailureRemoteNodeName" }]
   uint16 LastSessionFailureType;

      [Description ( 
          "A string describing the type of the last Session failure "
          "when LastSessionFailureType is equal to the value 1, "
          "\"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSISessionFailures.LastSessionFailureType" }]
   string OtherLastSessionFailureType;

      [Description ( 
          "The iSCSI name of the remote node from the failed session."
           ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiInstLastSsnRmtNodeName" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionFailures.LastSessionFailureType" }]
   string LastSessionFailureRemoteNodeName;

      [Description ( 
          "The count of sessions which were failed due to receipt "
          "of a PDU containing header or data digest errors." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiInstSsnDigestErrors" }]
   uint64 SessionDigestFailures;

      [Description ( 
          "The count of sessions which were failed due to a "
          "sequence exceeding a time limit." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiInstSsnCxnTimeoutErrors" }]
   uint64 SessionConnectionTimeoutFailures;

      [Description ( 
          "The count of sessions which were failed due to receipt "
          "of a PDU which contained a format error." ), 
       Counter, MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiInstSsnFormatErrors" }]
   uint64 SessionFormatErrors;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "The default negotiation settings for an iSCSI Session. These "
       "properties are used as the starting position for login "
       "negotiations between initiator and target nodes. The "
       "properties describing the resulting outcome of the login "
       "negotiation are in the iSCSISession class. Depending on a "
       "given implementation an instance of iSCSISessionSettings will "
       "be associated by ElementSettingData to one or more instances "
       "of iSCSIProtocolEndpoint, SCSIProtocolController, or "
       "ComputerSystem." )]
class CIM_iSCSISessionSettings : CIM_SettingData {

      [Write, Description ( 
          "The maximum number of connections allowed in each "
          "session to and/or from this node." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeMaxConnections" }, 
       ModelCorrespondence { 
          "CIM_iSCSISession.MaxConnectionsPerSession" }]
   uint32 MaxConnectionsPerSession = 1;

      [Write, Description ( 
          "This property indicates the InitialR2T preference for "
          "this node: true = YES, false = will try to negotiate NO, "
          "will accept YES." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeInitialR2T" }, 
       ModelCorrespondence { "CIM_iSCSISession.InitialR2T" }]
   boolean InitialR2TPreference = true;

      [Write, Description ( 
          "This property indicates ImmediateData preference for "
          "this node True = YES (but will accept NO), False = NO." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeImmediateData" }, 
       ModelCorrespondence { "CIM_iSCSISession.ImmediateData" }]
   boolean ImmediateDataPreference = true;

      [Write, Description ( 
          "Maximum number of outstanding R2Ts allowed per ISCSI task."
           ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeMaxOutstandingR2T" }, 
       ModelCorrespondence { "CIM_iSCSISession.MaxOutstandingR2T" }]
   uint32 MaxOutstandingR2T = 1;

      [Write, Description ( 
          "The maximum length (bytes) supported for unsolicited "
          "data to/from this node." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeFirstBurstLength" }, 
       ModelCorrespondence { 
          "CIM_iSCSISession.MaxUnsolicitedFirstDataBurstLength" }]
   uint32 MaxUnsolicitedFirstDataBurstLength = 65536;

      [Write, Description ( 
          "The maximum number of bytes which can be sent within a "
          "single sequence of Data-In or Data-Out PDUs." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeMaxBurstLength" }, 
       ModelCorrespondence { "CIM_iSCSISession.MaxDataBurstLength" }]
   uint32 MaxDataBurstLength = 262144;

      [Write, Description ( 
          "The DataSequenceInOrder preference of this node. False "
          "(=No) indicates that iSCSI data PDU sequences MAY be "
          "transferred in any order. True (=Yes) indicates that "
          "data PDU sequences MUST be transferred using "
          "continuously increasing offsets, except during error "
          "recovery." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDataSequenceInOrder" }, 
       ModelCorrespondence { "CIM_iSCSISession.DataSequenceInOrder" }]
   boolean DataSequenceInOrderPreference = true;

      [Write, Description ( 
          "The DataPDUInOrder preference of this node. False (=No) "
          "indicates that iSCSI data PDUs within sequences MAY be "
          "in any order. True (=Yes) indicates that data PDUs "
          "within sequences MUST be at continuously increasing "
          "addresses, with no gaps or overlay between PDUs." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeDataPDUInOrder" }, 
       ModelCorrespondence { "CIM_iSCSISession.DataPDUInOrder" }]
   boolean DataPDUInOrderPreference = true;

      [Write, Description ( 
          "The DefaultTime2Wait preference of this node. This is "
          "the minimum time, in seconds, to wait before attempting "
          "an explicit/implicit logout or active iSCSI task "
          "reassignment after an unexpected connection termination "
          "or a connection reset." ), 
       Units ( "Seconds" ), 
       MinValue ( 0 ), 
       MaxValue ( 3600 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDefaultTime2Wait" }, 
       ModelCorrespondence { "CIM_iSCSISession.DefaultTimeToWait" }]
   uint32 DefaultTimeToWaitPreference = 2;

      [Write, Description ( 
          "The DefaultTime2Retain preference of this node. This is "
          "the maximum time, in seconds after an initial wait "
          "(Time2Wait), before which an active iSCSI task "
          "reassignment is still possible after an unexpected "
          "connection termination or a connection reset." ), 
       Units ( "Seconds" ), 
       MinValue ( 0 ), 
       MaxValue ( 3600 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDefaultTime2Retain" }, 
       ModelCorrespondence { "CIM_iSCSISession.DefaultTimeToRetain" }]
   uint32 DefaultTimeToRetainPreference = 20;

      [Write, Description ( 
          "The ErrorRecoveryLevel preference of this node. "
          "Currently, only 0-2 are valid. This is designed to "
          "accommodate future error recover levels. \n"
          "Higher error recovery levels imply support in addition "
          "to support for the lower error level functions. In other "
          "words, error level 2 implies support for levels 0-1, "
          "since those functions are subsets of error level 2." ), 
       MinValue ( 0 ), 
       MaxValue ( 255 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeErrorRecoveryLevel" }, 
       ModelCorrespondence { "CIM_iSCSISession.ErrorRecoveryLevel" }]
   uint32 ErrorRecoveryLevelPreference = 0;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "NextHopRoute represents one of a series of \'hops\' to reach a "
       "network destination. A route is administratively defined, or "
       "calculated/learned by a particular routing process. A "
       "ConcreteDependency associaton may be instantiated between a "
       "route and its routing service to indicate this. (In this "
       "scenario, the route is dependent on the service.)" )]
class CIM_NextHopRoute : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "The address which serves as the destination to be reached."
           )]
   string DestinationAddress;

      [Description ( 
          "The specific administrative distance of this route, "
          "overriding any default distances specified by the system "
          "or routing service." )]
   uint16 AdminDistance;

      [Description ( 
          "RouteMetric provides a numeric indication as to the "
          "preference of this route, compared to other routes that "
          "reach the same destination." )]
   uint16 RouteMetric;

      [Description ( 
          "TRUE indicates that this is a static route, and FALSE "
          "indicates a dynamically-learned route." )]
   boolean IsStatic;

      [Description ( 
          "An enumerated integer indicating whether the route is "
          "administrator-defined (value=2), computed (via a routing "
          "protocol/algorithm, value=3) or the actual route "
          "implemented in the network (value=4). The default is a "
          "computed route." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Administrator Defined Route", "Computed Route", 
          "Actual Route" }]
   uint16 TypeOfRoute = 3;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SAEndpointConnectionStatistics 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "This class captures statistical and time-related information "
       "about the use of the IPsec or IKE Security Associations, "
       "through their IPsecSAEndpoint or IKESAEndpoint. The relevant "
       "SAEndpoint is determined by traversing the "
       "ElementStatisticalData association." )]
class CIM_SAEndpointConnectionStatistics : CIM_StatisticalData {

      [Description ( 
          "Number of bytes that have been protected by the "
          "associated SAEndpoint." ), 
       Units ( "Bytes" ), 
       Counter]
   uint64 ByteCount;

      [Description ( 
          "LastAccessed indicates when the SAEndpoint was last "
          "used. This property is helpful in determining if the SA "
          "(and its endpoint) will be deleted due to sitting idle." )]
   datetime LastAccessed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SAEndpointRefreshSettings 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "SAEndpointRefreshSettings hold the refresh thresholds for the "
       "SecurityAssociationEndpoint. Since these settings may change "
       "for an SA, the properties are defined both in this class and "
       "in SecurityAssociationEndpoint." )]
class CIM_SAEndpointRefreshSettings : CIM_SettingData {

      [Write, Description ( 
          "RefreshThresholdSecondsPercentage is the lifetime "
          "percentage after which a new SA should be acquired, "
          "before the existing SA expires." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.RefreshThresholdSecondsPercentage" }]
   uint8 RefreshThresholdSecondsPercentage;

      [Write, Description ( 
          "RefreshThresholdKbytesPercentage is the lifetime "
          "percentage of kilobytes processed, at which a new SA "
          "should be acquired." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.RefreshThresholdKbytesPercentage" }]
   uint8 RefreshThresholdKbytesPercentage;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "SchedulingElement represents the configuration information "
       "that a PacketSchedulingService has for one of the elements "
       "that it is scheduling. The scheduled element is either a "
       "QueuingService or another Packet SchedulingService. \n"
       "\n"
       "Among the subclasses of this class, some are defined in such a "
       "way that all of their instances are work conserving. Other "
       "subclasses, however, have instances that either are or are not "
       "work conserving. In this class, the boolean property "
       "WorkConserving indicates whether an instance is or is not work "
       "conserving. Note that WorkConserving is restricted to TRUE in "
       "the subclasses that are inherently work conserving, since "
       "instances of these classes cannot be anything else." )]
class CIM_SchedulingElement : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Write, Description ( 
          "A boolean property indicating whether the "
          "PacketSchedulingService tied to this instance (by the "
          "ElementInSchedulingService aggregation) is treating the "
          "queue/input tied to this instance, in a work-conserving "
          "manner. The queue/input is indicated by either the "
          "QueueToSchedule or SchedulingServiceToSchedule "
          "association. Note that this property is writeable, "
          "indicating that an administrator can change the behavior "
          "of the SchedulingElement - but only for those elements "
          "that can operate in a non-work conserving mode." )]
   boolean WorkConserving;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A representation of the SettingData of an SSH endpoint." )]
class CIM_SSHSettingData : CIM_SettingData {

      [Write, Description ( 
          "An array of integers indicating the version or versions "
          "of SSH protocol that will be enabled for the SSH "
          "endpoint." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "SSHv1", "SSHv2", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_SSHSettingData.OtherEnabledSSHVersion" }]
   uint16 EnabledSSHVersions[];

      [Write, Description ( 
          "When the EnabledSSHVersions property contains a value of "
          "1, \"Other\" then this is a free form string providing "
          "more information about the SSH protocol. If not set to "
          "1, this string has no meaning." ), 
       ModelCorrespondence { "CIM_SSHSettingData.EnabledSSHVersions" }]
   string OtherEnabledSSHVersion;

      [Write, Description ( 
          "The version of SSH that will be in use if this "
          "SettingData is applied." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "SSHv1", "SSHv2", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_SSHSettingData.OtherSSHVersion", 
          "CIM_SSHSettingData.EnabledSSHVersions" }]
   uint16 SSHVersion;

      [Write, Description ( 
          "If the CurrentSSHVersion property is set to 1, \"Other\" "
          "then this is a free form string providing more "
          "information about the current SSH protocol. If not set "
          "to 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_SSHSettingData.SSHVersion", 
          "CIM_SSHSettingData.OtherEnabledSSHVersion" }]
   string OtherSSHVersion[];

      [Write, Description ( 
          "An array of integers indicating the encryption "
          "algorithms that are enabled for this SSH service. Its "
          "possible for an encryption algorithm to be supported and "
          "not currently enabled to be used." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Unknown", "Other", "DES", "DES3", "RC4", "IDEA", 
          "SKIPJACK", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHSettingData.OtherEnabledEncryptionAlgorithm" }]
   uint16 EnabledEncryptionAlgorithms[];

      [Write, Description ( 
          "If the EnabledEncryptionAlgorithms property is set 1, "
          "\"Other\" this property contains a free form string "
          "providing more information about supported algorithms. "
          "If not set to 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.EnabledEncryptionAlgorithms" }]
   string OtherEnabledEncryptionAlgorithm[];

      [Write, Description ( 
          "The encryption algorithm that will be in use if this "
          "SettingData is applied." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", ".." }, 
       Values { "Unknown", "Other", "DES", "DES3", "RC4", "IDEA", 
          "SKIPJACK", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_SSHSettingData.OtherEncryptionAlgorithm", 
          "CIM_SSHProtocolEndpoint.EnabledEncryptionAlgorithms" }]
   uint16 EncryptionAlgorithm;

      [Write, Description ( 
          "If the EncryptionAlgorithm property is set 1, \"Other\" "
          "then this is a free form string providing more "
          "information about the encryption algorithm in use. If "
          "not set to 1, this string has no meaning." ), 
       ModelCorrespondence { 
          "CIM_SSHSettingData.EncryptionAlgorithm", 
          "CIM_SSHSettingData.OtherEnabledEncryptionAlgorithm" }]
   string OtherEncryptionAlgorithm;

      [Write, Description ( 
          "IdleTimeout specifies how long the connection can be "
          "idle before the connection is terminated. The default "
          "value, 0, indicates that there is no idle timeout "
          "period." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 IdleTimeout = 0;

      [Write, Description ( 
          "If this property is true, the SSH keep alive timer is enabled."
           )]
   boolean KeepAlive = false;

      [Write, Description ( 
          "If this property is true, the SSH X11 forwarding mode is enabled."
           )]
   boolean ForwardX11 = false;

      [Write, Description ( 
          "If this property is true, SSH compression is enabled." )]
   boolean Compression = true;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Network::IP" ), 
    Description ( 
       "CIM_StaticIPAssignmentSettingData defines a basic IP "
       "configuration which could be statically assigned to an "
       "IPProtocolEndpoint. This class defines a partial "
       "configuration. Instances are aggregated into an instance of "
       "IPAssignmentSettingData which defines a full configuration." )]
class CIM_StaticIPAssignmentSettingData : CIM_IPAssignmentSettingData {

      [Override ( "AddressOrigin" ), 
       Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask, and Gateway were assigned to the "
          "IPProtocolEndpoint. A value of 2 indicates that the "
          "application of the IPAssignmentSettingData instance does "
          "not affect these properties." ), 
       ValueMap { "0..2", "3", "4..32767", "32768.." }, 
       Values { "DMTF Reserved", "Static", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 AddressOrigin = 3;

      [Write, Description ( 
          "The IPv4 address that will be assigned to the ProtocolEndpoint."
           )]
   string IPv4Address;

      [Write, Description ( 
          "The subnet mask for the IPv4 address of this "
          "ProtocolEndpoint, if one is defined." )]
   string SubnetMask;

      [Write, Description ( 
          "The IP v4 address of the default gateway." )]
   string GatewayIPv4Address;

      [Write, Description ( 
          "GatewayIPv6Address is used to identify the IPv6 address "
          "of the Gateway" )]
   string GatewayIPv6Address;

      [Write, Description ( 
          "The IPv6 address that this ProtocolEndpoint represents." ), 
       ModelCorrespondence { 
          "CIM_StaticIPAssignmentSettingData.IPv6AddressType", 
          "CIM_StaticIPAssignementSettingData.IPv6SubnetPrefixLength" }]
   string IPv6Address;

      [Write, Description ( 
          "IPv6AddressType identifies the type of address found in "
          "the IPv6Address property of this class. The values of "
          "this property shall be interpreted according to RFC4291, "
          "Section 2.4" ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "32768..65535" }, 
       Values { "Unspecified", "Loopback", "Multicast", 
          "Link Local Unicast", "Global Unicast", 
          "Embedded IPv4 Address", "Site Local Unicast", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_StaticIPAssignmentSettingData.IPv6AddressType" }]
   uint16 IPv6AddressType;

      [Write, Description ( 
          "IPv6SubnetPrefixLength is used to identify the prefix "
          "length of the IPv6Address property that is used to "
          "specify a subnet" ), 
       ModelCorrespondence { 
          "CIM_StaticIPAssignementSettingData.IPv6Address" }]
   uint16 IPv6SubnetPrefixLength;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A representation of the settings of a Telnet server "
       "connection. The relationship between the SettingData and the "
       "TelnetProtocolEndpoint is described by instantiating the "
       "ElementSettingData association." )]
class CIM_TelnetSettingData : CIM_SettingData {

      [Write, Description ( 
          "An array of integers indicating the terminal modes that "
          "will be enabled." ), 
       ValueMap { "1", "2", "3", "..", "32768..65535" }, 
       Values { "Other", "VT100", "ANSI", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_TelnetSettingData.OtherEnabledTerminalMode" }]
   uint16 EnabledTerminalModes[];

      [Write, Description ( 
          "When the EnabledTerminalModes property contains a value "
          "of 1, \"Other\" then free form string providing more "
          "information about the enabled terminal mode. If it does "
          "not contain 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetSettingData.EnabledTerminalModes" }]
   string OtherEnabledTerminalMode[];

      [Write, Description ( 
          "The terminal mode that will be in use if this "
          "SettingData is applied." ), 
       ValueMap { "1", "2", "3", "..", "32768..65535" }, 
       Values { "Other", "VT100", "ANSI", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_TelnetSettingData.OtherTerminalMode", 
          "CIM_TelnetSettingData.EnabledTerminalModes" }]
   uint16 TerminalMode;

      [Write, Description ( 
          "If the TerminalMode property is set to 1, \"Other\" then "
          "this is a free form string providing more information "
          "about the current terminal mode. If not set to 1, this "
          "string has no meaning." ), 
       ModelCorrespondence { "CIM_TelnetSettingData.TerminalMode" }]
   string OtherTerminalMode;

      [Write, Description ( 
          "An array of integers indicating the Character display "
          "modes enabled for the endpoint." ), 
       ValueMap { "1", "2", "3", "..", "32768..65535" }, 
       Values { "Other", "Console", "Stream", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_TelnetSettingData.OtherEnabledCharacterDisplayMode" }]
   uint16 EnabledCharacterDisplayModes[];

      [Write, Description ( 
          "When the EnabledCharacterDisplayModes property contains "
          "a value of 1, \"Other\" then this is a free form string "
          "providing more information about the enabled modes. If "
          "it does not contain 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.EnabledCharacterDisplayModes" }]
   string OtherEnabledCharacterDisplayMode[];

      [Write, Description ( 
          "The character display mode that will be active if this "
          "SettingData is applied." ), 
       ValueMap { "1", "2", "3", "..", "32768..65535" }, 
       Values { "Other", "Console", "Stream", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_TelnetSettingData.OtherCharacterDisplayMode", 
          "CIM_TelnetProtocolEndpoint.EnabledCharacterDisplayModes" }]
   uint16 CharacterDisplayMode;

      [Write, Description ( 
          "When the CharacterDisplayMode property is set to 1, "
          "\"Other\" then this is a free form string providing more "
          "information about the character display mode. If not set "
          "to 1, this string has no meaning." ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.CharacterDisplayMode", 
          "CIM_TelnetSettingData.OtherEnabledCharacterDisplayMode" }]
   string OtherCharacterDisplayMode;

      [Write, Description ( 
          "String indicating the Escape Character that will be in "
          "effect if this SettingData is applied." ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.EscapeCharacter" }]
   string EscapeCharacter;

      [Write, Description ( 
          "IdleTimeout specifies how long the connection can be "
          "idle before it is closed. The default value, 0, "
          "indicates that there is no idle timeout period." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 IdleTimeout = 0;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "The VLAN configuration data for an endpoint. Note that certain "
       "properties only apply based on the value in the VLANEndpoint. "
       "OperationalEndpointMode property. If it is set to trunking "
       "mode then NativeVLAN, PruneEligibleVLANList, DefaultVLAN and "
       "TrunkedVLANList are applicable. If it is set to in access "
       "mode, then AccessVLAN is applicable. An instance of this class "
       "is associated to the endpoint to which it applies using "
       "ElementSettingData." )]
class CIM_VLANEndpointSettingData : CIM_SettingData {

      [Write, Description ( 
          "If a VLAN Id is part of this array, then the system MAY "
          "prune that VLAN on the related trunk endpoint/port. This "
          "property is applicable only when the endpoint is "
          "operating in trunking mode (determined by examining the "
          "OperationalEndpointMode property)." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode" }]
   uint16 PruneEligibleVLANList[];

      [Write, Description ( 
          "VLAN Id that is used to tag untagged traffic received on "
          "this trunk endpoint/port. This property is applicable "
          "only when the endpoint is operating in trunking mode "
          "(determined by examining the SwitchEndpointMode "
          "property)." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode" }]
   uint16 NativeVLAN;

      [Description ( 
          "Default value for the native VLAN on this trunk "
          "endpoint/port. This property is applicable only when the "
          "endpoint is operating in trunking mode (determined by "
          "examining the OperationalEndpointMode property)." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode" }]
   uint16 DefaultVLAN;

      [Write, Description ( 
          "If a VLAN Id is part of this array, then the system MAY "
          "trunk the traffic on the related endpoint/port. This "
          "property is applicable only when the endpoint is "
          "operating in trunking mode (determined by examining the "
          "OperationalEndpointMode property)." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode" }]
   uint16 TrunkedVLANList[];

      [Write, Description ( 
          "The access VLAN for the referenced VLANEndpoint." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode" }]
   uint16 AccessVLAN;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::Wireless" ), 
    Description ( 
       "CIM_WiFiEndpointSettings describes setting data that can be "
       "applied to an instance of CIM_WiFiEndpoint to enable it to "
       "associate to a particular Wi-Fi network." )]
class CIM_WiFiEndpointSettings : CIM_SettingData {

      [Description ( 
          "Priority shall indicate the priority of the instance "
          "among all WiFiEndpointSettings instances." )]
   uint8 Priority;

      [Description ( 
          "SSID shall indicate the Service Set Identifier (SSID) "
          "that shall be used when the settings are applied to a "
          "WiFiEndpoint. An SSID identifies a wireless network." ), 
       MappingStrings { "IEEE 802.11-2007 | 7.3.2.1" }]
   string SSID;

      [Description ( 
          "BSSType shall indicate the Basic Service Set (BSS) Type "
          "that shall be used when the settings are applied. A "
          "Basic Service Set is a set of stations controlled by a "
          "single coordination function.\n"
          "\t* Independent: the WiFiEndpoint is associated directly "
          "to another client station.\n"
          "\t* Infrastructure: the WiFiEndpoint is associated to a "
          "network via an access point." ), 
       ValueMap { "0", "2", "3", ".." }, 
       Values { "Unknown", "Independent", "Infrastructure", 
          "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 3.16" }]
   uint16 BSSType;

      [Description ( 
          "EncryptionMethod shall specify the 802.11 encryption "
          "method used when the settings are applied. \t* Other "
          "(1): shall indicate that the desired encryption method "
          "is not specified in the list below. If this value is "
          "used, OtherEncryptionMethod should not be NULL and "
          "should not be empty.\n"
          "\t* WEP (2): shall indicate that the desired encryption "
          "method is Wired Equivalency Privacy (WEP). This value "
          "should be used only if AuthenticationMethod contains 2 "
          "(\"Open System\") or 3 (\"Shared Key\").\n"
          "\t* TKIP (3): shall indicate that the desired encryption "
          "method is Temporal Key Integrity Protocol (TKIP). This "
          "value should be used only if AuthenticationMethod "
          "contains 4 (\"WPA PSK\"), 5 (\"WPA IEEE 802.1x\"), 6 "
          "(\"WPA2 PSK\"), or 7 (\"WPA2 IEEE 802.1x\").\n"
          "\t* CCMP (4): shall indicate that the desired encryption "
          "method is Counter Mode with Cipher Block Chaining "
          "Message Authentication Code Protocol (CCMP). This value "
          "should be used only if AuthenticationMethod contains 4 "
          "(\"WPA PSK\"), 5 (\"WPA IEEE 802.1x\"), 6 (\"WPA2 PSK\"), "
          "or 7 (\"WPA2 IEEE 802.1x\").\n"
          "\t* None (5): shall indicate that no encryption is "
          "desired. This value should be used only if "
          "AuthenticationMethod contains 2 (\"Open System\") or 3 "
          "(\"Shared Key\")." ), 
       ValueMap { "1", "2", "3", "4", "5", "6.." }, 
       Values { "Other", "WEP", "TKIP", "CCMP", "None", 
          "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 8" }, 
       ModelCorrespondence { "CIM_WiFiEndpoint.EncryptionMethod", 
          "CIM_WiFiEndpointSettings.AuthenticationMethod", 
          "CIM_WiFiEndpointSettings.OtherEncryptionMethod" }]
   uint16 EncryptionMethod;

      [Description ( 
          "OtherEncryptionMethod shall specify the 802.11 "
          "encryption method used when the settings are applied if "
          "and only if EncryptionMethod contains \"Other\". The "
          "format of this string shall be vendor-specific." ), 
       ModelCorrespondence { 
          "CIM_WiFiEndpoint.OtherEncryptionMethod", 
          "CIM_WiFiEndpointSettings.EncryptionMethod" }]
   string OtherEncryptionMethod;

      [Description ( 
          "AuthenticationMethod shall specify the 802.11 "
          "authentication method used when the settings are "
          "applied. \t* Other (1): shall indicate that the desired "
          "authentication method is not specified in the list "
          "below. If AuthenticationMethod contains 1, "
          "OtherAuthenticationMethod should not be NULL and should "
          "not be empty.\n"
          "\t* Open System (2): shall indicate that the desired "
          "authentication method is Open System. "
          "AuthenticationMethod should contain 2 only if "
          "EncryptionMethod contains 2 (\"WEP\") or 5 (\"None\").\n"
          "\t* Shared Key (3): shall indicate that the desired "
          "authentication method is Shared Key. "
          "AuthenticationMethod should contain 3 only if "
          "EncryptionMethod contains 2 (\"WEP\") or 5 (\"None\").\n"
          "\t* WPA PSK (4): shall indicate that the desired "
          "authentication method is WPA (Wi-Fi Protected Access) "
          "PSK (Pre-Shared Key). AuthenticationMethod should "
          "contain 4 only if EncryptionMethod contains 3 (\"TKIP\") "
          "or 4 (\"CCMP\").\n"
          "\t* WPA IEEE 802.1x (5): shall indicate that the desired "
          "authentication method is WPA (Wi-Fi Protected Access) "
          "IEEE 802.1x. AuthenticationMethod should contain 5 only "
          "if EncryptionMethod contains 3 (\"TKIP\") or 4 (\"CCMP\").\n"
          "\t* WPA2 PSK (6): shall indicate that the desired "
          "authentication method is WPA2 (Wi-Fi Protected Access "
          "Version 2) PSK (Pre-Shared Key). AuthenticationMethod "
          "should containt 6 only if EncryptionMethod contains 3 "
          "(\"TKIP\") or 4 (\"CCMP\").\n"
          "\t* WPA2 IEEE 802.1x (7): shall indicated that the "
          "desired authentication method is WPA2 (Wi-Fi Protected "
          "Access Version 2) IEEE 802.1x. AuthenticationMethod "
          "should contain 7 only if EncryptionMethod contains 3 "
          "(\"TKIP\") or 4 (\"CCMP\")." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8.." }, 
       Values { "Other", "Open System", "Shared Key", "WPA PSK", 
          "WPA IEEE 802.1x", "WPA2 PSK", "WPA2 IEEE 802.1x", 
          "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 8" }, 
       ModelCorrespondence { 
          "CIM_WiFiEndpoint.AuthenticationMethod", 
          "CIM_WiFiEndpointSettings.EncryptionMethod", 
          "CIM_WiFiEndpointSettings.OtherAuthenticationMethod" }]
   uint16 AuthenticationMethod;

      [Description ( 
          "OtherAuthenticationMethod shall specify the 802.11 "
          "authentication method used when the settings are applied "
          "if and only if AuthenticationMethod contains \"Other\". "
          "The format of this string shall be vendor-specific." ), 
       ModelCorrespondence { 
          "CIM_WiFiEndpoint.OtherAuthenticationMethod", 
          "CIM_WiFiEndpointSettings.AuthenticationMethod" }]
   string OtherAuthenticationMethod;

      [Description ( 
          "Keys shall contain the default WEP encryption keys. Keys "
          "should be non-NULL if and only if EncryptionMethod "
          "contains 2 (\"WEP\")." ), 
       OctetString, ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|IEEE 802.11 MIB.dot11WEPDefaultKeys" }, 
       ModelCorrespondence { "CIM_WiFiEndpointSettings.KeyIndex", 
          "CIM_WiFiEndpointSettings.EncryptionMethod" }]
   string Keys[];

      [Description ( 
          "KeyIndex shall contain the index of the active key in "
          "the Keys array property. KeyIndex should be non-NULL if "
          "and only Keys is non-NULL." ), 
       MappingStrings { 
          "MIB.IETF|IEEE 802.11 MIB.dot11WEPDefaultKeyID" }, 
       ModelCorrespondence { "CIM_WiFiEndpointSettings.Keys" }]
   uint8 KeyIndex;

      [Description ( 
          "The actual binary value of a PSK (pre-shared key). "
          "PSKValue and PSKPassPhrase should not both be non-NULL. "
          "PSKValue should be NULL if AuthenticationMethod does not "
          "contain 4 (\"WPA PSK\") or 6 (\"WPA2 PSK\")." ), 
       OctetString, MappingStrings { 
          "MIB.IETF|IEEE 802.11 MIB.dot11RSNAConfigPSKValue" }, 
       ModelCorrespondence { 
          "CIM_WiFiEndpointSettings.PSKPassPhrase", 
          "CIM_WiFiEndpointSettings.AuthenticationMethod" }]
   uint8 PSKValue[];

      [Description ( 
          "An ASCII alphanumeric string used to generate a PSK "
          "(pre-shared key). PSKPassPhrase and PSKValue should not "
          "both be non-NULL. PSKPassPhrase should be NULL if "
          "AuthenticationMethod does not contain 4 (\"WPA PSK\") or "
          "6 (\"WPA2 PSK\")." ), 
       MinLen ( 8 ), 
       MaxLen ( 63 ), 
       MappingStrings { 
          "MIB.IETF|IEEE 802.11 MIB.dot11RSNAConfigPSKPassPhrase" }, 
       ModelCorrespondence { "CIM_WiFiEndpointSettings.PSKValue", 
          "CIM_WiFiEndpointSettings.AuthenticationMethod" }]
   string PSKPassPhrase;


};

//Copyright (c) 2009 DMTF. All Rights Reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Network::Wireless" ), 
    Description ( 
       "CIM_WiFiNetworkDetectionSettings describes setting data that "
       "control the behavior of the network detection and selection "
       "logic in a Wi-Fi Port." )]
class CIM_WiFiNetworkDetectionSettings : CIM_SettingData {

      [Description ( 
          "Enumeration indicating the type of wireless networks "
          "that will be searched for.\n"
          "A value of 2 \"Any\" shall indicate that no restrictions "
          "are enforced on the SSIDs searched for.\n"
          "A value of 3 \"Preferred\" shall indicate that only "
          "networks listed in the PreferredNetworks property are "
          "searced for." ), 
       ValueMap { "2", "3", "..", "16384..32767" }, 
       Values { "Any", "Preferred", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 TargetNetworkCategories;

      [Description ( 
          "PreferredNetworks lists the SSIDs of preferred wireless "
          "LAN networks. Each value contained shall also be "
          "contained in the KnownNetworks property." )]
   string PreferredNetworks[];

      [Description ( 
          "KnownNetworks lists the SSIDs of networks that have been "
          "previously identified to or by the wireless LAN endpoint "
          "on the platform." )]
   string KnownNetworks[];

      [Description ( 
          "MinimumSignalStrength specifies the minimum signal "
          "strength required to be received by the wireless LAN "
          "endpoint in order for it to attempt to connect to the "
          "wireless network." ), 
       PUnit ( "decibel(m) * -1" )]
   uint16 MinimumSignalStrength;

      [Description ( 
          "ProtocolTypes lists the different 802.11 variations that "
          "a network may support in order to for the wireless "
          "catcher to attempt a connection to the network. The "
          "enumeration values are selected to align with "
          "CIM_ProtocolEndpoint.ProtocolIFType\'s enumeration." ), 
       ValueMap { "0", "1", "70", "71", "72", "73", "..", 
          "16000..65535" }, 
       Values { "Unknown", "Other", "802.11a", "802.11b", "802.11g", 
          "802.11n", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_LogicalPort.PortType" }]
   uint16 PortTypes[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WRRSchedulingElement 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class is a subclass of the abstract class "
       "SchedulingElement. It introduces a new property, "
       "WeightingFactor, to give some inputs a higher probability of "
       "being serviced than other inputs. It also introduces a "
       "Priority property, to serve as a tiebreaker to be used when "
       "inputs have equal weighting factors. As is the case with all "
       "subclasses of SchedulingElement, the input associated with an "
       "instance of WRRSchedulingElement is of one of two types: "
       "either a queue, or another scheduler. Because scheduling of "
       "this type is always work conserving, the inherited boolean "
       "property, WorkConserving, is restricted to TRUE in this class." )]
class CIM_WRRSchedulingElement : CIM_SchedulingElement {

      [Override ( "WorkConserving" )]
   boolean WorkConserving = true;

      [Description ( 
          "A 32-bit bit unsigned integer defining the weighting "
          "factor that offers some inputs a higher probability of "
          "being serviced than other inputs. The property\'s "
          "minimum value is 0, its maximum value is 100000, and its "
          "Units are thousandths." ), 
       Units ( "Thousandths" ), 
       MinValue ( 0 ), 
       MaxValue ( 100000 )]
   uint32 WeightingFactor;

      [Description ( 
          "A 16-bit bit unsigned integer which serves as a "
          "tiebreaker, in the event that two or more inputs have "
          "equal weights. A larger value represents a higher "
          "priority. While this condition may not occur in some "
          "implementations of a weighted round robin scheduler, "
          "many implementations require a priority to resolve an "
          "equal-weight condition. In the instances where this "
          "behavior is not necessary or is undesirable, the "
          "property may be left unspecified. \n"
          "\n"
          "If this property is specified for any of the "
          "WRRSchedulingElements associated with a "
          "PacketSchedulingService, then it MUST be specified for "
          "all WRRSchedulingElements for that "
          "PacketSchedulingService, and the property values for "
          "these WRRSchedulingElements MUST all be different." )]
   uint16 Priority;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaPhysicalStatData 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Physical::StoragePackage" ), 
    Description ( 
       "Statistics related to reading physical labels and picks/puts "
       "at a specific StorageMediaLocation, or for a specific piece of "
       "PhysicalMedia. The same class is used to represent this data - "
       "whether for a Location (independent of the Media), OR for the "
       "Media (independent of its StorageMediaLocation). The element "
       "whose statistics are described is associated using the "
       "relationship, ElementStatisticalData." )]
class CIM_MediaPhysicalStatData : CIM_StatisticalData {

      [Description ( 
          "The number of successful physical label scans." ), 
       Counter]
   uint64 ScanSuccesses;

      [Description ( "The number of failed physical label scans." ), 
       Counter]
   uint64 ScanFailures;

      [Description ( "The number of retried physical label scans." ), 
       Counter]
   uint64 ScanRetries;

      [Description ( "The number of successful picks." ), 
       Counter]
   uint64 PickSuccesses;

      [Description ( "The number of failed picks." ), 
       Counter]
   uint64 PickFailures;

      [Description ( "The number of retried picks." ), 
       Counter]
   uint64 PickRetries;

      [Description ( "The number of successful puts." ), 
       Counter]
   uint64 PutSuccesses;

      [Description ( "The number of failed puts." ), 
       Counter]
   uint64 PutFailures;

      [Description ( "The number of retried puts." ), 
       Counter]
   uint64 PutRetries;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalCapacity 
// ==================================================================
   [Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "PhysicalCapacity is an abstract class describing a "
       "PhysicalElement\'s minimum/maximum requirements and ability to "
       "support different types of hardware. For example, minimum and "
       "maximum memory requirements can be modeled as a subclass of "
       "CIM_PhysicalCapacity. \n"
       "\n"
       "Note that the items described in subclasses of "
       "PhysicalCapacity, for example the class ConfigurationCapacity, "
       "are either directly PhysicalElements (such as I/O slots or "
       "storage library magazines) or closely associated to "
       "PhysicalElements via the Realizes relationship (i.e., "
       "LogicalDevices such as batteries or processors)." )]
class CIM_PhysicalCapacity : CIM_ManagedElement {

      [Description ( 
          "The Name property defines the label by which the "
          "Physical Capacity object is known. When subclassed, the "
          "Name property can be overridden to be a Key property." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalComponent 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::Component" ), 
    Description ( 
       "The PhysicalComponent class represents any low-level or basic "
       "Component within a Package. A Component object either can not "
       "or does not need to be decomposed into its constituent parts. "
       "For example, an ASIC (or Chip) can not be further decomposed. "
       "A tape for data storage (PhysicalMedia) does not need to be "
       "decomposed. Any PhysicalElement that is not a Link, Connector, "
       "or Package is a descendent (or member) of this class. For "
       "example, the UART chipset on an internal modem Card would be a "
       "subclass (if additional properties or associations are "
       "defined) or an instance of PhysicalComponent." )]
class CIM_PhysicalComponent : CIM_PhysicalElement {

      [Description ( 
          "The RemovalCapabilites property is used to describe the "
          "conditions under which a PhysicalPackage can be removed. "
          "Since all PhysicalPackages are not removable, this "
          "property defaults to 2, \'Not Applicable\'." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Not Applicable", "Removable when off", 
          "Removable when on or off" }]
   uint16 RemovalConditions = 2;

      [Deprecated { "CIM_PhysicalComponent.RemovalConditions" }, 
       Description ( 
          "The use of this property is being deprecated. Instead "
          "RemovalConditions should be used. The RemovalConditions "
          "property addresses whether a PhysicalComponent is "
          "removable with or without power being applied. \n"
          "\n"
          "A PhysicalComponent is Removable if it is designed to be "
          "taken in and out of the physical container in which it "
          "is normally found, without impairing the function of the "
          "overall packaging. A Component can still be Removable if "
          "power must be \'off\' in order to perform the removal. "
          "If power can be \'on\' and the Component removed, then "
          "the Element is both Removable and HotSwappable. For "
          "example, an upgradeable Processor chip is Removable." )]
   boolean Removable;

      [Deprecated { "No Value" }, 
       Description ( 
          "The use of this property is being deprecated because it "
          "is redundant with the FRU class and its associations. A "
          "PhysicalComponent is Replaceable if it is possible to "
          "replace (FRU or upgrade) the Element with a physically "
          "different one. For example, some ComputerSystems allow "
          "the main Processor chip to be upgraded to one of a "
          "higher clock rating. In this case, the Processor is said "
          "to be Replaceable. All Removable Components are "
          "inherently Replaceable." )]
   boolean Replaceable;

      [Deprecated { "CIM_PhysicalComponent.RemovalConditions" }, 
       Description ( 
          "The use of this property is being deprecated. Instead "
          "RemovalConditions should be used. The RemovalConditions "
          "property addresses whether a PhysicalComponent is "
          "removable with or without power being applied. \n"
          "\n"
          "A PhysicalComponent is HotSwappable if it is possible to "
          "replace the Element with a physically different but "
          "equivalent one while the containing Package has power "
          "applied to it (ie, is \'on\'). For example, a fan "
          "Component may be designed to be HotSwappable. All "
          "HotSwappable Components are inherently Removable and "
          "Replaceable." )]
   boolean HotSwappable;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "The PhysicalConnector class represents any PhysicalElement "
       "that is used to connect to other Elements. Any object that can "
       "be used to connect and transmit signals or power between two "
       "or more PhysicalElements is a descendant (or member) of this "
       "class. For example, Slots and D-shell connectors are types of "
       "PhysicalConnectors." )]
class CIM_PhysicalConnector : CIM_PhysicalElement {

      [Description ( 
          "A free-form string describing the pin configuration "
          "and/or signal usage of a PhysicalConnector." ), 
       ModelCorrespondence { "CIM_PhysicalConnector.NumPhysicalPins" }]
   string ConnectorPinout;

      [Deprecated { "CIM_PhysicalConnector.ConnectorGender", 
          "CIM_PhysicalConnector.ConnectorElectricalCharacteristics", 
          "CIM_PhysicalConnector.NumPhysicalPins", 
          "CIM_PhysicalConnector.ConnectorLayout" }, 
       Description ( 
          "An array of integers defining the type of "
          "PhysicalConnector. An array is specified to allow the "
          "description of \'combinations\' of Connector "
          "information. For example, one array entry could specify "
          "RS-232 (value=25), another DB-25 (value=23) and a third "
          "entry define the Connector as \"Male\" (value=2). \n"
          "This single property is being deprecated in lieu of "
          "using separate properties to describe the various "
          "aspects of the connector. The separation allows for a "
          "more generic means of describing the connectors. "
          "Obsolete connectors were intentionally removed from the "
          "new list." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110", "111", "112", "113", "114", "115", 
          "116", "117", "118", "119", "120", "121", "122" }, 
       Values { "Unknown", "Other", "Male", "Female", "Shielded", 
          "Unshielded", "SCSI (A) High-Density (50 pins)", 
          "SCSI (A) Low-Density (50 pins)", 
          "SCSI (P) High-Density (68 pins)", "SCSI SCA-I (80 pins)", 
          "SCSI SCA-II (80 pins)", 
          // 11                      
          "Fibre Channel (DB-9, Copper)", 
          "Fibre Channel (Optical Fibre)", 
          "Fibre Channel SCA-II (40 pins)", 
          "Fibre Channel SCA-II (20 pins)", "Fibre Channel BNC", 
          "ATA 3-1/2 Inch (40 pins)", "ATA 2-1/2 Inch (44 pins)", 
          "ATA-2", "ATA-3", "ATA/66", "DB-9", "DB-15", "DB-25", 
          "DB-36", "RS-232C", "RS-422", "RS-423", "RS-485", 
          "RS-449", "V.35", 
          // 31                     
          "X.21", "IEEE-488", 
          "AUI", "UPT Category 3", "UPT Category 4", 
          "UPT Category 5", "BNC", "RJ11", "RJ45", "Fiber MIC", 
          "Apple AUI", "Apple GeoPort", "PCI", "ISA", "EISA", 
          "VESA", "PCMCIA", "PCMCIA Type I", "PCMCIA Type II", 
          "PCMCIA Type III", 
          // 51                                  
          "ZV Port", 
          "CardBus", "USB", "IEEE 1394", "HIPPI", "HSSDC (6 pins)", 
          "GBIC", "DIN", "Mini-DIN", "Micro-DIN", "PS/2", 
          "Infrared", "HP-HIL", "Access.bus", "NuBus", "Centronics", 
          "Mini-Centronics", "Mini-Centronics Type-14", 
          "Mini-Centronics Type-20", "Mini-Centronics Type-26", 
          // 71                   
          "Bus Mouse", "ADB", 
          "AGP", "VME Bus", "VME64", "Proprietary", 
          "Proprietary Processor Card Slot", 
          "Proprietary Memory Card Slot", 
          "Proprietary I/O Riser Slot", "PCI-66MHZ", "AGP2X", 
          "AGP4X", "PC-98", "PC-98-Hireso", "PC-H98", "PC-98Note", 
          "PC-98Full", "SSA SCSI", "Circular", 
          "On Board IDE Connector", "On Board Floppy Connector", 
          "9 Pin Dual Inline", "25 Pin Dual Inline", 
          "50 Pin Dual Inline", "68 Pin Dual Inline", 
          "On Board Sound Connector", "Mini-jack", "PCI-X", 
          "Sbus IEEE 1396-1993 32 bit", 
          // 100                                   
          "Sbus IEEE 1396-1993 64 bit", 
          "MCA", "GIO", "XIO", "HIO", "NGIO", "PMC", "MTRJ", 
          "VF-45", "Future I/O", "SC", "SG", "Electrical", 
          "Optical", "Ribbon", "GLM", "1x9", "Mini SG", "LC", 
          "HSSC", 
          // 120                    
          "VHDCI Shielded (68 pins)", 
          "InfiniBand", "AGP8X" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.10" }, 
       ModelCorrespondence { 
          "CIM_PhysicalConnector.OtherTypeDescription" }]
   uint16 ConnectorType[];

      [Deprecated { "CIM_PhysicalConnector.ConnectorDescription" }, 
       Description ( 
          "A string describing the Connector - used when the "
          "ConnectorType property is set to 1 (\"Other\"). "
          "OtherType Description should be set to NULL when "
          "ConnectorType is any value other than 1. \n"
          "The use of this property is deprecated in lieu of "
          "Connector Description." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.11" }, 
       ModelCorrespondence { "CIM_PhysicalConnector.ConnectorType" }]
   string OtherTypeDescription;

      [Description ( "Describes the gender of the connector." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Male", "Female" }]
   uint16 ConnectorGender;

      [Description ( 
          "Describes the electrical characteristic for this connector."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Single Ended", "Differential", 
          "Low Voltage Differential", "Optical", "Copper", 
          "Shielded", "Unshielded" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_PhysicalConnector.OtherElectricalCharacteristics" }]
   uint16 ConnectorElectricalCharacteristics[];

      [Description ( 
          "A string describing the connector\'s electrical "
          "characteristics - used when the "
          "ConnectorElectricalCharacteristics property contains an "
          "entry of 1 (Other). OtherElectricalCharacteristics "
          "should be set to NULL when "
          "ConnectorElectricalCharacteristics does not contain an "
          "value of 1." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_PhysicalConnector.ConnectorElectricalCharacteristics" }]
   string OtherElectricalCharacteristics[];

      [Description ( 
          "Describes the number of physical pins (male/female) that "
          "are present on this connector." ), 
       ModelCorrespondence { "CIM_PhysicalConnector.ConnectorPinout" }]
   uint32 NumPhysicalPins;

      [Description ( 
          "Describes the type of packaging normally associated with "
          "this type of connector.16 (PCI) - describes the generic "
          "PCI connector layout. 17 (PCI-X) - describes the PCI "
          "Extended connector layout. 18 (PCI-E) - describes the "
          "PCI Express connector layout, where the actual layout as "
          "far as the length is concerned is unknown. 19 - 25 "
          "(PCI-E xN) - describes the PCI Express connector layout, "
          "where N is the lane count that appropriately descirbes "
          "the length of the PCI-E connector." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26..32567", 
          "32568..65535" }, 
       Values { "Unknown", "Other", "RS232", "BNC", "RJ11", "RJ45", 
          "DB9", "Slot", "SCSI High Density", "SCSI Low Density", 
          "Ribbon", "AUI", "Fiber SC", "Fiber ST", "FDDI-MIC", 
          "Fiber-RTMJ", "PCI", "PCI-X", "PCI-E", "PCI-E x1", 
          "PCI-E x2", "PCI-E x4", "PCI-E x8", "PCI-E x16", 
          "PCI-E x32", "PCI-E x64", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_PhysicalConnector.ConnectorDescription" }]
   uint16 ConnectorLayout;

      [Description ( 
          "A string describing the Connector - used when the "
          "ConnectorLayout property is set to 1 (\"Other\"). "
          "Connector Description should be set to NULL when "
          "ConnectorLayout is any value other than 1." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.11" }, 
       ModelCorrespondence { "CIM_PhysicalConnector.ConnectorLayout" }]
   string ConnectorDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::Link" ), 
    Description ( 
       "The PhysicalLink class represents the cabling of "
       "PhysicalElements together. For example, serial or Ethernet "
       "cables would be subclasses (if additional properties or "
       "associations are defined) or instances of PhysicalLink. In "
       "many cases, the numerous physical cables within a "
       "PhysicalPackage or Network will not be modeled. However, where "
       "these cables or Links are critical components, or are tagged "
       "assets of the company, these objects can be instantiated using "
       "this class or one of its descendent classes." )]
class CIM_PhysicalLink : CIM_PhysicalElement {

      [Description ( 
          "The maximum length of the PhysicalLink in feet." ), 
       Units ( "Feet" ), 
       PUnit ( "foot" )]
   real64 MaxLength;

      [Description ( 
          "The current length of the PhysicalLink in feet. For some "
          "connections, especially wireless technologies, this "
          "property may not be applicable and should be left "
          "uninitialized." ), 
       Units ( "Feet" ), 
       PUnit ( "foot" )]
   real64 Length;

      [Description ( 
          "Boolean indicating whether the PhysicalLink is an actual "
          "cable (TRUE) or a wireless connection (FALSE)." )]
   boolean Wired;

      [Description ( 
          "The MediaType property defines the particular type of "
          "Media through which transmission signals pass. Common "
          "network media include twisted-pair (value=11 or 12), "
          "coaxial (7, 8 or 9) and fiber-optic cable (10)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17" }, 
       Values { "Unknown", "Other", "Cat1", "Cat2", "Cat3", "Cat4", 
          "Cat5", "50-ohm Coaxial", "75-ohm Coaxial", 
          "100-ohm Coaxial", "Fiber-optic", "UTP", "STP", 
          "Ribbon Cable", "Twinaxial", "Optical 9um", 
          "Optical 50um", "Optical 62.5um" }, 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus Port Extensions|001.4" }]
   uint16 MediaType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::PhysicalMedia" ), 
    Description ( 
       "The PhysicalMedia class represents any type of documentation "
       "or storage medium, such as tapes, CDROMs, etc. This class is "
       "typically used to locate and manage Removable Media (versus "
       "Media sealed with the MediaAccessDevice, as a single Package, "
       "as is the case with hard disks). However, \'sealed\' Media can "
       "also be modeled using this class, where the Media would then "
       "be associated with the PhysicalPackage using the "
       "PackagedComponent relationship." )]
class CIM_PhysicalMedia : CIM_PhysicalComponent {

      [Description ( 
          "The number of bytes that can be read from or written to "
          "a Media. This property is not applicable to \"Hard Copy\" "
          "(documentation) or cleaner Media. Data compression "
          "should not be assumed, as it would increase the value in "
          "this property. For tapes, it should be assumed that no "
          "filemarks or blank space areas are recorded on the "
          "Media." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 Capacity;

      [Description ( 
          "Specifies the type of the PhysicalMedia, as an "
          "enumerated integer. The MediaDescription property is "
          "used to provide more explicit definition of the Media "
          "type, whether it is pre-formatted, compatability "
          "features, etc." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66" }, 
       Values { "Unknown", "Other", "Tape Cartridge", 
          "QIC Cartridge", "AIT Cartridge", "DTF Cartridge", 
          "DAT Cartridge", "8mm Tape Cartridge", 
          "19mm Tape Cartridge", "DLT Cartridge", 
          // 10                
          "Half-Inch Magnetic Tape Cartridge", 
          "Cartridge Disk", "JAZ Disk", "ZIP Disk", "SyQuest Disk", 
          "Winchester Removable Disk", "CD-ROM", "CD-ROM/XA", 
          "CD-I", "CD Recordable", 
          // 20               
          "WORM", "Magneto-Optical", 
          "DVD", "DVD-RW+", "DVD-RAM", "DVD-ROM", "DVD-Video", 
          "Divx", "Floppy/Diskette", "Hard Disk", 
          // 30                
          "Memory Card", 
          "Hard Copy", "Clik Disk", "CD-RW", "CD-DA", "CD+", 
          "DVD Recordable", "DVD-RW", "DVD-Audio", "DVD-5", 
          // 40               
          "DVD-9", "DVD-10", 
          "DVD-18", "Magneto-Optical Rewriteable", 
          "Magneto-Optical Write Once", 
          "Magneto-Optical Rewriteable (LIMDOW)", 
          "Phase Change Write Once", "Phase Change Rewriteable", 
          "Phase Change Dual Rewriteable", "Ablative Write Once", 
          // 50               
          "Near Field Recording", 
          "MiniQic", "Travan", "8mm Metal Particle", 
          "8mm Advanced Metal Evaporate", "NCTP", "LTO Ultrium", 
          "LTO Accelis", "9 Track Tape", "18 Track Tape", 
          // 60                
          "36 Track Tape", 
          "Magstar 3590", "Magstar MP", "D2 Tape", 
          "Tape - DST Small", "Tape - DST Medium", "Tape - DST Large" }, 
       ModelCorrespondence { "CIM_PhysicalMedia.MediaDescription" }]
   uint16 MediaType;

      [Description ( 
          "Additional detail related to the MediaType enumeration. "
          "For example, if value 3 (\"QIC Cartridge\") is "
          "specified, this property could indicate whether the tape "
          "is wide or 1/4 inch, whether it is pre-formatted, "
          "whether it is Travan compatible, etc." ), 
       ModelCorrespondence { "CIM_PhysicalMedia.MediaType" }]
   string MediaDescription;

      [Description ( 
          "Boolean specifying whether the Media is currently write "
          "protected by some kind of physical mechanism, such as a "
          "protect tab on a floppy diskette." )]
   boolean WriteProtectOn;

      [Description ( 
          "Boolean indicating that the PhysicalMedia is used for "
          "cleaning purposes and not data storage." )]
   boolean CleanerMedia;

      [Description ( 
          "Size of the Media in inches. For example, \'3.5\' would "
          "be entered for a 3.5 inch disk, or \'12\' would be "
          "entered for a 12 inch optical disk. On the other hand, "
          "\'0.5\' would be defined for a 1/2 inch tape." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 MediaSize;

      [Description ( 
          "For removable Media, the maximum number of times that "
          "the Media can be mounted before it should be retired. "
          "For cleaner Media, this is the maximum number of Drive "
          "cleans that can be performed. For nonremovable Media, "
          "such as hard disks, this property is not applicable and "
          "should be set to 0." )]
   uint64 MaxMounts;

      [Description ( 
          "For removable or cleaner Media, the number of times that "
          "the Media has been mounted for data transfer or to clean "
          "a Drive. For nonremovable Media, such as hard disks, "
          "this property is not applicable and should be set to 0." ), 
       Counter, ModelCorrespondence { "CIM_PhysicalMedia.MaxMounts" }]
   uint64 MountCount;

      [Description ( 
          "Boolean indicating that the Media has two recording "
          "sides (TRUE) or only a single side (FALSE). Examples of "
          "dual sided Media include DVD-ROM and some optical disks. "
          "Examples of single sided Media are tapes and CD-ROM." )]
   boolean DualSided;

      [Description ( 
          "One or more strings on \'labels\' on the PhysicalMedia. "
          "The format of the labels and their state (readable, "
          "unreadable, upside-down) are indicated in the "
          "LabelFormats and LabelStates array properties." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalMedia.LabelStates", 
          "CIM_PhysicalMedia.LabelFormats" }]
   string PhysicalLabels[];

      [Description ( 
          "An array of enumerated integers describing the states of "
          "each of the labels on a PhysicalMedia. The Labels "
          "themselves are listed in the PhysicalLabels property. "
          "Note, each entry of this array is related to the entry "
          "in PhysicalLabels that is located at the same index." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "OK/Readable", "Unreadable", "Upside Down" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalMedia.PhysicalLabels" }]
   uint16 LabelStates[];

      [Description ( 
          "An array of enumerated integers describing the formats "
          "of each of the labels on a PhysicalMedia. The Labels "
          "themselves are listed in the PhysicalLabels property. "
          "Note, each entry of this array is related to the entry "
          "in PhysicalLabels that is located at the same index." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Barcode", "Radio Frequency Identification", 
          "OCR (Optical Character Recognition)", 
          "MICR (Magnetic Ink Character Recognition)", 
          "7 Character Barcode", "9 Character Barcode" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalMedia.PhysicalLabels" }]
   uint16 LabelFormats[];

      [Description ( 
          "For removable or cleaner Media, the date and time that "
          "the Media was last mounted. For nonremovable Media, such "
          "as hard disks, this property has no meaning and is not "
          "applicable." )]
   datetime TimeOfLastMount;

      [Description ( 
          "For removable or cleaner Media, the total time (in "
          "seconds) that the Media has been mounted for data "
          "transfer or to clean a Drive. For nonremovable Media, "
          "such as hard disks, this property is not applicable and "
          "should be set to 0." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 TotalMountTime;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "The PhysicalPackage class represents PhysicalElements that "
       "contain or host other components. Examples are a Rack "
       "enclosure or an adapter Card." )]
class CIM_PhysicalPackage : CIM_PhysicalElement {

      [Description ( 
          "The RemovalCapabilites property is used to describe the "
          "conditions under which a PhysicalPackage can be removed. "
          "Since all PhysicalPackages are not removable, this "
          "property defaults to 2, \'Not Applicable\'." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Not Applicable", "Removable when off", 
          "Removable when on or off" }]
   uint16 RemovalConditions = 2;

      [Deprecated { "CIM_PhysicalPackage.RemovalConditions" }, 
       Description ( 
          "The use of this property is being deprecated. Instead "
          "RemovalConditions should be used. The RemovalConditions "
          "property addresses whether a PhysicalPackage is "
          "removable with or without power being applied. \n"
          "A PhysicalPackage is Removable if it is designed to be "
          "taken in and out of the physical container in which it "
          "is normally found, without impairing the function of the "
          "overall packaging. A Package can still be Removable if "
          "power must be \'off\' in order to perform the removal. "
          "If power can be \'on\' and the Package removed, then the "
          "Element is both Removable and HotSwappable. For example, "
          "an extra battery in a laptop is Removable, as is a disk "
          "drive Package inserted using SCA connectors. However, "
          "the latter is also HotSwappable. A laptop\'s display is "
          "not Removable, nor is a non-redundant power supply. "
          "Removing these components would impact the function of "
          "the overall packaging or is impossible due to the tight "
          "integration of the Package." )]
   boolean Removable;

      [Deprecated { "No Value" }, 
       Description ( 
          "The use of this property is being deprecated because it "
          "is redundant with the FRU class and its associations. A "
          "PhysicalPackage is Replaceable if it is possible to "
          "replace (FRU or upgrade) the Element with a physically "
          "different one. For example, some ComputerSystems allow "
          "the main Processor chip to be upgraded to one of a "
          "higher clock rating. In this case, the Processor is said "
          "to be Replaceable. Another example is a power supply "
          "Package mounted on sliding rails. All Removable packages "
          "are inherently Replaceable." )]
   boolean Replaceable;

      [Deprecated { "CIM_PhysicalPackage.RemovalConditions" }, 
       Description ( 
          "The use of this property is being deprecated. Instead "
          "RemovalConditions should be used. The RemovalConditions "
          "property addresses whether a PhysicalPackage is "
          "removable with or without power being applied. \n"
          "\n"
          "A PhysicalPackage is HotSwappable if it is possible to "
          "replace the Element with a physically different but "
          "equivalent one while the containing Package has power "
          "applied to it (ie, is \'on\'). For example, a disk drive "
          "Package inserted using SCA connectors is both Removable "
          "and HotSwappable. All HotSwappable packages are "
          "inherently Removable and Replaceable." )]
   boolean HotSwappable;

      [Description ( "The height of the PhysicalPackage in inches." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 Height;

      [Description ( "The depth of the PhysicalPackage in inches." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 Depth;

      [Description ( "The width of the PhysicalPackage in inches." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 Width;

      [Description ( "The weight of the PhysicalPackage in pounds." ), 
       Units ( "Pounds" ), 
       PUnit ( "pound" )]
   real32 Weight;

      [Description ( 
          "Enumeration defining the type of the PhysicalPackage. "
          "Note that this enumeration expands on the list in the "
          "Entity MIB (the attribute, entPhysicalClass). The "
          "numeric values are consistent with CIM\'s enum numbering "
          "guidelines, but are slightly different than the MIB\'s values.\n"
          "Unknown - indicates that the package type is not known.\n"
          "Other - The package type does not correspond to an "
          "existing enumerated value. The value is specified using "
          "the OtherPackageType property.\n"
          "The values \"Rack\" through \"Port/Connector\" are "
          "defined per the Entity-MIB (where the semantics of rack "
          "are equivalent to the MIB\'s \'stack\' value). The other "
          "values (for battery, processor, memory, power "
          "source/generator and storage media package) are self-explanatory.\n"
          "A value of \"Blade\" should be used when the "
          "PhysicalPackage contains the operational hardware "
          "aspects of a ComputerSystem, without the supporting "
          "mechanicals such as power and cooling. For example, a "
          "Blade Server includes processor(s) and memory, and "
          "relies on the containing chassis to supply power and "
          "cooling. In many respects, a Blade can be considered a "
          "\"Module/Card\". However, it is tracked differently by "
          "inventory systems and differs in terms of service "
          "philosophy. For example, a Blade is intended to be "
          "hot-plugged into a hosting enclosure without requiring "
          "additional cabling, and does not require a cover to be "
          "removed from the enclosure for installation. Similarly, "
          "a \"Blade Expansion\" has characteristics of a \"Blade\" "
          "and a \"Module/Card\". However, it is distinct from both "
          "due to inventory tracking and service philosophy, and "
          "because of its hardware dependence on a Blade. A Blade "
          "Expansion must be attached to a Blade prior to inserting "
          "the resultant assembly into an enclosure." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17" }, 
       Values { "Unknown", "Other", "Rack", "Chassis/Frame", 
          "Cross Connect/Backplane", "Container/Frame Slot", 
          "Power Supply", "Fan", "Sensor", "Module/Card", 
          "Port/Connector", "Battery", "Processor", "Memory", 
          "Power Source/Generator", 
          "Storage Media Package (e.g., Disk or Tape Drive)", 
          "Blade", "Blade Expansion" }, 
       MappingStrings { "MIB.IETF|ENTITY-MIB.entPhysicalClass" }, 
       ModelCorrespondence { "CIM_PhysicalPackage.OtherPackageType" }]
   uint16 PackageType;

      [Description ( 
          "A string describing the package when the instance\'s "
          "PackageType property is 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_PhysicalPackage.PackageType" }]
   string OtherPackageType;

      [Description ( 
          "An array of strings that identify the component that is "
          "compatible with, and can be inserted in a slot that "
          "reports this string as one of the array element in the "
          "VendorCompatibilityStrings This allows system "
          "administrators to determine whether it is appropriateto "
          "insert a package into a slot \n"
          "In order to ensure uniqueness within the NameSpace, each "
          "value defined by the vendor for use in the "
          "VendorCompatibilityStrings property SHOULD be "
          "constructed using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements." ), 
       ModelCorrespondence { "CIM_Slot.VendorCompatibilityStrings" }]
   string VendorCompatibilityStrings[];


      [Deprecated { "No Value" }, 
       Description ( 
          "This method is being deprecated. A PhysicalPackage "
          "cannot determine if it is compatible with another "
          "object. The IsCompatible method verifies whether the "
          "referenced PhysicalElement may be contained by or "
          "inserted into the PhysicalPackage. The return value "
          "should be 0 if the request was successfully executed, 1 "
          "if the request is not supported and some other value if "
          "an error occurred. In a subclass, the set of possible "
          "return codes could be specified, using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 IsCompatible(
         [IN, Description ( 
             "The element to check for compatibility with this one."
              )]
      CIM_PhysicalElement REF ElementToCheck);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::PhysicalMedia" ), 
    Description ( 
       "The PhysicalTape class represents additional data for a Tape "
       "Media. Information on the tape length and whether it must be "
       "unloaded from BOT are properties of this class." )]
class CIM_PhysicalTape : CIM_PhysicalMedia {

      [Description ( "The physical length of the Tape in feet." ), 
       Units ( "Feet" ), 
       PUnit ( "foot" )]
   real32 TapeLength;

      [Description ( 
          "Boolean set to TRUE if the Tape can be unloaded at any "
          "position on the Media. It is set to FALSE if the tape "
          "must be at a certain position for unload - such as at "
          "the beginning of tape (BOT) area, or at mid-tape point "
          "for TapeDrives with mid-tape load." )]
   boolean UnloadAnywhere;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "The Slot class represents Connectors into which Packages are "
       "inserted. For example, a PhysicalPackage that is a DiskDrive "
       "may be inserted into an SCA \'Slot\'. As another example, a "
       "Card (subclass of PhysicalPackage) may be inserted into a 16-, "
       "32-, or 64-bit expansion \'Slot\' on a HostingBoard. PCI or "
       "PCMCIA Type III Slots are examples of the latter." )]
class CIM_Slot : CIM_PhysicalConnector {

      [Override ( "ConnectorType" ), 
       MappingStrings { "MIF.DMTF|System Slot|005.2" }]
   uint16 ConnectorType[];

      [Override ( "PoweredOn" ), 
       MappingStrings { "MIF.DMTF|System Slot|005.13" }]
   boolean PoweredOn;

      [Description ( 
          "Boolean indicating whether the Slot supports hot-plug of "
          "adapter Cards." )]
   boolean SupportsHotPlug;

      [Description ( 
          "Maximum height of an adapter Card that can be inserted "
          "into the Slot, in inches." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 HeightAllowed;

      [Description ( 
          "Maximum length of an adapter Card that can be inserted "
          "into the Slot, in inches." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 LengthAllowed;

      [Description ( 
          "Maximum bus width of adapter Cards that can be inserted "
          "into this Slot, in bits. If the value is \'unknown\', "
          "enter 0. If the value is other than 8, 16, 32, 64 or "
          "128, enter 1." ), 
       Units ( "Bits" ), 
       ValueMap { "0", "1", "8", "16", "32", "64", "128" }, 
       MappingStrings { "MIF.DMTF|System Slot|005.3" }, 
       PUnit ( "bit" )]
   uint16 MaxDataWidth;

      [Description ( 
          "An array of enumerated integers indicating the Vcc "
          "voltage supported by this Slot." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "3.3V", "5V" }, 
       MappingStrings { "MIF.DMTF|System Slot|005.9" }]
   uint16 VccMixedVoltageSupport[];

      [Description ( 
          "An array of enumerated integers indicating the Vpp "
          "voltage supported by this Slot." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "3.3V", "5V", "12V" }, 
       MappingStrings { "MIF.DMTF|System Slot|005.10" }]
   uint16 VppMixedVoltageSupport[];

      [Description ( 
          "Maximum thermal dissipation of the Slot in milliwatts." ), 
       Units ( "MilliWatts" ), 
       MappingStrings { "MIF.DMTF|System Slot|005.11" }, 
       PUnit ( "watt * 10^-3" )]
   uint32 ThermalRating;

      [Description ( 
          "Boolean indicating that this Slot is physically unique "
          "and may hold special types of hardware, e.g. a graphics "
          "processor slot. If set to TRUE, then the property, "
          "Special PurposeDescription (a string), should specify "
          "the nature of the uniqueness or purpose of the Slot." ), 
       ModelCorrespondence { "CIM_Slot.PurposeDescription" }]
   boolean SpecialPurpose;

      [Description ( 
          "A free-form string describing that this Slot is "
          "physically unique and may hold special types of "
          "hardware. This property only has meaning when the "
          "corresponding boolean property, SpecialPurpose, is set "
          "to TRUE." ), 
       ModelCorrespondence { "CIM_Slot.SpecialPurpose" }]
   string PurposeDescription;

      [Description ( 
          "The Number property indicates the physical slot number, "
          "which can be used as an index into a system slot table, "
          "whether or not that slot is physically occupied." ), 
       MappingStrings { "MIF.DMTF|System Slot|005.1" }]
   uint16 Number;

      [Deprecated { "CIM_PhysicalElement.PoweredOn" }, 
       Description ( 
          "A boolean indicating whether the Slot is currently "
          "powered (TRUE) or not (FALSE)." ), 
       MappingStrings { "MIF.DMTF|System Slot|005.13" }]
   boolean Powered;

      [Description ( 
          "A boolean indicating whether the switch state of the "
          "Slot is currently open (TRUE) or closed (FALSE). This "
          "switch state determines whether the contents of the Slot "
          "can be hot-plugged." ), 
       MappingStrings { "MIF.DMTF|System Slot|005.15" }]
   boolean OpenSwitch;

      [Description ( 
          "Maximum link width of a switching bus type, such as "
          "Infiniband and PCI Express. The width is expressed in "
          "number of communication lines, or lanes, between port "
          "and devices. This property dictates the maximum link "
          "width, in lanes, of adapter Cards that can be inserted "
          "into this Slot. If the value is \'unknown\', enter 0." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9.." }, 
       Values { "Unknown", "x1", "x2", "x4", "x8", "x12", "x16", 
          "x32", "DMTF Reserved" }]
   uint16 MaxLinkWidth;

      [Description ( 
          "An array of strings that identify the components that "
          "are compatible and can be inserted in a slot. This "
          "allows vendors to provide clues to the system "
          "administrators by providing sufficient information to "
          "request the appropriate hardware that can populate the "
          "slot. In order to ensure uniqueness within the "
          "NameSpace, each value defined by the vendor for use in "
          "the VendorCompatibilityStrings property SHOULD be "
          "constructed using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements." ), 
       ModelCorrespondence { 
          "CIM_PhysicalPackage.VendorCompatibilityStrings" }]
   string VendorCompatibilityStrings[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "An abstract class defining the common properties of the policy "
       "managed elements derived from CIM_Policy. The subclasses are "
       "used to create rules and groups of rules that work together to "
       "form a coherent set of policies within an administrative "
       "domain or set of domains." )]
class CIM_Policy : CIM_ManagedElement {

      [Description ( 
          "A user-friendly name of this policy-related object." )]
   string CommonName;

      [Description ( 
          "An array of keywords for characterizing / categorizing "
          "policy objects. Keywords are of one of two types: \n"
          "- Keywords defined in this and other MOFs, or in DMTF "
          "white papers. These keywords provide a vendor- "
          "independent, installation-independent way of "
          "characterizing policy objects. \n"
          "- Installation-dependent keywords for characterizing "
          "policy objects. Examples include \'Engineering\', "
          "\'Billing\', and \'Review in December 2000\'. \n"
          "This MOF defines the following keywords: \'UNKNOWN\', "
          "\'CONFIGURATION\', \'USAGE\', \'SECURITY\', \'SERVICE\', "
          "\'MOTIVATIONAL\', \'INSTALLATION\', and \'EVENT\'. These "
          "concepts are self-explanatory and are further discussed "
          "in the SLA/Policy White Paper. One additional keyword is "
          "defined: \'POLICY\'. The role of this keyword is to "
          "identify policy-related instances that may not be "
          "otherwise identifiable, in some implementations. The "
          "keyword \'POLICY\' is NOT mutually exclusive of the "
          "other keywords specified above." )]
   string PolicyKeywords[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class representing a rule-specific or reusable policy action "
       "to be performed if the PolicyConditions for a Policy Rule "
       "evaluate to TRUE. Since all operational details of a "
       "PolicyAction are provided in subclasses of this object, this "
       "class is abstract." )]
class CIM_PolicyAction : CIM_Policy {

      [Key, Description ( 
          "The name of the class or the subclass used in the "
          "creation of the System object in whose scope this "
          "PolicyAction is defined. \n"
          "\n"
          "This property helps to identify the System object in "
          "whose scope this instance of PolicyAction exists. For a "
          "rule-specific PolicyAction, this is the System in whose "
          "context the PolicyRule is defined. For a reusable "
          "PolicyAction, this is the instance of PolicyRepository "
          "(which is a subclass of System) that holds the Action. \n"
          "\n"
          "Note that this property, and the analogous property "
          "SystemName, do not represent propagated keys from an "
          "instance of the class System. Instead, they are "
          "properties defined in the context of this class, which "
          "repeat the values from the instance of System to which "
          "this PolicyAction is related, either directly via the "
          "PolicyActionInPolicyRepository association or indirectly "
          "via the PolicyActionInPolicyRule aggregation." ), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Key, Description ( 
          "The name of the System object in whose scope this "
          "PolicyAction is defined. \n"
          "\n"
          "This property completes the identification of the System "
          "object in whose scope this instance of PolicyAction "
          "exists. For a rule-specific PolicyAction, this is the "
          "System in whose context the PolicyRule is defined. For a "
          "reusable PolicyAction, this is the instance of "
          "PolicyRepository (which is a subclass of System) that "
          "holds the Action." ), 
       MaxLen ( 256 )]
   string SystemName;

      [Key, Description ( 
          "For a rule-specific PolicyAction, the CreationClassName "
          "of the PolicyRule object with which this Action is "
          "associated. For a reusable PolicyAction, a special "
          "value, \'NO RULE\', should be used to indicate that this "
          "Action is reusable and not associated with a single "
          "PolicyRule." ), 
       MaxLen ( 256 )]
   string PolicyRuleCreationClassName;

      [Key, Description ( 
          "For a rule-specific PolicyAction, the name of the "
          "PolicyRule object with which this Action is associated. "
          "For a reusable PolicyAction, a special value, \'NO "
          "RULE\', should be used to indicate that this Action is "
          "reusable and not associated with a single PolicyRule." ), 
       MaxLen ( 256 )]
   string PolicyRuleName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A user-friendly name of this PolicyAction." ), 
       MaxLen ( 256 )]
   string PolicyActionName;

      [Description ( 
          "DoActionLogging causes a log message to be generated "
          "when the action is performed." )]
   boolean DoActionLogging;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class representing a rule-specific or reusable policy "
       "condition to be evaluated in conjunction with a Policy Rule. "
       "Since all operational details of a PolicyCondition are "
       "provided in subclasses of this object, this class is abstract." )]
class CIM_PolicyCondition : CIM_Policy {

      [Key, Description ( 
          "The name of the class or the subclass used in the "
          "creation of the System object in whose scope this "
          "PolicyCondition is defined. \n"
          "\n"
          "This property helps to identify the System object in "
          "whose scope this instance of PolicyCondition exists. For "
          "a rule-specific PolicyCondition, this is the System in "
          "whose context the PolicyRule is defined. For a reusable "
          "PolicyCondition, this is the instance of "
          "PolicyRepository (which is a subclass of System) that "
          "holds the Condition. \n"
          "\n"
          "Note that this property, and the analogous property "
          "SystemName, do not represent propagated keys from an "
          "instance of the class System. Instead, they are "
          "properties defined in the context of this class, which "
          "repeat the values from the instance of System to which "
          "this PolicyCondition is related, either directly via the "
          "PolicyConditionInPolicyRepository association or "
          "indirectly via the PolicyConditionInPolicyRule "
          "aggregation." ), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Key, Description ( 
          "The name of the System object in whose scope this "
          "PolicyCondition is defined. \n"
          "\n"
          "This property completes the identification of the System "
          "object in whose scope this instance of PolicyCondition "
          "exists. For a rule-specific PolicyCondition, this is the "
          "System in whose context the PolicyRule is defined. For a "
          "reusable PolicyCondition, this is the instance of "
          "PolicyRepository (which is a subclass of System) that "
          "holds the Condition." ), 
       MaxLen ( 256 )]
   string SystemName;

      [Key, Description ( 
          "For a rule-specific PolicyCondition, the "
          "CreationClassName of the PolicyRule object with which "
          "this Condition is associated. For a reusable Policy "
          "Condition, a special value, \'NO RULE\', should be used "
          "to indicate that this Condition is reusable and not "
          "associated with a single PolicyRule." ), 
       MaxLen ( 256 )]
   string PolicyRuleCreationClassName;

      [Key, Description ( 
          "For a rule-specific PolicyCondition, the name of the "
          "PolicyRule object with which this Condition is "
          "associated. For a reusable PolicyCondition, a special "
          "value, \'NO RULE\', should be used to indicate that this "
          "Condition is reusable and not associated with a single "
          "PolicyRule." ), 
       MaxLen ( 256 )]
   string PolicyRuleName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A user-friendly name of this PolicyCondition." ), 
       MaxLen ( 256 )]
   string PolicyConditionName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySet is an abstract class that represents a set of "
       "policies that form a coherent set. The set of contained "
       "policies has a common decision strategy and a common set of "
       "policy roles (defined via the PolicySetInRole Collection "
       "association). Subclasses include PolicyGroup and PolicyRule." )]
class CIM_PolicySet : CIM_Policy {

      [Description ( 
          "PolicyDecisionStrategy defines the evaluation method "
          "used for policies contained in the PolicySet. There are "
          "two values currently defined: \n"
          "- \'First Matching\' (1) executes the actions of the "
          "first rule whose conditions evaluate to TRUE. The "
          "concept of \'first\' is determined by examining the "
          "priority of the rule within the policy set (i.e., by "
          "examining the property, PolicySetComponent.Priority). "
          "Note that this ordering property MUST be maintained when "
          "processing the PolicyDecisionStrategy. \n"
          "- \'All\' (2) executes the actions of ALL rules whose "
          "conditions evaluate to TRUE, in the set. As noted above, "
          "the order of processing of the rules is defined by the "
          "property, PolicySetComponent.Priority (and within a "
          "rule, the ordering of the actions is defined by the "
          "property, PolicyActionStructure.ActionOrder). Note that "
          "when this strategy is defined, processing MUST be "
          "completed of ALL rules whose conditions evaluate to "
          "TRUE, regardless of errors in the execution of the rule "
          "actions." ), 
       ValueMap { "1", "2" }, 
       Values { "First Matching", "All" }]
   uint16 PolicyDecisionStrategy;

      [Deprecated { "CIM_PolicySetInRoleCollection" }, 
       Description ( 
          "The PolicyRoles property represents the roles associated "
          "with a PolicySet. All contained PolicySet instances "
          "inherit the values of the PolicyRoles of the aggregating "
          "PolicySet but the values are not copied. A contained "
          "PolicySet instance may, however, add additional "
          "PolicyRoles to those it inherits from its aggregating "
          "PolicySet(s). Each value in PolicyRoles multi-valued "
          "property represents a role for which the PolicySet "
          "applies, i.e., the PolicySet should be used by any "
          "enforcement point that assumes any of the listed "
          "PolicyRoles values. \n"
          "\n"
          "Although not officially designated as \'role "
          "combinations\', multiple roles may be specified using "
          "the form: \n"
          "<RoleName>[&&<RoleName>]* \n"
          "where the individual role names appear in alphabetical "
          "order (according to the collating sequence for UCS-2). "
          "Implementations may treat PolicyRoles values that are "
          "specified as \'role combinations\' as simple strings. \n"
          "\n"
          "This property is deprecated in lieu of the use of an "
          "association, CIM_PolicySetInRoleCollection. The latter "
          "is a more explicit and less error-prone approach to "
          "modeling that a PolicySet has one or more PolicyRoles." )]
   string PolicyRoles[];

      [Description ( 
          "Indicates whether this PolicySet is administratively "
          "enabled, administratively disabled, or enabled for "
          "debug. The \"EnabledForDebug\" property value is "
          "deprecated and, when it or any value not understood by "
          "the receiver is specified, the receiving enforcement "
          "point treats the PolicySet as \"Disabled\". To determine "
          "if a PolicySet is \"Enabled\", the containment hierarchy "
          "specified by the PolicySetComponent aggregation is "
          "examined and the Enabled property values of the "
          "hierarchy are ANDed together. Thus, for example, "
          "everything aggregated by a PolicyGroup may be disabled "
          "by setting the Enabled property in the PolicyGroup "
          "instance to \"Disabled\" without changing the Enabled "
          "property values of any of the aggregated instances. The "
          "default value is 1 (\"Enabled\")." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Enabled", "Disabled", "Enabled For Debug" }]
   uint16 Enabled = 1;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetAppliesToElement makes explicit which PolicySets "
       "(i.e., policy rules and groups of rules) ARE CURRENTLY applied "
       "to a particular Element. This association indicates that the "
       "PolicySets that are appropriate for a ManagedElement "
       "(specified using the PolicyRoleCollection aggregation) have "
       "actually been deployed in the policy management "
       "infrastructure. Note that if the named Element refers to a "
       "Collection, then the PolicySet is assumed to be applied to all "
       "the members of the Collection." )]
class CIM_PolicySetAppliesToElement {

      [Key, Description ( 
          "The PolicyRules and/or groups of rules that are "
          "currently applied to an Element." )]
   CIM_PolicySet REF PolicySet;

      [Key, Description ( 
          "The ManagedElement to which the PolicySet applies." )]
   CIM_ManagedElement REF ManagedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "This class provides a means of representing the time periods "
       "during which a PolicySet is valid, i.e., active. At all times "
       "that fall outside these time periods, the PolicySet has no "
       "effect. A PolicySet is treated as valid at ALL times, if it "
       "does not specify a PolicyTimePeriodCondition. \n"
       "\n"
       "In some cases a Policy Consumer may need to perform certain "
       "setup / cleanup actions when a PolicySet becomes active / "
       "inactive. For example, sessions that were established while a "
       "PolicySet was active might need to be taken down when the "
       "PolicySet becomes inactive. In other cases, however, such "
       "sessions might be left up. In this case, the effect of "
       "deactivating the PolicySet would just be to prevent the "
       "establishment of new sessions. \n"
       "\n"
       "Setup / cleanup behaviors on validity period transitions are "
       "not currently addressed by the Policy Model, and must be "
       "specified in \'guideline\' documents or via subclasses of "
       "CIM_PolicySet, CIM_PolicyTimePeriod Condition or other "
       "concrete subclasses of CIM_Policy. If such behaviors need to "
       "be under the control of the policy administrator, then a "
       "mechanism to allow this control must also be specified in the "
       "subclasses. \n"
       "\n"
       "PolicyTimePeriodCondition is defined as a subclass of "
       "PolicyCondition. This is to allow the inclusion of time-based "
       "criteria in the AND/OR condition definitions for a PolicyRule. \n"
       "\n"
       "Instances of this class may have up to five properties "
       "identifying time periods at different levels. The values of "
       "all the properties present in an instance are ANDed together "
       "to determine the validity period(s) for the instance. For "
       "example, an instance with an overall validity range of January "
       "1, 2000 through December 31, 2000; a month mask that selects "
       "March and April; a day-of-the-week mask that selects Fridays; "
       "and a time of day range of 0800 through 1600 would be "
       "represented using the following time periods: \n"
       "Friday, March 5, 2000, from 0800 through 1600; \n"
       "Friday, March 12, 2000, from 0800 through 1600; \n"
       "Friday, March 19, 2000, from 0800 through 1600; \n"
       "Friday, March 26, 2000, from 0800 through 1600; \n"
       "Friday, April 2, 2000, from 0800 through 1600; \n"
       "Friday, April 9, 2000, from 0800 through 1600; \n"
       "Friday, April 16, 2000, from 0800 through 1600; \n"
       "Friday, April 23, 2000, from 0800 through 1600; \n"
       "Friday, April 30, 2000, from 0800 through 1600. \n"
       "\n"
       "Properties not present in an instance of "
       "PolicyTimePeriodCondition are implicitly treated as having "
       "their value \'always enabled\'. Thus, in the example above, "
       "the day-of-the-month mask is not present, and so the validity "
       "period for the instance implicitly includes a day-of-the-month "
       "mask that selects all days of the month. If this \'missing "
       "property\' rule is applied to its fullest, we see that there "
       "is a second way to indicate that a PolicySet is always "
       "enabled: associate with it an instance of "
       "PolicyTimePeriodCondition whose only properties with specific "
       "values are its key properties." )]
class CIM_PolicyTimePeriodCondition : CIM_PolicyCondition {

      [Description ( 
          "This property identifies an overall range of calendar "
          "dates and times over which a PolicySet is valid. It is "
          "formatted as a string representing a start date and "
          "time, in which the character \'T\' indicates the "
          "beginning of the time portion, followed by the solidus "
          "character \'/\', followed by a similar string "
          "representing an end date and time. The first date "
          "indicates the beginning of the range, while the second "
          "date indicates the end. Thus, the second date and time "
          "must be later than the first. Date/times are expressed "
          "as substrings of the form yyyymmddThhmmss. For example: \n"
          "20000101T080000/20000131T120000 defines \n"
          "January 1, 2000, 0800 through January 31, 2000, noon \n"
          "\n"
          "There are also two special cases in which one of the "
          "date/time strings is replaced with a special string "
          "defined in RFC 2445. \n"
          "o If the first date/time is replaced with the string "
          "\'THISANDPRIOR\', then the property indicates that a "
          "PolicySet is valid [from now] until the date/time that "
          "appears after the \'/\'. \n"
          "o If the second date/time is replaced with the string "
          "\'THISANDFUTURE\', then the property indicates that a "
          "PolicySet becomes valid on the date/time that appears "
          "before the \'/\', and remains valid from that point on." ), 
       ModelCorrespondence { 
          "CIM_PolicyTimePeriodCondition.MonthOfYearMask", 
          "CIM_PolicyTimePeriodCondition.DayOfMonthMask", 
          "CIM_PolicyTimePeriodCondition.DayOfWeekMask", 
          "CIM_PolicyTimePeriodCondition.TimeOfDayMask", 
          "CIM_PolicyTimePeriodCondition.LocalOrUtcTime" }]
   string TimePeriod;

      [Description ( 
          "The purpose of this property is to refine the valid time "
          "period that is defined by the TimePeriod property, by "
          "explicitly specifying in which months the PolicySet is "
          "valid. These properties work together, with the "
          "TimePeriod used to specify the overall time period in "
          "which the PolicySet is valid, and the MonthOfYearMask "
          "used to pick out the months during which the PolicySet "
          "is valid. \n"
          "\n"
          "This property is formatted as an octet string, "
          "structured as follows: \n"
          "o a 4-octet length field, indicating the length of the "
          "entire octet string; this field is always set to "
          "0x00000006 for this property; \n"
          "o a 2-octet field consisting of 12 bits identifying the "
          "12 months of the year, beginning with January and ending "
          "with December, followed by 4 bits that are always set to "
          "\'0\'. For each month, the value \'1\' indicates that "
          "the policy is valid for that month, and the value \'0\' "
          "indicates that it is not valid. \n"
          "\n"
          "The value 0x000000060830, for example, indicates that a "
          "PolicySet is valid only in the months May, November, and "
          "December. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "PolicySet is treated as valid for all twelve months, and "
          "only restricted by its TimePeriod property value and the "
          "other Mask properties." ), 
       OctetString, ModelCorrespondence { 
          "CIM_PolicyTimePeriodCondition.TimePeriod", 
          "CIM_PolicyTimePeriodCondition.LocalOrUtcTime" }]
   uint8 MonthOfYearMask[];

      [Description ( 
          "The purpose of this property is to refine the valid time "
          "period that is defined by the TimePeriod property, by "
          "explicitly specifying in which days of the month the "
          "PolicySet is valid. These properties work together, with "
          "the TimePeriod used to specify the overall time period "
          "in which the PolicySet is valid, and the DayOfMonthMask "
          "used to pick out the days of the month during which the "
          "PolicySet is valid. \n"
          "\n"
          "This property is formatted as an octet string, "
          "structured as follows: \n"
          "o a 4-octet length field, indicating the length of the "
          "entire octet string; this field is always set to "
          "0x0000000C for this property; \n"
          "o an 8-octet field consisting of 31 bits identifying the "
          "days of the month counting from the beginning, followed "
          "by 31 more bits identifying the days of the month "
          "counting from the end, followed by 2 bits that are "
          "always set to \'0\'. For each day, the value \'1\' "
          "indicates that the PolicySet is valid for that day, and "
          "the value \'0\' indicates that it is not valid. \n"
          "\n"
          "The value 0x0000000C8000000100000000, for example, "
          "indicates that a PolicySet is valid on the first and "
          "last days of the month. \n"
          "\n"
          "For months with fewer than 31 days, the digits "
          "corresponding to days that the months do not have "
          "(counting in both directions) are ignored. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "PolicySet is treated as valid for all days of the month, "
          "and only restricted by its TimePeriod property value and "
          "the other Mask properties." ), 
       OctetString, ModelCorrespondence { 
          "CIM_PolicyTimePeriodCondition.TimePeriod", 
          "CIM_PolicyTimePeriodCondition.LocalOrUtcTime" }]
   uint8 DayOfMonthMask[];

      [Description ( 
          "The purpose of this property is to refine the valid time "
          "period that is defined by the TimePeriod property, by "
          "explicitly specifying in which days of the week the "
          "PolicySet is valid. These properties work together, with "
          "the TimePeriod used to specify the overall time period "
          "in which the PolicySet is valid, and the DayOfWeekMask "
          "used to pick out the days of the week during which the "
          "PolicySet is valid. \n"
          "\n"
          "This property is formatted as an octet string, "
          "structured as follows: \n"
          "o a 4-octet length field, indicating the length of the "
          "entire octet string; this field is always set to "
          "0x00000005 for this property; \n"
          "o a 1-octet field consisting of 7 bits identifying the 7 "
          "days of the week, beginning with Sunday and ending with "
          "Saturday, followed by 1 bit that is always set to \'0\'. "
          "For each day of the week, the value \'1\' indicates that "
          "the PolicySet is valid for that day, and the value \'0\' "
          "indicates that it is not valid. \n"
          "\n"
          "The value 0x000000057C, for example, indicates that a "
          "PolicySet is valid Monday through Friday. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "PolicySet is treated as valid for all days of the week, "
          "and only restricted by its TimePeriod property value and "
          "the other Mask properties." ), 
       OctetString, ModelCorrespondence { 
          "CIM_PolicyTimePeriodCondition.TimePeriod", 
          "CIM_PolicyTimePeriodCondition.LocalOrUtcTime" }]
   uint8 DayOfWeekMask[];

      [Description ( 
          "The purpose of this property is to refine the valid time "
          "period that is defined by the TimePeriod property, by "
          "explicitly specifying a range of times in a day during "
          "which the PolicySet is valid. These properties work "
          "together, with the TimePeriod used to specify the "
          "overall time period in which the PolicySet is valid, and "
          "the TimeOfDayMask used to pick out the range of time "
          "periods in a given day of during which the PolicySet is "
          "valid. \n"
          "\n"
          "This property is formatted in the style of RFC 2445: a "
          "time string beginning with the character \'T\', followed "
          "by the solidus character \'/\', followed by a second "
          "time string. The first time indicates the beginning of "
          "the range, while the second time indicates the end. "
          "Times are expressed as substrings of the form \'Thhmmss\'. \n"
          "\n"
          "The second substring always identifies a later time than "
          "the first substring. To allow for ranges that span "
          "midnight, however, the value of the second string may be "
          "smaller than the value of the first substring. Thus, "
          "\'T080000/T210000\' identifies the range from 0800 until "
          "2100, while \'T210000/T080000\' identifies the range "
          "from 2100 until 0800 of the following day. \n"
          "\n"
          "When a range spans midnight, it by definition includes "
          "parts of two successive days. When one of these days is "
          "also selected by either the MonthOfYearMask, "
          "DayOfMonthMask, and/or DayOfWeekMask, but the other day "
          "is not, then the PolicySet is active only during the "
          "portion of the range that falls on the selected day. For "
          "example, if the range extends from 2100 until 0800, and "
          "the day of week mask selects Monday and Tuesday, then "
          "the PolicySet is active during the following three "
          "intervals: \n"
          "From midnight Sunday until 0800 Monday; \n"
          "From 2100 Monday until 0800 Tuesday; \n"
          "From 2100 Tuesday until 23:59:59 Tuesday. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "PolicySet is treated as valid for all hours of the day, "
          "and only restricted by its TimePeriod property value and "
          "the other Mask properties." ), 
       ModelCorrespondence { 
          "CIM_PolicyTimePeriodCondition.TimePeriod", 
          "CIM_PolicyTimePeriodCondition.LocalOrUtcTime" }]
   string TimeOfDayMask;

      [Description ( 
          "This property indicates whether the times represented in "
          "the TimePeriod property and in the various Mask "
          "properties represent local times or UTC times. There is "
          "no provision for mixing of local times and UTC times: "
          "the value of this property applies to all of the other "
          "time-related properties. TimePeriods are synchronized "
          "worldwide by using the enumeration value \'UTCTime\'. If "
          "the goal is to synchronize worldwide on a particular "
          "local time (such as 0300 - 0500 in New York), then if "
          "the TimePeriod property spans a Daylight Savings Time "
          "transition in New York, it will be necessary to create "
          "multiple instances of PolicyTimePeriodCondition, one "
          "based on the offset UTC-0500 for the part of each year "
          "when standard time is used in New York, and one based on "
          "the offset UTC-0400 for the part of each year when "
          "Daylight Savings Time is used there." ), 
       ValueMap { "1", "2" }, 
       Values { "Local Time", "UTC Time" }, 
       ModelCorrespondence { 
          "CIM_PolicyTimePeriodCondition.TimePeriod", 
          "CIM_PolicyTimePeriodCondition.MonthOfYearMask", 
          "CIM_PolicyTimePeriodCondition.DayOfMonthMask", 
          "CIM_PolicyTimePeriodCondition.DayOfWeekMask", 
          "CIM_PolicyTimePeriodCondition.TimeOfDayMask" }]
   uint16 LocalOrUtcTime;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "QueryCondition defines the criteria for generating a set of "
       "query results that are accessible to other QueryConditions or "
       "MethodActions of the same PolicyRule. If there are no results "
       "returned from the query, then the Condition evaluates to "
       "false; otherwise, true. \n"
       "\n"
       "QueryConditions are assumed to be constantly evaluated "
       "whenever precursor PolicyConditions are met. Actual "
       "implementations may evaluate conditions dynamically, via "
       "polling, or via other means. \n"
       "\n"
       "QueryCondition instances are viewed as clients of query. The "
       "QueryCondition implementation takes the query results and "
       "makes them available by the name specified in QueryResultName "
       "to the FROM clause in the Query property of other "
       "QueryConditions or MethodActions. (The details of how this is "
       "accomplished are implementation dependent.) These results are "
       "not available via CIM Operations, do not create lifecycle "
       "indications, and do not persist beyond a single evaluation of "
       "the associated PolicyRule." )]
class CIM_QueryCondition : CIM_PolicyCondition {

      [Required, Description ( 
          "In the context of the associated PolicyRule, "
          "QueryResultName defines a unique alias for the query "
          "results that MAY be used in subsequent QueryConditions "
          "or MethodActions of the same PolicyRule. This string is "
          "treated as a class name, in a query statement." ), 
       ModelCorrespondence { "CIM_QueryCondition.Query", 
          "CIM_MethodAction.Query" }]
   string QueryResultName;

      [Required, Description ( 
          "A query expression that MAY be evaluated and that "
          "defines the query results that MAY be generated. Note "
          "that the query\'s FROM clause MAY reference any class, "
          "including those named by the QueryResultName of other "
          "QueryCondition instances associated to the same "
          "PolicyRule." ), 
       ModelCorrespondence { "CIM_QueryCondition.QueryLanguage", 
          "CIM_QueryCondition.QueryResultName" }]
   string Query;

      [Required, Description ( 
          "The language in which the Query string is expressed./n "
          "CQL - refers to the \'DMTF:CQL\' language defined by "
          "DSP0200. \n"
          "CQL: indicates a CIM Query Language string. \n"
          "CQLT: indicates a CIM Query Language Template string. "
          "When used, the identifiers recognized in the "
          "$identifier$ tokens are \"SELF\" and the property names "
          "of this class, or one of its subclasses. When used in "
          "the Query string, $SELF$ will be replaced by a string "
          "corresponding to a WBEM URI referencing the instance of "
          "this class that contains the Query template string. "
          "Tokens of the form $<propertyname>$ will be replaced by "
          "a string representing the corresponding property value "
          "of the instance of this class that contains the Query "
          "string." ), 
       ValueMap { "2", "3", "..", "0x8000.." }, 
       Values { "CQL", "CQLT", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_QueryCondition.Query" }]
   uint16 QueryLanguage = 2;

      [Required, Description ( 
          "If Trigger = true, and with the exception of any "
          "PolicyTimePeriodConditions, PolicyConditions of this "
          "Policy are not evaluated until this \'triggering\' "
          "condition query is true. There MUST be no more than one "
          "QueryCondition with Trigger = true associated with a "
          "particular Policy." )]
   boolean Trigger = false;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "RejectConnectionAction is used to cause a connection or its "
       "negotiation to be terminated. For example, it can be used in "
       "conjunction with an address filter on UDP port 500 to reduce "
       "Denial of Service vulnerability. As another example, it can be "
       "specified as a low priority rule to explicitly define the "
       "default action for IKE key exchange negotiations - i.e., if "
       "the higher priority rules are not satisfied, then reject the "
       "connection negotiation." ), 
    MappingStrings { "IPSP Policy Model.IETF|IKERejectAction" }]
class CIM_RejectConnectionAction : CIM_PolicyAction {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class that provides a general extension mechanism for "
       "representing PolicyActions that have not been modeled with "
       "specific properties. Instead, the two properties ActionData "
       "and ActionEncoding are used to define the content and format "
       "of the Action, as explained below. \n"
       "\n"
       "As its name suggests, VendorPolicyAction is intended for "
       "vendor-specific extensions to the Policy Core Information "
       "Model. Standardized extensions are not expected to use this "
       "class." )]
class CIM_VendorPolicyAction : CIM_PolicyAction {

      [Description ( 
          "This property provides a general extension mechanism for "
          "representing PolicyActions that have not been modeled "
          "with specific properties. The format of the octet "
          "strings in the array is left unspecified in this "
          "definition. It is determined by the OID value stored in "
          "the property ActionEncoding. Since ActionEncoding is "
          "single-valued, all the values of ActionData share the "
          "same format and semantics." ), 
       OctetString, ModelCorrespondence { 
          "CIM_VendorPolicyAction.ActionEncoding" }]
   string ActionData[];

      [Description ( 
          "An OID encoded as a string, identifying the format and "
          "semantics for this instance\'s ActionData property." ), 
       ModelCorrespondence { "CIM_VendorPolicyAction.ActionData" }]
   string ActionEncoding;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class that provides a general extension mechanism for "
       "representing PolicyConditions that have not been modeled with "
       "specific properties. Instead, the two properties Constraint "
       "and ConstraintEncoding are used to define the content and "
       "format of the Condition, as explained below. \n"
       "\n"
       "As its name suggests, VendorPolicyCondition is intended for "
       "vendor-specific extensions to the Policy Core Information "
       "Model. Standardized extensions are not expected to use this "
       "class." )]
class CIM_VendorPolicyCondition : CIM_PolicyCondition {

      [Description ( 
          "This property provides a general extension mechanism for "
          "representing PolicyConditions that have not been modeled "
          "with specific properties. The format of the octet "
          "strings in the array is left unspecified in this "
          "definition. It is determined by the OID value stored in "
          "the property ConstraintEncoding. Since "
          "ConstraintEncoding is single-valued, all the values of "
          "Constraint share the same format and semantics." ), 
       OctetString, ModelCorrespondence { 
          "CIM_VendorPolicyCondition.ConstraintEncoding" }]
   string Constraint[];

      [Description ( 
          "An OID encoded as a string, identifying the format and "
          "semantics for this instance\'s Constraint property." ), 
       ModelCorrespondence { "CIM_VendorPolicyCondition.Constraint" }]
   string ConstraintEncoding;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ExchangeElement 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ExchangeElement is an abstract base class for all classes "
       "in the Solution and Service Incident object model. As an "
       "abstract class it is never instantiated. \n"
       "\n"
       "PRS_ExchangeElement exists to provide a single anchor point "
       "for associations that may be made to any Solution or Service "
       "Incident object. For example, Administrative or Attachment "
       "instances may be associated with any object derived from "
       "PRS_ExchangeElement. To support this generic association "
       "capability, the PRS_AdminAssociation and PRS_Attached "
       "associations both derive from the CIM_Dependency association "
       "and override the Antecedent property of that class to be a "
       "PRS_ExchangeElement REF." )]
class PRS_ExchangeElement : CIM_ManagedElement {

      [Key, Description ( 
          "The PRSUniqueName property is a Globally Unique "
          "IDentifier (GUID) also known as a Universally Unique "
          "IDentifier (UUID). This property allows Solution and "
          "Service Incident objects to be used by multiple "
          "Solutions or Service Incidents without duplication. In "
          "addition, all Solution or Service Incidents containing a "
          "unique object are updated when the object is updated." )]
   string PRSUniqueName;

      [Description ( 
          "The DirtyFlag is used by the SISService Start "
          "Transaction method to determine whether an "
          "ExchangeElement has been created, modified or deleted "
          "since the last Transaction. Any object not marked "
          "\'Clean\' is included in the next Transaction. \n"
          "\n"
          "It is the responsibility of the entity creating, "
          "modifying or deleting the object derived from "
          "ExchangeElement to set this property appropriately. \n"
          "\n"
          "This property value is set to \'Clean\' by an invocation "
          "of the Transaction Complete method with a Status "
          "parameter of zero (0)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Clean", "New", "Modified", "Deleted" }]
   uint8 DirtyFlag;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ExpressionElement 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ExpressionElement is an abstract base class for "
       "PRS_Products and PRS_Statements. It provides a common "
       "association point for objects associated with PRS_Expressions." )]
class PRS_ExpressionElement : PRS_ExchangeElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Feature 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Feature is used for structured diagnostic data, including "
       "specific data values like steps or conditions. For example, "
       "consider a PRS_Statement with a Text property value of: \n"
       "Print jobs per day are less than 50 \n"
       "\n"
       "This could be described using a PRS_Feature as follows: \n"
       "Description: \'Print jobs per day\' \n"
       "Prompt: \'How many print jobs per day?\' \n"
       "ValidValues: \'10\' \'50\' \'100\' \n"
       "DataType: \'Integer\' \n"
       "\n"
       "The associated PRS_Statement would contain: \n"
       "Operator: \'<\' \n"
       "FeatureValue: \'50\'" )]
class PRS_Feature : PRS_ExchangeElement {

      [Description ( "Prompt presented through user interface." )]
   string Prompt;

      [Description ( "Valid values for this PRS_Feature." )]
   string ValidValues;

      [Description ( 
          "Data type used for PRS_Statement FeatureValue property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "254", "255" }, 
       Values { "String", "Integer", "Float", "Date/Time", 
          "Boolean", "Binary", "Other", "Unknown" }]
   uint8 DataType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Location 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Location describes the location of a PRS_Address." )]
class PRS_Location : PRS_ExchangeElement {

      [Description ( "The type of location." ), 
       ValueMap { "0", "1", "2", "3", "4", "254", "255" }, 
       Values { "Primary_Voice", "Alternate_Voice", "Fax", "Email", 
          "URL", "Other", "Unknown" }]
   uint8 LocationType;

      [Description ( "The specific location." )]
   string LocationID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Product 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Product is used to describe a single product to associate "
       "with a PRS_Expression." )]
class PRS_Product : PRS_ExpressionElement {

      [Description ( "The vendor of the product." )]
   string Vendor;

      [Description ( "The make and or model of the product." )]
   string ProductName;

      [Description ( "The version of the product." )]
   string Version;

      [Description ( 
          "The order of relevance of this product to an associated "
          "PRS_SolutionElement (which includes PRS_Reference, "
          "PRS_Problem or PRS_Resolution)." )]
   string Order;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Resource 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Each PRS_Resolution may have an associated cost of "
       "implementation. This cost may have several components such as "
       "time, material costs, labor cost, etc. To capture these costs, "
       "a PRS_Resouce is associated with a PRS_Resolution. For Service "
       "Incidents, one or more PRS_Resource objects may be associated "
       "with an Activity." )]
class PRS_Resource : PRS_ExchangeElement {

      [Description ( "A string describing the type of resource." )]
   string ResourceType;

      [Description ( "Number of units of resource used." )]
   uint16 Quantity;

      [Description ( "Unit of measure for this resource." )]
   string Units;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Revision 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "PRS_Revision records changes to the content." )]
class PRS_Revision : PRS_ExchangeElement {

      [Description ( "The date of this revision." )]
   datetime RevisionDate;

      [Description ( "The name of the specific revision being made." ), 
       ValueMap { "0", "1", "2", "254", "255" }, 
       Values { "Create", "Update", "Delete", "Other", "Unknown" }]
   uint8 ActivityName;

      [Description ( 
          "Type of revision activity. \'Technical\' refers to a "
          "change in content. \'Editorial\' refers to a change in "
          "language or style. \'Administrative\' refers to "
          "information about the object." ), 
       ValueMap { "0", "1", "2", "254", "255" }, 
       Values { "Technical", "Editorial", "Administrative", "Other", 
          "Unknown" }]
   uint8 ActivityType;

      [Description ( 
          "The current state of technical review. \'Open\' means "
          "created but not necessarily completed or resolved. \'Not "
          "Reviewed\' means contents have to be reviewed for "
          "accuracy and consistency with other content. \'Reviewed\' "
          "means review has been completed. \'Approved\' means "
          "formally approval to certify the solution given the "
          "specific status of the contents." ), 
       ValueMap { "0", "1", "2", "3", "254", "255" }, 
       Values { "Open", "Not Reviewed", "Reviewed", "Approved", 
          "Other", "Unknown" }]
   uint8 TechnicalStatus;

      [Description ( 
          "The current state of editorial review. \'In Progress\' "
          "means the content is in the process of being developed. "
          "\'Draft\' means the content is complete but unedited. "
          "\'Reviewed\' means the review has been completed. "
          "\'Published\' means the contents have been released." ), 
       ValueMap { "0", "1", "2", "3", "254", "255" }, 
       Values { "In_Progress", "Draft", "Reviewed", "Published", 
          "Other", "Unknown" }]
   uint8 EditorialStatus;

      [Override ( "Description" ), 
       Description ( 
          "Text description of what was done in this revision." )]
   string Description;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceIncident 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ServiceIncident contains the fundamental information "
       "related to a specific incident: its identity, status, "
       "priority, etc. The actual incident data, including specific "
       "transactions and resolution information, is contained in the "
       "objects associated with PRS_ServiceIncident. These include "
       "specific Problem, Resolution and Activity related objects "
       "accrued through the Transaction workflow." )]
class PRS_ServiceIncident : PRS_ExchangeElement {

      [Description ( 
          "The unique identifier for this incident assigned by the Requester."
           )]
   string RequesterID;

      [Description ( 
          "The unique identifier for this incident assigned by the Provider."
           )]
   string ProviderID;

      [Description ( 
          "The state of the incident within the Service Incident "
          "Exchange Standard transaction model." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "254", 
          "255" }, 
       Values { "Beginning_State", "Not_Entitled", "Entitled", 
          "Problem_Submitted", "Open_Requester", "Open_Provider", 
          "Closed_Pending_Confirmation", "Closed", "Other", "Unknown" }]
   uint8 CurrentState;

      [Description ( 
          "The severity of the incident as defined by the "
          "Requester. One is the most severe and five is the least "
          "severe." ), 
       ValueMap { "1", "2", "3", "4", "5" }]
   uint8 RequesterSeverity;

      [Description ( 
          "The priority of the incident as defined by the "
          "Requester. One is the highest priority and five is the "
          "lowest priority." ), 
       ValueMap { "1", "2", "3", "4", "5" }]
   uint8 ProviderPriority;

      [Description ( 
          "The explicit time the Requester expects a response." )]
   datetime ResponseTime;

      [Description ( 
          "Status of the incident according to the workflow." )]
   string WorkflowStatus;

      [Description ( 
          "Additional general information about the incident." )]
   string Comment;

      [Description ( "Is the Requester entitled to service or not?" ), 
       ValueMap { "0", "1", "254", "255" }, 
       Values { "Yes", "No", "Other", "Unknown" }]
   uint8 Entitled;

      [Description ( 
          "Was the last transaction was accepted or rejected?" ), 
       ValueMap { "0", "1", "254", "255" }, 
       Values { "Yes", "No", "Other", "Unknown" }]
   uint8 Acknowledge;

      [Deprecated { "PRS_ServiceIncident.LastTransaction" }, 
       Description ( 
          "The use of the TransactionName property is deprecated. "
          "New Service Incidents should use the LastTransaction "
          "property and set this property to NULL." )]
   string TransactionName;

      [Description ( 
          "The name of the last transaction which was acknowledged." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "254", "255" }, 
       Values { "Service_Request", "Entitlement", 
          "Problem_Submittal", "Accept_Problem", 
          "Problem_Resolution", "Request_Problem_Information", 
          "Provide_Problem_Information", 
          "Provide_Admin_Information", "Query_Incident", 
          "Confirm_Close", "Reject_Resolution", "Request_Closure", 
          "Other", "Unknown" }]
   uint8 LastTransaction;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Solution 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Solution is the root class of a set of associated classes "
       "used to describe a single Solution. If a Solution is "
       "associated with multiple Problems or Resolutions, all of the "
       "Problems described are related to all of the Resolutions "
       "described. The reverse is also true. All of the Resolutions "
       "described are related to all of the Problems described in the "
       "Solution. \n"
       "\n"
       "PRS_Solution is directly associated to one or more of the "
       "following classes: \n"
       "PRS_Reference \n"
       "PRS_Problem \n"
       "PRS_Resolution. " )]
class PRS_Solution : PRS_ExchangeElement {

      [Description ( "The Solution title." )]
   string Title;

      [Description ( "A brief description of the Solution." )]
   string SolutionAbstract;

      [Description ( 
          "The SolutionType suggests the type of knowledge "
          "contained in the Solution. Depending on the type, the "
          "Solution may or may not include particular objects. For "
          "example, a \'Reference\' Solution describes "
          "non-diagnostic technical or general information using "
          "PRS_Statement objects. A \'Diagnostic\' Solution "
          "includes one or more PRS_Problem and PRS_Resolution "
          "objects. A \'How To\' Solution describes how to solve a "
          "particular Problem described by a PRS_Problem in a "
          "series of sequential steps within a PRS_Resolution." ), 
       ValueMap { "0", "1", "2", "254", "255" }, 
       Values { "Reference", "Diagnostic", "How To", "Other", 
          "Unknown" }]
   uint8 SolutionType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionElement 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_SolutionElement is an abstract base class for non-Category "
       "objects that are associated with a Solution. This includes: \n"
       "PRS_Reference \n"
       "PRS_Problem \n"
       "PRS_Resolution \n"
       "\n"
       "PRS_SolutionElement provides a common reference for these "
       "objects to be associated with PRS_Expression objects through "
       "the SolutionExpression association. \n"
       "\n"
       "In addition, all of the derived objects may be retrieved with "
       "a single query for the common super-class." )]
class PRS_SolutionElement : PRS_ExchangeElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Statement 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Statement contains the text describing a problem, any "
       "relevant background information, and its resolution. "
       "Statements are units of text ranging from brief sentences or "
       "phrases to paragraphs or pages. There is no limit to the "
       "number of PRS_Statements within a Solution, as long as they "
       "support the intent and focus of their root class. Root classes "
       "include: PRS_Reference, PRS_Problem or PRS_Resolution. \n"
       "\n"
       "PRS_Statements may be grouped together to build compound "
       "\'sentences\'. For example, \n"
       "StatementA = Printer output is blotchy. \n"
       "StatementB = Print jobs per day are less than 50. \n"
       "ExpressionA = StatementA AND StatementB." )]
class PRS_Statement : PRS_ExpressionElement {

      [Description ( 
          "StatementRole describes how the PRS_Statement relates to "
          "the larger context. For example, is the PRS_Statement "
          "describing a Fix or a Symptom? \'Description\' is "
          "generic text without a specific diagnostic application. "
          "\'Symptom\' describes initial observable incident or "
          "behavior that the user reports. \'Error_Message\' is a "
          "specific type of symptom that the user reports, "
          "describing the specific error condition. \'Objective\' "
          "is what the user wants to accomplish, often expressed as "
          "a positive condition. FOr example, how to print on a "
          "network. \'Evidence\' is information that is collected "
          "to diagnose the problem after the symptom is reported. "
          "\'Cause\' is a description of the underlying facts or "
          "factors that engender or relate this behavior. "
          "\'Work_around\' is information that lets the user work, "
          "but does not correct the problem completely. \'Fix\' is "
          "information that fixes the problem completely. \'Answer\' "
          "is the information given to the user such as steps to "
          "perform, wording to support their environment and "
          "understanding. \'Keyword\' is a specific classification "
          "using defined words or phrases. \'Changes\' describe "
          "recent changes in the environment which could affect the "
          "problem or resolution. \'Title\' is the title applying "
          "to associated PRS_Statements (usually associated via an "
          "\'and\' expression." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "254", "255" }, 
       Values { "Description", "Symptom", "Error_Message", 
          "Objective", "Evidence", "Cause", "Work_Around", "Fix", 
          "Answer", "Keyword", "Changes", "Title", "Other", "Unknown" }]
   uint8 StatementRole;

      [Description ( 
          "The descriptive text used for the PRS_Statement." )]
   string Text;

      [Description ( 
          "When the PRS_Adminstrative object indicates Level 2 "
          "compliance, StatementOperator describes the relationship "
          "between an associated PRS_Feature and the FeatureValue "
          "property. This property is ignored if there is no "
          "PRS_Feature associated with this PRS_Statement." )]
   string StatementOperator;

      [Description ( 
          "When the PRS_Adminstrative object indicates Level 2 "
          "compliance, FeatureValue is the specific value selected "
          "from the associated PRS_Feature. This property is "
          "ignored if there is no PRS_Feature associated with this "
          "PRS_Statement." )]
   string FeatureValue;

      [Description ( 
          "Order is used to sequence PRS_Statements associated with "
          "a single PRS_Expression to allow a Consumer to process "
          "the information in the order desired by the Producer." )]
   string Order;

      [Description ( 
          "Importance of this Statement. The value of this property "
          "shall be an integer value in the range of 0 to 100, "
          "inclusive." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint16 Relevance;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Transaction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Transaction represents a single transaction of the Service "
       "Incident workflow. A PRS_Transaction instance is created by "
       "the PRS_SISService StartSISTransaction method." )]
class PRS_Transaction : PRS_ExchangeElement {

      [Description ( 
          "The specific SIS transaction represented by this "
          "PRS_Transaction instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "254", "255" }, 
       Values { "Service_Request", "Entitlement", 
          "Problem_Submittal", "Accept_Problem", 
          "Problem_Resolution", "Request_Problem_Information", 
          "Provide_Problem_Information", 
          "Provide_Admin_Information", "Query_Incident", 
          "Confirm_Close", "Reject_Resolution", "Request_Closure", 
          "Other", "Unknown" }]
   uint8 TransactionType;

      [Description ( 
          "The current state of this transaction. This value is "
          "manipulated by the PRS_SISService:StartSISTransaction "
          "and SetSISCompletionStatus method implementations. This "
          "property is not intended to be written by management "
          "applications." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Open", "Working", "Closed", "Notification_Pending" }]
   uint8 TransactionState;

      [Description ( 
          "The status of the transaction after it has reached the "
          "\'Closed\' state. A CompletionStatus of zero (0) means "
          "the tranasaction completed successfully. A non-zero "
          "CompletionStatus indicates the transaction did not "
          "complete successfully. Non-zero values are "
          "implementation-specific. While the transaction is \'Open\' "
          "or \'Working\' the CompletionStatus property shall be "
          "zero (0). See the description for PRS_SISService for the "
          "definition of the contents of this property." )]
   uint32 CompletionStatus;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::BIOS" ), 
    Description ( 
       "A class derived from ManagedElement that provides "
       "instrumentation of BIOS configuration data or Attributes of a "
       "managed computer system or device. These attributes are "
       "surfaced in the form of BIOSAttribute instances. The "
       "CIM_BIOSAttribute object may be used to represent both "
       "configurable and static BIOS attributes." )]
class CIM_BIOSAttribute : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following &apos;preferred&apos; algorithm: "
          "<OrgID>:<LocalID>Where <OrgID> and <LocalID> are "
          "separated by a colon &apos;:&apos;, and where <OrgID> "
          "MUST include a copyrighted, trademarked or otherwise "
          "unique name that is owned by the business entity "
          "creating/defining the InstanceID, or is a registered ID "
          "that is assigned to the business entity by a recognized "
          "global authority (This is similar to the <Schema "
          "Name>_<Class Name> structure of Schema class names.) In "
          "addition, to ensure uniqueness <OrgID> MUST NOT contain "
          "a colon (&apos;:&apos;). When using this algorithm, the "
          "first colon to appear in InstanceID MUST appear between "
          "<OrgID> and <LocalID>. <LocalID> is chosen by the "
          "business entity and SHOULD not be re-used to identify "
          "different underlying (real-world) elements. If the above "
          "&apos;preferred&apos; algorithm is not used, the "
          "defining entity MUST assure that the resultant "
          "InstanceID is not re-used across any InstanceIDs "
          "produced by this or other providers for this instance\'s "
          "NameSpace. For DMTF defined instances, the "
          "&apos;preferred&apos; algorithm MUST be used with the "
          "<OrgID> set to &apos;CIM&apos;." )]
   string InstanceID;

      [Required, Description ( 
          "A string identifying the structured element name for a "
          "BIOS attribute using the format \"<OrgID>:<identifier>\" "
          "in which <OrgID>, does contain a colon (\":\"). The "
          "value of <OrgID> is a copyrighted, trademarked or "
          "otherwise unique name that is owned by the entity "
          "defining the <identifier>, or is a registered ID that is "
          "assigned to the entity by a recognized global authority. "
          "For DMTF defined identifiers, the <OrgID> is set to "
          "\'DMTF\' and the <identifier> is specified in the BIOS "
          "Attribute Registry." )]
   string AttributeName;

      [Required, Description ( 
          "An array of strings representing the current value or "
          "values of the BIOS Attribute." )]
   string CurrentValue[];

      [Description ( 
          "An array of strings representing the default value or "
          "values of the BIOS Attribute." )]
   string DefaultValue[];

      [Description ( 
          "An array of strings representing a pending Attribute "
          "value that will not take affect until some point in the "
          "future. This would typically be used to represent "
          "Attributes that could not be changed until a system "
          "reset. When a BIOS attribute has no pending changes, "
          "PendingValue SHALL be NULL. PendingValue SHALL have a "
          "value of at least one element from the "
          "CIM_BIOSEnumeration.PossibleValues array when the an "
          "instance of the central class represents an enumeration." )]
   string PendingValue[];

      [Description ( 
          "This property specifies that the Attribute represented "
          "makes up an ordered selection list with elements in the "
          "CurrentValue array. The element zero shall be first or "
          "least numbered element and incrementally increase to the "
          "end of the array. The least or first element may "
          "represent the highest priority in the ordered list." ), 
       ModelCorrespondence { "CIM_BIOSAttribute.CurrentValue" }]
   boolean IsOrderedList;

      [Description ( 
          "This property specifies if the underlying system BIOS or "
          "BIOSService will not allow the Attribute to be modified "
          "through calls tothe methods "
          "CIM_BIOSService.SetBIOSAttribute or "
          "CIM_BIOSService.SetBIOSDefaults. This does not mean the "
          "Attribute can not be modified through other means. Only "
          "that the CIM interfaceis not capable of making a change" )]
   boolean IsReadOnly;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::BIOS" ), 
    Description ( 
       "This class extends the CIM_BIOSAttribute base class definition "
       "to provide informational detail for enumeration data types. "
       "Enumerations are single-selection lists with a finite set of "
       "entities. Example enumerations might include \"Power-On Self "
       "Test: Enable, Disable\" or \"Standby Timeout: 15 minutes, 30 "
       "minutes, 45 minutes, Never\"." )]
class CIM_BIOSEnumeration : CIM_BIOSAttribute {

      [Required, Description ( 
          "An array of strings containing possible value "
          "definitions for the Attribute. The first element SHOULD "
          "not be NULL and there SHOULD be no NULL or empty string "
          "elements intermixed with populated array element values. "
          "A Value of NULL SHALL indicate an element\'s value is "
          "unknown." ), 
       ArrayType ( "indexed" ), 
       ModelCorrespondence { 
          "CIM_BIOSEnumeration.PossibleValuesDescription" }]
   string PossibleValues[];

      [Description ( 
          "An array of free-form strings providing explanations and "
          "details behind the entries in the "
          "CIM_BIOSEnumeration.PossibleValues array. Note that each "
          "entry of this array is related to the entry in "
          "PossibleValues array that is located at the same index." ), 
       ArrayType ( "indexed" ), 
       ModelCorrespondence { "CIM_BIOSEnumeration.PossibleValues" }]
   string PossibleValuesDescription[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::BIOS" ), 
    Description ( 
       "The BIOSInteger object may be used to instantiate and provide "
       "detailed information describing BIOS attributeswith integer "
       "values." )]
class CIM_BIOSInteger : CIM_BIOSAttribute {

      [Description ( 
          "The property defines a lower bound or limit when "
          "modifying this attribute." ), 
       ModelCorrespondence { "CIM_BIOSInteger.UpperBound" }]
   uint64 LowerBound;

      [Description ( 
          "The property defines an upper bound or limit when "
          "modifying this attribute." ), 
       ModelCorrespondence { "CIM_BIOSInteger.LowerBound" }]
   uint64 UpperBound;

      [Description ( 
          "Indicates the programmatic unit for the "
          "CIM_BIOSAttribute.CurrentValue, "
          "CIM_BIOSAttribute.PendingValue, and "
          "CIM_BIOSAttribute.DefaultValue Properties when instance "
          "of the central class represents an Integer." ), 
       ModelCorrespondence { "CIM_BIOSAttribute.CurrentValue", 
          "CIM_BIOSAttribute.PendingValue", 
          "CIM_BIOSAttribute.PendingValue" }, 
       ISPUnit]
   string ProgrammaticUnit;

      [Description ( 
          "Specifies the granularity of a scalar Attribute value. "
          "The scalar increment is based on the scalar unit being "
          "instrumented and returned as a programmaticUnit. For "
          "example, if ProgrammaticUnit= \"Percentage\" and "
          "ScalarIncrement=\"10\" then the scalar value is in "
          "increments of 10 percent. It has a default value of 1." ), 
       ModelCorrespondence { "CIM_BIOSInteger.ProgramaticUnit" }]
   uint32 ScalarIncrement = 1;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::System::BIOS" ), 
    Description ( 
       "The CIM_BIOSPassword object may be used to instantiate detail "
       "information about manageable BIOS-based passwords." )]
class CIM_BIOSPassword : CIM_BIOSAttribute {

      [Description ( 
          "This property specifies the minimum string length "
          "allowed when modifying this BIOS attribute. A value of "
          "NULL SHALL be defined as zero." ), 
       ModelCorrespondence { "CIM_BIOSPassword.MaxLength" }]
   uint64 MinLength;

      [Description ( 
          "This property specifies the maximum string length "
          "allowed when modifying this BIOS attribute. A value of "
          "NULL defines the maximum length is unknown. A value of 0 "
          "defines the maximum length as 18446744073709551615, the "
          "limitation of the property definition as uint64." ), 
       ModelCorrespondence { "CIM_BIOSPassword.MinLength" }]
   uint64 MaxLength;

      [Override ( "CurrentValue" ), 
       Description ( "CurrentValue shall return an empty array." )]
   string CurrentValue[];

      [Required, Override ( "PendingValue" ), 
       Description ( "PendingValue shall return an empty array." )]
   string PendingValue[];

      [Description ( 
          "PasswordEncoding specifies encoding tag used to denote "
          "the format the password string was createdor set with "
          "\"kbd\" denotes a string in hexadecimal format "
          "containing keyboard scan code input. An example of a "
          "password structured in this format would be "
          "\"321539191E1F1F11181320\", which is the representation "
          "of \"my password\" in US English keyboard scan codes. "
          "\"ascii\" denotes clear text that shall comply with the "
          "ASCII character set. Character encodings from \" \" "
          "(decimal 32) to \"~\" (decimal 126) are supported. An "
          "example would be \"my password\".\"pin\" denotes that "
          "only numeric input in ASCII text is allowed for the "
          "password instance. An example would be \"1234\"." ), 
       ValueMap { "2", "3", "4", "5", "..", "65536..4294967295" }, 
       Values { "ascii", "kbd", "pin", "Unicode", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_BIOSServiceCapabilities.SupportedPasswordEncodings" }]
   uint32 PasswordEncoding;

      [Description ( 
          "This property returns TRUE if the current password "
          "instance is non-blank and FALSE otherwise. This property "
          "is provided because the Value property is always defined "
          "as NULL for password instances." )]
   boolean IsSet;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::BIOS" ), 
    Description ( 
       "The CIM_BIOSString object may be used to instantiate "
       "string-based BIOS attributes." )]
class CIM_BIOSString : CIM_BIOSAttribute {

      [Description ( 
          "The StringType property provides management applications "
          "with information defining implementation\'s capabilities "
          "regarding string values. A value of ASCII indicates a "
          "plain text formatting with no tabs formating or bolds, "
          "plain text. A value of hex indicates a simple encoding "
          "of the numerals 0 to 9 and the letters A to F and is not "
          "case sensitive. A value of unicode indicates fully "
          "multi-lingual text support. A string BIOS Attribute with "
          "value of regex is a regular expression and the "
          "CIM_BIOSString.ValueExpression shall be applied to "
          "values represented and any value that is attempted to be "
          "set by invoking SetBIOSAttribute()." ), 
       ValueMap { "0", "2", "3", "4", "5", "..", "65536..4294967295" }, 
       Values { "Unknown", "ASCII", "hex", "unicode", "regex", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 StringType;

      [Description ( 
          "This property specifies the minimum string length "
          "allowed when modifying this BIOS attribute. A value of "
          "NULL SHALL be defined as zero." ), 
       ModelCorrespondence { "CIM_BIOSString.MaxLength" }]
   uint64 MinLength;

      [Description ( 
          "This property specifies the maximum string length "
          "allowed when modifying this BIOS attribute. A value of "
          "NULL defines the maximum length is unknown. A value of 0 "
          "defines the maximum length as 18446744073709551615, the "
          "limitation of the property definition as uint64." ), 
       ModelCorrespondence { "CIM_BIOSString.MinLength" }]
   uint64 MaxLength;

      [Description ( 
          "The property denotes a Perl-compatible regular "
          "expression (PCRE) syntax to use in validating Attribute "
          "values. For a string Attribute where StringType=\"regex\" "
          "this property shall have a value." )]
   string ValueExpression;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "BootSettingData is a set of settings that apply to system "
       "boot. An example of usage of this class is to hold several "
       "BIOS, NVRAM, firmware or system settings, typically seen in "
       "the BIOS setup screens. These settings would need to be "
       "modified by the system as part of the boot process. Since, it "
       "is often not possible to intercept the boot process to apply "
       "these settings, users can set these a priori in the instance "
       "associated with the selected BootSourceSetting, thereby "
       "instructing the system to apply them during the next system "
       "reboot." )]
class CIM_BootSettingData : CIM_SettingData {

      [Description ( 
          "OwningEntity identifies the vendor or organization that "
          "defines the contained boot settings. In order to ensure "
          "uniqueness, the value of OwningEntity MUST be "
          "constructed using the following algorithm: \n"
          "<OrgID>[:<LocalID>] \n"
          "where <OrgID> MUST include a copyrighted, trademarked or "
          "otherwise unique name that is owned by the entity "
          "creating/defining the BootSettingData, or is a "
          "registered ID that is assigned to the entity by a "
          "recognized global authority (This is similar to the "
          "<Schema Name>_<Class Name> structure of Schema class "
          "names.) In addition, <OrgID> MUST NOT contain a colon "
          "(\':\'). \n"
          "<LocalID> is optional and, when used, MUST be unique "
          "within the scope of the <OrgID>. When a <LocalID> is "
          "present, a colon MUST appear between <OrgID> and "
          "<LocalID>. For DMTF defined instances, the algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string OwningEntity;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "A class derived from SettingData that provides the information "
       "necessary to describe a boot source. This may be optionally "
       "associated to a bootable logical device, such as a hard disk "
       "partition, or a network device. The information from this "
       "class instance is used by the boot manager, such as BIOS/EFI "
       "or OS Loader to initiate the boot process, when this instance "
       "appears in a BootConfigSetting collection." )]
class CIM_BootSourceSetting : CIM_SettingData {

      [Description ( 
          "A string identifying the boot source. It is typically "
          "used by the instrumentation to pass to the boot manager "
          "as a selection string. This could be a string "
          "identifying the bootable device, such as \"CDROM 1\", or "
          "could be an implementation specific address of a "
          "bootable partition, such as the following. \"fd(64)unix "
          "root=hd(40) swap=hd(41)\", or "
          "\"multi(0)disk(0)rdisk(0)partition(1)\\WINDOWS=\"Microsoft "
          "Windows XP Professional\"\"." )]
   string BootString;

      [Description ( 
          "A string identifying the boot source which corresponds "
          "to the string used by the BIOS to uniquely name the boot "
          "source. For example, in systems which implement the BIOS "
          "Boot Specification, the string could correspond to the "
          "descString string for entries in the IPL Table or BCV "
          "Table." )]
   string BIOSBootString;

      [Description ( 
          "A string identifying the boot source using the format "
          "\"<OrgID>:<identifier>:<index>\", in which neither "
          "<OrgID>, <identifier> or <index> contains a colon (\":\"). "
          "The value of <OrgID> is a copyrighted, trademarked or "
          "otherwise unique name that is owned by the entity "
          "defining the <identifier>, or is a registered ID that is "
          "assigned to the entity by a recognized global authority. "
          "For DMTF defined identifiers, the <OrgID> is set to "
          "\'CIM\'. The <identifiers> are \"Floppy\", \"Hard-Disk\", "
          "\"CD/DVD\", \"Network\", \"PCMCIA\", \"USB\". The value "
          "of <index> shall be a non-zero integer." )]
   string StructuredBootString;

      [Description ( 
          "An enumeration indicating the behavior when the attempt "
          "to boot using the boot source fails (no media, timeout). "
          "The current values in the enumeration are: \n"
          "0 = Unknown \n"
          "1 = Is Supported \n"
          "2 = Is Not Supported. \n"
          "A value of 1 (Is Supported) indicates that next boot "
          "source the boot order is used. A value of 2 (Is Not "
          "Supported) indicates that the boot order is terminated "
          "and no other boot sources associated to the same "
          "CIM_BootConfigSetting are used). The default is 1 (Is "
          "Supported)" ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Is Supported", "Not Supported" }]
   uint16 FailThroughSupported;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticResult 
// ==================================================================
   [Deprecated { "CIM_DiagnosticServiceRecord" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "When a DiagnosticTest Service is running, test results are "
       "reported using a DiagnosticResult object, or one of its "
       "subclasses. A DiagnosticTest may be running because its "
       "Service is Started or due to an invocation of the RunTest "
       "method. Diagnostic Results are related to their Test via an "
       "instance of the DiagnosticResultsForMSE association. \n"
       "For every running of DiagnosticTest, a new instance of "
       "DiagnosticResult, or one of it\'s subclasses should be "
       "created." )]
class CIM_DiagnosticResult {

      [Deprecated { "No Value" }, 
       Key, Description ( "The scoping Test\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_DiagnosticTest.CreationClassName" )]
   string DiagnosticCreationClassName;

      [Deprecated { "No Value" }, 
       Key, Description ( "The scoping Test\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_DiagnosticTest.Name" )]
   string DiagnosticName;

      [Deprecated { "No Value" }, 
       Key, Description ( 
          "The scoping Test\'s SystemCreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_DiagnosticTest.SystemCreationClassName" )]
   string DiagSystemCreationClassName;

      [Deprecated { "No Value" }, 
       Key, Description ( "The scoping Test\'s SystemName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_DiagnosticTest.SystemName" )]
   string DiagSystemName;

      [Deprecated { "CIM_DiagnosticRecord.InstanceID" }, 
       Key, Description ( 
          "The Unique identifier for an instance of Diagnostic Results."
           ), 
       MaxLen ( 1024 )]
   string ExecutionID;

      [Deprecated { "CIM_LogRecord.MessageTimestamp" }, 
       Description ( 
          "The date and time the result was last updated." )]
   datetime TimeStamp;

      [Deprecated { "No Value" }, 
       Description ( 
          "This property is being deprecated. Tests should be "
          "grouped at the test level, not by the model. /n If this "
          "property is TRUE, then this DiagnosticResult summarizes "
          "the results from the execution of a packaged set of "
          "DiagnosticTests. The Tests in the package can be "
          "identified by following the DiagnosticResultForTest "
          "association to the test and then using the "
          "DiagnosticTest InPackage aggregation. The individual "
          "Results can be broken out by instantiating "
          "DiagnosticResults for the individual lower level tests "
          "and aggregating into the \'summary\' Result using the "
          "DiagnosticResultInPackage association." )]
   boolean IsPackage;

      [Deprecated { "CIM_Job.StartTime" }, 
       Description ( "The date and time when this test started." )]
   datetime TestStartTime;

      [Deprecated { "No Value" }, 
       Description ( "The date and time when this test completed." )]
   datetime TestCompletionTime;

      [Deprecated { "No Value" }, 
       Description ( 
          "Describes how the test is progressing. For example, if "
          "the test was discontinued, the TestState will be "
          "\"Stopped\" (value=5), or if testing is currently "
          "executing, TestState will be \"In Progress\" (4)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Passed", "Failed", 
          "In Progress", "Stopped" }, 
       ModelCorrespondence { 
          "CIM_DiagnosticResult.OtherStateDescription" }]
   uint16 TestState;

      [Deprecated { "No Value" }, 
       Description ( 
          "When \"Other\" (value=1) is entered in the TestState "
          "property, OtherStateDescription can be used to describe "
          "the test\'s state." ), 
       ModelCorrespondence { "CIM_DiagnosticResult.TestState" }]
   string OtherStateDescription;

      [Deprecated { "No Value" }, 
       Description ( 
          "Estimated number of seconds to perform the Diagnostic "
          "Test indicated by the DiagnosticCreationClassName and "
          "DiagnosticName properties. After the test has completed, "
          "the actual elapsed time can be determined by subtracting "
          "the TestStartTime from the TestCompletionTime. A similar "
          "property is defined in the association, DiagnosticTest "
          "ForMSE. The difference between the two properties is "
          "that the value stored in the association is a generic "
          "test execution time for the Element and the Test. But, "
          "the value here (in DiagnosticResult) is the estimated "
          "time that this instance with the given settings would "
          "take to run the test. A CIM Consumer can compare this "
          "value with the value in the association "
          "DiagnosticTestForMSE to get an idea what impact their "
          "settings have on test execution." ), 
       Units ( "Seconds" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticTestForMSE.EstimatedTimeOfPerforming" }]
   uint32 EstimatedTimeOfPerforming;

      [Deprecated { "CIM_LogRecord.RecordData" }, 
       Description ( 
          "TestResults stores one or more textual results from the "
          "execution of the DiagnosticTest(s) referenced by the "
          "DiagnosticCreationClassName and DiagnosticName "
          "properties. One entry is considered a cell location in "
          "the array. Each entry is time stamped and contains the "
          "following information, in the following format: \n"
          "LogOption|yyymmddhhttssoutc|TestName|message_text \n"
          "Where: \n"
          "LogOption = string identical to the LogOption value in "
          "DiagnosticSetting that was used to enable logging this "
          "message. \n"
          "yyyy = year, e.g. 2000 \n"
          "mm = month (01 - 12) \n"
          "dd = day (01 - 31) \n"
          "hh = hour (00 - 24) \n"
          "tt = minute (00-59) \n"
          "ss = second (00-59) \n"
          "o = \"+\" or \"-\" indicating the sign of the UTC "
          "correction field \n"
          "utc = offset from UTC (Universal Coordinated Time) in "
          "minutes \n"
          "TestName = Internal test name or current internal "
          "subtest name that sent the message. \n"
          "Textual message = free form string that is the \'test "
          "result\'." ), 
       ArrayType ( "Ordered" )]
   string TestResults[];

      [Deprecated { "CIM_Job.PercentComplete" }, 
       Description ( 
          "The percentage of the test that has executed thus far, "
          "if the TestState property is set to \"In Progress\" or "
          "the percentage of the complete test that was executed if "
          "the TestState property is set to any of the completed "
          "states (\"Passed\", \"Failed\" or \"Stopped\"). Final "
          "results may be based on less than 100% coverage due to "
          "the parameters defined in DiagnosticSetting (such as "
          "QuickMode, PercentOfTestCoverage or HaltOnError)." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint8 PercentComplete;

      [Deprecated { "CIM_DiagnosticServiceRecord.ErrorCode" }, 
       Description ( 
          "If applicable, this string should contain one or more "
          "vendor specific error codes that the diagnostic service "
          "detected. These error codes may be used by the vendor "
          "for variety of purposes such as: fault data base "
          "indexing, field service trouble ticketing, product "
          "quality tracking, part failure history, etc. Since these "
          "codes are for vendor purposes they may assume any form. "
          "Details on suggested use cases will be left to white "
          "papers. The array of error codes has model "
          "correspondence with an ErrorCount array so the number of "
          "errors reported can be analyzed by individual error "
          "code." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticResult.ErrorCount" }]
   string ErrorCode[];

      [Deprecated { "CIM_DiagnosticServiceRecord.ErrorCount" }, 
       Description ( 
          "Since some tests may detect transient and correctable "
          "errors such as a network diagnostic or memory test, an "
          "error count is useful to indicate the severity of the "
          "failure. This field contains an integer value of the "
          "number of errors detected by the test. The ErrorCount is "
          "an array with model correspondence to ErrorCode so that "
          "the test can report an ErrorCount on each type of error "
          "encountered. It is recommended that hard errors and "
          "correctable or recoverable errors be given different "
          "codes so that clients with knowledge of the error codes "
          "can evaluate correctable, recoverable, and hard errors "
          "independently." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticResult.ErrorCode" }]
   uint32 ErrorCount[];

      [Deprecated { "CIM_DiagnosticServiceRecord.LoopsFailed" }, 
       Description ( 
          "Since some tests may be looped, it is useful to report "
          "how many iterations passed and failed. This is relevant "
          "in analyzing transitory failures. For example, if all "
          "the errors occurred in just one of 100 iterations, the "
          "device may be viewed as OK or marginal, to be monitored "
          "further rather then failed. Note: LoopsPassed & "
          "LoopsFailed should add up to the loops completed." )]
   uint32 LoopsFailed;

      [Deprecated { "CIM_DiagnosticServiceRecord.LoopsPassed" }, 
       Description ( 
          "Since some tests may be looped, it is useful to report "
          "how many iterations passed and failed. This is relevant "
          "in analyzing transitory failures. For example if all the "
          "errors occurred in just one of 100 iterations, the "
          "device may be viewed as OK or marginal, to be monitored "
          "further rather then failed. Note: LoopsPassed & "
          "LoopsFailed should add up to the loops completed." )]
   uint32 LoopsPassed;

      [Deprecated { "CIM_DiagnosticSetting.LogOptions" }, 
       Write, Description ( 
          "Sets the level of warning messages to be logged. If for "
          "example no warning information is required, the level "
          "would be set to \"No Warnings\" (value=0). Using "
          "\"Missing Resources\" (value=1) will cause warnings to "
          "be generated when required resources or hardware are not "
          "found. Setting the value to 2, \"Testing Impacts\", "
          "results in both missing resources and \'test impact\' "
          "warnings (for example, multiple retries required) to be "
          "reported." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "No Warnings", "Missing Resources", 
          "Testing Impacts", "All Warnings" }]
   uint16 TestWarningLevel;

      [Deprecated { "CIM_DiagnosticSetting.LogOptions" }, 
       Write, Description ( 
          "When this flag is true, the diagnostic test will report "
          "\'soft errors\'. In this context, a soft error is a "
          "message from the diagnostic reporting a known defect in "
          "the hardware or driver configuration, or execution "
          "environment. Examples are: \'Not enough memory\', "
          "\'Driver IOCTL not implemented\', \'Video RAM compare "
          "failed during polygon fill test (A known defect in the "
          "video chipset)\', etc." )]
   boolean ReportSoftErrors;

      [Deprecated { "CIM_DiagnosticSetting.LogOptions" }, 
       Write, Description ( 
          "When this flag is true, the diagnostic test will report "
          "\'status messages\'. In this context, a status message "
          "indicates that the diagnostic code is at a checkpoint. "
          "Examples are: \"Completion of phase 1\", \"Complex "
          "pattern\", etc." )]
   boolean ReportStatusMessages;

      [Deprecated { "CIM_DiagnosticSettingRecord.HaltOnError" }, 
       Write, Description ( 
          "When this flag is true, the test will halt after finding "
          "the first error." )]
   boolean HaltOnError;

      [Deprecated { "CIM_DiagnosticSettingRecord.QuickMode" }, 
       Write, Description ( 
          "When this flag is true, the test software should attempt "
          "to run in an accelerated fashion either by reducing the "
          "coverage or number of tests performed." )]
   boolean QuickMode;

      [Deprecated { 
          "CIM_DiagnosticSettingRecord.PercentOfTestCoverage" }, 
       Write, Description ( 
          "Requests the diagnostic software to reduce test coverage "
          "to the specified percentage. For example, a hard drive "
          "scan test could be asked to run at 50%. The most "
          "effective way to accomplish this is for the test "
          "software to scan every other track, as opposed to only "
          "scanning the first half of a drive. It is assumed that "
          "the effectiveness of the test is impacted proportional "
          "to the percentage of testing requested. Permissible "
          "values for this property range from 0 to 100. \n"
          "This property may not be applicable to all tests. If it "
          "can be set for a test, the value 7 (\"Supports PercentOf "
          "TestCoverage\") should be entered into the "
          "DiagnosticTest\'s Characteristics array." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { "CIM_DiagnosticTest.Characteristics" }]
   uint8 PercentOfTestCoverage;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticResultForMSE 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class is being deprecated as part of the deprecation of "
       "the DiagnosticResult class. \n"
       "This is an association class relating diagnostic test results "
       "to the ManagedSystemElement that is/was tested." )]
class CIM_DiagnosticResultForMSE {

      [Deprecated { "No Value" }, 
       Key, Description ( "The diagnostic result." )]
   CIM_DiagnosticResult REF Result;

      [Deprecated { "No Value" }, 
       Key, Description ( 
          "The ManagedSystemElement to which the diagnostic result applies."
           )]
   CIM_ManagedSystemElement REF SystemElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticResultInPackage 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class is being deprecated. Tests should be grouped at the "
       "test level, not by the model. Therefore, this association is "
       "no longer appropriate. /n This is an association class that "
       "identifies a Diagnostic Result as made up of lower level "
       "Results. In this case, the Result identified as the "
       "PackageResult reference (i.e., the higher level result) would "
       "have its IsPackage property set to TRUE." )]
class CIM_DiagnosticResultInPackage {

      [Deprecated { "No value" }, 
       Key, Aggregate, Description ( 
          "The DiagnosticResult object that acts as the container "
          "for all the results of the package." )]
   CIM_DiagnosticResult REF PackageResult;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The DiagnosticResult object that is one of the elements "
          "of the package." )]
   CIM_DiagnosticResult REF Result;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "Specific diagnostic test parameters and execution instructions "
       "are defined by this class. To provide more detailed Settings "
       "for a type of test (i.e., additional properties), subclassing "
       "is appropriate." )]
class CIM_DiagnosticSettingData : CIM_SettingData {

      [Description ( 
          "When this flag is true, the test will halt after finding "
          "the first error." )]
   boolean HaltOnError;

      [Description ( 
          "When this flag is true, the test software should attempt "
          "to run in an accelerated fashion either by reducing the "
          "coverage or number of tests performed." )]
   boolean QuickMode;

      [Description ( 
          "Requests the diagnostic software to reduce test coverage "
          "to the specified percentage. For example, a hard drive "
          "scan test could be asked to run at 50%. The most "
          "effective way to accomplish this is for the test "
          "software to scan every other track, as opposed to only "
          "scanning the first half of a drive. It is assumed that "
          "the effectiveness of the test is impacted proportional "
          "to the percentage of testing requested. Permissible "
          "values for this property range from 0 to 100." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedServiceModes" }, 
       PUnit ( "percent" )]
   uint8 PercentOfTestCoverage;

      [Description ( 
          "Array entries contain parameters corresponding to "
          "entries in the LoopControl array, limiting the number of "
          "times a test should be repeated with a single invocation "
          "of a test method by a CIM client." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSettingData.LoopControl" }]
   string LoopControlParameter[];

      [Description ( 
          "LoopControl, used in conjunction with "
          "LoopControlParameter, sets one or more loop control "
          "mechanisms that limits the number of times a test should "
          "be repeated with a single invocation of a test method by "
          "a CIM client. There is an array-positional "
          "correspondence between LoopControl entries & "
          "LoopControlParameter entries. The entries in these "
          "coupled arrays of loop controls can be used in a logical "
          "OR fashion to achieve the desired loop control. For "
          "example, if a client wants to loop a test 1000 times, "
          "but quit if a timer runs out, it could set both controls "
          "into the LoopControl array as two separate entries in "
          "each array. The looping test will terminate when the "
          "first of the two Ored conditions are met. \n"
          "The descriptions for each loop control are given below: \n"
          "Unknown (0) \n"
          "Other (1) : Additional detail may be found in "
          "OtherLoopControlDescriptions. \n"
          "Continuous (2) : The corresponding LoopControl Parameter "
          "is ignored and the test will execute continuously. Tests "
          "that use this control should also support "
          "DiscontinueTest. \n"
          "Count(3) : The corresponding LoopControlParameter is "
          "interpreted as a loop count (uint32), indicating the "
          "number of times the test should be repeated with a "
          "single invocation of a test method by a CIM client. \n"
          "Timer (= 4) : The corresponding LoopControlParameter is "
          "interpreted as an initial value (uint32) for a test loop "
          "timer, given in seconds. The looping is terminated when "
          "this timer has lapsed. \n"
          "ErrorCount (= 5) : The corresponding LoopControl "
          "Parameter is interpreted as an error count (uint32). The "
          "loop will continue until the number of errors that have "
          "occurred exceeds the ErrorCount. Note: the ErrorCount "
          "only refers to hard test errors; it does not include "
          "soft errors or warnings." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Continuous", "Count", "Timer", 
          "ErrorCount" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSettingData.LoopControlParameter", 
          "CIM_DiagnosticSettingData.OtherLoopControlDescriptions", 
          "CIM_DiagnosticServiceCapabilities.SupportedLoopControl" }]
   uint16 LoopControl[];

      [Description ( 
          "This property provides additional information for "
          "LoopControl when the corresponding value is set to 1 "
          "(\'Other\')." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSettingData.LoopControlParameter", 
          "CIM_DiagnosticSettingData.LoopControl" }]
   string OtherLoopControlDescriptions[];

      [Description ( 
          "The ResultPersistence property is a directive from a "
          "diagnostic client to a diagnostic provider. It allows "
          "the client to specify to the diagnostic service provider "
          "how long to persist the messages that result from "
          "execution of a diagnostic service. This applies to "
          "instances of DiagnosticResult as well as the preferred "
          "use of DiagnosticServiceRecord. The timeout period "
          "starts upon completion of the diagnostic action "
          "described by the DiagnosticService. \n"
          "\n"
          "Here is a summary of the choices and behaviors for "
          "different ResultPersistence values: \n"
          "0 = \"No Persistence\": \n"
          "Setting the timer to zero tells the provider not to "
          "persist the diagnostic result. The diagnostic "
          "information is only available while the diagnostic is "
          "executing or at its conclusion. \n"
          "Value > 0 and < 0xFFFFFFFF = \"Persist With TimeOut\": \n"
          "Setting the ResultPersistenceOption to a integer will "
          "cause the DiagnosticResult to be persisted for that "
          "number of seconds. At the end of that time, the "
          "DiagnosticResult may be deleted by the diagnostic "
          "service provider. \n"
          "0xFFFFFFFF = \"Persist Forever\": \n"
          "By setting the timeout value to the very large value, "
          "0xFFFFFFFF, the provider shall persist results forever. "
          "In this case, the client MUST bear the responsibility "
          "for deleting them." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 ResultPersistence;

      [Description ( 
          "The LogOptions property is used to specify the types of "
          "data that SHOULD be logged by the diagnostic service. "
          "Any number of values may be specified in the array. Note "
          "that the default behavior is for nothing to be logged. \n"
          "The AMOUNT of data to be logged can be controlled for "
          "each value selected by specifying a VerbosityLevel "
          "value. Verbosity may not apply to all LogOptions values, "
          "in which case the default VerbosityLevel of \"Standard\" "
          "SHOULD be used. \n"
          "The RecordForLog produced by running a service MUST be "
          "tagged with a RecordType that corresponds to one of "
          "these log option values. \n"
          "Following is a brief description of the available log "
          "options: \n"
          "* \"Other\" (value = 1): Details are given in the "
          "corresponding OtherLogOptionsDescriptions entry. \n"
          "* \"Results\" (value = 2): Log the results obtained by "
          "running the service. This is the most common value for "
          "reporting the service results. \n"
          "* \"Subtests\" (value= 3): Log a test summary report "
          "upon completion of each subtest and each loop iteration. "
          "The summary reports SHOULD state whether the individual "
          "subtest or iteration passed or failed and list relevant "
          "error codes and respective error counts. \n"
          "* \"Actions\" (value = 4): Log corrective action and "
          "instructional messages to guide service personnel; for "
          "example, a prioritized list of actions to perform in "
          "order to isolate a failure or correct a problem. When "
          "ordering steps or prioritizing actions, a number should "
          "proceed the text; for example, 1) Do this first, 2) Do "
          "this next, etc. \n"
          "* \"Warnings\" (value = 5): Log warning messages; for "
          "example, \'device will be taken off line\', \'test is "
          "long-running\' or \'available memory is low\'. The "
          "VerbosityLevel value specified for the Warnings option "
          "is related to the severity of the warnings logged; for "
          "instance, one would specify a high level of verbosity to "
          "get all warnings logged, regardless of severity, and a "
          "low level of verbosity to have only the most severe "
          "warnings logged. \n"
          "* \"Status\" (value = 6): Log status messages; for "
          "example, state information for the driver, device, or "
          "system. \n"
          "* \"Device Errors\" (value = 7): Log errors related to "
          "the managed element being serviced. \n"
          "* \"Service Errors\" (value = 8): Log errors related to "
          "the service itself rather than the element being "
          "serviced, such as \'Resource Allocaton Failure\'. \n"
          "* \"Setting Data\" (value=9): Log the property values of "
          "the DiagnosticSettingData object used to configure the "
          "service. \n"
          "*\"Statistics\" (value = 10): Log statistical messages; "
          "for example, packets sent per second. \n"
          "* \"Hardware Configuration\" (value = 11): Log messages "
          "that contain information about the hardware "
          "configuration as viewed by the service; for example, "
          "vendor, version, FRU identification, and location "
          "information. The format and contents of this property is "
          "element dependent. Examples are: SCSI ID, LPTx, PCI Slot "
          "Number, and Dimm#. \n"
          "* \"Software Configuration\" (value = 12): Log messages "
          "that contain information about the software environment "
          "as viewed by the service; for example, the name and "
          "version of all the critical software elements "
          "controlling the device under test. Each configuration "
          "message SHOULD have the following common format: Element "
          "name; element type; manufacturer name; version; for "
          "example, \'Miniport driver; SCSI; Intel; Version 1.2\'. \n"
          "* \"Reference\" (value = 13): Log the keys of an CIM "
          "object of of interest; for example, the element under "
          "test, or a data file. \n"
          "* \"Debug\" (value = 14): Log debug messages. These "
          "messages are vendor specific." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "0x8000" }, 
       Values { "Unknown", "Other", "Results", "Subtests", 
          "Actions", "Warnings", "Status", "Device Errors", 
          "Service Errors", "Setting Data", "Statistics", 
          "Hardware Configuration", "Software Configuration", 
          "References", "Debug", "No Log Options" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSettingData.OtherLogOptionsDescriptions", 
          "CIM_DiagnosticServiceCapabilities.SupportedLogOptions", 
          "CIM_DiagnosticServiceRecord.RecordType", 
          "CIM_DiagnosticSettingData.VerbosityLevel" }]
   uint16 LogOptions[];

      [Description ( 
          "Provides additional information regarding the types of "
          "test messages that are logged when the property "
          "LogOptions includes the value 1 (Other)." ), 
       ModelCorrespondence { "CIM_DiagnosticSettingData.LogOptions" }]
   string OtherLogOptionsDescriptions[];

      [Description ( 
          "The LogStorage setting property indicates which types of "
          "supported storage should be used by the Diagnostic "
          "Service for logging of the data specified in LogOptions. \n"
          "The values are: \n"
          "\"DiagnosticLog\" (Value = 2): Use the DiagnosticLog and "
          "DiagnosticRecord classes. \n"
          "\"MessageLog\" (Value = 3): Use the MessageLog class and "
          "its methods. \n"
          "\"File\" (Value = 4): Write data to a file." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "DiagnosticLog", "MessageLog", 
          "File" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSettingData.OtherLogStorageDescriptions", 
          "CIM_DiagnosticServiceCapabilities.SupportedLogStorage" }]
   uint16 LogStorage[];

      [Description ( 
          "This property provides additional information for "
          "LogStorage when the corresponding value is set to 1 "
          "(\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSettingData.LogStorage" }]
   string OtherLogStorageDescriptions[];

      [Description ( 
          "A client may want to specify the desired volume or "
          "detail logged by a diagnostic service. This property is "
          "applied to a corresponding logging option, acting as a "
          "qualifier on its description. Three levels of verbosity "
          "are defined as follows: \n"
          "* \"Minimum\" (value=2): Specified if the least amount "
          "of information is desired; for example, Pass or Fail. \n"
          "* \"Standard\" (value=3): This is the standard level of "
          "messaging provided by the service. It is the form most "
          "likely to be used if no verbosity value is specified "
          "(default). \n"
          "* \"Full\" (value=4): Specified when all information, "
          "regardless of size, is desired. \n"
          "Note that VerbosityLevel is a subjective property and "
          "relates to the degree of detail, not an absolute metric. "
          "A client simply specifies its desired level of detail "
          "and the provider publishes its data in accordance with "
          "this desired level of detail. \n"
          "Verbosity may not apply to all LogOptions values, in "
          "which case the default VerbosityLevel of \"Standard\" "
          "SHOULD be used." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Minimum", "Standard", "Full" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSettingData.LogOptions" }]
   uint16 VerbosityLevel[];

      [Description ( 
          "The time the Job should wait for a query response. "
          "before using a default response and continuing "
          "execution. A default response could result in a "
          "cancellation of the Job. The timeout value starts at the "
          "time the Job goes into the QueryPending state. \n"
          "0 = \"Do not query\": \n"
          "Setting the timer to zero tells the provider not to "
          "query but use the default response. \n"
          "Value > 0 and < 0xFFFFFFFF = \"Query With TimeOut\": \n"
          "Setting the QueryTimeout to a integer will cause the Job "
          "to wait for that number of seconds. At the end of that "
          "time, the Job will use the default response and continue "
          "execution. \n"
          "0xFFFFFFFF = \"Wait Forever\": \n"
          "By setting the timeout value to the very large value, "
          "0xFFFFFFFF, the job shall wait forever for a response. "
          "In this case, the client MUST bear the responsibility "
          "for responding to the query." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 QueryTimeout = 0;

      [Description ( 
          "The test should only run non-destructive tests." )]
   boolean NonDestructive = false;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_JobSettingData 
// ==================================================================
   [Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "JobSettingData represents job characteristics and scheduling "
       "information for a CIM_Job. The settings may be applied to a "
       "job handling Service, a JobQueue or other destination to which "
       "jobs are submitted, and/or to individual CIM_Jobs. The "
       "applicability of the settings are defined using the "
       "ElementSettingData relationship. Since the Settings may be "
       "defined in several contexts and applied to many types of "
       "elements, this class is defined as a subclass of SettingData, "
       "versus ScopedSettingData." )]
class CIM_JobSettingData : CIM_SettingData {

      [Write, Description ( 
          "Indicates whether or not the Job should be automatically "
          "deleted upon completion. Note that the \'completion\' of "
          "a recurring job is defined by its JobRunTimes or "
          "UntilTime properties, OR when the Job is terminated by "
          "manual intervention." ), 
       ModelCorrespondence { "CIM_Job.DeleteOnCompletion" }]
   boolean DeleteOnCompletion;

      [Description ( 
          "Describes the recovery setting if the Job does not "
          "successfully complete. The possible values are: \n"
          "0 = \"Unknown\", meaning it is unknown as to what "
          "recovery action to take \n"
          "1 = \"Other\", indicating that the recovery action will "
          "be specified in the property, OtherRecoveryAction \n"
          "2 = \"Do Not Continue\", meaning stop the execution of "
          "the job and appropriately update its status \n"
          "3 = \"Continue With Next Job\", meaning continue with "
          "the next job in the queue \n"
          "4 = \"Re-run Job\", indicating that the job should be "
          "re-run \n"
          "5 = \"Run Recovery Job\", meaning run the Job associated "
          "using the RecoveryJob relationship. Note that the "
          "recovery Job MUST already be on the queue from which it "
          "will run." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Do Not Continue", 
          "Continue With Next Job", "Re-run Job", "Run Recovery Job" }, 
       ModelCorrespondence { 
          "CIM_JobSettingData.OtherRecoveryAction", 
          "CIM_Job.RecoveryAction" }]
   uint16 RecoveryAction;

      [Description ( 
          "A string describing the recovery action when the "
          "instance\'s RecoveryAction property is 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_JobSettingData.RecoveryAction", 
          "CIM_Job.OtherRecoveryAction" }]
   string OtherRecoveryAction;


};

   [Abstract, Version ( "2.25.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "The RecordForLog class is used to instantiate records to be "
       "aggregated to a Log." )]
class CIM_RecordForLog : CIM_ManagedElement {

      [Description ( 
          "A string describing the data structure of the "
          "information in the property, RecordData. If the "
          "RecordFormat string is <empty>, RecordData should be "
          "interpreted as a free-form string. \n"
          "\n"
          "To describe the data structure of RecordData, the "
          "RecordFormat string should be constructed as follows: \n"
          "- The first character is a delimiter character and is "
          "used to parse the remainder of the string into "
          "sub-strings. \n"
          "- Each sub-string is separated by the delimiter "
          "character and should be in the form of a CIM property "
          "declaration (i.e., datatype and property name). This set "
          "of declarations may be used to interpret the similarly "
          "delimited RecordData property. \n"
          "For example, using a \'*\' delimiter, RecordFormat = "
          "\"*string ThisDay*uint32 ThisYear*datetime SomeTime\" \n"
          "may be used to interpret: RecordData = \"*This is "
          "Friday*2002*20020807141000.000000-300\"." ), 
       ModelCorrespondence { "CIM_RecordForLog.RecordData" }]
   string RecordFormat;

      [Description ( 
          "A string containing LogRecord data. \n"
          "If the corresponding RecordFormat property is <empty>, "
          "or cannot be parsed according to the recommended format, "
          "RecordData should be interpreted as a free-form string. "
          "If the RecordFormat property contains parseable format "
          "information (as recommended in the RecordFormat "
          "Description qualifier), the RecordData string SHOULD be "
          "parsed in accordance with this format. In this case, "
          "RecordData SHOULD begin with the delimiter character and "
          "this character SHOULD be used to separate substrings in "
          "the manner described. The RecordData string can then be "
          "parsed by the data consumer and appropriately typed." ), 
       ModelCorrespondence { "CIM_RecordForLog.RecordFormat" }]
   string RecordData;

      [Description ( 
          "A locale indicates a particular geographical, political, "
          "or cultural region. The Locale specifies the language "
          "used in creating the RecordForLog data. If the Locale "
          "property is empty, it is assumed that the default locale "
          "is en_US (English). \n"
          "The locale string consists of three sub-strings, "
          "separated by underscores: \n"
          "- The first sub-string is the language code, as "
          "specified in ISO639. \n"
          "- The second sub-string is the country code, as "
          "specified in ISO3166. \n"
          "- The third sub-string is a variant, which is vendor "
          "specific. \n"
          "For example, US English appears as: \"en_US_WIN\", where "
          "the \"WIN\" variant would specify a Windows "
          "browser-specific collation (if one exists). Since the "
          "variant is not standardized, it is not commonly used and "
          "generally is limited to easily recognizable values "
          "(\"WIN\", \"UNIX\", \"EURO\", etc.) used in standard "
          "environments. The language and country codes are "
          "required; the variant may be empty." )]
   string Locale;

      [Description ( 
          "An enumerated value that describes the severity of the "
          "Indication from the notifier\'s point of view: \n"
          "1 - Other, by CIM convention, is used to indicate that "
          "the Severity\'s value can be found in the OtherSeverity "
          "property. \n"
          "3 - Degraded/Warning should be used when its appropriate "
          "to let the user decide if action is needed. \n"
          "4 - Minor should be used to indicate action is needed, "
          "but the situation is not serious at this time. \n"
          "5 - Major should be used to indicate action is needed "
          "NOW. \n"
          "6 - Critical should be used to indicate action is needed "
          "NOW and the scope is broad (perhaps an imminent outage "
          "to a critical resource will result). \n"
          "7 - Fatal/NonRecoverable should be used to indicate an "
          "error occurred, but it\'s too late to take remedial "
          "action. \n"
          "2 and 0 - Information and Unknown (respectively) follow "
          "common usage. Literally, the Indication is purely "
          "informational or its severity is simply unknown." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Information", 
          "Degraded/Warning", "Minor", "Major", "Critical", 
          "Fatal/NonRecoverable" }, 
       MappingStrings { "Recommendation.ITU|X733.Perceived severity" }]
   uint16 PerceivedSeverity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="/DMTFCR01550.000" type ="change">Fix description of CIM_UnixProcessStatisticalInformation.CPUTime</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixProcessStatisticalInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( "The statistics associated with a Unix process." )]
class CIM_UnixProcessStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( 
          "The scoping Process\'s ComputerSystem CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CSCreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( 
          "The scoping Process\'s ComputerSystem Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CSName" )]
   string CSName;

      [Key, Description ( 
          "The scoping Process\'s OperatingSystem CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.OSCreationClassName" )]
   string OSCreationClassName;

      [Key, Description ( 
          "The scoping Process\'s OperatingSystem Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.OSName" )]
   string OSName;

      [Key, Description ( "The scoping Process\'s Handle." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.Handle" )]
   string Handle;

      [Key, Description ( "The scoping Process\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CreationClassName" )]
   string ProcessCreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "A string used to identify the related statistics of a "
          "Process. This key allows multiple instances of "
          "statistics to correspond to a single process. The "
          "multiple instances could be used in applications such as "
          "time-sliced statistics." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "The percentage of a CPU\'s time this process is consuming."
           ), 
       Units ( "Percent" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.12" }]
   uint32 CPUTime;

      [Description ( 
          "The number of KiloBytes of real text space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.15" }]
   uint64 RealText;

      [Description ( 
          "The number of KiloBytes of real data space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.16" }]
   uint64 RealData;

      [Description ( 
          "The number of KiloBytes of real stack space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.17" }]
   uint64 RealStack;

      [Description ( 
          "The number of KiloBytes of virtual text space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.18" }]
   uint64 VirtualText;

      [Description ( 
          "The number of KiloBytes of virtual data space used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.19" }]
   uint64 VirtualData;

      [Description ( 
          "The number of KiloBytes of virtual stack space used by "
          "the process." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.20" }]
   uint64 VirtualStack;

      [Description ( 
          "The number of KiloBytes of virtual space used for memory "
          "mapped files by the process." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.22" }]
   uint64 VirtualMemoryMappedFileSize;

      [Description ( 
          "The number of KiloBytes of shared memory used by the process."
           ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.21" }]
   uint64 VirtualSharedMemory;

      [Description ( 
          "CPU time of terminated child processes in clock ticks." ), 
       Units ( "Clock Ticks" ), 
       Counter]
   uint64 CpuTimeDeadChildren;

      [Description ( 
          "System time of terminated child processes in clock ticks." ), 
       Units ( "Clock Ticks" ), 
       Counter]
   uint64 SystemTimeDeadChildren;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "CIM_AccountSettingData provides the ability to manage the "
       "desired configuration for an instance of CIM_Account. When "
       "associated with an instance of CIM_AccountManagementService, "
       "this class may be used to constrain the properties of "
       "instances of CIM_Accountcreated using the service. When "
       "associated with an instance of CIM_Account, this class may be "
       "used to manage the configuration of the CIM_Acount instance." )]
class CIM_AccountSettingData : CIM_SettingData {

      [Description ( 
          "ComplexPasswordRulesEnforced indicates the rules for "
          "constructing a complex password enforced by the Account.\n"
          "Minimum Length a minimum length is enforced for "
          "passwords for the account.\n"
          "Preclude User ID inclusion precluding the password from "
          "including the user ID is supported. \n"
          "Maximum Repeating Characters a limit will be enforced on "
          "the number of times a character can occur consecutively. \n"
          "Lower Case Alpha at least one lower case alpha character "
          "is required. \n"
          "Upper Case Alpha at least one upper case alpha character "
          "is required. \n"
          "Numeric Character at least one numeric character is "
          "required. \n"
          "Special Character at least one special character is "
          "required." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "Minimum Length", "Preclude User ID Inclusion", 
          "Maximum Repeating Characters", "Lower Case Alpha", 
          "Upper Case Alpha", "Numeric Character", 
          "Special Character", "DMTF Reserved", "Vendor Reserved" }]
   uint16 ComplexPasswordRulesEnforced[];

      [Description ( 
          "InactivityTimeout specifies the interval after which if "
          "an account has been inactive, it shall be Disabled. The "
          "value shall be expressed in interval format or shall be "
          "NULL. A value of NULL shall indicate that the Account "
          "will not be disabled due to inactivity." )]
   datetime InactivityTimeout;

      [Description ( 
          "MaximumPasswordExpiration indicates the maximum password "
          "age enforced for the Account. The value shall be "
          "expressed in interval format or shall be NULL. A value "
          "of NULL shall indicate that the password aging is not "
          "enforced." )]
   datetime MaximumPasswordExpiration;

      [Description ( 
          "MaximumSuccessiveLoginFailures indicates the number of "
          "successive failed login attempts that shall result in "
          "the Account being disabled. A value of zero shall "
          "indicate that the Account will not be disabled due to "
          "successive failed login attempts." )]
   uint16 MaximumSuccessiveLoginFailures;

      [Description ( 
          "PasswordHistoryDepth indicates the number of previous "
          "passwords that shall be maintained for the Account. The "
          "Account shall preclude the selection of a password if it "
          "occurs in the password history. A value of zero shall "
          "indicate that a password history is not maintained." )]
   uint16 PasswordHistoryDepth;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "CIM_AssociatedPrivilege is an association that models the "
       "privileges that a Subject element has to access or authorize "
       "other elements to access a Target element." )]
class CIM_AssociatedPrivilege {

      [Key, Description ( 
          "The Subject for which privileges are granted or denied." )]
   CIM_ManagedElement REF Subject;

      [Key, Description ( 
          "The target element to which the privileges apply." )]
   CIM_ManagedElement REF Target;

      [Key, Description ( 
          "UseKey is used to distinguish instances in case multiple "
          "instances of this association exist between the same "
          "Subject and Target. This may arise, for example, if "
          "separate instances are created for each management "
          "domain, or if the Subject has access and authorization "
          "rights to the Target.\n"
          "Within the scope of the instantiating Namespace, UseKey "
          "opaquely and uniquely identifies an instance of this "
          "class. In order to ensure uniqueness within the "
          "NameSpace, the value of UseKey should be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> shall include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the UseKey, or is "
          "a registered ID that is assigned to the business entity "
          "by a recognized global authority. (This is similar to "
          "the <Schema Name>_<Class Name> structure of Schema class "
          "names.) In addition, to ensure uniqueness <OrgID> shall "
          "not contain a colon (\':\'). When using this algorithm, "
          "the first colon to appear in UseKey shall appear between "
          "<OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity shall assure "
          "that the resultant UseKey is not re-used across any "
          "UseKeys produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "shall be used with the <OrgID> set to \'CIM\'." )]
   string UseKey;

      [Description ( 
          "Boolean indicating whether the Privilege is granted "
          "(TRUE) or denied (FALSE). The default is to grant "
          "permission." )]
   boolean PrivilegeGranted = true;

      [Description ( 
          "An enumeration indicating the activities that are "
          "granted or denied. These activities apply to all "
          "entities specified in the ActivityQualifiers array.\n"
          "\"Other\" (1): indicates an activity that is not "
          "specified in this enumeration.\n"
          "\"Create\" (2), \"Delete\" (3), \"Detect\" (4), \"Read\" "
          "(5), \"Write\" (6), \"Execute\" (7): each of these "
          "values indicates that the Subject is permitted to use an "
          "operation supported by the Target. They are all "
          "straightforward except for one, 4=\"Detect\". This value "
          "indicates that the existence or presence of an entity "
          "may be determined, but not necessarily specific data "
          "(which requires the Read privilege to be true). This "
          "activity is exemplified by \'hidden files\'- if you list "
          "the contents of a directory, you will not see hidden "
          "files. However, if you know a specific file name, or "
          "know how to expose hidden files, then they can be "
          "\'detected\'. Another example is the ability to define "
          "search privileges in directory implementations.\n"
          "\"Deny Create\" (8), \"Deny Delete\" (9), \"Deny Detect\" "
          "(10), \"Deny Read\" (11), \"Deny Write\" (12), \"Deny "
          "Execute\" (13): each of these values indicates that the "
          "Subject is expressly denied permission to use an "
          "operation supported by the Target.\n"
          "Authorize to Grant/Deny Authorization (14): this value "
          "indicates that the Subject is permitted to add any of "
          "the following values to - or remove any of the following "
          "values from - the Activities array property in any other "
          "instance of CIM_AssociatedPrivilege that references the "
          "same Target: \"Authorize to Create\" (15), \"Authorize "
          "to Delete\" (16), \"Authorize to Detect\" (17), "
          "\"Authorize to Read\" (18), \"Authorize to Write\" (19), "
          "\"Authorize to Execute\" (20), \"Authorize to Deny "
          "Create\" (21), \"Authorize to Deny Delete\" (22), "
          "\"Authorize to Deny Detect\" (23), \"Authorize to Deny "
          "Read\" (24), \"Authorize to Deny Write\" (25), and "
          "\"Authorize to Deny Execute\" (26).\n"
          "\"Authorize to Create\" (15), \"Authorize to Delete\" "
          "(16), \"Authorize to Detect\" (17), \"Authorize to Read\" "
          "(18), \"Authorize to Write\" (19), \"Authorize to "
          "Execute\" (20), \"Authorize to Deny Create\" (21), "
          "\"Authorize to Deny Delete\" (22), \"Authorize to Deny "
          "Detect\" (23), \"Authorize to Deny Read\" (24), "
          "\"Authorize to Deny Write\" (25), and \"Authorize to "
          "Deny Execute\" (26): each of these values indicates that "
          "the Subject is permitted to add value named in the "
          "string to - or remove the value from - the Activities "
          "array property in any other instance of "
          "CIM_AssociatedPrivilege that references the same Target. "
          "For example, \"Authorize to Read\" indicates that the "
          "Subject is permitted to add or remove the value \"Read\", "
          "and \"Authorize to Deny Read\" indicates that the "
          "Subject is permitted to add or remove the value \"Deny "
          "Read\"." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "..", "16000.." }, 
       Values { "Other", "Create", "Delete", "Detect", "Read", 
          "Write", "Execute", "Deny Create", "Deny Delete", 
          "Deny Detect", "Deny Read", "Deny Write", "Deny Execute", 
          "Authorize to Grant/Deny Authorization", 
          "Authorize to Create", "Authorize to Delete", 
          "Authorize to Detect", "Authorize to Read", 
          "Authorize to Write", "Authorize to Execute", 
          "Authorize to Deny Create", "Authorize to Deny Delete", 
          "Authorize to Deny Detect", "Authorize to Deny Read", 
          "Authorize to Deny Write", "Authorize to Deny Execute", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AssociatedPrivilege.ActivityQualifiers" }]
   uint16 Activities[];

      [Description ( 
          "The ActivityQualifiers property is an array of string "
          "values used to further qualify and specify the "
          "privileges granted or denied. For example, it is used to "
          "specify a set of files for which \'Read\'/\'Write\' "
          "access is permitted or denied. Or, it defines a class\' "
          "methods that may be \'Executed\'. Details on the "
          "semantics of the individual entries in "
          "ActivityQualifiers are provided by corresponding entries "
          "in the QualifierFormats array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_AssociatedPrivilege.Activities", 
          "CIM_AssociatedPrivilege.QualifierFormats" }]
   string ActivityQualifiers[];

      [Description ( 
          "Defines the semantics of corresponding entries in the "
          "ActivityQualifiers array. An example of each of these "
          "\'formats\' and their use follows: \n"
          "- 2=Class Name. Example: If the authorization target is "
          "a CIM Service or a Namespace, then the "
          "ActivityQualifiers entries can define a list of classes "
          "that the authorized subject is able to create or delete. \n"
          "- 3=<Class.>Property. Example: If the authorization "
          "target is a CIM Service, Namespace or Collection of "
          "instances, then the ActivityQualifiers entries can "
          "define the class properties that may or may not be "
          "accessed. In this case, the class names are specified "
          "with the property names to avoid ambiguity - since a CIM "
          "Service, Namespace or Collection could manage multiple "
          "classes. On the other hand, if the authorization target "
          "is an individual instance, then there is no possible "
          "ambiguity and the class name may be omitted. To specify "
          "ALL properties, the wildcard string \"*\" should be "
          "used. \n"
          "- 4=<Class.>Method. This example is very similar to the "
          "Property one, above. And, as above, the string \"*\" may "
          "be specified to select ALL methods. \n"
          "- 5=Object Reference. Example: If the authorization "
          "target is a CIM Service or Namespace, then the "
          "ActivityQualifiers entries can define a list of object "
          "references (as strings) that the authorized subject can "
          "access. \n"
          "- 6=Namespace. Example: If the authorization target is a "
          "CIM Service, then the ActivityQualifiers entries can "
          "define a list of Namespaces that the authorized subject "
          "is able to access. \n"
          "- 7=URL. Example: An authorization target may not be "
          "defined, but a Privilege could be used to deny access to "
          "specific URLs by individual Identities or for specific "
          "Roles, such as the \'under 17\' Role. \n"
          "- 8=Directory/File Name. Example: If the authorization "
          "target is a FileSystem, then the ActivityQualifiers "
          "entries can define a list of directories and files whose "
          "access is protected. \n"
          "- 9=Command Line Instruction. Example: If the "
          "authorization target is a ComputerSystem or Service, "
          "then the ActivityQualifiers entries can define a list of "
          "command line instructions that may or may not be "
          "\'Executed\' by the authorized subjects. \n"
          "- 10=SCSI Command, using a format of \'CDB=xx[,Page=pp]\'. "
          "For example, the ability to select the VPD page of the "
          "Inquiry command is encoded as \'CDB=12,Page=83\' in the "
          "corresponding ActivityQualifiers entry. A \'*\' may be "
          "used to indicate all CDBs or Page numbers. \n"
          "- 11=Packets. Example: The transmission of packets is "
          "permitted or denied by the Privilege for the target (a "
          "ComputerSystem, ProtocolEndpoint, Pipe, or other ManagedSystemElement).\n"
          "- 12=Specification-defined. The semantics are defined in "
          "a a specification produced by the DMTF or other "
          "organization. The value of the corresponding "
          "ActivityQualifiers entry names the specification and the "
          "organization that produced it, and includes a label that "
          "unambiguously references the semantic definition within "
          "the specification. The value of of the corresponding "
          "ActivityQualifiers entry should be constructed using the "
          "following \"preferred\" algorithm: \n"
          "<OrgID>:<SpecID>:<Label>, where <OrgID>, <SpecID>, and "
          "<Label> are separated by a colon (:), and where <OrgID> "
          "shall include a copyrighted, trademarked, or otherwise "
          "unique name that is owned by the business entity that is "
          "creating or defining the InstanceID or that is a "
          "registered ID assigned to the business entity by a "
          "recognized global authority. (This requirement is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "both <OrgID> and <SpecID> shall not contain a colon "
          "(\':\'). When using this algorithm, the first colon to "
          "appear in the corresponding ActivityQualifiers entry "
          "shall appear between <OrgID> and <SpecID> and the second "
          "colon to appear in the corresponding ActivityQualifiers "
          "entry shall appear between <SpecID> and <Label>. \n"
          "<Label> is chosen by the business entity and should not "
          "be reused to identify different underlying semantics. If "
          "the above \"preferred\" algorithm is not used, the "
          "defining entity must assure that the resulting value is "
          "not reused to refer to a different specification or "
          "different semantics within defined within the same specification.\n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "shall be used with the <OrgID> set to \"DMTF\", and the "
          "<SpecID> set to \"DSPx\", where x is the number of a DSP "
          "published by the DMTF." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "16000.." }, 
       Values { "Class Name", "<Class.>Property", "<Class.>Method", 
          "Object Reference", "Namespace", "URL", 
          "Directory/File Name", "Command Line Instruction", 
          "SCSI Command", "Packets", "Specification-defined", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AssociatedPrivilege.ActivityQualifiers" }]
   uint16 QualifierFormats[];

      [Description ( 
          "The RepresentsAuthorizationRights flag indicates whether "
          "the rights defined by this instance shall be interpreted "
          "as rights of Subjects to access Targets or as rights of "
          "Subjects to change those rights on/for Targets." )]
   boolean RepresentsAuthorizationRights = false;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01514" type = "change"> Fix description of
// timestamp in Credential </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Credential
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "Subclasses of CIM_Credential define materials, information or "
       "other data which are used to establish identity. Generally, "
       "there may be some shared information, or credential material "
       "which is used to identify and authenticate an entity in the "
       "process of gaining access to, or permission to use, resources. "
       "Such credential material may be used to authenticate an "
       "entity\'s identity initially, as done by a "
       "CIM_AuthenticationService, and additionally on an ongoing "
       "basis (for example, during the course of a connection or other "
       "security association), as proof that each received message or "
       "communication came from a valid \'user\' of that credential "
       "material." )]
class CIM_Credential : CIM_ManagedElement {

      [Description ( 
          "The date and time when the credential was issued. Use a "
          "value of all \'00000101000000.000000+000\', (midnight, "
          "January 1, 1 BCE at coordinated universal time +0 "
          "minutes), if this information is not applicable. On "
          "CreateInstance, if this property is unspecified, or set "
          "to NULL, then current time is assumed." )]
   datetime Issued;

      [Description ( 
          "The date and time when the credential expires (and is "
          "not appropriate for use for authentication/ "
          "authorization). If this information is not applicable, "
          "Use a value of \'99991231235959.999999+999\', (1 "
          "microsecond before midnight, December 31, 9999 CE, at "
          "coordinated universal time + 999 minutes). \n"
          "On CreateInstance, if this property is unspecified, or "
          "set to NULL, then a value of \'99991231235959.999999+999\' "
          "is assumed. Note that this property does not define how "
          "the expiration is set - but that there IS an expiration. "
          "The property may be set to either a specific date/time "
          "or an interval (calculated from the Issued datetime). "
          "For example, for Certificate Authority-signed public "
          "key, the expiration is determined by the CA. Another "
          "example is a voice mail password that expires 60 days "
          "after it is set/issued." )]
   datetime Expires;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Association, Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "This relationship defines a context (e.g., a System or "
       "Service) of a Credential. One example is a shared secret/ "
       "password which is defined within the context of an application "
       "(or Service). Generally, there is one scoping element for a "
       "Credential, however the multiplicities of the association "
       "allow a Credential to be scoped by more than one element. If "
       "this association is not instantiated for a Credential, that "
       "Credential is assumed to be scoped to the Namespace.\n"
       "This association may also be used to indicate that a "
       "Credential is valid in some other environment. For instance "
       "associating the Credential to a RemoteServiceAccessPoint would "
       "indicate that the Credential is used to access the remote "
       "service." )]
class CIM_CredentialContext {

      [Key, Description ( "A Credential whose context is defined." )]
   CIM_Credential REF ElementInContext;

      [Key, Description ( 
          "The ManagedElement that provides context or scope for "
          "the Credential." )]
   CIM_ManagedElement REF ElementProvidingContext;

      [Description ( 
          "The usage of the certificate by the managed element that "
          "the certificate is for or is scoped to. Owned - "
          "Credential represents the CredentialContexts identity. "
          "This means that the managed element will present this "
          "credential to another party for authentication, "
          "authorization, or both. Trusted - The ManagedElement "
          "trusts the credential. This means that the credential is "
          "trusted for one or more of the security operations such "
          "as authentication, third-party authentication, and "
          "authorization. Trusted for Authentication - The "
          "ManagedElement trusts the identity represented by the "
          "credential only for authentication purposes. Trusted for "
          "Authorization - The ManagedElement trusts the identity "
          "represented by the credential only for authorization "
          "purposes. Trusted for Authentication/Authorization - The "
          "ManagedElement trusts the identity represented by the "
          "credential both for authentication and authorization "
          "purposes. Trusted for Third-Party "
          "Authentication/Authorization - The credential is being "
          "trusted for approving a third-party credential to the "
          "ManagedElement." ), 
       ValueMap { "2", "3", "4", "6", "7", "8", "..", "32768..65535" }, 
       Values { "Owned", "Trusted", "Trusted for Authentication", 
          "Trusted for Authorization", 
          "Trusted for Authentication/Authorization", 
          "Trusted for Third-Party Authentication/Authorization", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 Usage;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::User::Identity" ), 
    Description ( 
       "An instance of an Identity represents a ManagedElement that "
       "acts as a security principal within the scope in which it is "
       "defined and authenticated. (Note that the Identity\'s scope is "
       "specified using the association, CIM_IdentityContext.) "
       "ManagedElements with Identities can be OrganizationalEntities, "
       "Services, Systems, etc. The ManagedElement \'behind\' an "
       "Identity is described using the AssignedIdentity association. \n"
       "\n"
       "Within a given security context, an Identity may be imparted a "
       "level of trust, usually based on its credentials. A trust "
       "level is defined using the CIM_SecuritySensitivity class, and "
       "associated with Identity using CIM_ElementSecuritySensitivity. "
       "Whether an Identity is currently authenticated is evaluated by "
       "checking the CurrentlyAuthenticated boolean property. This "
       "property is set and cleared by the security infrastructure, "
       "and should only be readable within the management "
       "infrastructure. The conditions which must be met/authenticated "
       "in order for an Identity\'s CurrentlyAuthenticated Boolean to "
       "be TRUE are defined using a subclass of PolicyCondition - "
       "AuthenticationCondition. The inheritance tree for "
       "AuthenticationCondition is defined in the CIM Policy Model. \n"
       "\n"
       "Subclasses of Identity may include specific information "
       "related to a given AuthenticationService or authority (such as "
       "a security token or computer hardware port/communication "
       "details) that more specifically determine the authenticity of "
       "the Identity. An instance of Identity may be persisted even "
       "though it is not CurrentlyAuthenticated, in order to maintain "
       "static relationships to Roles, associations to accounting "
       "information, and policy data defining authentication "
       "requirements. Note however, when an Identity is not "
       "authenticated (CurrentlyAuthenticated = FALSE), then "
       "Privileges or rights SHOULD NOT be authorized. The lifetime, "
       "validity, and propagation of the Identity is dependent on a "
       "security infrastructure\'s policies." )]
class CIM_Identity : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "Boolean indicating whether this Identity has been "
          "authenticated, and is currently known within the scope "
          "of an AuthenticationService or authority. By default, "
          "authenticity SHOULD NOT be assumed. This property is set "
          "and cleared by the security infrastructure, and should "
          "only be readable within the management infrastructure. "
          "Note that its value, alone, may not be sufficient to "
          "determine authentication/ authorization, in that "
          "properties of an Identity subclass (such as a security "
          "token or computer hardware port/ communication details) "
          "may be required by the security infrastructure." )]
   boolean CurrentlyAuthenticated = false;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01380" type = "change"> Clarify IdentityContext
// cardinalities </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IdentityContext
// ==================================================================
   [Association, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::User::Identity" ), 
    Description ( 
       "This relationship defines a context (e.g., a System or "
       "Service) of an Identity. Note that the cardinalities of this "
       "association are many to many, indicating that the Identity MAY "
       "be scoped by several elements. However, it is likely that "
       "there will only be a single scope, if one exists at all." )]
class CIM_IdentityContext {

      [Key, Description ( "An Identity whose context is defined." )]
   CIM_Identity REF ElementInContext;

      [Key, Description ( 
          "The ManagedElement that provides context or scope for "
          "the Identity." )]
   CIM_ManagedElement REF ElementProvidingContext;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPNetworkIdentity 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Identity" ), 
    Description ( 
       "IPNetworkIdentity is used to represent the various network "
       "identities that may be used for an IPProtocolEndpoint. The "
       "relationship between the NetworkIdentity and the "
       "IPProtocolEndpoint is modeled by the AssignedIdentity "
       "association, inherited from CIM_Identity. This association "
       "could also be used to relate an address range or other "
       "endpoint collection with the Identity." ), 
    MappingStrings { "IPSP Policy Model.IETF|IKEIdentity" }]
class CIM_IPNetworkIdentity : CIM_Identity {

      [Required, Description ( 
          "The IdentityType specifies the type of IP network "
          "Identity. The list of identities was generated from "
          "Section 4.6.2.1 of RFC2407. Note that the enumeration is "
          "different than the RFC list, since the value \'Other\' "
          "is taken into account." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000.." }, 
       Values { "Other", "IPV4 Address", "FQDN", "User FQDN", 
          "IPV4 Subnet Address", "IPV6 Address", 
          "IPV6 Subnet Address", "IPV4 Address Range", 
          "IPV6 Address Range", "DER ASN1 DN", "DER ASN1 GN", 
          "KEY ID", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEIdentity.IdentityType", 
          "RFC2407.IETF|Section 4.6.2.1" }, 
       ModelCorrespondence { "CIM_IPNetworkIdentity.IdentityValue" }]
   uint16 IdentityType;

      [Required, Description ( 
          "IdentityValue contains a string encoding of the "
          "Identity. For Identity instances that are address types, "
          "the IdentityValue string value may be omitted and the "
          "associated IPProtocolEndpoint, RangeOfIPAddresses or "
          "similar class is used to define this information. The "
          "class is associated using the AssignedIdentity "
          "relationship." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEIdentity.IdentityValue" }, 
       ModelCorrespondence { "CIM_IPNetworkIdentity.IdentityType" }]
   string IdentityValue;


};

// Copyright (c) 2005 - 2007 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// ==================================================================
//  CIM_KerberosTicket 
// ==================================================================
   [Deprecated { "CIM_KerberosCredential" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::Kerberos" ), 
    Description ( 
       "A CIM_KerberosTicket represents a credential issued by a "
       "particular Kerberos Key Distribution Center (KDC) to establish "
       "an identity, as the result of a successful authentication "
       "process. There are two types of tickets that a KDC may issue - "
       "a TicketGranting ticket, which is used to protect and "
       "authenticate communications between an entity and the KDC, and "
       "a Session ticket, which the KDC issues to two entities to "
       "allow them to communicate with each other." )]
class CIM_KerberosTicket : CIM_Credential {

      [Deprecated { "CIM_KerberosCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_KerberosKeyDistributionCenter.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_KerberosCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_KerberosKeyDistributionCenter.SystemName" )]
   string SystemName;

      [Deprecated { "CIM_KerberosCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_KerberosKeyDistributionCenter.CreationClassName" )]
   string ServiceCreationClassName;

      [Deprecated { "CIM_KerberosCredential.InstanceID" }, 
       Key, Description ( 
          "The scoping Service\'s Name. The Kerberos KDC Realm of "
          "CIM_KerberosTicket is used to record the security "
          "authority, or Realm, name so that tickets issued by "
          "different Realms can be separately managed and "
          "enumerated." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_KerberosKeyDistributionCenter.Name" )]
   string ServiceName;

      [Deprecated { "CIM_KerberosCredential.AccessesService" }, 
       Key, Description ( 
          "The name of the service for which this ticket is used." ), 
       MaxLen ( 256 )]
   string AccessesService;

      [Deprecated { "CIM_KerberosCredential.RemoteID" }, 
       Key, Description ( 
          "RemoteID is the name by which the user is known at the "
          "KDC security service." ), 
       MaxLen ( 256 )]
   string RemoteID;

      [Deprecated { "CIM_KerberosCredential.TicketType" }, 
       Description ( 
          "The Type of CIM_KerberosTicket is used to indicate "
          "whether the ticket in question was issued by the "
          "Kerberos Key Distribution Center (KDC) to support "
          "ongoing communication between the Users Access and the "
          "KDC (\"TicketGranting\"), or was issued by the KDC to "
          "support ongoing communication between two Users Access "
          "entities (\"Session\")." ), 
       ValueMap { "0", "1" }, 
       Values { "Session", "TicketGranting" }]
   uint16 TicketType;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// ==================================================================
//  CIM_NamedSharedIKESecret 
// ==================================================================
   [Deprecated { "CIM_NamedCredential" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::SharedSecret" ), 
    Description ( 
       "CIM_NamedSharedIKESecret indirectly represents a shared secret "
       "credential. The local identity, IKEIdentity, and the remote "
       "peer identity share the secret that is named by the "
       "SharedSecretName. The SharedSecretName is used by the "
       "SharedSecretService to reference the secret." )]
class CIM_NamedSharedIKESecret : CIM_Credential {

      [Deprecated { "CIM_NamedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_SharedSecretService.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_NamedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SharedSecretService.SystemName" )]
   string SystemName;

      [Deprecated { "CIM_NamedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SharedSecretService.CreationClassName" )]
   string ServiceCreationClassName;

      [Deprecated { "CIM_NamedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SharedSecretService.Name" )]
   string ServiceName;

      [Deprecated { "CIM_NamedCredential.LocalIdentity" }, 
       Key, Description ( 
          "The local Identity with whom the direct trust relationship exists."
           ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_NamedSharedIKESecret.LocalIdentityType" }]
   string LocalIdentity;

      [Deprecated { "CIM_NamedCredential.LocalIdentityType" }, 
       Key, Description ( 
          "LocalIdentityType is used to describe the type of the "
          "LocalIdentity." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11" }, 
       Values { "IPV4_ADDR", "FQDN", "USER_FQDN", 
          "IPV4_ADDR_SUBNET", "IPV6_ADDR", "IPV6_ADDR_SUBNET", 
          "IPV4_ADDR_RANGE", "IPV6_ADDR_RANGE", "DER_ASN1_DN", 
          "DER_ASN1_GN", "KEY_ID" }, 
       ModelCorrespondence { "CIM_NamedSharedIKESecret.LocalIdentity" }]
   uint16 LocalIdentityType;

      [Deprecated { "CIM_NamedCredential.PeerIdentity" }, 
       Key, Description ( 
          "The peer identity with whom the direct trust relationship exists."
           ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_NamedSharedIKESecret.PeerIdentityType" }]
   string PeerIdentity;

      [Deprecated { "CIM_NamedCredential.PeerIdentityType" }, 
       Key, Description ( 
          "PeerIdentityType is used to describe the type of the PeerIdentity."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11" }, 
       Values { "IPV4_ADDR", "FQDN", "USER_FQDN", 
          "IPV4_ADDR_SUBNET", "IPV6_ADDR", "IPV6_ADDR_SUBNET", 
          "IPV4_ADDR_RANGE", "IPV6_ADDR_RANGE", "DER_ASN1_DN", 
          "DER_ASN1_GN", "KEY_ID" }, 
       ModelCorrespondence { "CIM_NamedSharedIKESecret.PeerIdentity" }]
   uint16 PeerIdentityType;

      [Deprecated { "CIM_NamedCredential.SharedSecretName" }, 
       Description ( 
          "SharedSecretName is an indirect reference to a shared "
          "secret. The SecretService does not expose the actual "
          "secret but rather provides access to the secret via a "
          "name." )]
   string SharedSecretName;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::User::OpaqueManagementData" ), 
    Description ( 
       "CIM_OpaqueManagementDataOwner describes ownership of opaque "
       "data by CIM_Identity instances. The definition of "
       "CIM_OpaqueManagementDataOwner as a subclass of "
       "CIM_AssociatedPrivilege represents the fact that the owner of "
       "opaque management data often has privileges to access it, but "
       "additionally is responsible for its existence and may have a "
       "storage quota against which it is applied. The definition of a "
       "distinct subclass facilitates discovery of the owning "
       "CIM_Identity instance." )]
class CIM_OpaqueManagementDataOwner : CIM_AssociatedPrivilege {

      [Override ( "Subject" ), 
       Description ( 
          "The CIM_Identity instance for whom privileges to the "
          "Target are granted or denied, and who is the owner of "
          "the Target." )]
   CIM_ManagedElement REF Subject;

      [Override ( "Target" ), 
       Description ( 
          "The opaque management data to which the privileges and "
          "ownership apply." )]
   CIM_ManagedElement REF Target;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OrganizationalEntity 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "OrganizationalEntity is an abstract class from which classes "
       "that fit into an organizational structure are derived." )]
class CIM_OrganizationalEntity : CIM_ManagedElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OrgStructure 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_OrgStructure is an association used to establish "
       "parent-child relationships between OrganizationalEntity "
       "instances. This is used to capture organizational "
       "relationships between object instances such as those that are "
       "imported from an LDAP-accessible directory." )]
class CIM_OrgStructure {

      [Key, Aggregate, Max ( 1 ), 
       Description ( 
          "The organizational parent in this association." )]
   CIM_OrganizationalEntity REF Parent;

      [Key, Description ( 
          "The organizational child in this association, i.e., the "
          "sub-unit or other owned object instance." )]
   CIM_OrganizationalEntity REF Child;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OrgUnit 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "The OrgUnit class is used to represent a sub-unit of an "
       "organization such a division or department. The class is "
       "defined so as to incorporate commonly-used LDAP attributes to "
       "permit implementations to easily derive this information from "
       "LDAP-accessible directories. This class\'s properties are a "
       "subset of a related class, OtherOrgUnitInformation, which "
       "defines all the group properties and in array form for "
       "directory compatibility." )]
class CIM_OrgUnit : CIM_OrganizationalEntity {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "This property describes the kind of business performed "
          "by an organizational unit." ), 
       MaxLen ( 128 )]
   string BusinessCategory;

      [Description ( 
          "The organizational unit\'s facsimile telephone number." )]
   string FacsimileTelephoneNumber;

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName;

      [Required, Description ( 
          "The name of the organizational unit." )]
   string OU;

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the organizational "
          "unit." )]
   string PostalAddress[];

      [Description ( 
          "The PostalCode property specifies the postal code of the "
          "organizational unit. If this value is present it will be "
          "part of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode;

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince;

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the organizational unit, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OtherGroupInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Group" ), 
    Description ( 
       "The OtherGroupInformation class provides additional "
       "information about an associated Group instance. This class is "
       "defined so as to incorporate commonly-used LDAP attributes to "
       "permit implementations to easily derive this information from "
       "LDAP-accessible directories." )]
class CIM_OtherGroupInformation : CIM_ManagedElement {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "In the case of an LDAP-derived instance, the ObjectClass "
          "property value(s) may be set to the objectClass "
          "attribute values." )]
   string ObjectClass[];

      [Description ( 
          "The BusinessCategory property may be used to describe "
          "the kind of business activity performed by the members "
          "of the group." ), 
       MaxLen ( 128 )]
   string BusinessCategory[];

      [Description ( 
          "A Common Name is a (possibly ambiguous) name by which "
          "the group is commonly known in some limited scope (such "
          "as an organization) and conforms to the naming "
          "conventions of the country or culture with which it is "
          "associated." )]
   string CommonName[];

      [Description ( 
          "The Descriptions property values may contain "
          "human-readable descriptions of the object. In the case "
          "of an LDAP-derived instance, the description attribute "
          "may have multiple values that, therefore, cannot be "
          "placed in the inherited Description property." ), 
       MaxLen ( 1024 )]
   string Descriptions[];

      [Description ( 
          "The name of an organization related to the group." )]
   string OrganizationName[];

      [Description ( 
          "The name of an organizational unit related to the group." )]
   string OU[];

      [Description ( 
          "The Owner property specifies the name of some object "
          "that has some responsibility for the group. In the case "
          "of an LDAP-derived instance, a property value for Owner "
          "may be a distinguished name of owning persons, groups, "
          "roles, etc." )]
   string Owner[];

      [Description ( 
          "In the case of an LDAP-derived instance, the SeeAlso "
          "property specifies distinguished name of other Directory "
          "objects which may be other aspects (in some sense) of "
          "the same real world object." )]
   string SeeAlso[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OtherOrganizationInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "The OtherOrganizationInformation class is used to provide "
       "additional information about an associated Organization "
       "instance. This class is defined so as to incorporate "
       "commonly-used LDAP attributes to permit implementations to "
       "easily derive this information from LDAP-accessible "
       "directories." )]
class CIM_OtherOrganizationInformation : CIM_ManagedElement {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "In the case of an LDAP-derived instance, the ObjectClass "
          "property value(s) may be set to the objectClass "
          "attribute values." )]
   string ObjectClass[];

      [Description ( 
          "This property describes the kind of business performed "
          "by an organization." ), 
       MaxLen ( 128 )]
   string BusinessCategory[];

      [Description ( 
          "The Descriptions property values may contain "
          "human-readable descriptions of the object. In the case "
          "of an LDAP-derived instance, the description attribute "
          "may have multiple values that, therefore, cannot be "
          "placed in the inherited Description property." ), 
       MaxLen ( 1024 )]
   string Descriptions[];

      [Description ( 
          "This property is used for the organization\'s telegram service."
           ), 
       MaxLen ( 128 )]
   string DestinationIndicator[];

      [Description ( 
          "The organization\'s facsimile telephone number." )]
   string FacsimileTelephoneNumber[];

      [Description ( "The organization\'s International ISDN number." ), 
       MaxLen ( 16 )]
   string InternationaliSDNNumber[];

      [Description ( 
          "Uniform Resource Identifier with optional label as "
          "defined in RFC2079." )]
   string LabeledURI[];

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName[];

      [Description ( 
          "Based on RFC1274, the mail box addresses for the "
          "organization as defined in RFC822." )]
   string Mail[];

      [Description ( 
          "The manager for the organization. In the case of an "
          "LDAP-derived instance, the Manager property value may "
          "contain the distinguished name of the Manager." )]
   string Manager[];

      [Description ( "The name of the organization." )]
   string OrganizationName[];

      [Description ( 
          "Based on RFC1274, this property may be used for "
          "electronic mail box addresses other than RFC822 and "
          "X.400." )]
   string OtherMailbox[];

      [Description ( 
          "The PhysicalDeliveryOfficeName property specifies the "
          "name of the city, village, etc. where a physical "
          "delivery office is situated." ), 
       MaxLen ( 128 )]
   string PhysicalDeliveryOfficeName[];

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the organization." )]
   string PostalAddress[];

      [Description ( 
          "The PostalCode property specifies the postal code of the "
          "organization. If this value is present it will be part "
          "of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode[];

      [Description ( 
          "The PostOfficeBox property specifies the PO box by which "
          "the organization will receive physical postal delivery. "
          "If present, the property value is part of the object\'s "
          "postal address." ), 
       MaxLen ( 40 )]
   string PostOfficeBox[];

      [Description ( 
          "The PreferredDeliveryMethod property specifies the "
          "organization\'s preferred method to be used for "
          "communicating with it." )]
   string PreferredDeliveryMethod;

      [Description ( 
          "This property specifies a postal address suitable for "
          "receipt of telegrams or expedited documents, where it is "
          "necessary to have the recipient accept delivery." )]
   string RegisteredAddress[];

      [Description ( 
          "This property value is for use by X.500 clients in "
          "constructing search filters." )]
   string SearchGuide[];

      [Description ( 
          "In the case of an LDAP-derived instance, the SeeAlso "
          "property specifies distinguishedName of other Directory "
          "objects which may be other aspects (in some sense) of "
          "the same real world object." )]
   string SeeAlso[];

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince[];

      [Description ( 
          "The Street address property specifies a site for the "
          "local distribution and physical delivery in a postal "
          "address, i.e. the street name, place, avenue, and the "
          "number." ), 
       MaxLen ( 128 )]
   string Street[];

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the organization, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber[];

      [Description ( 
          "The TeletexTerminalIdentifier property specifies the "
          "Teletex terminal identifier (and, optionally, "
          "parameters) for a teletex terminal associated with the "
          "organization." )]
   string TeletexTerminalIdentifier[];

      [Description ( 
          "The TelexNumber property specifies the telex number, "
          "country code, and answerback code of a telex terminal "
          "for the organization." )]
   string TelexNumber[];

      [Description ( "An image of the organization logo." ), 
       OctetString]
   string ThumbnailLogo[];

      [Description ( 
          "A unique identifier that may be assigned in an "
          "environment to differentiate between uses of a given "
          "named organization instance." )]
   string UniqueIdentifier[];

      [Description ( 
          "In the case of an LDAP-derived instance, the "
          "UserPassword property may contain an encrypted password "
          "used to access the organization\'s resources in a "
          "directory." ), 
       OctetString]
   string UserPassword[];

      [Description ( "An X.121 address for the organization." ), 
       MaxLen ( 15 )]
   string X121Address[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OtherOrgUnitInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "The OtherOrgUnitInformation class is used to provide "
       "additional information about an associated OrgUnit instance. "
       "This class is defined so as to incorporate commonly-used LDAP "
       "attributes to permit implementations to easily derive this "
       "information from LDAP-accessible directories." )]
class CIM_OtherOrgUnitInformation : CIM_ManagedElement {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "In the case of an LDAP-derived instance, the ObjectClass "
          "property value(s) may be set to the objectClass "
          "attribute values." )]
   string ObjectClass[];

      [Description ( 
          "This property describes the kind of business performed "
          "by an organizational unit." ), 
       MaxLen ( 128 )]
   string BusinessCategory[];

      [Description ( 
          "The Descriptions property values may contain "
          "human-readable descriptions of the object. In the case "
          "of an LDAP-derived instance, the description attribute "
          "may have multiple values that, therefore, cannot be "
          "placed in the inherited Description property." ), 
       MaxLen ( 1024 )]
   string Descriptions[];

      [Description ( 
          "This property is used for the organizational unit\'s "
          "telegram service." ), 
       MaxLen ( 128 )]
   string DestinationIndicator[];

      [Description ( 
          "The organizational unit\'s facsimile telephone number." )]
   string FacsimileTelephoneNumber[];

      [Description ( 
          "The organizational unit\'s International ISDN number." ), 
       MaxLen ( 16 )]
   string InternationaliSDNNumber[];

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName[];

      [Description ( "The name of the organizational unit." )]
   string OU[];

      [Description ( 
          "The PhysicalDeliveryOfficeName property specifies the "
          "name of the city, village, etc. where a physical "
          "delivery office is situated." ), 
       MaxLen ( 128 )]
   string PhysicalDeliveryOfficeName[];

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the organizational "
          "unit." )]
   string PostalAddress[];

      [Description ( 
          "The PostalCode property specifies the postal code of the "
          "organizational unit. If this value is present it will be "
          "part of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode[];

      [Description ( 
          "The PostOfficeBox property specifies the PO box by which "
          "the organizational unit will receive physical postal "
          "delivery. If present, the property value is part of the "
          "object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostOfficeBox[];

      [Description ( 
          "The PreferredDeliveryMethod property specifies the "
          "organizational unit\'s preferred method to be used for "
          "communicating with it." )]
   string PreferredDeliveryMethod;

      [Description ( 
          "This property value is for use by X.500 clients in "
          "constructing search filters." )]
   string SearchGuide[];

      [Description ( 
          "In the case of an LDAP-derived instance, the SeeAlso "
          "property specifies distinguished name of other Directory "
          "objects which may be other aspects (in some sense) of "
          "the same real world object." )]
   string SeeAlso[];

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince[];

      [Description ( 
          "The Street address property specifies a site for the "
          "local distribution and physical delivery in a postal "
          "address, i.e. the street name, place, avenue, and the "
          "number." ), 
       MaxLen ( 128 )]
   string Street[];

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the organizational unit, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber[];

      [Description ( 
          "The TeletexTerminalIdentifier property specifies the "
          "Teletex terminal identifier (and, optionally, "
          "parameters) for a teletex terminal associated with the "
          "organizational unit." )]
   string TeletexTerminalIdentifier[];

      [Description ( 
          "The TelexNumber property specifies the telex number, "
          "country code, and answerback code of a telex terminal "
          "for the organization." )]
   string TelexNumber[];

      [Description ( 
          "In the case of an LDAP-derived instance, the "
          "UserPassword property may contain an encrypted password "
          "used to access the organizational unit\'s resources in a "
          "directory." ), 
       OctetString]
   string UserPassword[];

      [Description ( "An X.121 address for the organization." ), 
       MaxLen ( 15 )]
   string X121Address[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OtherPersonInformation 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "The OtherPersonInformation class is used to provide additional "
       "information about an associated Person instance. This class is "
       "defined so as to incorporate commonly-used LDAP attributes to "
       "permit implementations to easily derive this information from "
       "LDAP-accessible directories." )]
class CIM_OtherPersonInformation : CIM_ManagedElement {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "In the case of an LDAP-derived instance, the ObjectClass "
          "property value(s) may be set to the objectClass "
          "attribute values." )]
   string ObjectClass[];

      [Description ( 
          "The Audio property may be used to store an audio clip of "
          "the person." ), 
       OctetString]
   string Audio[];

      [Description ( 
          "This property describes the kind of business performed "
          "by an organization." ), 
       MaxLen ( 128 )]
   string BusinessCategory[];

      [Description ( 
          "The CarLicense property is used to record the values of "
          "the vehicle license or registration plate associated "
          "with an individual." ), 
       MaxLen ( 128 )]
   string CarLicense[];

      [Description ( 
          "A CommonName is a (possibly ambiguous) name by which the "
          "role is commonly known in some limited scope (such as an "
          "organization) and conforms to the naming conventions of "
          "the country or culture with which it is associated." )]
   string CommonName[];

      [Description ( 
          "The CountryName property specifies a country as defined "
          "in ISO 3166." )]
   string CountryName[];

      [Description ( 
          "Based on inetOrgPerson, the DepartmentNumber is a code "
          "for department to which a person belongs. This can be "
          "strictly numeric (e.g., 1234) or alphanumeric (e.g., "
          "ABC/123)." )]
   string DepartmentNumber[];

      [Description ( 
          "The Descriptions property values may contain "
          "human-readable descriptions of the object. In the case "
          "of an LDAP-derived instance, the description attribute "
          "may have multiple values that, therefore, cannot be "
          "placed in the inherited Description property." ), 
       MaxLen ( 1024 )]
   string Descriptions[];

      [Description ( 
          "This property is used for the organization\'s telegram service."
           ), 
       MaxLen ( 128 )]
   string DestinationIndicator[];

      [Description ( 
          "Based on inetOrgPerson, the DisplayName property values "
          "are used when displaying an entry." )]
   string DisplayName[];

      [Description ( 
          "Based on inetOrgPerson, the EmployeeNumber property "
          "specifies a numeric or an alphanumeric identifier "
          "assigned to a person." )]
   string EmployeeNumber;

      [Description ( 
          "Based on inetOrgPerson, the EmployeeType property is "
          "used to identify the employer to employee relationship. "
          "Typical values used may include \'Contractor\', "
          "\'Employee\', \'Intern\', \'Temp\', \'External\', and "
          "\'Unknown\' but any value may be used." )]
   string EmployeeType[];

      [Description ( "The person\'s facsimile telephone number." )]
   string FacsimileTelephoneNumber[];

      [Description ( 
          "Based on liPerson, the GenerationQualifier property "
          "specifies a name qualifier that represents the person\'s "
          "generation (e.g., JR., III, etc.)." )]
   string GenerationQualifier[];

      [Description ( 
          "The GivenName property is used for the part of a "
          "person\'s name that is not their surname nor their "
          "middle name." )]
   string GivenName[];

      [Description ( 
          "Based on liPerson, the HomeFax property specifies the "
          "person\'s facsimile telephone number at home." )]
   string HomeFax[];

      [Description ( 
          "Based on RFC1274, the HomePhone property specifies a "
          "home telephone number for the person, e.g. + 44 582 "
          "10101)." ), 
       MaxLen ( 32 )]
   string HomePhone[];

      [Description ( 
          "The HomePostalAddress property values specify the home "
          "address information required for the physical delivery "
          "of postal messages by the postal authority." )]
   string HomePostalAddress[];

      [Description ( 
          "Based on inetOrgPerson, the Initials property specifies "
          "the first letters of the person\'s name, typically the "
          "property values will exclude the first letter of the "
          "surname." )]
   string Initials[];

      [Description ( "The person\'s International ISDN number." ), 
       MaxLen ( 16 )]
   string InternationaliSDNNumber[];

      [Description ( 
          "From inetOrgPerson, the JPEG Photo property values may "
          "be used for one or more images of a person using the "
          "JPEG File Interchange Format." )]
   string JPEGPhoto[];

      [Description ( 
          "Uniform Resource Identifier with optional label as "
          "defined in RFC2079." )]
   string LabeledURI[];

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName[];

      [Description ( 
          "Based on RFC1274, the mail box addresses for the person "
          "as defined in RFC822." )]
   string Mail[];

      [Description ( 
          "The person\'s manager within the organization. In the "
          "case of an LDAP-derived instance, the Manager property "
          "value may contain the distinguishedName of the Manager." )]
   string Manager[];

      [Description ( 
          "Based on liPerson, the middle name of the person." )]
   string MiddleName[];

      [Description ( 
          "Based on RFC1274, the Mobile phone property specifies a "
          "mobile telephone number for the person, e.g. + 44 582 "
          "10101)." ), 
       MaxLen ( 32 )]
   string Mobile[];

      [Required, Description ( 
          "The name of the person\'s organization." )]
   string OrganizationName[];

      [Description ( 
          "Based on RFC1274, the OrganizationalStatus property "
          "specifies a category by which a person is often referred "
          "to within an organization. Examples of usage in academia "
          "might include undergraduate student, researcher, "
          "lecturer, etc." )]
   string OrganizationalStatus[];

      [Description ( 
          "Based on RFC1274, this property may be used for "
          "electronic mail box addresses other than RFC822 and "
          "X.400." )]
   string OtherMailbox[];

      [Description ( 
          "The name of an organizational unit related to the person." )]
   string OU[];

      [Description ( 
          "Based on RFC1274, the Pager property specifies a pager "
          "telephone number for the person, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string Pager[];

      [Description ( 
          "Based on liPerson, the PersonalTitle property may be "
          "used to specify the person\'s personal title such as "
          "Mr., Ms., Dr., Prof. etc." )]
   string PersonalTitle[];

      [Description ( 
          "Based on RFC1274, the Photo property may be used to "
          "specify a photograph for the person encoded in G3 fax as "
          "explained in recommendation T.4, with an ASN.1 wrapper "
          "to make it compatible with an X.400 BodyPart as defined "
          "in X.420." ), 
       OctetString]
   string Photo[];

      [Description ( 
          "The PhysicalDeliveryOfficeName property specifies the "
          "name of the city, village, etc. where a physical "
          "delivery office is situated." ), 
       MaxLen ( 128 )]
   string PhysicalDeliveryOfficeName[];

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the person." )]
   string PostalAddress[];

      [Description ( 
          "The PostalCode property specifies the postal code of the "
          "organization. If this value is present, it will be part "
          "of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode[];

      [Description ( 
          "The PostOfficeBox property specifies the PO box by which "
          "the person will receive physical postal delivery. If "
          "present, the property value is part of the object\'s "
          "postal address." ), 
       MaxLen ( 40 )]
   string PostOfficeBox[];

      [Description ( 
          "The PreferredDeliveryMethod property specifies the "
          "preferred method to be used for contacting the person." )]
   string PreferredDeliveryMethod;

      [Description ( 
          "Based on inetOrgPerson, the person\'s preferred written "
          "or spoken language." )]
   string PreferredLanguage;

      [Description ( 
          "This property specifies a postal address suitable for "
          "receipt of telegrams or expedited documents, where it is "
          "necessary to have the recipient accept delivery." )]
   string RegisteredAddress[];

      [Description ( 
          "Based on RFC1274, the RoomNumber property specifies the "
          "room number for the person." )]
   string RoomNumber[];

      [Description ( 
          "Based on RFC1274, the Secretary property may be used to "
          "specify a secretary for the person. In the case of an "
          "LDAP-derived object instance, the value may be a "
          "distinguishedName." )]
   string Secretary[];

      [Description ( 
          "In the case of an LDAP-derived instance, the SeeAlso "
          "property specifies distinguished name of other Directory "
          "objects which may be other aspects (in some sense) of "
          "the same real world object." )]
   string SeeAlso[];

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince[];

      [Description ( 
          "The Street address property specifies a site for the "
          "local distribution and physical delivery in a postal "
          "address, i.e. the street name, place, avenue, and the "
          "number." ), 
       MaxLen ( 128 )]
   string Street[];

      [Description ( 
          "The Surname property specifies the linguistic construct "
          "that normally is inherited by an individual from the "
          "individual\'s parent or assumed by marriage, and by "
          "which the individual is commonly known." )]
   string Surname[];

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the organization, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber[];

      [Description ( 
          "The TeletexTerminalIdentifier property specifies the "
          "Teletex terminal identifier (and, optionally, "
          "parameters) for a teletex terminal associated with the "
          "organization." )]
   string TeletexTerminalIdentifier[];

      [Description ( 
          "The TelexNumber property specifies the telex number, "
          "country code, and answerback code of a telex terminal "
          "for the organization." )]
   string TelexNumber[];

      [Description ( 
          "A small image of the person\'s organization logo." ), 
       OctetString]
   string ThumbnailLogo[];

      [Description ( "A small image of the person." ), 
       OctetString]
   string ThumbnailPhoto[];

      [Description ( 
          "The Title property may be used to specify the person\'s "
          "designated position or function of the object within an "
          "organization, e.g., Manager, Vice-President, etc." )]
   string Title[];

      [Description ( 
          "Based on RFC1274, the UserID property may be used to "
          "specify a computer system login name." )]
   string UserID[];

      [Description ( 
          "A unique identifier that may be assigned in an "
          "environment to differentiate between uses of a given "
          "named person instance." )]
   string UniqueIdentifier[];

      [Description ( 
          "Based on inetOrgPerson and for directory compatibility, "
          "the UserCertificate property may be used to specify a "
          "public key certificate for the person." ), 
       OctetString]
   string UserCertificate[];

      [Description ( 
          "In the case of an LDAP-derived instance, the "
          "UserPassword property may contain an encrypted password "
          "used to access the person\'s resources in a directory." ), 
       OctetString]
   string UserPassword[];

      [Description ( 
          "Based on inetOrgPerson and for directory compatibility, "
          "the UserPKCS12 property value may be used to provide a "
          "format for exchange of personal identity information. "
          "The property values are PFX PDUs stored as Octetstrings." ), 
       OctetString]
   string UserPKCS12[];

      [Description ( 
          "Based on inetOrgPerson, the User S/MIME Certificate "
          "property may be used to specify the person\'s an S/MIME "
          "(RFC1847) signed message with a zero-length body. It "
          "contains the entire certificate chain and the signed "
          "attribute that describes their algorithm capabilities. "
          "If available, this property is preferred over the "
          "UserCertificate property for S/MIME applications." ), 
       OctetString]
   string UserSMIMECertificate[];

      [Description ( "An X.121 address for the organization." ), 
       MaxLen ( 15 )]
   string X121Address[];

      [Description ( 
          "An X.500 specified unique identifier that may be "
          "assigned in an environment to differentiate between uses "
          "of a given named person object instance." ), 
       OctetString]
   string X500UniqueIdentifier[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OtherRoleInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Role" ), 
    Description ( 
       "The OtherRoleInformation class is used to provide additional "
       "information about an associated Role instance. This class is "
       "defined so as to incorporate commonly-used LDAP attributes to "
       "permit implementations to easily derive this information from "
       "LDAP-accessible directories." )]
class CIM_OtherRoleInformation : CIM_ManagedElement {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "In the case of an LDAP-derived instance, the ObjectClass "
          "property value(s) may be set to the objectClass "
          "attribute values." )]
   string ObjectClass[];

      [Description ( 
          "This property may be used to describe the kind of "
          "business activity performed by the members (role "
          "occupants) in the position or set of responsibilities "
          "represented by the Role." ), 
       MaxLen ( 128 )]
   string BusinessCategory[];

      [Description ( 
          "A CommonName is a (possibly ambiguous) name by which the "
          "role is commonly known in some limited scope (such as an "
          "organization) and conforms to the naming conventions of "
          "the country or culture with which it is associated." )]
   string CommonName[];

      [Description ( 
          "The Descriptions property values may contain "
          "human-readable descriptions of the object. In the case "
          "of an LDAP-derived instance, the description attribute "
          "may have multiple values that, therefore, cannot be "
          "placed in the inherited Description property." ), 
       MaxLen ( 1024 )]
   string Descriptions[];

      [Description ( 
          "This property is used for the role occupants\' telegram service."
           ), 
       MaxLen ( 128 )]
   string DestinationIndicator[];

      [Description ( 
          "The role occupants\' facsimile telephone number." )]
   string FacsimileTelephoneNumber[];

      [Description ( 
          "The role occupants\' International ISDN number." ), 
       MaxLen ( 16 )]
   string InternationaliSDNNumber[];

      [Description ( 
          "The name of an organizational unit related to the role." )]
   string OU[];

      [Description ( 
          "The PhysicalDeliveryOfficeName property specifies the "
          "name of the city, village, etc. where a physical "
          "delivery office is situated." ), 
       MaxLen ( 128 )]
   string PhysicalDeliveryOfficeName[];

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the role occupants." )]
   string PostalAddress[];

      [Description ( 
          "The PostalCode property specifies the postal code for "
          "the role occupants. If this value is present it will be "
          "part of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode[];

      [Description ( 
          "The PostOfficeBox property specifies the PO box by which "
          "the role occupants will receive physical postal "
          "delivery. If present, the property value is part of the "
          "object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostOfficeBox[];

      [Description ( 
          "The PreferredDeliveryMethod property specifies the role "
          "occupants\' preferred method to be used for contacting "
          "them in their role." )]
   string PreferredDeliveryMethod;

      [Description ( 
          "This property specifies a postal address suitable for "
          "receipt of telegrams or expedited documents, where it is "
          "necessary to have the recipient accept delivery." )]
   string RegisteredAddress[];

      [Description ( 
          "In the case of an LDAP-derived instance, the SeeAlso "
          "property specifies distinguished name of other Directory "
          "objects which may be other aspects (in some sense) of "
          "the same real world object." )]
   string SeeAlso[];

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince[];

      [Description ( 
          "The Street address property specifies a site for the "
          "local distribution and physical delivery in a postal "
          "address, i.e. the street name, place, avenue, and the "
          "number." ), 
       MaxLen ( 128 )]
   string Street[];

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the role occupants, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber[];

      [Description ( 
          "The TeletexTerminalIdentifier property specifies the "
          "Teletex terminal identifier (and, optionally, "
          "parameters) for a teletex terminal associated with the "
          "role occupants." )]
   string TeletexTerminalIdentifier[];

      [Description ( 
          "The TelexNumber property specifies the telex number, "
          "country code, and answerback code of a telex terminal "
          "for the role occupants." )]
   string TelexNumber[];

      [Description ( "An X.121 address for the role occupants." ), 
       MaxLen ( 15 )]
   string X121Address[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "Privilege is the base class for all types of activities which "
       "are granted or denied by a Role or an Identity. Whether an "
       "individual Privilege is granted or denied is defined using the "
       "PrivilegeGranted boolean. Any Privileges not specifically "
       "granted are assumed to be denied. An explicit deny (Privilege "
       "Granted = FALSE) takes precedence over any granted Privileges. \n"
       "\n"
       "The association of subjects (Roles and Identities) to "
       "Privileges is accomplished using policy or explicitly via the "
       "associations on a subclass. The entities that are protected "
       "(targets) can be similarly defined. \n"
       "\n"
       "Note that Privileges may be inherited through hierarchical "
       "Roles, or may overlap. For example, a Privilege denying any "
       "instance Writes in a particular CIM Server Namespace would "
       "overlap with a Privilege defining specific access rights at an "
       "instance level within that Namespace. In this example, the "
       "AuthorizedSubjects are either Identities or Roles, and the "
       "AuthorizedTargets are a Namespace in the former case, and a "
       "particular instance in the latter." )]
class CIM_Privilege : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. For DMTF defined instances, the "
          "\'preferred\' algorithm MUST be used with the <OrgID> "
          "set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "Boolean indicating whether the Privilege is granted "
          "(TRUE) or denied (FALSE). The default is to grant "
          "permission." )]
   boolean PrivilegeGranted = true;

      [Description ( 
          "An enumeration indicating the activities that are "
          "granted or denied. These activities apply to all "
          "entities specified in the ActivityQualifiers array. The "
          "values in the enumeration are straightforward except for "
          "one, 4=\"Detect\". This value indicates that the "
          "existence or presence of an entity may be determined, "
          "but not necessarily specific data (which requires the "
          "Read privilege to be true). This activity is exemplified "
          "by \'hidden files\'- if you list the contents of a "
          "directory, you will not see hidden files. However, if "
          "you know a specific file name, or know how to expose "
          "hidden files, then they can be \'detected\'. Another "
          "example is the ability to define search privileges in "
          "directory implementations." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "..", "16000.." }, 
       Values { "Other", "Create", "Delete", "Detect", "Read", 
          "Write", "Execute", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Privilege.ActivityQualifiers" }]
   uint16 Activities[];

      [Description ( 
          "The ActivityQualifiers property is an array of string "
          "values used to further qualify and specify the "
          "privileges granted or denied. For example, it is used to "
          "specify a set of files for which \'Read\'/\'Write\' "
          "access is permitted or denied. Or, it defines a class\' "
          "methods that may be \'Executed\'. Details on the "
          "semantics of the individual entries in "
          "ActivityQualifiers are provided by corresponding entries "
          "in the QualifierFormats array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Privilege.Activities", 
          "CIM_Privilege.QualifierFormats" }]
   string ActivityQualifiers[];

      [Description ( 
          "Defines the semantics of corresponding entries in the "
          "ActivityQualifiers array. An example of each of these "
          "\'formats\' and their use follows: \n"
          "- 2=Class Name. Example: If the authorization target is "
          "a CIM Service or a Namespace, then the "
          "ActivityQualifiers entries can define a list of classes "
          "that the authorized subject is able to create or delete. \n"
          "- 3=<Class.>Property. Example: If the authorization "
          "target is a CIM Service, Namespace or Collection of "
          "instances, then the ActivityQualifiers entries can "
          "define the class properties that may or may not be "
          "accessed. In this case, the class names are specified "
          "with the property names to avoid ambiguity - since a CIM "
          "Service, Namespace or Collection could manage multiple "
          "classes. On the other hand, if the authorization target "
          "is an individual instance, then there is no possible "
          "ambiguity and the class name may be omitted. To specify "
          "ALL properties, the wildcard string \"*\" should be "
          "used. \n"
          "- 4=<Class.>Method. This example is very similar to the "
          "Property one, above. And, as above, the string \"*\" may "
          "be specified to select ALL methods. \n"
          "- 5=Object Reference. Example: If the authorization "
          "target is a CIM Service or Namespace, then the "
          "ActivityQualifiers entries can define a list of object "
          "references (as strings) that the authorized subject can "
          "access. \n"
          "- 6=Namespace. Example: If the authorization target is a "
          "CIM Service, then the ActivityQualifiers entries can "
          "define a list of Namespaces that the authorized subject "
          "is able to access. \n"
          "- 7=URL. Example: An authorization target may not be "
          "defined, but a Privilege could be used to deny access to "
          "specific URLs by individual Identities or for specific "
          "Roles, such as the \'under 17\' Role. \n"
          "- 8=Directory/File Name. Example: If the authorization "
          "target is a FileSystem, then the ActivityQualifiers "
          "entries can define a list of directories and files whose "
          "access is protected. \n"
          "- 9=Command Line Instruction. Example: If the "
          "authorization target is a ComputerSystem or Service, "
          "then the ActivityQualifiers entries can define a list of "
          "command line instructions that may or may not be "
          "\'Executed\' by the authorized subjects. \n"
          "- 10=SCSI Command, using a format of \'CDB=xx[,Page=pp]\'. "
          "For example, the ability to select the VPD page of the "
          "Inquiry command is encoded as \'CDB=12,Page=83\' in the "
          "corresponding ActivityQualifiers entry. A \'*\' may be "
          "used to indicate all CDBs or Page numbers. \n"
          "- 11=Packets. Example: The transmission of packets is "
          "permitted or denied by the Privilege for the target (a "
          "ComputerSystem, ProtocolEndpoint, Pipe, or other "
          "ManagedSystemElement)." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "..", "16000.." }, 
       Values { "Class Name", "<Class.>Property", "<Class.>Method", 
          "Object Reference", "Namespace", "URL", 
          "Directory/File Name", "Command Line Instruction", 
          "SCSI Command", "Packets", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Privilege.ActivityQualifiers" }]
   uint16 QualifierFormats[];

      [Description ( 
          "The RepresentsAuthorizationRights flag indicates whether "
          "the rights defined by this instance should be "
          "interpreted as rights of Subjects to access Targets or "
          "as rights of Subjects to change those rights on/for "
          "Targets." )]
   boolean RepresentsAuthorizationRights = false;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// ==================================================================
//  CIM_PublicKeyCertificate 
// ==================================================================
   [Deprecated { "CIM_SignedCredential" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "A PublicKeyCertificate is a credential that is "
       "cryptographically signed by a trusted Certificate Authority "
       "(CA) and issued to an authenticated entity (e.g., human user, "
       "service, etc.) called the Subject in the certificate. The "
       "public key in the certificate is cryptographically related to "
       "a private key that is held and kept private by the "
       "authenticated Subject. The certificate and its related private "
       "key can then be used for establishing trust relationships and "
       "securing communications with the Subject. Refer to the "
       "ITU/CCITT X.509 standard as an example of such certificates." )]
class CIM_PublicKeyCertificate : CIM_Credential {

      [Deprecated { "CIM_SignedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_CertificateAuthority.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_SignedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_CertificateAuthority.SystemName" )]
   string SystemName;

      [Deprecated { "CIM_SignedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_CertificateAuthority.CreationClassName" )]
   string ServiceCreationClassName;

      [Deprecated { "CIM_SignedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_CertificateAuthority.Name" )]
   string ServiceName;

      [Deprecated { "CIM_SignedCredential.Subject" }, 
       Key, Description ( "Certificate subject identifier." ), 
       MaxLen ( 256 )]
   string Subject;

      [Deprecated { "CIM_SignedCredential.AltSubject" }, 
       Description ( 
          "Alternate subject identifier for the Certificate." ), 
       MaxLen ( 256 )]
   string AltSubject;

      [Deprecated { "CIM_SignedCredential.PublicKey" }, 
       Description ( "The DER-encoded raw public key." ), 
       OctetString]
   uint8 PublicKey[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::User::SecurityLevel" ), 
    Description ( 
       "Defines a security sensitivity level, which can be associated "
       "with a ManagedElement. A simple example is to define security "
       "levels representing \'low sensitivity\', \'moderately "
       "sensitive\', \'high sensitivity\' and \'national security\' "
       "classification levels. An element is assigned a security level "
       "via the association, ElementSecurityLevel. It can be assigned "
       "to any ManagedElement, such as Locations, Identities, Roles, "
       "Systems, Services and LogicalFiles. \n"
       "\n"
       "A security level is determined by a business, organization "
       "and/or government based on the need to protect data and "
       "entities from attack, loss, abuse or unauthorized disclosure, "
       "and the ramifications if this protection is not maintained." )]
class CIM_SecuritySensitivity : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. For DMTF defined instances, the "
          "\'preferred\' algorithm MUST be used with the <OrgID> "
          "set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "A string defining the security sensitivity level." )]
   string SecurityLevel;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::User::SharedCredential" ), 
    Description ( 
       "SharedCredential is a secret (such as a password or the "
       "response to a challenge question) that is shared between a "
       "principal and a particular SharedCredential security service. "
       "Secrets may be in the form of a password used for initial "
       "authentication, or as with a session key, used as part of a "
       "message to verify the originator of the message. It is "
       "important to note that SharedCredential is not just a "
       "password, but rather is the password used with a particular "
       "security service." )]
class CIM_SharedCredential : CIM_Credential {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness, "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the organizational entity and "
          "SHOULD not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "RemoteID is the name by which the principal is known at "
          "the remote secret key authentication service." ), 
       MaxLen ( 256 )]
   string RemoteID;

      [Description ( "The secret known by the principal." )]
   string Secret;

      [Description ( 
          "The transformation algorithm, if any, used to protect "
          "passwords before use in the protocol. For instance, "
          "Kerberos doesn\'t store passwords as the shared secret, "
          "but rather, a hash of the password." )]
   string Algorithm;

      [Description ( 
          "The protocol with which the SharedCredential is used." )]
   string Protocol;


};

// Copyright (c) 2007, DMTF.  All rights reserved.
   [Deprecated { "CIM_SharedCredential" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::SharedSecret" ), 
    Description ( 
       "CIM_SharedSecret is a secret (such as a password or the "
       "response to a challenge question) that is shared between a "
       "principal and a particular SharedSecret security service. "
       "Secrets may be in the form of a password used for initial "
       "authentication, or as with a session key, used as part of a "
       "message to verify the originator of the message. It is "
       "important to note that SharedSecret is not just a password, "
       "but rather is the password used with a particular security "
       "service." )]
class CIM_SharedSecret : CIM_Credential {

      [Deprecated { "CIM_SharedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_SharedSecretService.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_SharedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SharedSecretService.SystemName" )]
   string SystemName;

      [Deprecated { "CIM_SharedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SharedSecretService.CreationClassName" )]
   string ServiceCreationClassName;

      [Deprecated { "CIM_SharedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SharedSecretService.Name" )]
   string ServiceName;

      [Deprecated { "CIM_SharedCredential.RemoteID" }, 
       Key, Description ( 
          "RemoteID is the name by which the principal is known at "
          "the remote secret key authentication service." ), 
       MaxLen ( 256 )]
   string RemoteID;

      [Deprecated { "CIM_SharedCredential.Secret" }, 
       Description ( "The secret known by the principal." ), 
       OctetString]
   string Secret;

      [Deprecated { "CIM_SharedCredential.Algorithm" }, 
       Description ( 
          "The transformation algorithm, if any, used to protect "
          "passwords before use in the protocol. For instance, "
          "Kerberos doesn\'t store passwords as the shared secret, "
          "but rather, a hash of the password." )]
   string Algorithm;

      [Deprecated { "CIM_SharedCredential.Protocol" }, 
       Description ( 
          "The protocol with which the SharedSecret is used." )]
   string Protocol;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "A SignedCredential is a credential that is cryptographically "
       "signed by a trusted Certificate Authority (CA) or the owner of "
       "the credential itself." )]
class CIM_SignedCredential : CIM_Credential {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness, "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the organizational entity and "
          "SHOULD not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( "Issuer name who signed the credential." )]
   string IssuerName;

      [Description ( 
          "Certificate authority\'s or credential owner\'s "
          "identifying digest that confers validity on a signed "
          "credential." ), 
       OctetString]
   uint8 Signature[];

      [Description ( 
          "Algorithm used to generate the signature. The algorithms "
          "specified are described in RFC3279. If the value of this "
          "property is 1, \"Other\", then the "
          "OtherSignatureAlgorithm shall be non NULL, non blank "
          "string" ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20..32767", "32768..65535" }, 
       Values { "Other", "SHA1withDSA", "SHA1withECDSA", 
          "SHA224withECDSA", "SHA256withECDSA", "SHA384withECDSA", 
          "SHA512withECDSA", "GOST3411withGOST3410", 
          "GOST3411withECGOST3410", "MD2withRSA", "MD5withRSA", 
          "SHA1withRSA", "SHA224withRSA", "SHA256withRSA", 
          "SHA384withRSA", "SHA512withRSA", "RIPEMD160withRSA", 
          "RIPEMD128withRSA", "RIPEMD256withRSA", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 SignatureAlgorithm;

      [Description ( 
          "A string describing the signature algorithm when the "
          "SignatureAlgorithm property has the value 1, \"Other\"." )]
   string OtherSignatureAlgorithm;

      [Description ( "Object ID of the signature algorithm." )]
   string SignatureAlgorithmOID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageClientSettingData 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::StorageHardwareID" ), 
    Description ( 
       "This class models host environment factors that influence the "
       "behavior of Storage Systems. For example, a disk array has "
       "different SCSI responses for clients (initiators) configured "
       "as AIX verses HPUX. Instances of this setting class can be "
       "associated via ElementSettingData to a storage system\'s "
       "LogicalPort, ProtocolController, or Volume instances when "
       "these elements have host awareness. These associations are "
       "created by the management instrumentation provider to reflect "
       "the current configuration. A client deletes/creates these "
       "associations to request changes in element host-awareness. "
       "This settings class can also be associated with "
       "StorageHardwareID instances when that HW ID is configured with "
       "host information. An instance of this setting may include "
       "several ClientType values if the storage system treats them "
       "identically. The storage system exposes all supported setting "
       "instances to a WBEM Enumerate request; the client uses the "
       "returned settings to determine which types are available." )]
class CIM_StorageClientSettingData : CIM_SettingData {

      [Description ( 
          "This enumeration defines operating system, version, "
          "driver, and other host environment factors that "
          "influence the behavior exposed by storage systems. "
          "Values in this array are combined with data from the "
          "OtherClientTypeDescriptions property to provide complete "
          "information on the host environment." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Standard", "Solaris", "HPUX", 
          "OpenVMS", "Tru64", "Netware", "Sequent", "AIX", "DGUX", 
          "Dynix", "Irix", "Cisco iSCSI Storage Router", "Linux", 
          "Microsoft Windows", "OS400", "TRESPASS", "HI-UX", 
          "DMTF Reserved", "Vendor Specific" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_StorageClientSettingData.OtherClientTypeDescriptions" }]
   uint16 ClientTypes[];

      [Description ( 
          "When the the corresponding array entry in ClientTypes[] "
          "is \"Other\", this entry provides a string describing "
          "the manufacturer and OS/Environment. When the "
          "corresponding ClientTypes[] entry is not \"Other\", this "
          "entry allows variations or qualifications of ClientTypes "
          "- for example, different versions of Solaris." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_StorageClientSettingData.ClientTypes" }]
   string OtherClientTypeDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::User::StorageHardwareID" ), 
    Description ( 
       "CIM_StorageHardwareID is a hardware ID that serves as an "
       "authorization subject. Example are host controller IDs that "
       "serve as authorization subjects in disk array LUN Masking." )]
class CIM_StorageHardwareID : CIM_Identity {

      [Required, Description ( "The hardware worldwide unique ID." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_StorageHardwareID.IDType" }]
   string StorageID;

      [Required, Description ( 
          "The type of the ID property. iSCSI IDs may use one of "
          "three iSCSI formats - iqn, eui, or naa. This three "
          "letter format is the name prefix; so a single iSCSI type "
          "is provided here, the prefix can be used to further "
          "refine the format." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "PortWWN", "NodeWWN", "Hostname", 
          "iSCSI Name", "SwitchWWN" }, 
       ModelCorrespondence { "CIM_StorageHardwareID.StorageID" }]
   uint16 IDType;

      [Description ( "The ID type when IDType is \"Other\"." )]
   string OtherIDType;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "A UnsignedCredential represents an unsigned public key "
       "credential. Services accept the public key as authentic "
       "because of a direct trust relationship, rather than via a "
       "third-party Certificate Authority." )]
class CIM_UnsignedCredential : CIM_Credential {

      [Key, Override ( "InstanceID" )]
   string InstanceID;

      [Description ( 
          "The Identity of the Peer with whom a direct trust "
          "relationship exists. The public key may be used for "
          "security functions with the Peer." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_UnsignedCredential.PeerIdentityType" }]
   string PeerIdentity;

      [Description ( 
          "PeerIdentityType is used to describe the type of the "
          "PeerIdentity. The currently defined values are used for "
          "IKE identities." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Other", "IPV4_ADDR", "FQDN", "USER_FQDN", 
          "IPV4_ADDR_SUBNET", "IPV6_ADDR", "IPV6_ADDR_SUBNET", 
          "IPV4_ADDR_RANGE", "IPV6_ADDR_RANGE", "DER_ASN1_DN", 
          "DER_ASN1_GN", "KEY_ID" }, 
       ModelCorrespondence { "CIM_UnsignedCredential.PeerIdentity" }]
   uint16 PeerIdentityType;

      [Description ( 
          "The public key, encoded as indicated by PublicKeyEncoding."
           ), 
       OctetString, ModelCorrespondence { 
          "CIM_UnsignedCredential.OtherPublicKeyEncoding", 
          "CIM_UnsignedCredential.PublicKeyEncoding" }]
   string PublicKey[];

      [Description ( 
          "An enumeration defining the encoding in PublicKey.\n"
          "ASN.1 DER: encoded according to the Abstract Syntax "
          "Notation One (ASN.1) Distinguished Encoding Rules (DER), "
          "defined in the ITU-T X.680 series of standards.\n"
          "SSH mpint: encoded according to the mpint format defined "
          "in IETF RFC4251 for representation of multiple-precision "
          "integers in SSH and other network protocols." ), 
       ValueMap { "0", "1", "2", "3", ".." }, 
       Values { "Unknown", "Other", "ASN.1 DER", "SSH mpint", 
          "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_UnsignedCredential.PublicKey", 
          "CIM_UnsignedCredential.OtherPublicKeyEncoding" }]
   uint16 PublicKeyEncoding;

      [Description ( 
          "A string that describes the encoding of PublicKey when "
          "PublicKeyEncoding is set to 1 (\"Other\"). This property "
          "shall be set to null when PublicKeyEncoding is any value "
          "other than 1." ), 
       ModelCorrespondence { 
          "CIM_UnsignedCredential.PublicKeyEncoding", 
          "CIM_UnsignedCredential.PublicKey" }]
   string OtherPublicKeyEncoding;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnsignedPublicKey 
// ==================================================================
   [Deprecated { "CIM_UnsignedCredential" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "A CIM_UnsignedPublicKey represents an unsigned public key "
       "credential. Services accept the public key as authentic "
       "because of a direct trust relationship, rather than via a "
       "third-party Certificate Authority." )]
class CIM_UnsignedPublicKey : CIM_Credential {

      [Deprecated { "CIM_UnsignedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_PublicKeyManagementService.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_UnsignedCredential.InstanceID" }, 
       Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_PublicKeyManagementService.SystemName" )]
   string SystemName;

      [Deprecated { "CIM_UnsignedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( 
          "CIM_PublicKeyManagementService.CreationClassName" )]
   string ServiceCreationClassName;

      [Deprecated { "CIM_UnsignedCredential.InstanceID" }, 
       Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_PublicKeyManagementService.Name" )]
   string ServiceName;

      [Deprecated { "CIM_UnsignedCredential.PeerIdentity" }, 
       Key, Description ( 
          "The Identity of the Peer with whom a direct trust "
          "relationship exists. The public key may be used for "
          "security functions with the Peer." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_UnsignedPublicKey.PeerIdentityType" }]
   string PeerIdentity;

      [Deprecated { "CIM_UnsignedCredential.PeerIdentityType" }, 
       Description ( 
          "PeerIdentityType is used to describe the type of the "
          "PeerIdentity. The currently defined values are used for "
          "IKE identities." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Other", "IPV4_ADDR", "FQDN", "USER_FQDN", 
          "IPV4_ADDR_SUBNET", "IPV6_ADDR", "IPV6_ADDR_SUBNET", 
          "IPV4_ADDR_RANGE", "IPV6_ADDR_RANGE", "DER_ASN1_DN", 
          "DER_ASN1_GN", "KEY_ID" }, 
       ModelCorrespondence { "CIM_UnsignedPublicKey.PeerIdentity" }]
   uint16 PeerIdentityType;

      [Deprecated { "CIM_UnsignedCredential.PublicKey" }, 
       Description ( "The DER-encoded raw public key." ), 
       OctetString]
   uint8 PublicKey[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UserEntity 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "UserEntity is an abstract class that represents users - their "
       "names, contact data and similar information." )]
class CIM_UserEntity : CIM_OrganizationalEntity {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UsersAccess 
// ==================================================================
   [Deprecated { "CIM_Identity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "The UsersAccess object class is used to specify a \'user\' "
       "that is permitted access to resources. The ManagedElement that "
       "has access to the resources (represented in the model using "
       "the ElementAsUser association) may be a person, a service, a "
       "service access point or any collection thereof. \n"
       "\n"
       "This class is deprecated in lieu of the simpler CIM_Identity "
       "abstraction. The UsersAccess class combines credential "
       "requirements (in the form of biometric requirements) with the "
       "concepts of organizational information (via its position in "
       "the inheritance hierarchy), and identity management. These "
       "concepts need to be separated to be better understood and "
       "managed - hence, the deprecation." )]
class CIM_UsersAccess : CIM_UserEntity {

      [Deprecated { "No value" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_Identity.ElementName" }, 
       Key, Description ( 
          "The Name property defines the label by which the object is known."
           ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_Identity.InstanceID" }, 
       Key, Description ( 
          "The ElementID property uniquely specifies the "
          "ManagedElement object instance that is the user "
          "represented by the UsersAccess object instance. The "
          "ElementID is formatted similarly to a model path except "
          "that the property-value pairs are ordered in "
          "alphabetical order (US ASCII lexical order)." )]
   string ElementID;

      [Deprecated { "No value" }, 
       Description ( 
          "Biometric information used to identify a person. The "
          "property value is left null or set to \'N/A\' for "
          "non-human user or a user not using biometric information "
          "for authentication. This property is deprecated as it "
          "represents required Credential information and is more "
          "correctly modeled as a specific biometric credential." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "N/A", "Other", "Facial", "Retina", "Mark", 
          "Finger", "Voice", "DNA-RNA", "EEG" }]
   uint16 Biometric[];


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    ClassConstraint { 
       "/* The constraints below aim to efficiently */  /* represent a singular OctetString. Each of the properties*/  /* is a single encoded string, thus only the first element */  /* needs to be populated. */ inv:self.TBSCertificate->size()<=1" }, 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "CIM_X509Infrastructure describes Internet X509 Public Key "
       "Infrastructure (PKI) standard based properties used by "
       "certificates and certificate revocation lists. For more "
       "information on the Internet X509 PKI refer to the RFC 3280." )]
class CIM_X509Infrastructure : CIM_SignedCredential {

      [Description ( "Version of X.509." ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "v1", "v2", "v3", "DMTF Reserved", 
          "Vendor Specified" }, 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.1", 
          "RFC3280.IETF|Section 5.1.2.1" }]
   uint16 Version;

      [Description ( 
          "The To Be Signed (TBS) certificate is used as an input "
          "data to the signature algorithm when the certificate is "
          "signed or verified. Only the first element of the array "
          "property shall be populated." ), 
       OctetString, MappingStrings { "RFC3280.IETF|Section 4.1.2", 
          "RFC3280.IETF|Section 5.1.2" }]
   string TBSCertificate[];

      [Description ( 
          "Digital signature algorithm that verifies data integrity "
          "by creating a 128-bit message digest or fingerprint. The "
          "fingerprint is unique to the input data and contains the "
          "binary hash of the encoded X509 object such as encoded "
          "certificate or CRL." ), 
       OctetString]
   string MD5Fingerprint[];

      [Description ( 
          "Secure hashing algorithm, a cryptographic message digest "
          "algorithm used to verify data integrity by making "
          "replication of the fingerprint. The fingerprint is "
          "unique to the input data and contains the binary hash of "
          "the encoded X509 object such as encoded certificate or "
          "CRL." ), 
       OctetString]
   string SHA1Fingerprint[];

      [Description ( 
          "The algorithm used for hashing the encoded X509 "
          "certificate\'s or CRL\'s message digest represented in "
          "the corresponding element of the FingerPrint array." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "MD5", "SHA1", "DMTF Reserved", "Vendor Specified" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_X509Infrastructure.Fingerprints" }]
   uint16 FingerprintDigestAlgorithms[];

      [Description ( 
          "Fingerprints property represents the message digests of "
          "the encoded X509 certificate or CRL that uniquely "
          "identify it and can be used for the integrity "
          "verification of the X509 certificate or CRL. Fingerprint "
          "is the hash of the encoded X509 certificate or CRL that "
          "is based on the algorithm described in the corresponding "
          "element of the FingerprintDigestAlgorithms array." ), 
       OctetString, ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_X509Infrastructure.FingerprintDigestAlgorithms" }]
   string Fingerprints[];

      [Override ( "IssuerName" ), 
       Description ( 
          "Issuer represents the information about the issuer of "
          "the CRL. The Issuer property shall contain information "
          "as required by section 4.1.2.4 of RFC 3280 and shall be "
          "formatted based on RFC 4514. An example of the value of "
          "the Subject parameter could be \"CN=Marshall T. Rose, "
          "O=Dover Beach Consulting, OU=Sales, L=Santa Clara, "
          "ST=California, C=US\"." ), 
       DN, MappingStrings { "RFC3280.IETF|Section 4.1.2.4", 
          "RFC3280.IETF|Section 5.1.2.3" }]
   string IssuerName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeNotification 
// ==================================================================
   [Indication, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The J2eeNotification class specifies the properties that must "
       "be included in every event that is generated by a J2EE managed "
       "object that supports the event model. All management systems "
       "that support event notification must support all of the "
       "properties in this class." )]
class CIM_J2eeNotification : CIM_ProcessIndication {

      [Override ( "IndicationIdentifier" ), 
       Description ( 
          "The identifier for the indication, represented as the "
          "name of the source J2EE managed object that generated "
          "the event. The name MUST be constructed using the form "
          "specified in JSR77.3.1.1.1." ), 
       MappingStrings { "JSR77.JCP|JSR77.4.2.1.1 source|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeManagedObject.InstanceID" }]
   string IndicationIdentifier;

      [Override ( "SequenceNumber" ), 
       Description ( 
          "The sequence number of the indication. Identifies the "
          "position of the indication in a stream of indications. "
          "The sequence number provides a means of determining the "
          "order of sequential indications that occurred with the "
          "same timestamp (within the minimum supported unit of "
          "time)." ), 
       MappingStrings { "JSR77.JCP|JSR77.4.2.1.3 sequence|V1.0" }]
   sint64 SequenceNumber;

      [Description ( 
          "The type of the indication. The type is assigned by the "
          "source object that generated the indication. It conveys "
          "the semantic meaning of the particular indication. The "
          "standard types (starting, stopping, running, etc.) MUST "
          "be described by this property\'s enumeration. Other "
          "values MAY also be specified by entering 1 (\"Other\") "
          "in this property and placing the type\'s string value in "
          "OtherIndicationType. The latter SHOULD be interpreted as "
          "a number of dot-separated components. This allows some "
          "structure in the naming of indication types. Source "
          "objects are free to define any types that they wish to "
          "use when naming the indications that they generate. \n"
          "\n"
          "Note that this enumeration is defined by examining "
          "J2eeManagedObject\'s OperationalStatus property, by the "
          "creation or deletion of the J2eeManagedObject instance, "
          "or is the decision of the JSR77 experts or the "
          "implementation. It is not a one-to-one mapping of the "
          "OperationalStatus property in ManagedSystemElement, and "
          "is therefore a unique enumeration and specific "
          "ProcessIndication." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "j2ee.object.created", 
          "j2ee.object.deleted", "j2ee.state.starting", 
          "j2ee.state.running", "j2ee.state.stopping", 
          "j2ee.state.stopped", "j2ee.state.failed" }, 
       MappingStrings { "JSR77.JCP|JSR77.4.2.1.4 type|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeNotification.OtherIndicationType" }]
   uint16 IndicationType;

      [Description ( 
          "The type of the indication when a non-standard event is "
          "generated by the source object. This value MUST be "
          "specified when IndicationType is set to 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_J2eeNotification.IndicationType" }]
   string OtherIndicationType;

      [Description ( 
          "An informational message about the indication." )]
   string Message;

      [Description ( 
          "Optional data that the notication broadcaster wishes to "
          "communicate to listeners. The content of the data is "
          "user specific. The UserData property may be null." ), 
       OctetString]
   string UserData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeStatistic 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeStatistic class is a base class that defines the "
       "properties that are common to all J2EE statistics. The JSR77 "
       "specification defines a set of statistical types, then it "
       "defines each J2EE statistic in terms of these types. Since CIM "
       "does not support multiple inheritance or embedded objects, the "
       "count, time, range, bounded range, and boundary statistics "
       "defined have been broken out into individual properties for "
       "each statistic that is defined in the JSR77 specification. \n"
       "Many of the properties defined for J2EE statistics are "
       "inherited from the CIM_StatisticalData class. Some of the "
       "inherited properties are CIM dates, which are not consistent "
       "with the definitions in the JSR77 specification. In order to "
       "minimize implementation differences, methods are defined to "
       "provide the dates as specified. Some of the subclasses of "
       "CIM_J2EEStatistic do not add any new properties. However, "
       "these subclasses were chosen over adding a type property to "
       "the superclass because the vendor extensions were likely to "
       "result in classes with characteristics distinct enough to "
       "warrant the existence of subclasses." )]
class CIM_J2eeStatistic : CIM_StatisticalData {


      [Description ( 
          "The time the first measurement was taken represented as "
          "a long, whose value is the number of milliseconds since "
          "January 1, 1970,00:00:00. This method converts the "
          "StartStatisticTime property to the format defined in the "
          "JSR77 specification. The related property "
          "CIM_StatisticalData.StartStatisticTime represents the "
          "same information as a CIMDatetime entity." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.4.1.4 getStartTime|V1.0" }, 
       ModelCorrespondence { "CIM_StatisticalData.StartStatisticTime" }]
   uint64 GetStartTime(
);

      [Description ( 
          "The time the most recent measurement was taken "
          "represented as a long, whose value is the number of "
          "milliseconds since January 1, 1970,00:00:00. This method "
          "converts the StatisticTime property to the format "
          "defined in the JSR77 specification. The related property "
          "CIM_StatisticalData.StatisticTime represents the same "
          "information as a CIMDatatime entity." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.4.1.5 getLastSampleTime|V1.0" }, 
       ModelCorrespondence { "CIM_StatisticalData.StatisticTime" }]
   uint64 GetLastSampleTime(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeURLStats 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeURLStats class defines the performance statistics "
       "that are provided by a URL resource. There are no standard "
       "required URL statistics defined by the JSR77 specification. "
       "This class may be extended to provide vendor specific URL "
       "performance statistics." )]
class CIM_J2eeURLStats : CIM_J2eeStatistic {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::AppRuntime" ), 
    Description ( 
       "This class represents statistical data and metrics that "
       "characterize the application as a whole. It exists only once "
       "per application system instance and provides primarily raw "
       "data for the monitoring of service levels. Therefore, the "
       "metrics presented are only a summary or overview of the "
       "application system behavior at a certain point of time. "
       "Instances are only available if the concerned application is "
       "running. Therefore, an instance of ApplicationSystem MUST "
       "exist when the instance of this class is created." )]
class CIM_StatisticalRuntimeOverview : CIM_StatisticalData {

      [Description ( 
          "The point in time (date and time) when the most recent "
          "inbound activity was observed for the application. A "
          "value of all zeros indicates that no inbound activity "
          "has taken place since the application was started." )]
   datetime LastActivity;

      [Description ( 
          "The number of requests currently being served. This is "
          "not the count of open connections! Very often it "
          "reflects the number of current user requests. Note that "
          "the semantics of a request are general enough to "
          "characterize the entire application system." ), 
       Counter]
   uint32 NumberOfActiveRequests;

      [Description ( 
          "The number of active requestors in the application "
          "system. It may differ from the number of active requests "
          "(greater if a requestor has issued multiple requests, "
          "smaller if some of the requestors have no request "
          "running at the considered point in time). Very often it "
          "reflects the number of user logged on to the application "
          "system or the number of sessions being served by the "
          "system. \n"
          "Note that the semantics of a requestor are general "
          "enough to characterize the entire application system." ), 
       Counter]
   uint32 NumberOfActiveRequestors;

      [Description ( 
          "The average response time is the mean of a number of "
          "requests captured between StatisticTime and a close "
          "point in time in the past. This interval or duration, "
          "that the average depends on, is defined by the "
          "underlying implementation such that it still has a "
          "reasonable proximity to one point in time. The term "
          "average is not focused on averaging a number of requests "
          "but averaging a period of time. Therefore, the average "
          "does not relate to more than a couple of minutes and, "
          "consequently, AverageResponseTime has the notion of the "
          "response time at the point in time of StatisticTime. If "
          "the interval is too great, AverageResponseTime becomes "
          "meaningless for monitoring. If no response time can be "
          "determined, the value is 0." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint32 AverageResponseTime;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "Capabilities is an abstract class whose subclasses describe "
       "abilities and/or potential for use. For example, one may "
       "describe the maximum number of VLANs that can be supported on "
       "a system using a subclass of Capabilities. Capabilities are "
       "tied to the elements which they describe using the "
       "ElementCapabilities association. Note that the cardinality of "
       "the ManagedElement reference is Min(1), Max(1). This "
       "cardinality mandates the instantiation of the "
       "ElementCapabilities association for the referenced instance of "
       "Capabilities. ElementCapabilities describes the existence "
       "requirements and context for the referenced instance of "
       "ManagedElement. Specifically, the ManagedElement MUST exist "
       "and provides the context for the Capabilities. Note that "
       "Capabilities do not indicate what IS configured or "
       "operational, but what CAN or CANNOT exist, be defined or be "
       "used. Note that it is possible to describe both supported and "
       "excluded abilities and functions (both capabilities and "
       "limitations) using this class." )]
class CIM_Capabilities : CIM_ManagedElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user friendly name for this instance of "
          "Capabilities. In addition, the user friendly name can be "
          "used as a index property for a search of query. (Note: "
          "Name does not have to be unique within a namespace.)" )]
   string ElementName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Collection 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "Collection is an abstract class that provides a common "
       "superclass for data elements that represent collections of "
       "ManagedElements and its subclasses." )]
class CIM_Collection : CIM_ManagedElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00707.002" type ="add">CPUBS corrections to CoreCollection.mof</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectionOfMSEs 
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "The CollectionOfMSEs object allows the grouping of Managed "
       "SystemElements for various identification purposes and to "
       "reduce the complexity of associating Settings and "
       "Configurations. It is abstract to require further definition "
       "and semantic refinement in subclasses. The CollectionOfMSEs "
       "object does not carry any state or status information, but "
       "represents only a grouping or \'bag\' of Elements. For this "
       "reason, it is incorrect to subclass groups that have state or "
       "status from CollectionOfMSEs. An example is CIM_Redundancy "
       "Group (which is subclassed from LogicalElement). \n"
       "Collections typically aggregate similar (\'like\') objects,but "
       "they are not required to do so. Collections simply identify "
       "\'bags\' and might represent an optimization. This purpose is "
       "especially true with respect to their association to Settings "
       "and Configurations. Without Collections, you would need to "
       "define individual ElementSetting and ElementConfiguration "
       "associations, to tie Settings and Configuration objects to "
       "individual ManagedSystemElements. There might be duplication "
       "when assigning the same Setting to multiple objects. In "
       "addition, using the Collection object allows the determination "
       "that the Setting and Configuration associations are indeed the "
       "same for the Collection\'s members. This information would "
       "otherwise be obtained by defining the Collection in a "
       "proprietary manner, and then querying the ElementSetting and "
       "ElementConfiguration associations to determine if the "
       "Collection set is completely covered." )]
class CIM_CollectionOfMSEs : CIM_Collection {

      [Description ( 
          "The identification of the Collection object. When "
          "subclassed, the CollectionID property can be overridden "
          "to be a Key property." ), 
       MaxLen ( 256 )]
   string CollectionID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CompatibleProduct 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "CIM_CompatibleProduct is an association between Products that "
       "can indicate a wide variety of information. For example, it "
       "can indicate that the two referenced Products interoperate, "
       "that they can be installed together, that one can be the "
       "physical container for the other, etc. The string property, "
       "CompatibilityDescription, defines how the Products "
       "interoperate or are compatible, any limitations regarding "
       "interoperability or installation, ..." )]
class CIM_CompatibleProduct {

      [Key, Description ( 
          "The Product for which compatible offerings are defined." )]
   CIM_Product REF Product;

      [Key, Description ( "The compatible Product." )]
   CIM_Product REF CompatibleProduct;

      [Description ( 
          "CompatibilityDescription is a free-form string defining "
          "how the two referenced Products interoperate or are "
          "compatible, any limitations to compatibility, etc." )]
   string CompatibilityDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Component 
// ==================================================================
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Component is a generic association used to establish \'part "
       "of\' relationships between Managed Elements. For example, it "
       "could be used to define the components or parts of a System." )]
class CIM_Component {

      [Key, Aggregate, Description ( 
          "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Key, Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "A concrete version of Collection. This class represents a "
       "generic and instantiable collection, such as a group of "
       "ComputerSystems (for example, a pool of hosts available for "
       "executing jobs). It is defined as a concrete subclass of the "
       "abstract CIM_Collection class, to be used in place of many "
       "specific subclasses that add no semantics. Note that when "
       "defining additional semantics for Collection, this class must "
       "not be subclassed. Specific semantics continue to be defined "
       "as subclasses of the abstract CIM_Collection. "
       "ConcreteCollection is limited in its use as a concrete form of "
       "a general collection or bag. It was deemed more prudent to "
       "create this concrete subclass than to change Collection from "
       "an abstract to a concrete class." )]
class CIM_ConcreteCollection : CIM_Collection {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> must include a unique name. It "
          "can be a copyrighted, trademarked, or otherwise unique "
          "name that is owned by the business entity that is "
          "creating or defining the InstanceID. Or, it could be a "
          "registered ID that is assigned to the business entity by "
          "a recognized global authority.(This requirement is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> must not contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "must appear between <OrgID> and <LocalID>. \n"
          "\n"
          "<LocalID> is chosen by the business entity and should "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity must ensure "
          "that the resulting InstanceID is not re-used as any of "
          "the InstanceIDs produced by this or other providers for "
          "the NameSpace of this instance." )]
   string InstanceID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConcreteComponent
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_ConcreteComponent is a generic association used to "
       "establish \'part of\' relationships between ManagedElements. "
       "It is defined as a concrete subclass of the abstract "
       "CIM_Component class, to be used in place of many specific "
       "subclasses of Component that add no semantics, that is "
       "subclasses that do not clarify the type of composition, update "
       "cardinalities, or add or remove qualifiers. Note that when you "
       "define additional semantics for Component, this class must not "
       "be subclassed. Specific semantics continue to be defined as "
       "subclasses of the abstract CIM_Component. ConcreteComponent is "
       "limited in its use as a concrete form of a general "
       "composition. \n"
       "\n"
       "It was deemed more prudent to create this concrete subclass "
       "than to change Component from an abstract to a concrete class. "
       "Industry usage and impact could not be anticipated." )]
class CIM_ConcreteComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent element in the association." )]
   CIM_ManagedElement REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The child element in the association." )]
   CIM_ManagedElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Configuration
// ==================================================================
   [Deprecated { "CIM_SettingData", "CIM_Setting" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The use of CIM_Configuration is deprecated in favor of "
       "aggregating instances of Setting or SettingData into "
       "\"higher-level\" Settings or SettingData objects using the "
       "ConcreteComponent association. This association simplifies the "
       "use of Settings or SettingData. With Configurations serving as "
       "aggregations of Settings (as defined by the Configuration "
       "Component relationship), separate associations were needed for "
       "the aggregation and to tie an element to either its "
       "Configurations or Settings or SettingData. These separate "
       "associations introduced unnecessary complexity and redundancy "
       "into the model. \n"
       "Deprecated description: The Configuration object allows the "
       "grouping of sets of parameters (defined in Setting objects) "
       "and dependencies for one or more ManagedSystemElements. It "
       "represents a certain behavior or a desired functional state "
       "for the ManagedSystemElements. The desired functional state of "
       "the Configuration is typically driven by external requirements "
       "such as time or location. For example, to connect to a Mail "
       "System from home, a dependency on a modem exists, but a "
       "dependency on a network adapter exists at work. Settings for "
       "the pertinent LogicalDevices (in this example, POTSModem and "
       "NetworkAdapter) can be defined and aggregated by the "
       "Configuration. Therefore, two \"Connect to Mail\" "
       "Configurations can be defined by grouping the relevant "
       "dependencies and Setting objects." )]
class CIM_Configuration : CIM_ManagedElement {

      [Deprecated { "CIM_SettingData.InstanceID", 
          "CIM_Setting.SettingID" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The label by which the Configuration object "
          "is known." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConfigurationComponent
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteComponent" }, 
    Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Configuration class is being deprecated in lieu of "
       "using a ConcreteComponent relationship to indicate a hierarchy "
       "of instances of Setting or SettingData. Deprecated "
       "description: ConfigurationComponent aggregates \"lower-level\" "
       "Configuration objects into a \"high-level\" Configuration. "
       "This association enables the assembly of complex "
       "configurations by grouping together simpler ones. For example, "
       "a logon policy for the United States could consist of two "
       "Configuration groups, one for the East Coast and one for the "
       "West Coast. Each of these groups could in turn consist of "
       "multiple Configurations to handle different aspects of the "
       "logon process." )]
class CIM_ConfigurationComponent {

      [Deprecated { "CIM_ConcreteComponent.GroupComponent" }, 
       Key, Aggregate, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Configuration that aggregates "
          "additional Configurations." )]
   CIM_Configuration REF ConfigGroup;

      [Deprecated { "CIM_ConcreteComponent.PartComponent" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: A Configuration that is part of a "
          "\"higher-level\" Configuration." )]
   CIM_Configuration REF ConfigComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Dependency
// ==================================================================
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_Dependency is a generic association used to establish "
       "dependency relationships between ManagedElements." )]
class CIM_Dependency {

      [Key, Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Key, Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DependencyContext
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Configuration class is being deprecated in lieu of "
       "using a ConcreteComponent relationship to indicate a hierarchy "
       "of Setting or SettingData instances. Therefore, this "
       "association is also deprecated but it is deprecated to \"No "
       "value\" because there are no equivalent relationships "
       "currently defined for the Setting or SettingData classes. This "
       "association is an anomaly because it defines what cannot be "
       "expressed for the components of the Configuration. Also, it "
       "singles out the Dependency association as opposed to allowing "
       "any relationships to be defined as \"settings\". Its use in "
       "the industry is discouraged. \n"
       "Deprecated description: This relationship associates a "
       "Dependency with one or more Configuration objects. For "
       "example, dependencies for a ComputerSystem could change based "
       "on the site or network to which the System is attached." )]
class CIM_DependencyContext {

      [Deprecated { "No value" }, 
       Key, Aggregate, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Configuration object that aggregates "
          "the Dependency." )]
   CIM_Configuration REF Context;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: An aggregated Dependency." )]
   CIM_Dependency REF Dependency;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceStatisticalInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "Statistical information associated with a LogicalDevice or one "
       "of its subclasses." )]
class CIM_DeviceStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalDevice.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalDevice.SystemName" )]
   string SystemName;

      [Key, Description ( "The scoping Device\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalDevice.CreationClassName" )]
   string DeviceCreationClassName;

      [Key, Description ( "The scoping Device\'s ID." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_LogicalDevice.DeviceID" )]
   string DeviceID;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property, inherited from "
          "StatisticalInformation, serves as part of the object "
          "key." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.24.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "ElementCapabilities represents the association between "
       "ManagedElements and their Capabilities. Note that the "
       "cardinality of the ManagedElement reference is Min(1). This "
       "cardinality mandates the instantiation of the "
       "ElementCapabilities association for the referenced instance of "
       "Capabilities. ElementCapabilities describes the existence "
       "requirements and context for the referenced instance of "
       "ManagedElement. Specifically, the ManagedElement MUST exist "
       "and provides the context for the Capabilities." )]
class CIM_ElementCapabilities {

      [Key, Min ( 1 ), 
       Description ( "The managed element." )]
   CIM_ManagedElement REF ManagedElement;

      [Key, Description ( 
          "The Capabilities object associated with the element." )]
   CIM_Capabilities REF Capabilities;

      [Description ( 
          "Characteristics provides descriptive information about "
          "the Capabilities. when the value 2 \"Default\" is "
          "specified, the associated Capabilities shall represent "
          "the default capabilities of the associated Managed "
          "Element \n"
          "when the value 2 \"Default\" is not specified, the "
          "Capabilities instance may represent the default "
          "capabilities of the Managed Element\n"
          "When the value 3 \"Current\" is specified, the "
          "associated Capabilities shall represent the current "
          "capabilities of the associated Managed Element\n"
          "When the value 3 \"Current\" is not specified, the "
          "Capabilities instance may represent the current "
          "capabilities of the Managed Element." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "Default", "Current", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 Characteristics[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementConfiguration
// ==================================================================
   [Association, Deprecated { "CIM_ElementSettingData", 
       "CIM_ElementSetting" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Configuration class is being deprecated in lieu of "
       "using a ConcreteComponent relationship to indicate a hierarchy "
       "of Setting or SettingData instances. This association allows "
       "the reuse of the element to Setting or SettingData "
       "associations instead of defining a peer association "
       "specifically for Configurations. \n"
       "Deprecated description: This association relates a "
       "Configuration object to one or more ManagedSystemElements. The "
       "Configuration object represents a certain behavior or a "
       "desired functional state for the associated "
       "ManagedSystemElements." )]
class CIM_ElementConfiguration {

      [Deprecated { "CIM_ElementSettingData.ManagedElement", 
          "CIM_ElementSetting.Element" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The ManagedSystemElement." )]
   CIM_ManagedSystemElement REF Element;

      [Deprecated { "CIM_ElementSettingData.SettingData", 
          "CIM_ElementSetting.Setting" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Configuration object that groups the "
          "Settings and dependencies that are associated with the "
          "ManagedSystemElement." )]
   CIM_Configuration REF Configuration;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "ElementSettingData represents the association between "
       "ManagedElements and applicable setting data. This association "
       "also describes whether this is a default or current setting." )]
class CIM_ElementSettingData {

      [Key, Description ( "The managed element." )]
   CIM_ManagedElement REF ManagedElement;

      [Key, Description ( 
          "The SettingData object associated with the element." )]
   CIM_SettingData REF SettingData;

      [Description ( 
          "An enumerated integer indicating that the referenced "
          "setting is a default setting for the element, or that "
          "this information is unknown." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Is Default", "Is Not Default" }]
   uint16 IsDefault;

      [Description ( 
          "An enumerated integer indicating that the referenced "
          "setting is currently being used in the operation of the "
          "element, or that this information is unknown." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Is Current", "Is Not Current" }]
   uint16 IsCurrent;

      [Description ( 
          "An enumerated integer indicating whether or not the "
          "referenced setting is the next setting to be applied. "
          "For example, the application could take place on a "
          "re-initialization, reset, reconfiguration request. This "
          "could be a permanent setting, or a setting used only one "
          "time, as indicated by the flag. If it is a permanent "
          "setting then the setting is applied every time the "
          "managed element reinitializes, until this flag is "
          "manually reset. However, if it is single use, then the "
          "flag is automatically cleared after the settings are "
          "applied. Also note that if this flag is specified (i.e. "
          "set to value other than \"Unknown\"), then this takes "
          "precedence over any SettingData that may have been "
          "specified as Default. For example: If the managed "
          "element is a computer system, and the value of this flag "
          "is \"Is Next\", then the setting will be effective next "
          "time the system resets. And, unless this flag is "
          "changed, it will persist for subsequent system resets. "
          "However, if this flag is set to \"Is Next For Single "
          "Use\", then this setting will only be used once and the "
          "flag would be reset after that to \"Is Not Next\". So, "
          "in the above example, if the system reboots in a quick "
          "succession, the setting will not be used at the second "
          "reboot." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Is Next", "Is Not Next", 
          "Is Next For Single Use" }]
   uint16 IsNext;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementStatisticalData 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_ElementStatisticalData is an association that relates a "
       "ManagedElement to its StatisticalData. Note that the "
       "cardinality of the ManagedElement reference is Min(1), Max(1). "
       "This cardinality mandates the instantiation of the "
       "ElementStatisticalData association for the referenced instance "
       "of CIM_StatisticalData. ElementStatisticalData describes the "
       "existence requirements and context for the "
       "CIM_StatisticalData, relative to a specific ManagedElement." )]
class CIM_ElementStatisticalData {

      [Key, Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The ManagedElement for which statistical or metric data "
          "is defined." )]
   CIM_ManagedElement REF ManagedElement;

      [Key, Description ( "The statistic information/object." )]
   CIM_StatisticalData REF Stats;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "EnabledLogicalElementCapabilities describes the capabilities "
       "supported for changing the state of the associated "
       "EnabledLogicalElement." )]
class CIM_EnabledLogicalElementCapabilities : CIM_Capabilities {

      [Description ( 
          "Boolean indicating whether the ElementName can be modified."
           ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|EditName" }, 
       ModelCorrespondence { "CIM_ManagedElement.ElementName" }]
   boolean ElementNameEditSupported;

      [Description ( "Maximum supported ElementName length." ), 
       MaxValue ( 256 ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|MaxNameChars" }, 
       ModelCorrespondence { 
          "CIM_FCSwitchCapabilities.ElementNameEditSupported", 
          "CIM_EnabledLogicalElementCapabilities.ElementNameMask" }]
   uint16 MaxElementNameLen;

      [Description ( 
          "RequestedStatesSupported indicates the possible states "
          "that can be requested when using the method "
          "RequestStateChange on the EnabledLogicalElement." ), 
       ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", "11" }, 
       Values { "Enabled", "Disabled", "Shut Down", "Offline", 
          "Test", "Defer", "Quiesce", "Reboot", "Reset" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange" }]
   uint16 RequestedStatesSupported[];

      [Description ( 
          "This string expresses the restrictions on "
          "ElementName.The mask is expressed as a regular "
          "expression.See DMTF standard ABNF with the Management "
          "Profile Specification Usage Guide, appendix C for the "
          "regular expression syntax permitted. \n"
          "Since the ElementNameMask can describe the maximum "
          "length of the ElementName,any length defined in the "
          "regexp is in addition to the restriction defined in "
          "MaxElementNameLen (causing the smaller value to be the "
          "maximum length) The ElementName value satisfies the "
          "restriction, if and only if it matches the regular "
          "expression" ), 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElementCapabilities.MaxElementNameLen" }]
   string ElementNameMask;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FRU 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "The CIM_FRU class is a vendor-defined collection of Products "
       "and/or PhysicalElements that is associated with a Product for "
       "the purpose of supporting, maintaining or upgrading that "
       "Product at the customer\'s location. FRU is an acronym for "
       "\'field replaceable unit\'." )]
class CIM_FRU : CIM_ManagedElement {

      [Key, Description ( "FRU ordering information." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|FRU|002.6" }]
   string FRUNumber;

      [Key, Description ( 
          "FRU identification such as a serial number on software "
          "or a die number on a hardware chip." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|FRU|002.7" }]
   string IdentifyingNumber;

      [Key, Description ( "The name of the FRU\'s supplier." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|FRU|002.4" }]
   string Vendor;

      [Override ( "Description" ), 
       Description ( "A textual description of the FRU." ), 
       MappingStrings { "MIF.DMTF|FRU|002.3" }]
   string Description;

      [Description ( "FRU name." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( "The FRU\'s revision level." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|FRU|002.8" }]
   string RevisionLevel;

      [Description ( 
          "Indicates whether the FRU is customer replaceable." )]
   boolean CustomerReplaceable;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FRUIncludesProduct
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteComponent" }, 
    Aggregation, Composition, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "Indicates that a FRU may be composed of other Product(s). "
       "Indicates that a FRU may be composed of other Product(s). The "
       "use of this association has been deprecated since the FRU "
       "class itself has been deprecated. The composition of "
       "ReplacementFRUs is described by the ConcreteComponent "
       "association." )]
class CIM_FRUIncludesProduct {

      [Deprecated { "CIM_ConcreteComponent.GroupComponent" }, 
       Key, Aggregate, Max ( 1 ), 
       Description ( "The FRU." )]
   CIM_FRU REF FRU;

      [Deprecated { "CIM_ConcreteComponent.PartComponent" }, 
       Key, Description ( "The Product which is a part of the FRU." )]
   CIM_Product REF Component;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FRUPhysicalElements 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( "Indicates the PhysicalElements that make up a FRU." )]
class CIM_FRUPhysicalElements {

      [Key, Aggregate, Max ( 1 ), 
       Description ( "The FRU." )]
   CIM_FRU REF FRU;

      [Key, Description ( 
          "The PhysicalElement which is a part of the FRU." )]
   CIM_PhysicalElement REF Component;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedDependency 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "HostedDependency defines a ManagedElement in the context of "
       "another ManagedElement in which it resides." )]
class CIM_HostedDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The scoping ManagedElement." )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The hosted ManagedElement." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Core::LaunchInContext" ), 
    Description ( 
       "This class exposes the capabilities of the Launch in Context service."
        )]
class CIM_LaunchInContextCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "This property asserts the maximum accepted size of the "
          "RestrictedToElement array parameter used in the "
          "CIM_LaunchInContextService methods: CreateLaunchPoint, "
          "RemoveLaunchPoint, and AssertLaunchPoint.\n"
          "A zero indicates no defined limit." )]
   uint16 MaxRestrictionListSize = 0;

      [Description ( 
          "This property asserts the maximum number of "
          "CIM_LaunchInContextSAP instances that may be "
          "instantiated at one time within the modeled implementation.\n"
          "A zero indicates no defined limit." )]
   uint16 MaxLaunchPoints = 0;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR777.000" type = "mod"> Deprecated
// class.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LocalizationCapabilities
// ==================================================================
   [Deprecated { "No Value" }, 
    Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "This class is being deprecated to avoid conflicts with "
       "localization implementations using CIM/XML over HTTP protocol, "
       "the preferred mechanism. \n"
       "Describes the input and output localization capabilities of "
       "the entity associated via ElementCapabilities." )]
class CIM_LocalizationCapabilities : CIM_Capabilities {

      [Deprecated { "No Value" }, 
       Description ( 
          "This property, along with locale properties in (for "
          "example) a SettingData class, specifies the locale for "
          "data consumed by a ManagedElement. \n"
          "A locale indicates a particular geographical, political, "
          "or cultural region. The SupportedInputLocales property "
          "is an array of strings whose entries specify one or more "
          "languages that can be used in the formulation of "
          "information input by a client. It may be defined by the "
          "ManagedElement or client as an input parameter to a "
          "method, as a Setting or SettingData property, or via "
          "other mechanisms. \n"
          "\n"
          "The SupportedInputLocales property publishes an "
          "element\'s support of various locales for input data. "
          "The first array entry MUST define the default locale "
          "(the natural language associated with the "
          "ManagedElement). If the SupportedInputLocales property "
          "is empty, it is assumed that the default locale is en_US "
          "(English). \n"
          "Each array entry consists of three sub-strings, "
          "separated by underscores: \n"
          "- The first sub-string is the language code, as "
          "specified in ISO639. \n"
          "- The second sub-string is the country code, as "
          "specified in ISO3166. \n"
          "- The third sub-string is a variant, which is vendor "
          "specific. \n"
          "For example, US English appears as: \"en_US_WIN\", where "
          "the \"WIN\" variant would specify a Windows "
          "browser-specific collation (if one exists). Since the "
          "variant is not standardized, it is not commonly used and "
          "is generally limited to easily recognizable values "
          "(\"WIN\", \"UNIX\", \"EURO\", etc.) used in standard "
          "environments. \n"
          "The language and country codes are required; the variant "
          "may be empty." )]
   string SupportedInputLocales[];

      [Deprecated { "No Value" }, 
       Description ( 
          "This property, along with locale properties in (for "
          "example) a SettingData class, specifies the locale for "
          "data produced by a ManagedElement. \n"
          "A locale indicates a particular geographical, political, "
          "or cultural region. The SupportedOutputLocales property "
          "is an array of strings whose entries specify one or more "
          "languages that can be used in the formulation of "
          "information requested by and delivered to a client. It "
          "may be defined by the ManagedElement or client as an "
          "input parameter to a method, as a Setting or SettingData "
          "property, or via other mechanisms. Note that more than "
          "one locale may be specified in this array and later "
          "selected for output. If multiple locales are selected, "
          "information MUST be returned in each language specified, "
          "and indicated as supported by this Capabilities "
          "instance. \n"
          "\n"
          "The SupportedOutputLocales property publishes an "
          "element\'s support of various locales for output data. "
          "The first array entry MUST define the default locale "
          "(the natural language associated with the "
          "ManagedElement). If the SupportedOutput Locales property "
          "is empty, it is assumed that the default locale is en_US "
          "(English). \n"
          "Each array entry consists of three sub-strings, "
          "separated by underscores: \n"
          "- The first sub-string is the language code, as "
          "specified in ISO639. \n"
          "- The second sub-string is the country code, as "
          "specified in ISO3166. \n"
          "- The third sub-string is a variant, which is vendor "
          "specific. \n"
          "For example, US English appears as: \"en_US_WIN\", where "
          "the \"WIN\" variant would specify a Windows "
          "browser-specific collation (if one exists). Since the "
          "variant is not standardized, it is not commonly used and "
          "is generally limited to easily recognizable values "
          "(\"WIN\", \"UNIX\", \"EURO\", etc.) used in standard "
          "environments. \n"
          "The language and country codes are required; the variant "
          "may be empty." )]
   string SupportedOutputLocales[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00714.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Location
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Physical" ), 
    Description ( 
       "The Location class specifies the position and address of a "
       "PhysicalElement." )]
class CIM_Location : CIM_ManagedElement {

      [Key, Description ( 
          "Name is a free-form string defining a label for the "
          "Location. It is a part of the key for the object." ), 
       MaxLen ( 256 )]
   string Name;

      [Key, Description ( 
          "Position is a free-form string that indicates the "
          "placement of a PhysicalElement. It can specify slot "
          "information on a HostingBoard, mounting site in a "
          "Cabinet, or latitude and longitude information, for "
          "example, from a GPS. It is part of the key of the "
          "Location object." ), 
       MaxLen ( 256 )]
   string PhysicalPosition;

      [Description ( 
          "Address is a free-form string indicating a street, "
          "building, or other type of address for the location of "
          "the PhysicalElement." ), 
       MaxLen ( 1024 )]
   string Address;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalElement 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_LogicalElement is a base class for all the components of a "
       "System that represent abstract system components, such as "
       "Files, Processes, or LogicalDevices." )]
class CIM_LogicalElement : CIM_ManagedSystemElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalIdentity
// ==================================================================
   [Association, Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_LogicalIdentity is an abstract and generic association, "
       "indicating that two ManagedElements represent different "
       "aspects of the same underlying entity. This relationship "
       "conveys what could be defined with multiple inheritance. In "
       "most scenarios, the Identity relationship is determined by the "
       "equivalence of Keys or some other identifying properties of "
       "the related Elements. \n"
       "\n"
       "This relationship is reasonable in several scenarios. For "
       "example, it could be used to represent that a LogicalDevice is "
       "both a \'bus\' entity and a \'functional\' entity. A Device "
       "could be both a USB (bus) and a Keyboard (functional) entity." )]
class CIM_LogicalIdentity {

      [Key, Description ( 
          "SystemElement represents one aspect of the Managed "
          "Element. The use of \'System\' in the role name does not "
          "limit the scope of the association. The role name was "
          "defined in the original association, where the "
          "referenced elements were limited to LogicalElements. "
          "Since that time, it has been found valuable to "
          "instantiate these types of relationships for "
          "ManagedElements, such as Collections. So, the referenced "
          "elements of the association were redefined to be "
          "ManagedElements. Unfortunately, the role name could not "
          "be changed without deprecating the entire association. "
          "This was not deemed necessary just to correct the role "
          "name." )]
   CIM_ManagedElement REF SystemElement;

      [Key, Description ( 
          "SameElement represents an alternate aspect of the ManagedElement."
           )]
   CIM_ManagedElement REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MemberOfCollection 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_MemberOfCollection is an aggregation used to establish "
       "membership of ManagedElements in a Collection." )]
class CIM_MemberOfCollection {

      [Key, Aggregate, Description ( 
          "The Collection that aggregates members." )]
   CIM_Collection REF Collection;

      [Key, Description ( "The aggregated member of the Collection." )]
   CIM_ManagedElement REF Member;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Core::OpaqueManagementData" ), 
    Description ( 
       "CIM_OpaqueManagementDataCapabilities describes the "
       "capabilities of CIM_OpaqueManagementDataService." )]
class CIM_OpaqueManagementDataCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "The maximum number of bytes of opaque management data "
          "storage managed by the associated "
          "CIM_OpaqueManagementDataService, and hence the maximum "
          "value of the AvailableStorage property in the associated "
          "CIM_OpaqueManagementDataService." ), 
       ModelCorrespondence { 
          "CIM_OpaqueManagementDataService.AvailableStorage" }, 
       PUnit ( "byte" )]
   uint64 MaxAvailableStorage;

      [Description ( 
          "MaxReadLength indicates the maximum value that the "
          "service supports in the Length parameter of the "
          "ReadOpaqueManagementData method. Larger extents can be "
          "read by successively invoking ReadOpaqueManagementData "
          "on chunks of the data and reassembling them in the "
          "management client. When this is done, the "
          "LockOpaqueManagementData method should be used to "
          "prevent modification of the data by other clients "
          "between successive reads." ), 
       PUnit ( "byte" )]
   uint64 MaxReadLength;

      [Description ( 
          "MaxWriteLength indicates the maximum value that the "
          "service supports in the Length parameter of the "
          "WriteOpaqueManagementData method. Larger extents can be "
          "written by successively invoking "
          "WriteOpaqueManagementData on chunks of the data and "
          "reassembling them in the management client. When this is "
          "done, the LockOpaqueManagementData method should be used "
          "to prevent modification of the data by other clients "
          "between successive writes." ), 
       PUnit ( "byte" )]
   uint64 MaxWriteLength;

      [Description ( 
          "This property lists the URI schemes supported by "
          "OpaqueManagementDataService.ExportOpaqueManagementDataToURI()."
           ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "data", "file", "ftp", "http", "https", "nfs", 
          "tftp", "DMTF Reserved", "Vendor Specific" }]
   uint16 SupportedExportURISchemes[];

      [Description ( 
          "This property lists the URI schemes supported by "
          "OpaqueManagementDataService.ImportOpaqueManagementDataFromURI()."
           ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "data", "file", "ftp", "http", "https", "nfs", 
          "tftp", "DMTF Reserved", "Vendor Specific" }]
   uint16 SupportedImportURISchemes[];

      [Description ( 
          "This property advertises the methods that are supported "
          "by the service." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "..", 
          "0x80.." }, 
       Values { "Other", "Create", "Read", "ExportToURI", "Write", 
          "ImportFromURI", "Lock", "ReassignOwnership", 
          "AssignAccess", "DMTF Reserved", "Vendor Specific" }]
   uint16 SupportedMethods[];

      [Description ( 
          "TruncationSupported indicates whether the associated "
          "CIM_OpaqueManagementDataService allows a client to "
          "truncate the data in a CIM_OpaqueManagementData instance "
          "by reducing the value of its DataSize property.\n"
          "If TruncationSupported = true, then the Service shall "
          "support reduction of the value of CIM_OpaqueManagementData.DataSize\n"
          ".If TruncationSupported = false or is null, then the "
          "Service shall not support reduction of the value of "
          "CIM_OpaqueManagementData.DataSize" )]
   boolean TruncationSupported = false;

      [Description ( 
          "MaxInstancesSupported shall indicate the maximum number "
          "of opaque management data instances that may exist "
          "within the scope of the CIM_OpaqueManagementDataService "
          "and managed by the associated instance of the "
          "CIM_OpaqueManagementDataService. A value of zero shall "
          "indicate that the maximum number of instances is unknown "
          "or that the maximum number of instances is not enforced." )]
   uint16 MaxInstancesSupported = 0;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_OrderedComponent is a generic association used to "
       "establish \'part of\' relationships between ManagedElements. "
       "It arranges the PartComponents in a specific assigned order. "
       "The semantics of the order depends on the context and use by "
       "the referencing classes. For example, if this association is "
       "used to arrange settings in a hierarchical order, then this "
       "specifies the sequence in which the settings are applied." )]
class CIM_OrderedComponent : CIM_Component {

      [Description ( 
          "AssignedSequence is an unsigned integer \'n\' that "
          "indicates the relative order of ManagedElement "
          "instances. When \'n\' is a positive integer, it "
          "indicates a place in the sequence of members, with "
          "smaller integers indicating earlier positions in the "
          "sequence. The special value \'0\' indicates \'don\'t "
          "care\'. If two or more members have the same non-zero "
          "sequence number, then the ordering between those members "
          "is irrelevant, but they must all be ordered at the "
          "appropriate place in the overall sequence. \n"
          "\n"
          "A series of examples will make ordering of members "
          "clearer: \n"
          "If all members have the same sequence number, \n"
          "regardless of whether it is \'0\' or non-zero, any \n"
          "order is acceptable. \n"
          "o The values: \n"
          "1:MEMBER A \n"
          "2:MEMBER B \n"
          "1:MEMBER C \n"
          "3:MEMBER D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "since A and C can be ordered in either sequence, but \n"
          "only at the \'1\' position. \n"
          "\n"
          "Note that the non-zero sequence numbers need not start "
          "with \'1\', and they need not be consecutive. All that "
          "matters is their relative magnitude." )]
   uint64 AssignedSequence;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_OrderedDependency is used to establish a relationship "
       "between a ManagedElement and its dependencies. Each dependency "
       "is an Antecedent reference and the order in which the "
       "dependencies need to be resolved is indicated by the "
       "AssignedSequence property. \n"
       "For example, if this association is used to arrange "
       "dependencies of a software in a hierarchical order, then this "
       "specifies the sequence in which the dependencies need to be "
       "installed prior to installing the software." )]
class CIM_OrderedDependency : CIM_Dependency {

      [Description ( 
          "AssignedSequence is an unsigned integer \'n\' that "
          "indicates the relative order of ManagedElement "
          "instances. When \'n\' is a positive integer, it "
          "indicates a place in the sequence of members, with "
          "smaller integers indicating earlier positions in the "
          "sequence. The special value \'0\' indicates \'don\'t "
          "care\'. If two or more members have the same non-zero "
          "sequence number, then the ordering between those members "
          "is irrelevant, but they must all be ordered at the "
          "appropriate place in the overall sequence. \n"
          "\n"
          "A series of examples will make ordering of members "
          "clearer: \n"
          "If all members have the same sequence number, \n"
          "regardless of whether it is \'0\' or non-zero, any \n"
          "order is acceptable. \n"
          "o The values: \n"
          "1:MEMBER A \n"
          "2:MEMBER B \n"
          "1:MEMBER C \n"
          "3:MEMBER D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "since A and C can be ordered in either sequence, but \n"
          "only at the \'1\' position. \n"
          "\n"
          "Note that the non-zero sequence numbers need not start "
          "with \'1\', and they need not be consecutive. All that "
          "matters is their relative magnitude." )]
   uint64 AssignedSequence;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00707.002" type ="add">CPUBS corrections to CoreCollection.mof</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OrderedMemberOfCollection 
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_OrderedMemberOfCollection is an aggregation used to "
       "establish an ordered membership of ManagedElements in a "
       "Collection." )]
class CIM_OrderedMemberOfCollection : CIM_MemberOfCollection {

      [Description ( 
          "AssignedSequence is an unsigned integer \'n\' that "
          "indicates the relative position of members within a "
          "Collection. When \'n\' is a positive integer, it "
          "indicates a place in the sequence of members, with "
          "smaller integers indicating earlier positions in the "
          "sequence. The special value \'0\' indicates \'don\'t "
          "care\'. If two or more members have the same non-zero "
          "sequence number, then the ordering between those members "
          "is irrelevant, but they must all be ordered at the "
          "appropriate place in the overall sequence. \n"
          "\n"
          "A series of examples will make ordering of members "
          "clearer: \n"
          "If all members have the same sequence number, \n"
          "regardless of whether it is \'0\' or non-zero, any \n"
          "order is acceptable. \n"
          "o The values: \n"
          "1:MEMBER A \n"
          "2:MEMBER B \n"
          "1:MEMBER C \n"
          "3:MEMBER D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "because A and C can be ordered in either sequence, but \n"
          "only at the \'1\' position. \n"
          "\n"
          "Note that the non-zero sequence numbers do not need to "
          "start with \'1\', and they do not need to be "
          "consecutive. However, the sequencenumbers must reflect "
          "their relative magnitude." )]
   uint64 AssignedSequence;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "OwningCollectionElement represents an association between a "
       "Collection and the ManagedElement responsible for the control "
       "or ownership of the Collection." )]
class CIM_OwningCollectionElement {

      [Key, Max ( 1 ), 
       Description ( 
          "The ManagedElement acting as the \'owner\' or object "
          "that isresponsible for the control of the Collection." )]
   CIM_ManagedElement REF OwningElement;

      [Key, Description ( 
          "The Collection owned or controlled by the ManagedElement." )]
   CIM_Collection REF OwnedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalStatisticalInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "Statistical information associated with a PhysicalElement or "
       "one of its subclasses." )]
class CIM_PhysicalStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( "The scoping Element\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_PhysicalElement.CreationClassName" )]
   string PhysicalCreationClassName;

      [Key, Description ( "The scoping Element\'s identifying Tag." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_PhysicalElement.Tag" )]
   string Tag;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property, inherited from "
          "StatisticalInformation, serves as part of the object "
          "key." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "PhysicalStatistics relates the PhysicalStatisticalInformation "
       "class to the PhysicalElement to which it applies." )]
class CIM_PhysicalStatistics : CIM_Statistics {

      [Override ( "Stats" ), 
       Weak, Description ( "The statistical object." )]
   CIM_PhysicalStatisticalInformation REF Stats;

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalElement to which the statistics apply." )]
   CIM_PhysicalElement REF Element;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Core::PowerMgmt" ), 
    Description ( 
       "A class derived from Capabilities that describes the power "
       "management aspects of an element (typically a system or "
       "device). The element\'s power management capabilities are "
       "decoupled from a PowerManagementService, since a single "
       "service could apply to multiple elements, each with specific "
       "capabilities." )]
class CIM_PowerManagementCapabilities : CIM_Capabilities {

      [Description ( 
          "An enumeration indicating the specific power-related "
          "capabilities of a managed element. Since this is an "
          "array, multiple values may be specified. The current "
          "values in the enumeration are: \n"
          "0 = Unknown \n"
          "1 = Other \n"
          "2 = Power Saving Modes Entered Automatically, describing "
          "that a managed element can change its power state based "
          "on usage or other criteria \n"
          "3 = Power State Settable, indicating that the "
          "SetPowerState method is supported \n"
          "4 = Power Cycling Supported, indicating that the "
          "SetPowerState method can be invoked with the PowerState "
          "input variable set to \'Power Cycle\' \n"
          "5 = Timed Power On Supported, indicating that the "
          "SetPowerState method can be invoked with the PowerState "
          "input variable set to \'Power Cycle\' and the Time "
          "parameter set to a specific date and time, or interval, "
          "for power-on." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", 
          "Power Saving Modes Entered Automatically", 
          "Power State Settable", "Power Cycling Supported", 
          "Timed Power On Supported" }, 
       MappingStrings { "MIF.DMTF|System Power Controls|001.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.OtherPowerCapabilitiesDescriptions", 
          "CIM_PowerManagementService.SetPowerState" }]
   uint16 PowerCapabilities[];

      [Description ( 
          "An array of strings describing an element\'s additional "
          "power management capabilities, used when the "
          "PowerCapabilities array includes the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerCapabilities" }]
   string OtherPowerCapabilitiesDescriptions[];

      [Description ( 
          "An enumeration that indicates the power states supported "
          "by a managed element. Because this is an array, multiple "
          "values can be specified. The current values in the "
          "enumeration are: \n"
          "2=On, corresponding to ACPI state G0 or S0 or D0. \n"
          "3=Sleep - Light, corresponding to ACPI state G1, S1/S2, "
          "or D1. \n"
          "4=Sleep - Deep, corresponding to ACPI state G1, S3, or D2.\n"
          "5=Power Cycle (Off - Soft), corresponding to ACPI state "
          "G2, S5, or D3, but where the managed element is set to "
          "return to power state \"On\" at a pre-determined time. \n"
          "6=Off - Hard, corresponding to ACPI state G3, S5, or D3. \n"
          "7=Hibernate (Off - Soft), corresponding to ACPI state "
          "S4, where the state of the managed element is preserved "
          "and will be recovered upon powering on. \n"
          "8=Off - Soft, corresponding to ACPI state G2, S5, or D3. "
          "9= Power Cycle (Off-Hard), corresponds to the managed "
          "element reaching the ACPI state G3 followed by ACPI "
          "state S0. \n"
          "10=Master Bus Reset, corresponds to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system master bus reset. 11=Diagnostic "
          "Interrupt (NMI), corresponding to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system non-maskable interrupt. 12=Off - Soft "
          "Graceful, equivalent to Off Soft but preceded by a "
          "request to the managed element to perform an "
          "orderlyshutdown. \n"
          "13=Off - Hard Graceful, equivalent to Off Hard but "
          "preceded by a request to the managed element to perform "
          "an orderly shutdown. \n"
          "14=Master Bus Rest Graceful, equivalent to Master Bus "
          "Reset but preceded by a request to the managed element "
          "to perform an orderly shutdown. \n"
          "15=Power Cycle (Off - Soft Graceful), equivalent to "
          "Power Cycle (Off - Soft) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "16=Power Cycle (Off - Hard Graceful), equivalent to "
          "Power Cycle (Off - Hard) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "..=DMTF Reserved. \n"
          "0x7FFF..0xFFFF = Vendor Specific." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "..", "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "IEEE P1621 | 3.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_AssociatedPowerManagementService.PowerState" }]
   uint16 PowerStatesSupported[];

      [Description ( 
          "An enumeration indicating the specific power-related "
          "capabilities of a managed element. Since this is an "
          "array, multiple values may be specified. The current "
          "values in the enumeration are: \n"
          "0 = Unknown \n"
          "1 = Other \n"
          "2 = Power Saving Modes Entered Automatically, describing "
          "that a managed element can change its power state based "
          "on usage or other criteria \n"
          "3 = Power State Settable, indicating that the "
          "RequestPowerStateChange method is supported \n"
          "4 = Power Cycling Supported, indicating that the "
          "RequestPowerStateChange method can be invoked with the "
          "PowerState input variable set to \'Power Cycle (Off "
          "Soft)\' \n"
          "5 = Timed Power On Supported, indicating that the "
          "RequestPowerStateChange method can be invoked with the "
          "PowerState input variable set to \'Power On\' and the "
          "Time parameter set to a specific date and time, or "
          "interval, for power-on.8 = Graceful Shutdown Supported, "
          "indicating that the managed element can be sent a "
          "hardware signal requesting an orderly shutdown prior to "
          "the requested power state change." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", 
          "Power Saving Modes Entered Automatically", 
          "Power State Settable", "Power Cycling Supported", 
          "Timed Power On Supported", 
          "Off Hard Power Cycling Supported", "HW Reset Supported", 
          "Graceful Shutdown Supported" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_PowerManagementCapabilities.OtherPowerChangeCapabilities" }]
   uint16 PowerChangeCapabilities[];

      [Description ( 
          "A string describing the additional power management "
          "capabilities of the element, used when the "
          "PowerChangeCapabilities is set to the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerChangeCapabilities" }]
   string OtherPowerChangeCapabilities;

      [Description ( 
          "An enumeration that indicates the requested power states "
          "supported by the power management service. Because this "
          "is an array, multiple values can be specified. The "
          "current values in the enumeration are: \n"
          "2=On, corresponding to ACPI state G0 or S0 or D0. \n"
          "3=Sleep - Light, corresponding to ACPI state G1, S1/S2, "
          "or D1. \n"
          "4=Sleep - Deep, corresponding to ACPI state G1, S3, or D2.\n"
          "5=Power Cycle (Off - Soft), corresponding to ACPI state "
          "G2, S5, or D3, but where the managed element is set to "
          "return to power state \"On\" at a pre-determined time. \n"
          "6=Off - Hard, corresponding to ACPI state G3, S5, or D3. \n"
          "7=Hibernate (Off - Soft), corresponding to ACPI state "
          "S4, where the state of the managed element is preserved "
          "and will be recovered upon powering on. \n"
          "8=Off - Soft, corresponding to ACPI state G2, S5, or D3. "
          "9= Power Cycle (Off-Hard), corresponds to the managed "
          "element reaching the ACPI state G3 followed by ACPI "
          "state S0. \n"
          "10=Master Bus Reset, corresponds to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system master bus reset. 11=Diagnostic "
          "Interrupt (NMI), corresponding to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system non-maskable interrupt. 12=Off - Soft "
          "Graceful, equivalent to Off Soft but preceded by a "
          "request to the managed element to perform an "
          "orderlyshutdown. \n"
          "13=Off - Hard Graceful, equivalent to Off Hard but "
          "preceded by a request to the managed element to perform "
          "an orderly shutdown. \n"
          "14=Master Bus Rest Graceful, equivalent to Master Bus "
          "Reset but preceded by a request to the managed element "
          "to perform an orderly shutdown. \n"
          "15=Power Cycle (Off - Soft Graceful), equivalent to "
          "Power Cycle (Off - Soft) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "16=Power Cycle (Off - Hard Graceful), equivalent to "
          "Power Cycle (Off - Hard) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "17=Diagnostic Interrupt (INIT), equivalent to Diagnostic "
          "Interrupt (NMI) but performed by an INIT switch instead "
          "because the NMI signal is masked. \n"
          "..=DMTF Reserved. \n"
          "0x7FFF..0xFFFF = Vendor Specific." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "..", 
          "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", 
          "Diagnostic Interrupt (INIT)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "IEEE P1621 | 3.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerStatesSupported", 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_AssociatedPowerManagementService.PowerState" }]
   uint16 RequestedPowerStatesSupported[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "CIM_PowerUtilizationManagementCapabilities describes the "
       "capabilities of the associated "
       "CIM_PowerUtilizationManagementService." )]
class CIM_PowerUtilizationManagementCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "PowerUtilizationModesSupported indicates the power "
          "utilization modes supported by associated instances of "
          "CIM_PowerUtilizationManagementService. See "
          "CIM_PowerUtilizationManagementService.PowerSavingMode "
          "for a description of each enumeration value." ), 
       ValueMap { "3", "4", "..", "32768..65535" }, 
       Values { "Dynamic", "Static", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_PowerUtilizationManagementService.PowerUtilizationMode" }]
   uint16 PowerUtilizationModesSupported[];

      [Description ( "Enumeration of supported method identifiers" ), 
       ValueMap { "2", "..", "32768..65535" }, 
       Values { "ApplyPowerAllocationSettings", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 SupportedMethods[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00827" type="add">Deprecate class.</change>
// ==================================================================
//  CIM_ProductComponent 
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteComponent" }, 
    Aggregation, Composition, Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "The CIM_ProductComponent association defines a containment and "
       "component relationship among Products. For example, a Product "
       "may come bundled with other Products. \n"
       "Note that this association duplicates ProductParentChild. The "
       "latter association is maintained for legacy reasons. This "
       "association, ProductComponent, is added for ease of query and "
       "modeling consistency. Using ProductComponent, an application "
       "can query for all Component relationships for a Product, "
       "versus querying the various Component relationships AND "
       "ProductParentChild." )]
class CIM_ProductComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The Product which contains another Product as a "
          "component. The cardinality of this reference takes the "
          "default values (no minimum or maximum) since an instance "
          "of Product can describe either a general product type, "
          "or a specific item that is acquired. In the case of a "
          "specific item, a cardinality of Max(1) is indicated. "
          "However, when dealing with the general "
          "description/templating of a Product, then it may be a "
          "component of several others and a cardinality of Max(1) "
          "would be invalid." ), 
       ModelCorrespondence { "PRS_ProductComponent.Antecedent" }]
   CIM_Product REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The contained Product." ), 
       ModelCorrespondence { "PRS_ProductComponent.Dependent" }]
   CIM_Product REF PartComponent;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Association, Aggregation, Composition, Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "Indicates that the referenced ManagedElement is part of a Product."
        )]
class CIM_ProductElementComponent : CIM_Component {

      [Key, Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Product." )]
   CIM_Product REF GroupComponent;

      [Key, Override ( "PartComponent" ), 
       Description ( 
          "The ManagedElement which is a part of the Product." )]
   CIM_ManagedElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductFRU 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "CIM_ProductFRU is an association between Product and FRU that "
       "provides information regarding what Product components have "
       "been or are being replaced. The association is one to many, "
       "conveying that a Product can have many FRUs, and that a "
       "particular instance of a FRU is only applied to one (instance "
       "of a) Product." )]
class CIM_ProductFRU {

      [Key, Max ( 1 ), 
       Description ( "The Product to which the FRU is applied." )]
   CIM_Product REF Product;

      [Key, Description ( "The FRU." )]
   CIM_FRU REF FRU;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductPhysicalComponent 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "Indicates that the referenced PhysicalElement is acquired as "
       "part of a Product." )]
class CIM_ProductPhysicalComponent : CIM_Component {

      [Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Product." )]
   CIM_Product REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The PhysicalElement which is a part of the Product." )]
   CIM_PhysicalElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductSupport 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "CIM_ProductSupport is an association between Product and "
       "SupportAccess that conveys how support is obtained for the "
       "Product. This is a many-to-many relationship, implying that "
       "various types of Support are available for a Product, and that "
       "the same Support object can provide assistance for multiple "
       "Products." )]
class CIM_ProductSupport {

      [Key, Description ( "The Product." )]
   CIM_Product REF Product;

      [Key, Description ( "Support for the Product." )]
   CIM_SupportAccess REF Support;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Deprecated { "CIM_SettingData", "CIM_Setting", 
       "CIM_ConcreteComponent" }, 
    Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The use of CIM_Profile is deprecated in favor of "
       "aggregating instances of Setting or SettingData into "
       "\"higher-level\" Settings or SettingData objects using the "
       "ConcreteComponent association. This use simplifies the use of "
       "Settings or SettingData. With Profiles subclassing from "
       "Collection, separate associations were needed between an "
       "element and either its Profiles or Settings or SettingData. "
       "This class introduced unnecessary complexity and redundancy "
       "into the model. \n"
       "Deprecated description: Profile specifies a general collection "
       "of Settings or SettingData objects that are logically grouped "
       "together. Note: The CIM_Profile class uses simplified naming "
       "or identity algorithms and collection algorithms, as compared "
       "to CIM_Configuration. The settings are \"collected\" into the "
       "Profile using the MemberOfCollection association. Note that a "
       "Profile obtains its setting data and other necessary "
       "information from collected Setting and SettingData instances "
       "and by the definition of additional properties in subclasses. "
       "One example of a Profile is to define the collection of "
       "settings for a particular person. Another is to define the "
       "collection of settings that are appropriate when initializing "
       "a system. \n"
       "Profile is tied to a ManagedElement using the ElementProfile "
       "association. The ManagedElement provides the context for the "
       "Profile, and the settings collected by Profile should be "
       "settings of the associated ManagedElement. Note that a "
       "ManagedElement cannot exist when the Profile is instantiated. "
       "This situation is important to remember when the Profile is "
       "used in the creation of the real-world entity that is "
       "represented by (and then instantiated in) the ManagedElement." )]
class CIM_Profile : CIM_Collection {

      [Deprecated { "CIM_SettingData.InstanceID", 
          "CIM_Setting.SettingID" }, 
       Key, Override ( "InstanceID" ), 
       Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: Within the scope of the instantiating "
          "Namespace, InstanceID opaquely and uniquely identifies "
          "an instance of this class. To ensure uniqueness within "
          "the NameSpace, the value of InstanceID should be "
          "constructed using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs that are produced by this or other providers "
          "for the NameSpace of this instance. \n"
          "For DMTF-defined instances, the preferred algorithm must "
          "be used with the <OrgID> set to CIM." )]
   string InstanceID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00717.001" type ="add">Deprecated</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RedundancyGroup
// ==================================================================
   [Deprecated { "CIM_RedundancySet" }, 
    Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A class derived from LogicalElement that is a special "
       "collection of ManagedSystemElements. This collection indicates "
       "that the aggregated components together provide redundancy. "
       "All elements aggregated in a RedundancyGroup should be "
       "instantiations of the same object class. \n"
       "The use of this class is being deprecated in lieu of using the "
       "RedundancySet class." )]
class CIM_RedundancyGroup : CIM_LogicalElement {

      [Deprecated { "No Value" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_RedundancySet.InstanceID" }, 
       Key, Override ( "Name" ), 
       Description ( 
          "The RedundancyGroup Name serves as the key for the "
          "Group\'s instance in an enterprise environment." ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_RedundancySet.RedundancyStatus" }, 
       Description ( 
          "RedundancyStatus provides information on the state of "
          "the RedundancyGroup. \"Fully Redundant\" (value=2) means "
          "that all of the configured redundancy is still "
          "available; \"Degraded Redundancy\" (3) means that some "
          "failures have been experienced but some reduced amount "
          "of redundancy is still available; \"Redundancy Lost\" "
          "(4) means that a sufficient number of failures have been "
          "experienced such that no redundancy is available and the "
          "next failure experienced will cause overall failure. "
          "Also, the values, \"Other\" (1) and \"Unknown\" (0), are "
          "defined." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Fully Redundant", 
          "Degraded Redundancy", "Redundancy Lost" }]
   uint16 RedundancyStatus;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RelatedStatisticalData 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_RelatedStatisticalData is an association that defines "
       "hierarchies and/or dependencies of related CIM_Statistical "
       "Data classes." )]
class CIM_RelatedStatisticalData {

      [Key, Description ( "The statistic information/object." )]
   CIM_StatisticalData REF Stats;

      [Key, Description ( "The related statistics." )]
   CIM_StatisticalData REF RelatedStats;

      [Description ( 
          "A free-form string describing how the statistics are related."
           )]
   string Description;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RelatedStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "CIM_RelatedStatistics is an association that defines "
       "hierarchies and/or dependencies of related CIM_Statistical "
       "Information classes." )]
class CIM_RelatedStatistics {

      [Key, Description ( "The statistic information/object." )]
   CIM_StatisticalInformation REF Stats;

      [Key, Description ( "The related statistics or metrics." )]
   CIM_StatisticalInformation REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ReplaceableProductFRU 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "ReplaceableProductFRU is an association between Product and "
       "FRU that shows what Product components may be replaced. The "
       "association is one to many, conveying that a Product can have "
       "many FRUs, and that a particular instance of a FRU is only "
       "applied to one (instance of a) Product." )]
class CIM_ReplaceableProductFRU {

      [Key, Max ( 1 ), 
       Description ( "The Product to which the FRU is applied." )]
   CIM_Product REF Product;

      [Key, Description ( "The FRU." )]
   CIM_FRU REF FRU;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.24.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "The ResourceAllocationSettingData class represents settings "
       "specifically related to an allocated resource that are outside "
       "the scope of the CIM class typically used to represent the "
       "resource itself. These settings include information specific "
       "to the allocation that may not be visible to the consumer of "
       "the resource itself. For example, a virtual processor may look "
       "like a 2 ghz processor to the consumer (virtual computer "
       "system), however the virtualization system may use "
       "time-slicing to schedule the the virtual processor to only "
       "allow it to use 1 ghz." )]
class CIM_ResourceAllocationSettingData : CIM_SettingData {

      [Description ( 
          "The type of resource this allocation setting represents." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "..", "0x8000..0xFFFF" }, 
       Values { "Other", "Computer System", "Processor", "Memory", 
          "IDE Controller", "Parallel SCSI HBA", "FC HBA", 
          "iSCSI HBA", "IB HCA", "Ethernet Adapter", 
          "Other Network Adapter", "I/O Slot", "I/O Device", 
          "Floppy Drive", "CD Drive", "DVD drive", "Disk Drive", 
          "Tape Drive", "Storage Extent", "Other storage device", 
          "Serial port", "Parallel port", "USB Controller", 
          "Graphics controller", "IEEE 1394 Controller", 
          "Partitionable Unit", "Base Partitionable Unit", "Power", 
          "Cooling Capacity", "Ethernet Switch Port", 
          "Logical Disk", "Storage Volume", "Ethernet Connection", 
          "DMTF reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.OtherResourceType", 
          "CIM_ResourceAllocationSettingData.ResourceSubType" }]
   uint16 ResourceType;

      [Description ( 
          "A string that describes the resource type when a well "
          "defined value is not available and ResourceType has the "
          "value \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ResourceType" }]
   string OtherResourceType;

      [Description ( 
          "A string describing an implementation specific sub-type "
          "for this resource. For example, this may be used to "
          "distinguish different models of the same resource "
          "type.The property value shall conform to this format (in "
          "ABNF): vs-type = dmtf-value / other-org-value / "
          "legacy-value dmtf-value = \"DMTF:\" defining-org \":\" "
          "org-vs-type org-value = defining-org \":\" org-vs-type\n"
          "Where: dmtf-value: is a property value defined by DMTF "
          "and is defined in the description of this property. "
          "other-org-value: is a property value defined by a "
          "business entity other than DMTF and is not defined in "
          "the description of this property. legacy-value: is a "
          "property value defined by a business entity other than "
          "DMTF and is not defined in the description of this "
          "property. These values are permitted but recommended to "
          "be deprecated over time. defining-org:\n"
          "is an identifier for the business entity that defines "
          "the virtual system type. It shall include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "that business entity. It shall not be \"DMTF\" and shall "
          "not contain a colon (:). org-vs-type:\n"
          "is an identifier for the virtual system type within the "
          "defining business entity. It shall be unique within the "
          "defining-org. It may use any character allowed for CIM "
          "strings, except for the following: U0000-U001F (Unicode "
          "C0 controls) U0020 (space), note that the reason is that "
          "OVF allows for multiple space-separated vs-type values "
          "in this property. U007F (Unicode C0 controls) "
          "U0080-U009F (Unicode C1 controls)\n"
          "If there is a need to structure the value into segments, "
          "the segments should be separated with a single colon (:).\n"
          "The values of this property shall be processed case "
          "sensitively. They are intended to be processed "
          "programmatically (instead of being a display name) and "
          "should be short.\n"
          "The following DMTF values are defined: DMTF:unknown - "
          "the resource sub-type is unknown or cannot be determined\n"
          "Developers should consult the relevant profile for "
          "defined values." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ResourceType" }]
   string ResourceSubType;

      [Description ( 
          "This property specifies which ResourcePool the resource "
          "is currently allocated from, or which ResourcePool the "
          "resource will be allocated from when the allocation "
          "occurs." ), 
       ModelCorrespondence { "CIM_ResourcePool.PoolId" }]
   string PoolID;

      [Description ( 
          "Describes the consumers visibility to the allocated resource.\n"
          "A value of \"Passed-Through\" indicates the underlying "
          "or host resource is utilized and passed through to the "
          "consumer, possibly using partitioning. At least one item "
          "shall be present in the HostResource property. \n"
          "A value of \"Virtualized\" indicates the resource is "
          "virtualized and may not map directly to an "
          "underlying/host resource. Some implementations may "
          "support specific assignment for virtualized resources, "
          "in which case the host resource(s) are exposed using the "
          "HostResource property. \n"
          "A value of \"Not represented\" indicates a "
          "representation of the resource does not exist within the "
          "context of the resource consumer." ), 
       ValueMap { "0", "2", "3", "4", "..", "32767..65535" }, 
       Values { "Unknown", "Passed-Through", "Virtualized", 
          "Not represented", "DMTF reserved", "Vendor Reserved" }]
   uint16 ConsumerVisibility;

      [Description ( 
          "This property exposes specific assignment of resources. "
          "Each non-null value of the HostResource property shall "
          "be formated as a URI per RFC3986.\n"
          "If this resource is modeled then a value should be a "
          "WBEM URI (DSP0207). If the resource is not modeled then "
          "see the appropriate profile. \n"
          "Profiles may further constrain the type of URI. A NULL "
          "value or empty array requests the implementation decide "
          "the kind of host resource.\n"
          "If the virtual resource is mapped to more than "
          "oneunderlying resource, this property may be left NULL.\n"
          "If NULL, the DeviceAllocatedFromPool or "
          "ResourceAllocationFromPool associations may be used to "
          "determine the pool of host resources this virtual "
          "resource may use. If specific assignment is utilized, "
          "all underlying resources used by this virtual resource "
          "should be listed.The kind of dependency is specified by "
          "the ConsumerVisibility and the MappingBehavior "
          "properties. Typically the array contains one item, "
          "however multiple host resources may be specified. \n"
          "A client may set the value(s) to indicate that the "
          "requested virtual resource allocation be based on host "
          "resources that are identified by element values." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ConsumerVisibility", 
          "CIM_ResourceAllocationSettingData.MappingBehavior" }]
   string HostResource[];

      [Description ( 
          "This property specifies the units of allocation used by "
          "the Reservation and Limit properties. For example, when "
          "ResourceType=Processor, AllocationUnits may be set to "
          "hertz*10^6 or percent. When ResourceType=Memory, "
          "AllocationUnits may be set to bytes*10^3. \n"
          "It is expected that profiles constrain the units that "
          "apply in context of particular resource types.\n"
          "The value of this property shall be a legal value of the "
          "Programmatic Units qualifier as defined in Annex C.1 of "
          "DSP0004 V2.5 or later." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.Reservation", 
          "CIM_ResourceAllocationSettingData.Limit" }, 
       IsPUnit]
   string AllocationUnits;

      [Description ( 
          "This property specifies the quantity of resources "
          "presented to the consumer. For example, when "
          "ResourceType=Processor, this property would reflect the "
          "number of discrete Processors presented to the virtual "
          "computer system. When ResourceType=Memory, this property "
          "could reflect the number of MB reported to the virtual "
          "computer system.\n"
          "The value of the VirtualQuantity property should be "
          "expressed in units as defined by the value of the "
          "VirtualQuantityUnits property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.VirtualQuantityUnits" }]
   uint64 VirtualQuantity;

      [Description ( 
          "This property specifies the amount of resource "
          "guaranteed to be available for this allocation. On "
          "system which support over-commitment of resources, this "
          "value is typically used for admission control to prevent "
          "an an allocation from being accepted thus preventing starvation.\n"
          "The value of the Reservation property is expressed in "
          "the unit specified by the value of the AllocationUnits "
          "property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.AllocationUnits" }]
   uint64 Reservation;

      [Description ( 
          "This property specifies the upper bound, or maximum "
          "amount of resource that will be granted for this "
          "allocation. For example, a system which supports memory "
          "paging may support setting the Limit of a Memory "
          "allocation below that of the VirtualQuantity, thus "
          "forcing paging to occur for this allocation.\n"
          "The value of the Limit property is expressed in the unit "
          "specified by the value of the AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.AllocationUnits" }]
   uint64 Limit;

      [Description ( 
          "This property specifies a relative priority for this "
          "allocation in relation to other allocations from the "
          "same ResourcePool. This property has no unit of measure, "
          "and is only relevant when compared to other allocations "
          "vying for the same host resources." )]
   uint32 Weight;

      [Description ( 
          "This property specifies if the resource will be "
          "automatically allocated. For example when set to true, "
          "when the consuming virtual computer system is powered "
          "on, this resource would be allocated. A value of false "
          "indicates the resource must be explicitly allocated. For "
          "example, the setting may represent removable media "
          "(cdrom, floppy, etc.) where at power on time, the media "
          "is not present. An explicit operation is required to "
          "allocate the resource." )]
   boolean AutomaticAllocation;

      [Description ( 
          "This property specifies if the resource will be "
          "automatically de-allocated. For example, when set to "
          "true, when the consuming virtual computer system is "
          "powered off, this resource would be de-allocated. When "
          "set to false, the resource will remain allocated and "
          "must be explicitly de-allocated." )]
   boolean AutomaticDeallocation;

      [Description ( 
          "The Parent of the resource. For example, a controller "
          "for the current allocation" )]
   string Parent;

      [Description ( 
          "The thing to which this resource is connected. For "
          "example, a named network or switch port." )]
   string Connection[];

      [Description ( 
          "The address of the resource. For example, the MAC "
          "address of a Ethernet port." )]
   string Address;

      [Description ( 
          "Specifies how this resource maps to underlying "
          "resourcesIf the HostResource array contains any entries, "
          "this property reflects how the resource maps to those "
          "specific resources." ), 
       ValueMap { "0", "2", "3", "4", "5", "..", "32767..65535" }, 
       Values { "Unknown", "Not Supported", "Dedicated", 
          "Soft Affinity", "Hard Affinity", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 MappingBehavior;

      [Description ( 
          "Describes the address of this resource in the context of "
          "the Parent. The Parent/AddressOnParent properties are "
          "used to describe the controller relationship as well the "
          "ordering of devices on a controller.For example, if the "
          "parent is a PCI Controller, this property would specify "
          "the PCI slot of this child device." )]
   string AddressOnParent;

      [Description ( 
          "This property specifies the units used by the "
          "VirtualQuantity property. For example\n"
          "- if ResourceType=Processor, the value of the "
          "VirtualQuantityUnits property may be set to \"count\", "
          "indicating that the value of the VirtualQuantity "
          "property is expressed as a count.\n"
          "- if ResourceType=Memory, the value of the "
          "VirtualQuantityUnits property may be set to "
          "\"bytes*10^3\", indicating that the value of the "
          "VirtualQuantity property is expressed in kilobyte.\n"
          "It is expected that profiles constrain the units that "
          "apply in context of particular resource types.\n"
          "The value of this property shall be a legal value of the "
          "Programmatic Units qualifier as defined in Annex C.1 of "
          "DSP0004 V2.5 or later." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.VirtualQuantity" }, 
       IsPUnit]
   string VirtualQuantityUnits = "count";


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "A ResourcePool is a logical entity (with associated "
       "controls)provided by the host system for the purpose of "
       "allocation and assignment of resources. A given ResourcePool "
       "may be used to allocate resources of a specific type. "
       "Hierarchies of ResourcePools may be created to provide "
       "administrative control over allocations. In the cases where "
       "resources are subdivided, multiple resource pools may exist "
       "(e.g. nodal boundaries in NUMA-like systems). In systems that "
       "support over commitment, pools represent the reservable "
       "capacity, not an upper bound or limit on the maximum amount "
       "that can be allocated. Admission control during power on may "
       "detect and prevent systems from powering due to resource "
       "exhaustion. For example, over commitment on a ResourcePool "
       "with ResourceType=Memory would require that sufficient space "
       "be available in some backing-store, that may be managed "
       "through a storage ResourcePool." )]
class CIM_ResourcePool : CIM_LogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \"preferred\" algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "(:), and where <OrgID> must include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID or that is a registered ID assigned to the "
          "business entity by a recognized global authority. (This "
          "requirement is similar to the <Schema Name>_<Class Name> "
          "structure of Schema class names.) In addition, to ensure "
          "uniqueness, <OrgID> must not contain a colon (:). When "
          "using this algorithm, the first colon to appear in "
          "InstanceID must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements. If the above \"preferred\" "
          "algorithm is not used, the defining entity must ensure "
          "that the resulting InstanceID is not reused across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \"preferred\" algorithm "
          "must be used with the <OrgID> set to CIM." )]
   string InstanceID;

      [Description ( 
          "An opaque identifier for the pool. This property is used "
          "to provide correlation across save and restore of "
          "configuration data to underlying persistent storage." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.PoolId" }]
   string PoolID;

      [Description ( 
          "If true, \"Primordial\" indicates that this ResourcePool "
          "is a base from which resources are drawn and returned in "
          "the activity of resource management. Being primordial "
          "means that this ResourcePool shall not be created or "
          "deleted by consumers of this model. However, other "
          "actions, modeled or not, may affect the characteristics "
          "or size of primordial ResourcePools. If false, "
          "\"Primordial\" indicates that the ResourcePool, a "
          "concrete Resource Pool, is subject to resource "
          "allocation services functions. This distinction is "
          "important because higher-level ResourcePools may be "
          "assembled using the Component or "
          "ElementAllocatedFromPool associations. Although the "
          "higher-level abstractions can be created and deleted, "
          "the most basic, (i.e. primordial), hardware-based "
          "ResourcePools cannot. They are physically realized as "
          "part of the System, or are actually managed by some "
          "other System and imported as if they were physically "
          "realized." )]
   boolean Primordial = false;

      [Description ( 
          "This property represents the maximum amount (in units of "
          "AllocationUnits) of reservations that the ResourcePool "
          "can support." )]
   uint64 Capacity;

      [Description ( 
          "This property represents the current reservations (in "
          "units of AllocationUnits) spread across all active "
          "allocations from this pool. In a hierarchical "
          "configuration, this represents the sum of all descendant "
          "ResourcePool current reservations." )]
   uint64 Reserved;

      [Description ( 
          "The type of resource this ResourcePool may allocate." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "..", 
	  "0x8000..0xFFFF" }, 
       Values { "Other", "Computer System", "Processor", "Memory", 
          "IDE Controller", "Parallel SCSI HBA", "FC HBA", 
          "iSCSI HBA", "IB HCA", "Ethernet Adapter", 
          "Other Network Adapter", "I/O Slot", "I/O Device", 
          "Floppy Drive", "CD Drive", "DVD drive", "Disk Drive", 
          "Tape Drive", "Storage Extent", "Other storage device", 
          "Serial port", "Parallel port", "USB Controller", 
          "Graphics controller", "IEEE 1394 Controller", 
          "Partitionable Unit", "Base Partitionable Unit", "Power", 
          "Cooling Capacity", "Ethernet Switch Port", 
          "Logical Disk", "Storage Volume", "Ethernet Connection", 
          "Multi-Mode Memory", "Non-Volatile Memory", "DMTF reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_ResourcePool.OtherResourceType", 
          "CIM_ResourcePool.ResourceSubType" }]
   uint16 ResourceType;

      [Description ( 
          "A string that describes the resource type when a well "
          "defined value is not available and ResourceType is set "
          "to 0 for Other." ), 
       ModelCorrespondence { "CIM_ResourcePool.ResourceType" }]
   string OtherResourceType;

      [Description ( 
          "A string describing an implementation specific sub-type "
          "for this pool. For example, this may be used to "
          "distinguish different models of the same resource type." ), 
       ModelCorrespondence { "CIM_ResourcePool.ResourceType" }]
   string ResourceSubType;

      [Description ( 
          "This property specifies the units of allocation used by "
          "the Reservation and Limit properties. For example, when "
          "ResourceType=Processor, AllocationUnits may be set to "
          "hertz*10^6 or percent. When ResourceType=Memory, "
          "AllocationUnits may be set to bytes*10^3. The value of "
          "this property shall be a legal value of the Programmatic "
          "Units qualifier as defined in Appendix C.1 of DSP0004 "
          "V2.4 or later." ), 
       IsPUnit]
   string AllocationUnits;

      [Description ( 
          "This property specifies the units for the MaxConsumable "
          "and the Consumed properties." ), 
       ModelCorrespondence { 
          "CIM_ResourcePool.MaxConsumableResource", 
          "CIM_ResourcePool.CurrentlyConsumedResource" }, 
       IsPUnit]
   string ConsumedResourceUnits = "count";

      [Description ( 
          "This property specifies the amount of resource that the "
          "resource pool currently presents to consumers.\n"
          "This property is different from the Reserved property in "
          "that it describes the consumers view of the resource "
          "while the Reserved property describes the producers view "
          "of the resource." ), 
       ModelCorrespondence { "CIM_ResourcePool.ConsumedResourceUnits" }]
   uint64 CurrentlyConsumedResource;

      [Description ( 
          "This property specifies the maximum of amount of "
          "consumable resource that the resource pool can present "
          "to consumers.\n"
          "This property is different from the Capacity property in "
          "that it describes the consumers view of the resource "
          "while the Capacity property describes the producers view "
          "of the resource." ), 
       ModelCorrespondence { "CIM_ResourcePool.ConsumedResourceUnits" }]
   uint64 MaxConsumableResource;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "This class exposes the supported capabilities of a "
       "ResourcePoolConfigurationService. Not all implementations will "
       "support all methods on the service. Clients may use instances "
       "of this class to determine which methods are supported. The "
       "same method must not be listed in both lists. Implementations "
       "must either be non-blocking and use a Job for long running "
       "operations, or always block until the operation completes." )]
class CIM_ResourcePoolConfigurationCapabilities : CIM_Capabilities {

      [Description ( 
          "This property reflects the methods of the associated "
          "service class that are supported that may return a Job." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "..", "32768..65535" }, 
       Values { "CreateResourcePool is supported", 
          "CreateChild ResourcePool is supported", 
          "DeleteResourcePool is supported", 
          "AddResourcesToResourcePool is supported", 
          "RemoveResourcesFromResourcePool is supported", 
          "ChangeParentResourcePool is supported", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint32 AsynchronousMethodsSupported[];

      [Description ( 
          "This property reflects the methods of the associated "
          "service class that are supported andblock until "
          "completed (no Job is returned.)" ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "..", "32768..65535" }, 
       Values { "CreateResourcePool is supported", 
          "CreateChild ResourcePool is supported", 
          "DeleteResourcePool is supported", 
          "AddResourcesToResourcePool is supported", 
          "RemoveResourcesFromResourcePool is supported", 
          "CIM_ChangeParentResourcePool is supported", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 SynchronousMethodsSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SAPStatisticalInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "Statistical information associated with a Service AccessPoint "
       "object or one of its subclasses." )]
class CIM_SAPStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ServiceAccessPoint.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ServiceAccessPoint.SystemName" )]
   string SystemName;

      [Key, Description ( "The scoping SAP\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ServiceAccessPoint.CreationClassName" )]
   string SAPCreationClassName;

      [Key, Description ( "The scoping SAP\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ServiceAccessPoint.Name" )]
   string SAPName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property, inherited from "
          "StatisticalInformation, serves as part of the object "
          "key." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ScopedSettingData
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "The ScopedSettingData class represents the general concept of "
       "SettingData, which is scoped or contained by a ManagedElement "
       "(that is, settings that are specifically defined for a system, "
       "device, and so on). ScopedSettingData is tied to a "
       "ManagedElement using the ScopedSetting association. Note that "
       "the cardinality of the ManagedElement reference is Min(1), "
       "Max(1). This cardinality mandates the instantiation of the "
       "ScopedSetting association for the referenced instance of "
       "ScopedSettingData. ScopedSetting describes the existence "
       "requirements and context for the referenced instance of "
       "ManagedElement. Specifically, the ManagedElement must exist "
       "and it provides the context for the ScopedSettingData." )]
class CIM_ScopedSettingData : CIM_SettingData {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceStatisticalInformation 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "Statistical information associated with a Service object or "
       "one of its subclasses." )]
class CIM_ServiceStatisticalInformation : CIM_StatisticalInformation {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.SystemName" )]
   string SystemName;

      [Key, Description ( "The scoping Service\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.CreationClassName" )]
   string ServiceCreationClassName;

      [Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.Name" )]
   string ServiceName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property, inherited from "
          "StatisticalInformation, serves as part of the object "
          "key." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="change">Update of description to
// support deprecation of CIM_Profile and
// CIM_Configuration.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Setting
// ==================================================================
   [Abstract, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "The Setting class represents configuration-related and "
       "operational parameters for one or more ManagedSystemElements. "
       "An Element can have multiple Setting objects associated with "
       "it. The current operational values for the parameters of an "
       "Element are reflected by properties in the Element itself or "
       "by properties in its associations. These properties do not "
       "have to be the same values present in the Setting object. For "
       "example, a modem might have a Setting baud rate of 56Kb/sec "
       "but be operating at 19.2Kb/sec. \n"
       "Note: The CIM_SettingData class is very similar to "
       "CIM_Setting, yet both classes are present in the model because "
       "many implementations have successfully used CIM_Setting. "
       "However, issues have arisen that could not be resolved without "
       "defining a new class. Therefore, until a new major release "
       "occurs, both classes will exist in the model. Refer to the "
       "Core White Paper for additional information. Setting instances "
       "can be aggregated together into higher-level Setting objects "
       "using ConcreteComponent associations." )]
class CIM_Setting : CIM_ManagedElement {

      [Description ( 
          "The identifier by which the Setting object is known." ), 
       MaxLen ( 256 )]
   string SettingID;


      [Description ( 
          "The VerifyOKToApplyToMSE method is used to verify that "
          "this Setting can be applied to the referenced "
          "ManagedSystemElement at the given time or time interval. "
          "This method takes three input parameters: MSE (the "
          "Managed SystemElement that is being verified), "
          "TimeToApply (which, being a datetime, can be either a "
          "specific time or a time interval), and MustBeCompletedBy "
          "(which indicates the required completion time for the "
          "method). The return value should be 0 if it is okay to "
          "apply the Setting, 1 if the method is not supported, 2 "
          "if the Setting cannot be applied within the specified "
          "times, and any other number if an error occurred. In a "
          "subclass, the set of possible return codes could be "
          "specified using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \"translated\" "
          "can also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 VerifyOKToApplyToMSE(
         [IN, Description ( 
             "The ManagedSystemElement that is being verified." )]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy);

      [Description ( 
          "The ApplyToMSE method performs the actual application of "
          "the Setting to the referenced ManagedSystemElement. It "
          "takes three input parameters: MSE (the "
          "ManagedSystemElement to which the Setting is being "
          "applied), TimeToApply (which, being a datetime, can be "
          "either a specific time or a time interval), and "
          "MustBeCompletedBy (which indicates the required "
          "completion time for the method). Note that the semantics "
          "of this method are that individual Settings are either "
          "wholly applied or not applied at all to their target "
          "ManagedSystemElement. The return value should be 0 if "
          "the Setting is successfully applied to the referenced "
          "ManagedSystemElement, 1 if the method is not supported, "
          "2 if the Setting was not applied within the specified "
          "times, and any other number if an error occurred. In a "
          "subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \"translated\" "
          "can also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note: If an error occurs when applying the Setting to a "
          "ManagedSystemElement, the Element must be configured as "
          "it was when the \"Apply\" attempt began. That is, the "
          "Element should not be left in an indeterminate state." )]
   uint32 ApplyToMSE(
         [IN, Description ( 
             "The ManagedSystemElement to which the Setting is being applied."
              )]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy);

      [Description ( 
          "The VerifyOKToApplyToCollection method is used to verify "
          "that this Setting can be applied to the referenced "
          "Collection of ManagedSystemElements, at the given time "
          "or time interval, without causing adverse effects to "
          "either the Collection itself or its surrounding "
          "environment. The net effect is to execute the "
          "VerifyOKToApply method against each of the Elements that "
          "are aggregated by the Collection. This method takes "
          "three input parameters: Collection (the Collection of "
          "ManagedSystemElements that is being verified), "
          "TimeToApply (which, being a datetime, can be either a "
          "specific time or a time interval), and MustBeCompletedBy "
          "(which indicates the required completion time for the "
          "method). The return value should be 0 if it is okay to "
          "apply the Setting, 1 if the method is not supported, 2 "
          "if the Setting cannot be applied within the specified "
          "times, and any other number if an error occurred. One "
          "output parameter, CanNotApply, is defined, which is a "
          "string array that lists the keys of the "
          "ManagedSystemElements to which the Setting cannot be "
          "applied. This parameter enables those Elements to be "
          "revisited and either fixed or have other corrective "
          "action taken on them. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \"translated\" "
          "can also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 VerifyOKToApplyToCollection(
         [IN, Description ( 
             "The Collection of ManagedSystemElements that is being verified."
              )]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy, 
         [IN ( false ), OUT, Description ( 
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting cannot "
             "be applied." )]
      string CanNotApply[]);

      [Description ( 
          "The ApplyToCollection method performs the application of "
          "the Setting to the referenced Collection of "
          "ManagedSystemElements. The net effect is to execute the "
          "ApplyToMSE method against each of the Elements that are "
          "aggregated by the Collection. If the input value "
          "ContinueOnError is false, this method applies the "
          "Setting to all Elements in the Collection until it "
          "encounters an error. In the case of an error, the method "
          "stops execution, logs the key of the Element that caused "
          "the error in the CanNotApply array, and issues a return "
          "code of 2. If the input value ContinueOnError is true, "
          "then this method applies the Setting to all of the "
          "ManagedSystemElements in the Collection, and reports the "
          "failed Elements in the array, CanNotApply. For the "
          "latter, processing will continue until the method is "
          "applied to all Elements in the Collection, regardless of "
          "any errors encountered. The key of each "
          "ManagedSystemElement to which the Setting could not be "
          "applied is logged into the CanNotApply array. This "
          "method takes four input parameters: Collection (the "
          "Collection of Elements to which the Setting is being "
          "applied), TimeToApply (which, being a datetime, can be "
          "either a specific time or a time interval), "
          "ContinueOnError (true indicates to continue processing "
          "when an error is encountered), and MustBeCompletedBy "
          "(which indicates the required completion time for the "
          "method). The return value should be 0 if the Setting is "
          "successfully applied to the referenced Collection, 1 if "
          "the method is not supported, 2 if the Setting was not "
          "applied within the specified times, 3 if the Setting "
          "cannot be applied using the input value for "
          "ContinueOnError, and any other number if an error "
          "occurred. One output parameter, CanNotApplystring, is "
          "defined, which is an array that lists the keys of the "
          "ManagedSystemElements to which the Setting could not be "
          "applied. This output parameter has meaning only when the "
          "ContinueOnError parameter is true. \n"
          "In a subclass, the set of possible return codes could be "
          "specified using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \"translated\" "
          "can also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note: If an error occurs when applying the Setting to a "
          "ManagedSystemElement in the Collection, the Element must "
          "be configured as it was when the \"Apply\" attempt "
          "began. That is, the Element should not be left in an "
          "indeterminate state." )]
   uint32 ApplyToCollection(
         [IN, Description ( 
             "The Collection of ManagedSystemElements to be applied."
              )]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "True means to continue processing when an error is encountered."
              )]
      boolean ContinueOnError, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy, 
         [IN ( false ), OUT, Description ( 
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting could "
             "not be applied." )]
      string CanNotApply[]);

      [Description ( 
          "The VerifyOKToApplyIncrementalChangeToMSE method is used "
          "to verify that a subset of the properties in this "
          "Setting can be applied to the referenced "
          "ManagedSystemElement at the given time or time interval. "
          "This method takes four input parameters: MSE (the "
          "ManagedSystemElement that is being verified), "
          "TimeToApply (which, being a datetime, can be either a "
          "specific time or a time interval), MustBeCompletedBy "
          "(which indicates the required completion time for the "
          "method), and a PropertiesToApply array (which contains a "
          "list of the property names whose values will be "
          "verified). If the array is null or empty or contains the "
          "string \"ALL\" as a property name, then all Settings "
          "properties will be verified. If it is set to \"NONE\", "
          "then no Settings properties will be verified. The return "
          "value should be 0 if it is okay to apply the Setting, 1 "
          "if the method is not supported, 2 if the Setting cannot "
          "be applied within the specified times, and any other "
          "number if an error occurred. In a subclass, the set of "
          "possible return codes could be specified using a "
          "ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are \"translated\" can also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 VerifyOKToApplyIncrementalChangeToMSE(
         [IN, Description ( 
             "The ManagedSystemElement for which the Setting is "
             "being verified." )]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy, 
         [IN, Description ( 
             "A list of the property names whose values will be verified."
              )]
      string PropertiesToApply[]);

      [Description ( 
          "The ApplyIncrementalChangeToMSE method performs the "
          "actual application of a subset of the properties in the "
          "Setting to the referenced ManagedSystemElement. It takes "
          "four input parameters: MSE (the ManagedSystem Element to "
          "which the Setting is being applied), TimeToApply (which, "
          "being a datetime, can be either a specific time or a "
          "time interval), MustBeCompletedBy (which indicates the "
          "required completion time for the method), and a "
          "PropertiesToApply array (which contains a list of the "
          "property names whose values will be applied). If a "
          "property is not in this list, it will be ignored by the "
          "Apply. If the array is null, empty, or contains the "
          "string \"ALL\" as a property name, then all Settings "
          "properties will be applied. If it is set to \"NONE\", "
          "then no Settings properties will be applied. \n"
          "Note that the semantics of this method are that "
          "individual Settings are either wholly applied or not "
          "applied at all to their target ManagedSystemElement. The "
          "return value should be 0 if the Setting is successfully "
          "applied to the referenced ManagedSystemElement, 1 if the "
          "method is not supported, 2 if the Setting was not "
          "applied within the specified times, and any other number "
          "if an error occurred. In a subclass, the set of possible "
          "return codes could be specified using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \"translated\" can also be "
          "specified in the subclass as a Values array qualifier. \n"
          "Note: If an error occurs when applying the Setting to a "
          "ManagedSystemElement, the Element must be configured as "
          "it was when the \"Apply\" attempt began. That is, the "
          "Element should not be left in an indeterminate state." )]
   uint32 ApplyIncrementalChangeToMSE(
         [IN, Description ( 
             "The ManagedSystemElement to which the Setting is being applied."
              )]
      CIM_ManagedSystemElement REF MSE, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy, 
         [IN, Description ( 
             "A list of the property names whose values will be applied."
              )]
      string PropertiesToApply[]);

      [Description ( 
          "The VerifyOKToApplyIncrementalChangeToCollection method "
          "is used to verify that a subset of the properties in "
          "this Setting can be applied to the referenced Collection "
          "of ManagedSystemElements at the given time or time "
          "interval, without causing adverse effects to either the "
          "Collection itself or its surrounding environment. The "
          "net effect is to execute the "
          "VerifyOKToApplyIncrementalChangeToMSE method against "
          "each of the Elements that are aggregated by the "
          "Collection. This method takes four input parameters: "
          "Collection (the Collection of ManagedSystemElements that "
          "is being verified), TimeToApply (which, being a "
          "datetime, can be either a specific time or a time "
          "interval), MustBeCompletedBy (which indicates the "
          "required completion time for the method), and a "
          "PropertiesToApply array (which contains a list of the "
          "property names whose values will be verified). If the "
          "array is null or empty or contains the string \"all\" as "
          "a property name, all Settings properties will be "
          "verified. If it is set to \"none\" then no Settings "
          "properties will be verified. The return value should be "
          "0 if it is okay to apply the Setting, 1 if the method is "
          "not supported, 2 if the Setting cannot be applied within "
          "the specified times, and any other number if an error "
          "occurred. One output parameter, CanNotApply, is defined, "
          "which is a string array that lists the keys of the "
          "ManagedSystemElements to which the Setting cannot be "
          "applied. This parameter enables those Elements to be "
          "revisited and either fixed or have other corrective "
          "action taken on them. \n"
          "In a subclass, the set of possible return codes could be "
          "specified using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \"translated\" "
          "can also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 VerifyOKToApplyIncrementalChangeToCollection(
         [IN, Description ( 
             "The Collection of ManagedSystemElements for which "
             "the setting is being verified." )]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description ( 
             "TimeToApply can be either a specific time or a time interval."
              )]
      datetime TimeToApply, 
         [IN, Description ( 
             "The required completion time for the method." )]
      datetime MustBeCompletedBy, 
         [IN, Description ( 
             "A list of the property names whose values will be verified."
              )]
      string PropertiesToApply[], 
         [IN ( false ), OUT, Description ( 
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting cannot "
             "be applied." )]
      string CanNotApply[]);

      [Description ( 
          "The ApplyIncrementalChangeToCollection method performs "
          "the application of a subset of the properties in this "
          "Setting to the referenced Collection of "
          "ManagedSystemElements. The net effect is to execute the "
          "ApplyIncrementalChangeToMSE method against each of the "
          "Elements that are aggregated by the Collection. If the "
          "input value ContinueOnError is false, this method "
          "applies the Setting to all Elements in the Collection "
          "until it encounters an error, in which case it stops "
          "execution, logs the key of the Element that caused the "
          "error in the CanNotApply array, and issues a return code "
          "of 2. If the input value ContinueOnError is true, then "
          "this method applies the Setting to all of the "
          "ManagedSystemElements in the Collection, and reports the "
          "failed Elements in the array, CanNotApply. For the "
          "latter, processing will continue until the method is "
          "applied to all Elements in the Collection, regardless of "
          "any errors encountered. The key of each "
          "ManagedSystemElement to which the Setting could not be "
          "applied is logged into the CanNotApply array. This "
          "method takes four input parameters: Collection (the "
          "Collection of Elements to which the Setting is being "
          "applied), TimeToApply (which, being a datetime, can be "
          "either a specific time or a time interval), "
          "ContinueOnError (true indicates to continue processing "
          "when an error is encountered), MustBeCompletedBy (which "
          "indicates the required completion time for the method), "
          "and a PropertiesToApply array (which contains a list of "
          "the property names whose values will be applied). If a "
          "property is not in this list, it will be ignored by the "
          "Apply. If the array is null or empty or contains the "
          "string \"ALL\" as a property name, then all Settings "
          "properties will be applied. If it is set to \"NONE\", "
          "then no Settings properties will be applied. \n"
          "The return value should be 0 if the Setting is "
          "successfully applied to the referenced Collection, 1 if "
          "the method is not supported, 2 if the Setting was not "
          "applied within the specified time, 3 if the Setting "
          "cannot be applied using the input value for "
          "ContinueOnError, and any other number if an error "
          "occurred. One output parameter, CanNotApplystring, is "
          "defined, which is an array that lists the keys of the "
          "ManagedSystemElements to which the Setting could not be "
          "applied. This output parameter has meaning only when the "
          "ContinueOnError parameter is true. \n"
          "In a subclass, the set of possible return codes could be "
          "specified using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \"translated\" "
          "can also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note: If an error occurs when applying the Setting to a "
          "ManagedSystemElement in the Collection, the Element must "
          "be configured as it was when the \"Apply\" attempt "
          "began. That is, the Element should not be left in an "
          "indeterminate state." )]
   uint32 ApplyIncrementalChangeToCollection(
         [IN, Description ( 
             "The Collection of Elements to which the Setting is "
             "being applied." )]
      CIM_CollectionOfMSEs REF Collection, 
         [IN, Description ( "A specific time or a time interval." )]
      datetime TimeToApply, 
         [IN, Description ( 
             "True indicates to continue processing when an "
             "error is encountered." )]
      boolean ContinueOnError, 
         [IN, Description ( 
             "This parameter indicates the required completion "
             "time for the method." )]
      datetime MustBeCompletedBy, 
         [IN, Description ( 
             "A list of the property names whose values will be verified."
              )]
      string PropertiesToApply[], 
         [IN ( false ), OUT, Description ( 
             "A string array that lists the keys of the "
             "ManagedSystemElements to which the Setting cannot "
             "be applied." )]
      string CanNotApply[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::System::FilesystemServices" ), 
    Description ( 
       "This association defines settings that can be used to create "
       "or modify elements. Unlike ElementSettingData, these settings "
       "are not used to express the characteristics of existing "
       "managed elements. \n"
       "Typically, the capabilities associated with this class define "
       "the characteristics of a service in creating or modifying "
       "elements that are dependent on the service directly or "
       "indirectly. A CIM Client may use this association to find "
       "SettingData instances that can be used to create or modify "
       "these dependent elements." )]
class CIM_SettingAssociatedToCapabilities : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Capabilities." )]
   CIM_Capabilities REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Setting." )]
   CIM_SettingData REF Dependent;

      [Required, Description ( 
          "If an element whose characteristics are described by the "
          "associated Capabilities instance has a dependent element "
          "created or modified without specifying an associated "
          "SettingData instance, then the default SettingData will "
          "be used in that operation." )]
   boolean DefaultSetting = false;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SettingContext
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteComponent" }, 
    Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Configuration class is being deprecated in lieu of "
       "using a ConcreteComponent relationship to indicate a hierarchy "
       "of instances of Setting or SettingData. Therefore, the "
       "aggregation of Settings into Configurations is replaced by the "
       "ConcreteComponent relationship between instances of Settings "
       "and SettingData. \n"
       "Deprecated description: This relationship associates "
       "Configuration objects with Setting objects. For example, "
       "Settings of a NetworkAdapter could change based on the site or "
       "network to which its hosting ComputerSystem is attached. In "
       "this case, the ComputerSystem would have two different "
       "Configuration objects, corresponding to the differences in "
       "network configuration for the two network segments. "
       "Configuration A would aggregate a Setting object for the "
       "NetworkAdapter when operating on segment \"ANet\", whereas "
       "Configuration B would aggregate a different NetworkAdapter "
       "Setting object, specific to segment \"BNet\". Note that many "
       "Settings of the computer are independent of the network "
       "Configuration. For example, both Configurations A and B would "
       "aggregate the same Setting object for the MonitorResolution of "
       "the ComputerSystem." )]
class CIM_SettingContext {

      [Deprecated { "CIM_ConcreteComponent.GroupComponent" }, 
       Key, Aggregate, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Configuration object that aggregates "
          "the Setting." )]
   CIM_Configuration REF Context;

      [Deprecated { "CIM_ConcreteComponent.PartComponent" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: An aggregated Setting." )]
   CIM_Setting REF Setting;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.22.1" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "This association indicates that the non-null, non-key set of "
       "properties of the component SettingData instance specifies "
       "some capabilities of the associated Capabilities instance. The "
       "interpretation of the set of properties in the associated "
       "SettingData is governed by the properties: PropertyPolicy and ValueRole.\n"
       "For a particular Capabilities instance, the complete set of "
       "Component SettingData instances, together with properties of "
       "the Capabilities instance itself, defines the overall range of "
       "supported capabilities.\n"
       "PropertyPolicy determines whether the properties of the set "
       "are interpreted independently or as a whole (i.e. correlated.)\n"
       "ValueRole further qualifies the members of the set.\n"
       "This association eliminates the need to define and maintain "
       "corresponding property definitions and values in both a "
       "Capabilities subclass and a SettingData subclass.\n"
       "Typically these setting instances will be published along with "
       "the associated Capabilities instance and will not be "
       "modifiable by the client." )]
class CIM_SettingsDefineCapabilities : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Capabilities instance." )]
   CIM_Capabilities REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A Setting used to define the associated Capabilities instance."
           )]
   CIM_SettingData REF PartComponent;

      [Required, Description ( 
          "PropertyPolicy defines whether or not the non-null, "
          "non-key properties of the associated SettingData "
          "instance are treated independently or as a correlated "
          "set. For instance, an independent set of maximum "
          "properties might be defined, when there is no "
          "relationship between each property. On the other hand, "
          "several correlated sets of maximum properties might need "
          "to be defined when the maximum values of each are "
          "dependent on some of the others." ), 
       ValueMap { "0", "1", ".." }, 
       Values { "Independent", "Correlated", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_SettingsDefineCapabilities.ValueRole", 
          "CIM_SettingsDefineCapabilities.ValueRange" }]
   uint16 PropertyPolicy = 0;

      [Description ( 
          "The ValueRole property indicates further semantics on "
          "the interpretation of the non-null, non-key properties "
          "of the Component SettingData.\n"
          "\"Default\" indicates that property values of the "
          "component SettingData instance will be used as default "
          "values, when a new SettingData instance is created for "
          "elements whose capabilities are defined by the "
          "associated Capabilities instance.\n"
          "Across instances of settingdata, for particular "
          "properties having the same semantic purpose, at most one "
          "such settingdata instance shall be specified as a default.\n"
          "\"Optimal\" indicates that the SettingData instance "
          "represents optimal setting values for elements "
          "associated with the associated capabilities instance. "
          "Multiple component SettingData instances may be declared "
          "as optimal.\"Mean\" indicates that the non-null, "
          "non-key, non-enumerated, non-boolean, numeric properties "
          "of the associated SettingData instance represents an "
          "average point along some dimension. For different "
          "combinations of SettingData properties, multiple "
          "component SettingData instances may be declared as "
          "\"Mean\". \"Supported\" indicates that the non-null, "
          "non-key properties of the Component SettingData instance "
          "represents a set of supported property values that are "
          "not otherwise qualified." ), 
       ValueMap { "0", "1", "2", "3", ".." }, 
       Values { "Default", "Optimal", "Mean", "Supported", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_SettingsDefineCapabilities.PropertyPolicy", 
          "CIM_SettingsDefineCapabilities.ValueRange" }]
   uint16 ValueRole = 3;

      [Description ( 
          "The ValueRange property indicates further semantics on "
          "the interpretation of all non-null, non-key properties "
          "of the Component SettingData.\n"
          "\"Point\" indicates that this SettingData instance "
          "provides a single set of values.\n"
          "\"Minimums\", \"Maximums\", and \"Increments\", are only "
          "evaluated against non-null, non-key, non-enumerated, "
          "non-boolean, numeric properties of the SettingData "
          "instance. Each property of that set shall be "
          "mathematically comparable to other instances of that property.\n"
          "\"Minimums\" indicates that this SettingData instance "
          "provides minimum values for evaluated properties. When "
          "used with PropertyPolicy = \"Independent\", only one "
          "such setting per particular SettingData instance shall "
          "be specified for any Capabilities. Unless restricted by "
          "a Maximums on the same set of properties, all values "
          "that compare higher than the specified values are also "
          "considered to be supported by the associated "
          "capabilities instance. \n"
          "\"Maximums\" indicates that this SettingData instance "
          "provides maximum values for evaluated properties. When "
          "used with PropertyPolicy = \"Independent\", only one "
          "such setting per particular SettingData instance shall "
          "be specified for any Capabilities. Unless restricted by "
          "a Minimums on the same set of properties, all values "
          "that compare lower than the specified values are also "
          "considered to be supported by the associated "
          "capabilities instance.\n"
          "\"Increments\" indicates that this SettingData instance "
          "provides increment values for evaluated properties. For "
          "the associated Capabilities, if an evaluated property "
          "currently has no corresponding minimums or maximums, "
          "then the property has no affect. Otherwise, for each "
          "evaluated property: its value x shall be between the "
          "minimum and maximum, inclusively, and shall have the "
          "property that both the result of maximum minus x and the "
          "result of x minus minimum are each an integer multiple "
          "of the increment. If either minimum or maximum is not "
          "specified and the other is, then the missing value shall "
          "be respectively assumed to be the lowest or highest "
          "supported value for the property\'s data-type. "
          "Additionally, if both a minimum and a maximum are "
          "specified for an evaluated property, then the result of "
          "maximum minus minimum shall be an integer multiple of "
          "the increment." ), 
       ValueMap { "0", "1", "2", "3", ".." }, 
       Values { "Point", "Minimums", "Maximums", "Increments", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_SettingsDefineCapabilities.PropertyPolicy", 
          "CIM_SettingsDefineCapabilities.ValueRole" }]
   uint16 ValueRange = 0;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.28.0" ), 
    ClassConstraint { 
       "inv:self.IsLargeBuildNumber=true implies self.BuildNumber = null and self.LargeBuildNumber <> null", 
       "inv:self.IsLargeBuildNumber=false implies self.LargeBuildNumber=null" }, 
    UMLPackagePath ( "CIM::Core::Software" ), 
    Description ( 
       "SoftwareIdentity provides descriptive information about a "
       "software component for asset tracking and/or installation "
       "dependency management. When the IsEntity property has the "
       "value TRUE, the instance of SoftwareIdentity represents an "
       "individually identifiable entity similar to Physical Element. "
       "SoftwareIdentity does NOT indicate whether the software is "
       "installed, executing, etc. This extra information may be "
       "provided through specialized associations to Software "
       "Identity. For instance, both InstalledSoftwareIdentity and "
       "ElementSoftwareIdentity may be used to indicate that the "
       "software identified by this class is installed. "
       "SoftwareIdentity is used when managing the software components "
       "of a ManagedElement that is the management focus. Since "
       "software may be acquired, SoftwareIdentity can be associated "
       "with a Product using the ProductSoftwareComponent "
       "relationship. The Application Model manages the deployment and "
       "installation of software via the classes, SoftwareFeatures and "
       "SoftwareElements. SoftwareFeature and SoftwareElement are used "
       "when the software component is the management focus. The "
       "deployment/installation concepts are related to the "
       "asset/identity one. In fact, a SoftwareIdentity may correspond "
       "to a Product, or to one or more SoftwareFeatures or "
       "SoftwareElements - depending on the granularity of these "
       "classes and the deployment model. The correspondence of "
       "Software Identity to Product, SoftwareFeature or "
       "SoftwareElement is indicated using the ConcreteIdentity "
       "association. Note that there may not be sufficient detail or "
       "instrumentation to instantiate ConcreteIdentity. And, if the "
       "association is instantiated, some duplication of information "
       "may result. For example, the Vendor described in the instances "
       "of Product and SoftwareIdentity MAY be the same. However, this "
       "is not necessarily true, and it is why vendor and similar "
       "information are duplicated in this class. \n"
       "Note that ConcreteIdentity can also be used to describe the "
       "relationship of the software to any LogicalFiles that result "
       "from installing it. As above, there may not be sufficient "
       "detail or instrumentation to instantiate this association." )]
class CIM_SoftwareIdentity : CIM_LogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "The major number component of the software\'s version "
          "information - for example, \'12\' from version 12.1(3)T. "
          "This property is defined as a numeric value to allow the "
          "determination of \'newer\' vs. \'older\' releases. A "
          "\'newer\' major release is indicated by a larger numeric "
          "value." )]
   uint16 MajorVersion;

      [Description ( 
          "The minor number component of the software\'s version "
          "information - for example, \'1\' from version 12.1(3)T. "
          "This property is defined as a numeric value to allow the "
          "determination of \'newer\' vs. \'older\' releases. A "
          "\'newer\' minor release is indicated by a larger numeric "
          "value." )]
   uint16 MinorVersion;

      [Description ( 
          "The revision or maintenance release component of the "
          "software\'s version information - for example, \'3\' "
          "from version 12.1(3)T. This property is defined as a "
          "numeric value to allow the determination of \'newer\' "
          "vs. \'older\' releases. A \'newer\' revision is "
          "indicated by a larger numeric value." )]
   uint16 RevisionNumber;

      [Description ( "The build number of the software." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.LargeBuildNumber", 
          "CIM_SoftwareIdentity.IsLargeBuildNumber" }]
   uint16 BuildNumber;

      [Description ( 
          "The build number of the software if IsLargeBuildNumber "
          "is TRUE. TheLargeBuildNumber property should be used for "
          "all future implementations." ), 
       ModelCorrespondence { "CIM_SoftwareIdentity.BuildNumber", 
          "CIM_SoftwareIdentity.IsLargeBuildNumber" }]
   uint64 LargeBuildNumber;

      [Description ( 
          "The IsLargeBuildNumber property is used to indicate if "
          "the BuildNumber of LargeBuildNumber property contains "
          "the value of the software build. A value of TRUE shall "
          "indicate that the build number is represented by the "
          "LargeBuildNumber property. A value of FALSE shall "
          "indicate that the build number is represented by the "
          "BuildNumber property." ), 
       ModelCorrespondence { "CIM_SoftwareIdentityBuildNumber", 
          "CIM_SoftwareIdentity.LargeBuildNumber" }]
   boolean IsLargeBuildNumber = false;

      [Description ( 
          "A string representing the complete software version "
          "information - for example, \'12.1(3)T\'. This string and "
          "the numeric major/minor/revision/build properties are "
          "complementary. Since vastly different representations "
          "and semantics exist for versions, it is not assumed that "
          "one representation is sufficient to permit a client to "
          "perform computations (i.e., the values are numeric) and "
          "a user to recognize the software\'s version (i.e., the "
          "values are understandable and readable). Hence, both "
          "numeric and string representations of version are "
          "provided." )]
   string VersionString;

      [Description ( 
          "Specifies the target operating systems of the software. "
          "This property should be used when a target operating "
          "system is not listed in the TargetOSTypes array values." )]
   string TargetOperatingSystems[];

      [Description ( "Manufacturer of this software." )]
   string Manufacturer;

      [Description ( 
          "The language editions supported by the software. The "
          "language codes defined in ISO 639 should be used." )]
   string Languages[];

      [Description ( 
          "An array of enumerated integers that classify this "
          "software. For example, the software MAY be "
          "instrumentation (value=5) or firmware and diagnostic "
          "software (10 and 7). The use of value 6, Firmware/BIOS, "
          "is being deprecated. Instead, either the value 10 "
          "(Firmware) and/or 11 (BIOS/FCode) SHOULD be used. The "
          "value 13, Software Bundle, identifies a software package "
          "consisting of multiple discrete software instances that "
          "can be installed individually or together.\n"
          "Each contained software instance is represented by an "
          "instance of SoftwareIdentity that is associated to this "
          "instance of SoftwareIdentityinstance via a Component "
          "association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "Driver", 
          "Configuration Software", "Application Software", 
          "Instrumentation", "Firmware/BIOS", "Diagnostic Software", 
          "Operating System", "Middleware", "Firmware", 
          "BIOS/FCode", "Support/Service Pack", "Software Bundle", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ClassificationDescriptions" }]
   uint16 Classifications[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the entries in the "
          "Classifications array. Note that each entry is related "
          "to one in the Classifications array located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_SoftwareIdentity.Classifications" }]
   string ClassificationDescriptions[];

      [Description ( 
          "A manufacturer-allocated number used to identify the software."
           )]
   string SerialNumber;

      [Description ( 
          "An array of strings that describes the compatible "
          "installer(s). The purpose of the array elements is to "
          "establish compatibility between a SoftwareIdentity and a "
          "SoftwareInstallationService that can install the "
          "SoftwareIdentity by comparing the values of the array "
          "elements of this property to the values of "
          "SoftwareInstallationServiceCapabilities.SupportedTargetTypes[] "
          "property\'s array elements." ), 
       ModelCorrespondence { 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedTargetTypes" }]
   string TargetTypes[];

      [Description ( 
          "IdentityInfoValue captures additional information that "
          "MAY be used by an organization to describe or identify a "
          "software instance within the context of the "
          "organization. For example, large organizations may have "
          "several ways to address or identify a particular "
          "instance of software depending on where it is stored; a "
          "catalog, a web site, or for whom it is intended; "
          "development, customer service, etc. The indexed array "
          "property IdentityInfoValue contains 0 or more strings "
          "that contain a specific identity info string value. "
          "IdentityInfoValue is mapped and indexed to "
          "IdentityInfoType. When the IdentityInfoValue property is "
          "implemented, the IdentityInfoType property MUST be "
          "implemented and shall be formatted using the algorithm "
          "provided in the IdentityInfoType property Description." ), 
       ArrayType ( "Indexed" ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_SoftwareIdentity.IdentityInfoType" }]
   string IdentityInfoValue[];

      [Description ( 
          "An indexed array of fixed-form strings that provide the "
          "description of the type of information that is stored in "
          "the corresponding component of the IdentityInfoValue "
          "array. The elements of this property array describe the "
          "type of the value in the corresponding elements of the "
          "IndetityInfoValue array. When the IdentityInfoValue "
          "property is implemented, the IdentityInfoType property "
          "MUST be implemented. To insure uniqueness the "
          "IdentityInfoType property SHOULD be formatted using the "
          "following algorithm: < OrgID > : < LocalID > Where < "
          "OrgID > and < LocalID > are separated by a colon (:), "
          "and where < OrgID > MUST include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "IdentityInfoType or that is a registered ID assigned to "
          "the business entity by a recognized global authority. "
          "(This requirement is similar to the < Schema Name > _ < "
          "Class Name > structure of Schema class names.) In "
          "addition, to ensure uniqueness, < OrgID > MUST NOT "
          "contain a colon (:). When using this algorithm, the "
          "first colon to appear in IdentityInfoType MUST appear "
          "between < OrgID > and < LocalID > . < LocalID > is "
          "chosen by the business entity and SHOULD NOT be reused "
          "to identify different underlying software elements." ), 
       ArrayType ( "Indexed" ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_SoftwareIdentity.IdentityInfoValue" }]
   string IdentityInfoType[];

      [Description ( "The date the software was released." )]
   datetime ReleaseDate;

      [Description ( 
          "The IsEntity property is used to indicate whether the "
          "SoftwareIdentity corresponds to a discrete copy of the "
          "software component or is being used to convey "
          "descriptive and identifying information about software "
          "that is not present in the management domain.A value of "
          "TRUE shall indicate that the SoftwareIdentity instance "
          "corresponds to a discrete copy of the software "
          "component. A value of FALSE shall indicate that the "
          "SoftwareIdentity instance does not correspond to a "
          "discrete copy of the Software." )]
   boolean IsEntity = false;

      [Description ( 
          "The binary format type of the installation package of "
          "the software. This property can be used to locate a "
          "SoftwareInstallationService capable of installing this "
          "software." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "Not Applicable", "Linux RPM", 
          "HP-UX Depot", "Windows MSI", "Solaris Package", 
          "Macintosh Disk Image", "Debian linux Package", 
          "VMware vSphere Installation Bundle", 
          "VMware Software Bulletin", "HP Smart Component", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.OtherExtendedResource", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeMajorVersion", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeMinorVersion", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeRevisionNumber", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeBuildNumber", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]" }]
   uint16 ExtendedResourceType;

      [Description ( 
          "A string describing the binary format type of the "
          "installation package of the software when the "
          "ExtendedResourceType property has a value of 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeMajorVersion", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeMinorVersion", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeRevisionNumber", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeBuildNumber", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]" }]
   string OtherExtendedResourceTypeDescription;

      [Description ( 
          "This property represents the major number component of "
          "the minimum version of the installer, represented by the "
          "ExtendedResourceType property, that is required to "
          "install this software." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.OtherExtendedResourceTypeDescription", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMajorVersions[]" }]
   uint16 MinExtendedResourceTypeMajorVersion;

      [Description ( 
          "This property represents the minor number component of "
          "the minimum version of the installer, represented by "
          "theExtendedResourceType property, that is required to "
          "install this software." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.OtherExtendedResourceTypeDescription", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMinorVersions[]" }]
   uint16 MinExtendedResourceTypeMinorVersion;

      [Description ( 
          "This property represents the Revision number component "
          "of the minimum version of the installer, represented by "
          "theExtendedResourceType property, that is required to "
          "install this software." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.OtherExtendedResourceTypeDescription", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesRevisionNumbers[]" }]
   uint16 MinExtendedResourceTypeRevisionNumber;

      [Description ( 
          "This property represents the Build number component of "
          "the minimum version of the installer, represented by "
          "theExtendedResourceType property, that is required to "
          "install this software." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.OtherExtendedResourceTypeDescription", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesBuildNumbers[]" }]
   uint16 MinExtendedResourceTypeBuildNumber;

      [Description ( 
          "The TargetOSTypes property specifies the target "
          "operating systems supported by the software. When the "
          "target operating system of the software is not listed in "
          "the enumeration values, TargetOperatingSystems[] "
          "property should be used to specify the target operating "
          "system." ), 
       ModelCorrespondence { "CIM_OperatingSystem.OSType" }]
   uint16 TargetOSTypes[];


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Core::Software" ), 
    Description ( 
       "A subclass of capabilities that defines the capabilities of a "
       "SoftwareInstallationService. A single instance of "
       "SoftwareInstallationServiceCapabilities is associated with a "
       "SoftwareInstallationService using ElementCapabilities." )]
class CIM_SoftwareInstallationServiceCapabilities : CIM_Capabilities {

      [Required, Description ( 
          "Enumeration indicating what operations will be executed "
          "as asynchronous jobs. If an operation is included in "
          "both this and SupportedSynchronousActions then the "
          "underlying implementation is indicating that it may or "
          "may not create a job. If a Job is created, then the "
          "methods in SoftwareInstallationService return a "
          "reference to that Job as the Job parameter." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "None supported", "Install From Software Identity", 
          "Install from ByteStream", "Install from URI" }, 
       ModelCorrespondence { 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedSynchronousActions" }]
   uint16 SupportedAsynchronousActions[];

      [Required, Description ( 
          "Enumeration indicating what operations will be executed "
          "without the creation of a job. If an operation is "
          "included in both this and SupportedAsynchronousActions "
          "then the underlying instrumentation is indicating that "
          "it may or may not create a job." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "None supported", "Install From Software Identity", 
          "Install from ByteStream", "Install from URI" }, 
       ModelCorrespondence { 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedAsynchronousActions" }]
   uint16 SupportedSynchronousActions[];

      [Required, Description ( 
          "An array containing a list of "
          "SoftwareIdentity.TargetType properties that this service "
          "\'knows\' how to install. TargetType is an application "
          "specific string which is invariant across version or "
          "name changes of the SoftwareIdentity and so can be used "
          "by a client to select Software Identities compatible "
          "with this service. \n"
          "If the service is generic (for example an OS installer), "
          "this array will be empty." ), 
       ModelCorrespondence { "CIM_SoftwareIdentity.TargetType" }]
   string SupportedTargetTypes[];

      [Required, Description ( 
          "An array containing a list of the binary format types "
          "that this service \'knows\' how to install. The Values "
          "for this property are the subset of "
          "CIM_SoftwareIdentityResource.ExtendedResourceTypes that "
          "apply to the \'Installer and Payload\', \'Installer\' "
          "and \' Installability Checker\' ResourceTypes. For "
          "example, an a Windows system, this property may be set "
          "to \'4\' indicating \'Windows MSI\'. This property "
          "should be set to \'2\' (Not Applicable) if this service "
          "is not OS specific." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "Not Applicable", "Linux RPM", 
          "HP-UX Depot", "Windows MSI", "Solaris Package", 
          "Macintosh Disk Image", "Debian linux Package", 
          "VMware vSphere Installation Bundle", 
          "VMware Software Bulletin", "HP Smart Component", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareInstallationServiceCapabilities.OtherSupportedExtendedResourceTypeDescriptions[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMajorVersions[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMinorVersions[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesRevisionNumbers[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesbuildNumbers[]" }]
   uint16 SupportedExtendedResourceTypes[];

      [Required, Description ( 
          "This property indicates whether "
          "SoftwareInstallationService.InstallFromSoftwareIdentity "
          "supports adding a SoftwareIdentity to a Collection." )]
   boolean CanAddToCollection;

      [Description ( 
          "An enumeration indicating the specific install related "
          "optionssupported by this service. Since this is an "
          "array, multiple values may be specified. See the "
          "InstallOptions parameter of "
          "theSoftwareInstallationService.InstallFromSoftwareIdentity "
          "method for the description of these values." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "32768..65535" }, 
       Values { "Defer target/system reset", "Force installation", 
          "Install", "Update", "Repair", "Reboot", "Password", 
          "Uninstall", "Log", "SilentMode", "AdministrativeMode", 
          "ScheduleInstallAt", "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_SoftwareInstallationService.InstallFromSoftwareIdentity" }]
   uint16 SupportedInstallOptions[];

      [Description ( 
          "A string describing the binary format types that this "
          "service \'knows\' how to install when the corresponding "
          "SupportedExtendedResourceTypes array includes the value "
          "1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMajorVersions[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMinorVersions[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesRevisionNumbers[]", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesbuildNumbers[]" }]
   string OtherSupportedExtendedResourceTypeDescriptions[];

      [Description ( 
          "This property represents the major number component of "
          "the installer version supported by the "
          "SoftwareInstallationService.The installer format is "
          "represented by the element at the same index in the "
          "SupportedExtendedResourceTypes array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeMajorVersion", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]" }]
   uint16 SupportedExtendedResourceTypesMajorVersions[];

      [Description ( 
          "This property represents the minor number component of "
          "the installer version supported by the "
          "SoftwareInstallationService.The installer format is "
          "represented by the element at the same index in the "
          "SupportedExtendedResourceTypes array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeMinorVersion", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]" }]
   uint16 SupportedExtendedResourceTypesMinorVersions[];

      [Description ( 
          "This property represents the revision number component "
          "of the installer version supported by the "
          "SoftwareInstallationService.The installer format is "
          "represented by the element at the same index in the "
          "SupportedExtendedResourceTypes array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeRevisionNumber", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]" }]
   uint16 SupportedExtendedResourceTypesRevisionNumbers[];

      [Description ( 
          "This property represents the build number component of "
          "the installer version supported by the "
          "SoftwareInstallationService.The installer format is "
          "represented by the element at the same index in the "
          "SupportedExtendedResourceTypes array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SoftwareIdentity.ExtendedResourceType", 
          "CIM_SoftwareIdentity.MinExtendedResourceTypeBuildNumber", 
          "CIM_SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes[]" }]
   uint16 SupportedExtendedResourceTypesBuildNumbers[];

      [Description ( 
          "This property lists the URI schemes supported by the "
          "SoftwareInstallationService." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "data", "file", "ftp", "http", "https", "nfs", 
          "tftp", "DMTF Reserved", "Vendor Specific" }]
   uint16 SupportedURISchemes[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "The Spared association indicates an element that is acting as "
       "a replacement for another element. If the Dependent references "
       "a Collection, this indicates that \'spared\' element is a "
       "member of that collection and the actual mapping between the "
       "spare and the spared is un-important." )]
class CIM_Spared : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "A ManagedElement that has replaced/spared another the "
          "reference Dependent element." )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Element or Elements (in the case of a collection) "
          "that have been replaced/spared." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00717.001" type ="add">Deprecated</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SpareGroup
// ==================================================================
   [Deprecated { "CIM_RedundancySet" }, 
    Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A class derived from RedundancyGroup indicating that one or "
       "more of the aggregated elements can be spared. (The actual "
       "Spares are defined using the ActsAsSpare association.) An "
       "example is the use of redundant NICs in a ComputerSystem - "
       "where one NIC is primary and the other is Spare. The \'primary\' "
       "NIC would be a member of the SpareGroup (associated using the "
       "RedundancyComponent class) and the \'other\' NIC would be "
       "associated using the ActsAsSpare relationship. \n"
       "The use of the class is being deprecated in lieu of using the "
       "RedundancySet class." )]
class CIM_SpareGroup : CIM_RedundancyGroup {


      [Deprecated { "CIM_RedundancySet.FailOver()" }, 
       Description ( 
          "This method is forces a failover from one ManagedSystem "
          "Element to another. There are two parameters to the "
          "Failover method, FailoverFrom and FailoverTo. The "
          "FailoverFrom parameter is a reference to the primary "
          "ManagedSystemElement that will become inactive after the "
          "method. This Element should be associated with the "
          "SpareGroup through the RedundancyComponent relationship. "
          "The FailoverTo parameter is a reference to the "
          "ManagedSystemElement that will take over for the "
          "primary. This Element should be associated with the "
          "SpareGroup through the ActsAsSpare association. Once the "
          "failover has occurred, the SpareGroup and the Redundancy "
          "Component and ActsAsSpare associations will be updated "
          "with current status. For example, the ActsAsSpare "
          "association that contained the FailoverTo Element will "
          "be deleted and a new RedundancyComponent association "
          "instantiated in its place. The method should return 0 if "
          "successful, 1 if the request is not supported, and some "
          "other value if any other error occurred. In a subclass, "
          "the set of possible return codes could be specified, "
          "using a ValueMap qualifier on the method. The strings to "
          "which the ValueMap contents are \'translated\' may also "
          "be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 Failover(
         [IN, Description ( 
             "The primary ManagedSystemElement that will become "
             "inactive after the method." )]
      CIM_ManagedSystemElement REF FailoverFrom, 
         [IN, Description ( 
             "The ManagedSystemElement that will take over from "
             "the primary MSE." )]
      CIM_ManagedSystemElement REF FailoverTo);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "The CIM_StorageAllocationSettingData class represents settings "
       "specifically related to the allocation of virtual storage." )]
class CIM_StorageAllocationSettingData : CIM_ResourceAllocationSettingData {

      [Description ( 
          "Size in bytes of the blocks that are presented to the "
          "consumer as the result of this storage resource "
          "allocation or storage resource allocation request. If "
          "the block size is variable, then the maximum block size "
          "in bytes should be specified. If the block size is "
          "unknown or if a block concept does not apply, then the "
          "value 1 shall be used.\n"
          "NOTE: The use of 1 (and not 0) to indicate that the "
          "blocksize is unknown still allows the use of the "
          "VirtualQuantity property to convey the size in blocks of "
          "size 1).\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.BlockSize property. See the "
          "description of the CIM_StorageExtent.BlockSize property "
          "for details." ), 
       ModelCorrespondence { "CIM_StorageExtent.BlockSize" }, 
       PUnit ( "byte" )]
   uint64 VirtualResourceBlockSize;

      [Override ( "VirtualQuantity" ), 
       Description ( 
          "Number of blocks that are presented to the consumer. The "
          "blocksize is specified by the value of the "
          "VirtualResourceBlockSize property." ), 
       ModelCorrespondence { "CIM_StorageExtent.NumberOfBlocks", 
          "CIM_StorageAllocationSettingData.VirtualQuantityUnits" }]
   uint64 VirtualQuantity;

      [Override ( "VirtualQuantityUnits" ), 
       Description ( 
          "This property specifies the units used by the "
          "VirtualQuantity property. The value shall match "
          "\"count(fixed size block)\" | \"byte\".\n"
          "The default value \"count(fixed size block)\" assumes "
          "that the implementation knows a fixed block size and "
          "conveys the block size through the value of the "
          "VirtualResourceBlockSize property. However, if the "
          "VirtualResourceBlockSize property has a value \"1\", "
          "this indicates an unknown or variable block size; in "
          "this case the value of the VirtualQuantityUnit property "
          "should be set to \"byte\", such that the value of the "
          "VirtualQuantity property is measured directly in byte.\n"
          "NOTE: The IsPUnit qualifier already formally restricts "
          "the value of this property to be a unit as specified in "
          "DMTF DSP0004:2.5.0, Annex C; in addition, the normative "
          "text in the description of this property above further "
          "constrains the value to match \"byte\" | \"count(fixed "
          "size block)\"." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.VirtualQuantity" }, 
       IsPUnit]
   string VirtualQuantityUnits = "count(fixed size block)";

      [Description ( 
          "Access describes whether the allocated storage extent is "
          "1 (readable), 2 (writeable), or 3 (both).\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.Access property, except deprecated "
          "values. See the description of the "
          "CIM_StorageExtent.Access property for details." ), 
       ValueMap { "0", "1", "2", "3", ".." }, 
       Values { "Unknown", "Readable", "Writeable", 
          "Read/Write Supported", "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_StorageExtent.Access" }]
   uint16 Access;

      [Description ( 
          "Size in bytes of the blocks that are allocated at the "
          "host as the result of this storage resource allocation "
          "or storage resource allocation request. If the block "
          "size is variable, then the maximum block size in bytes "
          "should be specified. If the block size is unknown or if "
          "a block concept does not apply, then the value 1 shall "
          "be used.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.BlockSize property. See the "
          "description of the CIM_StorageExtent.BlockSize property "
          "for details." ), 
       ModelCorrespondence { "CIM_StorageExtent.BlockSize" }, 
       PUnit ( "byte" )]
   uint64 HostResourceBlockSize;

      [Override ( "Reservation" ), 
       Description ( 
          "The amount of blocks that are guaranteed to be available "
          "for this storage resource allocation at the host. The "
          "blocksize is specified by the value of the "
          "HostResourceBlockSize property." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostResourceBlockSize" }]
   uint64 Reservation;

      [Override ( "Limit" ), 
       Description ( 
          "The maximum amount of blocks that will be granted for "
          "this storage resource allocation at the host. The "
          "blocksize is specified by the value of the "
          "HostResourceBlockSize property.Usually the value this "
          "property would reflect a maximum size for the allocated "
          "host extent that matches the size of the virtual storage "
          "extent presented to the consumer. A value less than that "
          "would indicate a situation where a sparsely populated "
          "virtual storage extent is expected, where the fill rate "
          "is limited by the value of the Limit property." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostResourceBlockSize" }]
   uint64 Limit;

      [Description ( 
          "The HostExtentStartingAddress property identifies the "
          "starting address on the host storage extent identified "
          "by the value of the HostExtentName property that is used "
          "for the allocation of the virtual storage extent.\n"
          "A value of NULL indicates that there is no direct "
          "mapping of the virtual storage extent onto the "
          "referenced host storage extent.\n"
          "NOTE: This property is a copy of the "
          "CIM_BasedOn.StartingAddess property. See the description "
          "of CIM_BasedOn association for details." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostResourceBlockSize", 
          "CIM_BasedOn.StartingAddress" }]
   uint64 HostExtentStartingAddress;

      [Description ( 
          "A unique identifier for the host extent. The identified "
          "host extent is used for the storage resource allocation.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.Name property. See the description of "
          "CIM_StorageExtent.Name property for details." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentNameFormat", 
          "CIM_StorageAllocationSettingData.HostExtentNameNamespace", 
          "CIM_StorageExtent.Name" }]
   string HostExtentName;

      [Description ( 
          "The HostExtentNameFormat property identifies the format "
          "that is used for the value of the HostExtentName property.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.NameFormat property, excluding "
          "deprecated values. See the description of "
          "CIM_StorageExtent.NameFormat class for details.\n"
          "7 = Serial Number/Vendor/Model (SNVM) SNVM is 3 strings "
          "representing the vendor name, product name within the "
          "vendor namespace, and the serial number within the model "
          "namespace. Strings are delimited with a \'+\'. Spaces "
          "may be included and are significant. The serial number "
          "is the text representation of the serial number in "
          "hexadecimal upper case. This represents the vendor and "
          "model ID from SCSI Inquiry data; the vendor field MUST "
          "be 8 characters wide and the product field MUST be 16 "
          "characters wide. For example, \n"
          "\'ACME____+SUPER DISK______+124437458\' (_ is a space "
          "character) \n"
          "9 = NAA as a generic format. See \n"
          "http://standards.ieee.org/regauth/oui/tutorials/fibrecomp_id.html. "
          "Formatted as 16 or 32 unseparated uppercase hex "
          "characters (2 per binary byte). For example "
          "\'21000020372D3C73\' \n"
          "10 = EUI as a generic format (EUI64) See \n"
          "http://standards.ieee.org/regauth/oui/tutorials/EUI64.html. \n"
          "Formatted as 16 unseparated uppercase hex characters (2 "
          "per binary byte) \n"
          "11 = T10 vendor identifier format as returned by SCSI "
          "Inquiry VPD page 83, identifier type 1. See T10 SPC-3 "
          "specification. This is the 8-byte ASCII vendor ID from "
          "the T10 registry followed by a vendor specific ASCII "
          "identifier; spaces are permitted. For non SCSI volumes, "
          "\'SNVM\' may be the most appropriate choice. 12 = OS "
          "Device Name (for LogicalDisks). See LogicalDisk Name "
          "description for details." ), 
       ValueMap { "0", "1", "7", "9", "10", "11", "12", ".." }, 
       Values { "Unknown", "Other", "SNVM", "NAA", "EUI64", 
          "T10VID", "OS Device Name", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentName", 
          "CIM_StorageAllocationSettingData.OtherHostExtentNameFormat", 
          "CIM_StorageExtent.NameFormat" }]
   uint16 HostExtentNameFormat;

      [Description ( 
          "A string describing the format of the HostExtentName "
          "property if the value of the HostExtentNameFormat "
          "property is 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentNameFormat" }]
   string OtherHostExtentNameFormat;

      [Description ( 
          "If the host extent is a SCSI volume, then the preferred "
          "source for SCSI volume names is SCSI VPD Page 83 responses.\n"
          "NOTE: This property is a copy of the "
          "CIM_StorageExtent.NameNamespace property. See the "
          "description of CIM_StorageExtent.NameNamespace class for details.\n"
          "Page 83 returns a list of identifiers for various device "
          "elements. The metadata for each identifier includes an "
          "Association field, identifiers with association of 0 "
          "apply to volumes. Page 83 supports several namespaces "
          "specified in the Type field in the identifier metadata. "
          "See SCSI SPC-3 specification. \n"
          "2 = VPD Page 83, Type 3 NAA (NameFormat SHOULD be NAA) \n"
          "3 = VPD Page 83, Type 2 EUI64 (NameFormat EUI) \n"
          "4 = VPD Page 83, Type 1 T10 Vendor Identification \n"
          "(NameFormat T10) \n"
          "Less preferred volume namespaces from other interfaces: \n"
          "5 = VPD page 80, Serial number (NameFormat SHOULD be "
          "Other) \n"
          "6 = FC NodeWWN (NameFormat SHOULD be NAA or EUI) \n"
          "7 = Serial Number/Vendor/Model (NameFormat SHOULD be "
          "SNVM) cThe preferred namespace for LogigicalDisk names "
          "is platform specific device namespace; see LogigicalDIsk "
          "Description. \n"
          "8 = OS Device Namespace." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", ".." }, 
       Values { "Unknown", "Other", "VPD83Type3", "VPD83Type2", 
          "VPD83Type1", "VPD80", "NodeWWN", "SNVM", 
          "OS Device Namespace", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentName", 
          "CIM_StorageAllocationSettingData.OtherHostExtentNameNamespace", 
          "CIM_StorageAllocationSettingData.HostExtentNameFormat", 
          "CIM_StorageExtent.Namespace" }]
   uint16 HostExtentNameNamespace;

      [Description ( 
          "A string describing the namespace of the HostExtentName "
          "property if the value of the HostExtentNameNamespace "
          "matches 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_StorageAllocationSettingData.HostExtentNameNamespace" }]
   string OtherHostExtentNameNamespace;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00717.001" type ="add">Deprecated</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageRedundancyGroup
// ==================================================================
   [Deprecated { "CIM_StorageRedundancySet" }, 
    Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A class derived from RedundancyGroup containing mass "
       "storage-related redundancy information. StorageRedundancy "
       "Groups are used to protect user data. They act on one or more "
       "underlying StorageExtents, associated via "
       "ExtentRedundancyComponent and produce one or more protected "
       "StorageExtents that are associated to the underlying "
       "StorageExtents via ProtectedExtentBasedOn or "
       "CompositeExtentBasedOn. StorageRedundancyGroups may overlap. "
       "However, the underlying StorageExtents within the overlap "
       "should not contain any check data. \n"
       "The use of this class is being deprecated in lieu of using the "
       "StorageRedundancySet class." )]
class CIM_StorageRedundancyGroup : CIM_RedundancyGroup {

      [Deprecated { "CIM_StorageRedundancySet.TypeOfAlgorithm" }, 
       Description ( 
          "The TypeOfAlgorithm specifies the algorithm used for "
          "data redundancy and reconstruction. For example, \"P+Q\" "
          "(value =5) or \"P+S\" (7) may be specified. The value of "
          "0, is defined as \"None\" to indicate that data "
          "redundancy is not active. An inactive redundancy should "
          "only be instantiated if data striping or concatenation "
          "are active. These are indicated by the IsStriped or "
          "IsConcatentated boolean properties of this "
          "RedundancyGroup." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "None", "Other", "Unknown", "Copy", "XOR", "P+Q", 
          "S", "P+S" }, 
       MappingStrings { "MIF.DMTF|Redundancy Group|001.2" }]
   uint16 TypeOfAlgorithm;

      [Deprecated { "No Value" }, 
       Description ( 
          "StorageRedundancy provides additional information on the "
          "state of the RedundancyGroup, beyond the "
          "RedundancyStatus property. Information like \"Reconfig "
          "In Progress\" (value =1) or \"Redundancy Disabled\" can "
          "be specified using this property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "No Additional Status", "Reconfig In Progress", 
          "Data Lost", "Not Currently Configured", 
          "Protected Rebuild", "Redundancy Disabled", 
          "Unprotected Rebuild", "Recalculating", "Verifying" }]
   uint16 StorageRedundancy;

      [Deprecated { "CIM_CompositeExtent.ExtentStripeLength" }, 
       Description ( 
          "True indicates that the data is striped across the "
          "various StorageExtents in the Group." )]
   boolean IsStriped;

      [Deprecated { "CIM_CompositeExtent.IsConcatenated" }, 
       Description ( 
          "True indicates that the data is concatenated across the "
          "various StorageExtents in the Group." )]
   boolean IsConcatenated;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemSetting
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SystemSetting represents the general concept of a "
       "CIM_Setting that is scoped by a System." )]
class CIM_SystemSetting : CIM_Setting {

      [Key, Description ( 
          "The CreationClassName of the scoping system." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The Name of the scoping system." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "SettingID" ), 
       MaxLen ( 256 )]
   string SettingID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
// CIM_SystemSettingContext
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteComponent" }, 
    Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Configuration and SystemConfiguration classes are "
       "deprecated in lieu of using a ConcreteComponent relationship "
       "to indicate a hierarchy of Settings or SettingData instances. "
       "Therefore, the aggregation of SystemSettings into System "
       "Configurations is replaced by the ConcreteComponent "
       "relationship between instances of Settings and SettingData. \n"
       "Deprecated description: This relationship associates "
       "System-specific Configuration objects with System-specific "
       "Setting objects, similar to the SettingContext association." )]
class CIM_SystemSettingContext {

      [Deprecated { "CIM_ConcreteComponent.GroupComponent" }, 
       Key, Aggregate, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Configuration object that aggregates "
          "the Setting." )]
   CIM_SystemConfiguration REF Context;

      [Deprecated { "CIM_ConcreteComponent.PartComponent" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: An aggregated Setting." )]
   CIM_SystemSetting REF Setting;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "SystemSpecificCollection represents the general concept of a "
       "collection that is scoped (or contained) by a System. It "
       "represents a Collection that has meaning only in the context "
       "of a System, a Collection whose elements are restricted by the "
       "definition of the System, or both of these types of "
       "Collections. This meaning is explicitly described by the "
       "(required) association, HostedCollection. \n"
       "An example of a SystemSpecificCollection is a Fibre Channel "
       "zone that collects network ports, port groupings, and aliases "
       "(as required by a customer) in the context of an AdminDomain. "
       "The Collection is not a part of the domain, but merely an "
       "arbitrary grouping of the devices and other Collections in the "
       "domain. In other words, the context of the Collection is "
       "restricted to the domain, and its members are also limited by "
       "the domain." )]
class CIM_SystemSpecificCollection : CIM_Collection {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. To ensure uniqueness within the "
          "NameSpace, the value of InstanceID should be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> must include a unique name. It "
          "can be a copyrighted, trademarked, or otherwise unique "
          "name that is owned by the business entity that is "
          "creating or defining the InstanceID. Or, it could be a "
          "registered ID that is assigned to the business entity by "
          "a recognized global authority.(This requirement is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> must not contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "must appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity must ensure "
          "that the resulting InstanceID is not re-used as any of "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF-defined instances, the \'preferred\' algorithm "
          "must be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Core::Virtualization" ), 
    Description ( 
       "CIM_VirtualEthernetSwitchSettingData specializes "
       "CIM_VirtualSystemSettingDatato add the specific properties "
       "required to define a virtual Ethernet bridge." )]
class CIM_VirtualEthernetSwitchSettingData : CIM_VirtualSystemSettingData {

      [Description ( 
          "A list of VLANs identified by these VIDs that this "
          "bridge can access" )]
   string VLANConnection[];

      [Description ( 
          "A list of host resource pools to be associated or that "
          "are currently associated with the Ethernet bridge for "
          "the purpose of the allocation of Ethernet connections "
          "between a virtual system and an Ethernet bridge Each "
          "non-Null value of the AssoicatedResourcePool property "
          "shall conform to the production "
          "WBEM_URI_UntypedInstancePath as defined in DSP0207" )]
   string AssociatedResourcePool[];

      [Description ( 
          "This property specifies the number of unique MAC "
          "addresses that can be learned by the bridge to support "
          "MAC Address Learning, as defined in the IEEE 802.1D "
          "standard or in a VLAN-aware bridge this property "
          "specifies the number of MAC,VID pairs learned by the "
          "bridge to support learning as definded in the IEEE "
          "802.1Q standard." )]
   uint32 MaxNumMACAddress;

      [Description ( 
          "Describes the Ethernet virtual bridge mode that this "
          "bridge is operating in. The value 2(VEB) indicates that "
          "the associated port on the adjacent bridge is not "
          "configured for Reflective Relay and 3 (VEPA) indicates "
          "that the associated port on the adjacent bridge is "
          "configured for Reflective Relay as defined in IEEE "
          "802.1Qbg. The value 4 (Direct) indicates that a bridge "
          "is directly connected to or is part of a hardware "
          "Ethernet NIC." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "VEB", "VEPA", "Direct", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_VirtualEthernetSwitchSettingData.OtherEVBMode" }]
   uint16 EVBMode;

      [Description ( 
          "A string that shall describe the EVBMode when a well "
          "defined value is not available and EVBMode matches 1 "
          "(Other). This property should be set to null when the "
          "EVBMode is set to any other value than 1." ), 
       ModelCorrespondence { 
          "CIM_VirtualEthernetSwitchSettingData.EVBMode" }]
   string OtherEVBMode;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Core::Virtualization" ), 
    Description ( 
       "Capabilities of a CIM_VirtualSystemManagementService." )]
class CIM_VirtualSystemManagementCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "Enumeration of strings each designating a type of "
          "virtual system that the implementation supports.\n"
          "The value of each non-NULL array element shall conform "
          "to the format defined for the "
          "CIM_VirtualSystemSettingData.VirtualSystemType property." ), 
       ModelCorrespondence { 
          "CIM_VirtualSystemSettingData.VirtualSystemType" }]
   string VirtualSystemTypesSupported[];

      [Description ( 
          "Enumeration of method identifiers each identifying a "
          "method of class CIM_VirtualSystemManagementService that "
          "is supported synchronously by the implementation." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "..", "32767..65535" }, 
       Values { "DefineSystemSupported", "DestroySystemSupported", 
          "DestroySystemConfigurationSupported", 
          "ModifyResourceSettingsSupported", 
          "ModifySystemSettingsSupported", 
          "RemoveResourcesSupported", 
          "SelectSystemConfigurationSupported", 
          "SnapshotSystemSupported", "AddResourcesSupported", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 SynchronousMethodsSupported[];

      [Description ( 
          "Enumeration of method identifiers each identifying a "
          "method of class CIM_VirtualSystemManagementService that "
          "is supported asynchronously by the implementation." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "..", "32767..65535" }, 
       Values { "DefineSystemSupported", "DestroySystemSupported", 
          "DestroySystemConfigurationSupported", 
          "ModifyResourceSettingsSupported", 
          "ModifySystemSettingsSupported", 
          "RemoveResourcesSupported", 
          "SelectSystemConfigurationSupported", 
          "SnapshotSystemSupported", "AddResourcesSupported", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 AsynchronousMethodsSupported[];

      [Description ( 
          "Enumeration of indication identifiers each identifying "
          "an indication that is supported by the implementation.\n"
          "VirtualSystemStateChangeIndicationsSupported indicates "
          "whether or not the implementation supports notification "
          "on state changes of CIM_ComputerSystem instances "
          "representing virtual systems.\n"
          "VirtualResourceStateChangeIndicationsSupported indicates "
          "whether or not the implementation supports notification "
          "on state changes of CIM_LogicalDevice instances "
          "representing resources of virtual systems.\n"
          "ConcreteJobStateChangeIndicationsSupported indicates "
          "whether or not the implementation supports notification "
          "on state changes of CIM_ConcreteJob instances." ), 
       ValueMap { "2", "3", "4", "..", "32767..65535" }, 
       Values { "VirtualResourceStateChangeIndicationsSupported", 
          "ConcreteJobStateChangeIndicationsSupported", 
          "VirtualSystemStateChangeIndicationsSupported", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 IndicationsSupported[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Virtualization" ), 
    Description ( 
       "The CIM_VirtualSystemSnapshotCapabilities class defines the "
       "properties that describe the capabilities of a virtual system "
       "with respect to snapshots, like for example the set of "
       "snapshot operations that it enabled for a virtual system." )]
class CIM_VirtualSystemSnapshotCapabilities : CIM_Capabilities {

      [Description ( 
          "Enumeration of snapshot type identifiers each "
          "designating a snapshot type that is presently enabled "
          "for the virtual system that is referenced via the "
          "CIM_ElementCapabilities association." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "Full Snapshot", "Disk Snapshot", "DMTF Reserved", 
          "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_VirtualSystemSnapshotService.CreateSnapshot(SnapshotType)", 
          "CIM_VirtualSystemSnapshotServiceCapabilities.SnapshotTypesSupported" }]
   uint16 SnapshotTypesEnabled[];

      [Description ( 
          "Boolean flag indicating the capability of the snapshot "
          "service to notify the guest operation system that runs "
          "within the virtual system about the imminent snapshot "
          "operation." )]
   boolean GuestOSNotificationEnabled;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Virtualization" ), 
    Description ( 
       "The CIM_VirtualSystemSnapshotServiceCapabilities class defines "
       "the properties that describe the capabilities of a virtual "
       "system snapshot service, like for example which snapshot "
       "operations are implemented." )]
class CIM_VirtualSystemSnapshotServiceCapabilities : CIM_Capabilities {

      [Description ( 
          "Enumeration of method identifiers each identifying a "
          "method of class CIM_VirtualSystemSnapshotService that is "
          "supported synchronously by the implementation." ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "CreateSnapshotSupported", 
          "DestroySnapshotSupported", "ApplySnapshotSupported", 
          "DMTF Reserved" }]
   uint16 SynchronousMethodsSupported[];

      [Description ( 
          "Enumeration of method identifiers each identifying a "
          "method of class CIM_VirtualSystemSnapshotService that is "
          "supported synchronously and asynchronously by the "
          "implementation." ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "CreateSnapshotSupported", 
          "DestroySnapshotSupported", "ApplySnapshotSupported", 
          "DMTF Reserved" }]
   uint16 AynchronousMethodsSupported[];

      [Description ( 
          "Supported snapshot types:\n"
          "Full Snapshot: Complete snapshot of the virtual system.\n"
          "Disk Snapshot: Snapshot of virtual system disks." ), 
       ValueMap { "2", "3", "..", "32768..65535" }, 
       Values { "Full Snapshot", "Disk Snapshot", "DMTF Reserved", 
          "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_VirtualSystemSnapshotService.CreateSnapshot(SnapshotType)", 
          "CIM_VirtualSystemSnapshotCapabilities.SnapshotTypesEnabled" }]
   uint16 SnapshotTypesSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "Properties in this class represent general, high-level "
       "database capabilities that may be supported by a common "
       "database. For example, the ability for a database to support "
       "recoverability, replication, parallelism, or clustering would "
       "be specified in this class. Detailed settings, such as the "
       "minimum and maximum number of parallel servers for a database "
       "that supports parallelism, would be defined in the "
       "CIM_DatabaseParameter class. \n"
       "This information is tied to the CommonDatabase using the "
       "ElementCapabilities association." )]
class CIM_CommonDatabaseCapabilities : CIM_Capabilities {

      [Description ( 
          "This property identifies the supported recoverability "
          "modes for the associated CommonDatabase." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Recoverable", "Non-Recoverable", 
          "Rebuildable" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_CommonDatabaseCapabilities.OtherRecoverabilityOptions" }]
   uint16 RecoverabilityOptions[];

      [Description ( 
          "This property contains additional recovery information "
          "for the CommonDatabase. This property must be specified "
          "when the Recoverability property is \"Other\"." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_CommonDatabaseCapabilities.RecoverabilityOptions" }]
   string OtherRecoverabilityOptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "The CIM_DatabaseParameter class extends from "
       "CIM_ScopedSettingData. This abstract class specifies the "
       "database and service configuration parameters that are common "
       "across database models and vendor implementations. \n"
       "The SNMP RDBMS MIB defines database and service parameters as "
       "name and value pair combinations rather than as specific named "
       "properties of the class. In order to maintain a consistent "
       "mapping between SNMP and CIM, a CIM_SNMPDatabaseParameter "
       "class extends from the abstract CIM_DatabaseParameter class, "
       "which defines parameters as a name value pair. \n"
       "In a future release of the database MOF, the working group can "
       "choose to create a new class that extends from "
       "CIM_DatabaseParameter, which specifies properties for common "
       "configuration parameters. \n"
       "The parameter context for a specific database or database "
       "service is established by collecting the SettingData using the "
       "CIM_ElementProfile association. \n"
       "The SNMP RDBMS MIB defines generic tables that contain rows of "
       "named database or service configuration entries. A parameter "
       "entry contains a parameter name, description, and value. See "
       "the description of the rdbmsDbParamTable or the "
       "rdbmsSrvParamTable for more information on the SNMP "
       "definitions." )]
class CIM_DatabaseParameter : CIM_ScopedSettingData {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "This class defines the attributes that affect the growth of a "
       "DatabaseSegment. The attributes are tied to the "
       "DatabaseSegment through an ElementSettingData association. \n"
       "This class can also be used to specify the default settings "
       "for all DatabaseSegment instances that are created within a "
       "CommonDatabase through an ElementSettingData association to "
       "the CommonDatabase. Processes that create new instances of "
       "DatabaseSegment and the associated setting data should check "
       "for a DatabaseSegmentSettingData instance that is associated "
       "with the CommonDatabase and should create a new instance of "
       "DatabaseSegmentSettingData that is specific to the "
       "DatabaseSegment only if the default settings need to be "
       "overridden or frozen for the specific DatabaseSegment "
       "instance." )]
class CIM_DatabaseSegmentSettingData : CIM_ScopedSettingData {

      [Write, Description ( 
          "The size, in bytes, of the first extent to be allocated "
          "when a database segment is created." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 InitialExtentSize;

      [Write, Description ( 
          "The total number of extents to be allocated when the "
          "database segment is created. This setting allows for a "
          "large initial segment allocation at creation time, even "
          "if contiguous space is not available." )]
   uint64 MinimumExtents;

      [Write, Description ( 
          "The upper limit on the number of extents that can be "
          "allocated for the segment." )]
   uint64 MaximumExtents;

      [Write, Description ( 
          "The size, in bytes, to be allocated for the next "
          "incremental extent for the segment. A NextExtentSize of "
          "0 indicates that the size of incremental extents will be "
          "determined based on the value of PercentIncrease." ), 
       Units ( "Bytes" ), 
       MinValue ( 0 ), 
       ModelCorrespondence { 
          "CIM_DatabaseSegmentSettingData.PercentIncrease" }, 
       PUnit ( "byte" )]
   uint64 NextExtentSize;

      [Write, Description ( 
          "The percentage by which the next incremental extent will "
          "grow over the previously allocated size of all extents "
          "for the segment. A PercentIncrease of 0 indicates that "
          "all incremental extents will be the same size, as "
          "specified by NextExtentSize. This value is ignored and "
          "should be set to 0 if NextExtentSize has a value other "
          "than 0." ), 
       MinValue ( 0 ), 
       ModelCorrespondence { 
          "CIM_DatabaseSegmentSettingData.NextExtentSize" }]
   uint16 PercentIncrease;

      [Write, Description ( 
          "A freelist is a list of the free blocks that are "
          "associated with a database segment. The freelist is used "
          "to determine which segments are eligible for accepting "
          "data when a new insert or update request is processed. "
          "The NumberOfFreeLists setting identifies the number of "
          "freelists that are defined for the database segment. "
          "This value is typically set to the expected number of "
          "concurrent inserts for the segment." )]
   uint32 NumberOfFreeLists;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "The CIM_SNMPDatabaseParameter class extends from "
       "CIM_DatabaseParameter. This class is included in the CIM "
       "database schema to provide explicit mapping to the way that "
       "the SNMP MIB defines database and service parameters. More "
       "information on the SNMP MIB parameters can be found in RFC "
       "1697. \n"
       "The SNMP RDBMS MIB defines generic tables that contain rows of "
       "named database or service configuration entries. A parameter "
       "entry contains a parameter name, description, and value. See "
       "the description of the rdbmsDbParamTable or the "
       "rdbmsSrvParamTable for more detailed information on the SNMP "
       "definitions." )]
class CIM_SNMPDatabaseParameter : CIM_DatabaseParameter {

      [Description ( 
          "The value of a database or service parameter that is "
          "represented as a string." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbParamCurrValue" }]
   string ParameterValue;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "AlarmDeviceCapabilities describes the capabilities supported "
       "for changing the state OF THE ASSOCIATED AlarmDevice." )]
class CIM_AlarmDeviceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "RequestedAlarmStatesSupported indicates the possible "
          "states that can be requested when using the method "
          "SetAlarmState on the AlarmDevice. A value of 1 indicates "
          "that AlarmDevice indicators may be inactivated, a value "
          "of 2 or 3 indicates that AlarmDevice indicators may be "
          "activated." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Off", "Steady", "Alternating", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { "CIM_AlarmDevice.SetAlarmState" }]
   uint16 RequestedAlarmStatesSupported[];

      [Description ( 
          "AlarmIndicatorTypesConfigurable indicates the possible "
          "indicators that can be enabled or disabled when using "
          "the method SetAlarmIndicator on the AlarmDevice. An "
          "indicator is a device that emits sound (Audio), emits "
          "light or changes color (Visual), or emits vibrations "
          "(Motion) to indicate some condition. Indicators may "
          "include the audible alarm on a RAID controller, the "
          "location LED on a chassis, or the vibration of a cell "
          "phone." ), 
       ValueMap { "1", "2", "3", "..", "32768..65535" }, 
       Values { "Audio", "Visual", "Motion", "DMTF Reserved", 
          "Vendor Specific" }, 
       ModelCorrespondence { "CIM_AlarmDevice.SetAlarmIndicator" }]
   uint16 AlarmIndicatorTypesConfigurable[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "The BlockStatisticsManifestCollection class aggregates, via "
       "MemberOfCollection, a set of BlockStatisticsManifests. This "
       "collection is associated via "
       "AssociatedBlockStatisticsManifestCollection to exactly one "
       "StatisticsCollection. The BlockStatisticsManifestCollection is "
       "used to filter the retrieval of statistics. For example, a "
       "BlockStatisticsManifestCollection is specified as part of the "
       "StatisticsService.GetStatisticsCollection method to filter the "
       "statistics returned by that method." )]
class CIM_BlockStatisticsManifestCollection : CIM_SystemSpecificCollection {

      [Override ( "ElementName" ), 
       Description ( 
          "A user-friendly name for the "
          "BlockStatisticsManifestCollection. It can be set through "
          "the ElementName parameter of the "
          "StatisticsService.CreateManifestCollection method." )]
   string ElementName;

      [Required, Description ( 
          "Denotes whether or not this "
          "BlockStatisticsManifestCollection is a provider defined "
          "default BlockStatisticsManifestCollection." )]
   boolean IsDefault;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::SCSI" ), 
    Description ( 
       "A class derived from Capabilities that describes the type of "
       "access supported for a shared device." )]
class CIM_DeviceSharingCapabilities : CIM_Capabilities {

      [Description ( 
          "SupportedAccess describes the types of shared access "
          "that are supported for the referenced LogicalDevice." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "No Access", "Exclusive Access", 
          "Shared Read", "Shared Full", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_SharingDependency.CurrentAccess", 
          "CIM_DeviceSharingCapabilities.OtherSupportedAccessModes" }]
   uint16 SupportedAccessModes[];

      [Description ( 
          "A string value describing SupportedAccess when it has a "
          "value of \"Other\"." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DeviceSharingCapabilities.SupportedAccessModes" }]
   string OtherSupportedAccessModes[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiskGroup
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DiskGroup" ), 
    Description ( 
       "A DiskGroup is a named collection of DiskDrives and the "
       "StorageExtents accessed using those Drives. The collection is "
       "used to limit the BasedOn relationships of the Extents in the "
       "DiskGroup. Extents in the Group cannot be BasedOn storage "
       "accessed from Drives outside of the Group. For example, a "
       "SoftwareVolume created within the DiskGroup is restricted to "
       "be completely accessed using Drives in the Group. Actions such "
       "as replicate or migrate on an Extent must operate within the "
       "scope of the Extents that are present in the DiskGroup." )]
class CIM_DiskGroup : CIM_CollectionOfMSEs {

      [Key, Override ( "CollectionID" )]
   string CollectionID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EthernetPortStatistics
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "The EthernetPortStatistics class describes the statistics for "
       "the EthernetPort." )]
class CIM_EthernetPortStatistics : CIM_NetworkPortStatistics {

      [Override ( "PacketsTransmitted" ), 
       Description ( 
          "The total number of packets that are transmitted." ), 
       Counter, MappingStrings { 
          "MIF.DMTF|Network Adapter 802 Port|001.6" }]
   uint64 PacketsTransmitted;

      [Override ( "PacketsReceived" ), 
       Description ( 
          "The total number of packets that are received." ), 
       Counter, MappingStrings { 
          "MIF.DMTF|Network Adapter 802 Port|001.8" }]
   uint64 PacketsReceived;

      [Description ( 
          "The number of times that there was an invalid data "
          "symbol when a valid carrier was present. The count can "
          "be incremented only once per carrier event, even if "
          "multiple symbol errors occur during the carrier event." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsSymbolErrors" }]
   uint32 SymbolErrors;

      [Description ( 
          "The number of frames that are received on a particular "
          "interface that are not an integral number of octets in "
          "length and do not pass the FCS check. The count "
          "represented by an instance of this object is incremented "
          "when the alignment error status is returned by the MAC "
          "layer to the LLC (or other MAC user). Received frames "
          "for which multiple error conditions obtained are, "
          "according to the conventions of IEEE 802.3 Layer "
          "Management, counted exclusively according to the error "
          "status presented to the LLC." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsAlignmentErrors" }]
   uint32 AlignmentErrors;

      [Description ( 
          "The number of frames that are received on a particular "
          "interface that are an integral number of octets in "
          "length, but do not pass the FCS check. The count "
          "represented by an instance of this object is incremented "
          "when the frame check error status is returned by the MAC "
          "layer to the LLC (or other MAC user). Received frames "
          "for which multiple error conditions obtained are, "
          "according to the conventions of the error status "
          "presented to the LLC." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsFCSErrors" }]
   uint32 FCSErrors;

      [Description ( 
          "The number of successfully transmitted frames on a "
          "particular interface for which transmission is inhibited "
          "by exactly one collision. A frame that is counted by an "
          "instance of this object is not counted by the "
          "corresponding instance of the MultipleCollisionFrames "
          "property." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsSingleCollisionFrames" }]
   uint32 SingleCollisionFrames;

      [Description ( 
          "The number of successfully transmitted frames on a "
          "particular interface for which transmission is inhibited "
          "by more than one collision. A frame that is counted by "
          "an instance of this object is not counted by the "
          "corresponding instance of the SingleCollisionFrames "
          "property." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsMultipleCollisionFrames" }]
   uint32 MultipleCollisionFrames;

      [Description ( 
          "The number of times that the SQE TEST ERROR message is "
          "generated by the PLS sublayer for a particular "
          "interface. The SQE TEST ERROR message is defined in "
          "section 7.2.2.2.4 of ANSI/IEEE 802.3-1985 and its "
          "generation is described in section 7.2.4.6 of the same "
          "document." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsSQETestErrors" }]
   uint32 SQETestErrors;

      [Description ( 
          "The number of frames for which the first transmission "
          "attempt on a particular interface is delayed because the "
          "medium is busy. The count represented by an instance of "
          "this object does not include frames involved in "
          "collisions." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsDeferredTransmissions" }]
   uint32 DeferredTransmissions;

      [Description ( 
          "The number of times that a collision is detected on a "
          "particular interface later than 512 bit-times into the "
          "transmission of a packet. Five hundred and twelve bit- "
          "times corresponds to 51.2 microseconds on a 10 Mbit/s "
          "system. A (late) collision included in a count "
          "represented by an instance of this object is also "
          "considered as a (generic) collision for purposes of "
          "other collision-related statistics." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsLateCollisions" }]
   uint32 LateCollisions;

      [Description ( 
          "The number of frames for which transmission on a "
          "particular interface fails due to excessive collisions." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsExcessiveCollisions" }]
   uint32 ExcessiveCollisions;

      [Description ( 
          "The number of frames for which transmission on a "
          "particular interface fails due to an internal MAC "
          "sublayer transmit error. A frame is counted by an "
          "instance of this object only if it is not counted by the "
          "corresponding instance of either the LateCollisions "
          "property, the Excessive Collisions property, or the "
          "CarrierSenseErrors property. The precise meaning of the "
          "count that is represented by an instance of this object "
          "is implementation-specific. In particular, an instance "
          "of this object can represent a count of transmission "
          "errors on a particular interface that are not otherwise "
          "counted." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsInternalMacTransmitErrors" }]
   uint32 InternalMACTransmitErrors;

      [Description ( 
          "The number of frames for which reception on a particular "
          "interface fails due to an internal MAC sublayer receive "
          "error. A frame is counted by an instance of this object "
          "only if it is not counted by the corresponding instance "
          "of either the FrameTooLongs property, the "
          "AlignmentErrors property, or the FCSErrors property. The "
          "precise meaning of the count that is represented by an "
          "instance of this object is implementation-specific. For "
          "example, an instance of this object can represent a "
          "count of receive errors on a particular interface that "
          "are not otherwise counted." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsInternalMacReceiveErrors" }]
   uint32 InternalMACReceiveErrors;

      [Description ( 
          "The number of times that the carrier sense condition was "
          "lost or never asserted when attempting to transmit a "
          "frame on a particular interface. The count represented "
          "by an instance of this object can be incremented only "
          "once per transmission attempt, even if the carrier sense "
          "condition fluctuates during a transmission attempt." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsCarrierSenseErrors" }]
   uint32 CarrierSenseErrors;

      [Description ( 
          "The number of frames received on a particular interface "
          "that exceed the maximum permitted frame size. The count "
          "represented by an instance of this object is incremented "
          "when the FrameTooLong status is returned by the MAC "
          "layer to the LLC (or other MAC user). Received frames "
          "for which multiple error conditions obtained are, "
          "according to the conventions of IEEE 802.3 Layer "
          "Management, counted exclusively according to the error "
          "status presented to the LLC." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsFrameTooLongs" }]
   uint32 FrameTooLongs;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FCAdapterEventCounters
// ==================================================================
   [Deprecated { "CIM_FCPortStatistics" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the FCAdapterEventCounters class is "
       "deprecated because FibreChannelAdapter is deprecated. "
       "FCPortStatistics should be used instead, but it redefines the "
       "level at which data is collected. Therefore, there is no "
       "direct translation of the individual counters between the two "
       "classes. This object describes event counters that were "
       "specific to a FibreChannelAdapter." )]
class CIM_FCAdapterEventCounters : CIM_DeviceStatisticalInformation {

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of Abort sequence "
          "frames received." ), 
       Counter]
   uint64 ABTSFramesReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of Abort sequence "
          "frames sent." ), 
       Counter]
   uint64 ABTSFramesSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames busied by "
          "the Fabric." ), 
       Counter]
   uint64 FBSYsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames busied by "
          "the receiving Node." ), 
       Counter]
   uint64 PBSYsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames busied by "
          "the Adapter itself." ), 
       Counter]
   uint64 PBSYsSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames rejected by "
          "the Fabric." ), 
       Counter]
   uint64 FRJTsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames rejected by "
          "the receiving Node." ), 
       Counter]
   uint64 PRJTsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames rejected by "
          "the Adapter itself." ), 
       Counter]
   uint64 PRJTsSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of PRLI frames sent "
          "where the response was LS_RJT." ), 
       Counter]
   uint64 PRLIsRejected;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of PRLO frames sent "
          "where the response was LS_RJT." ), 
       Counter]
   uint64 PRLOsRejected;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of Abort sequence "
          "frames sent where the response was BA_RJT." ), 
       Counter]
   uint64 ABTSFramesRejected;


      [Deprecated { "CIM_FCPortStatistics.ResetSelectedStats()" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Method to reset the Adapter "
          "event counters. The method takes, as input, an integer "
          "that indicates which counter to reset. For this input 0 "
          "indicates all and 1 through 11 indicate a reset of the "
          "individual counters. The method returns 0 if successful, "
          "1 if not supported, and any other value if an error "
          "occurred. A method is specified so that the "
          "instrumentation of the Device, which tabulates the "
          "errors and warnings, can also reset its internal "
          "processing and counters. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "can also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
             "9", "10", "11" }, 
          Values { "All", "ABTSFramesReceived", "ABTSFramesSent", 
             "FBSYReceived", "PBSYReceived", "PBSYSent", 
             "FRJTReceived", "PRJTReceived", "PRJTSent", 
             "PRLIRejected", "PRLORejected", "ABTSFramesRejected" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FCPortStatistics
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( "FCPortStatistics is the statistics for the FCPort." )]
class CIM_FCPortStatistics : CIM_NetworkPortStatistics {

      [Description ( 
          "LIPCount is the number of LIP events that have occurred "
          "on an arbitrated loop." ), 
       Counter]
   uint64 LIPCount;

      [Description ( 
          "NOSCount is the number of NOS events that have occurred "
          "on the switched fabric." ), 
       Counter]
   uint64 NOSCount;

      [Description ( 
          "ErrorFrames is the number of frames that have been "
          "received in error." ), 
       Counter]
   uint64 ErrorFrames;

      [Description ( 
          "DumpedFrames is the number of frames that were lost due "
          "to a lack of host buffers available." ), 
       Counter]
   uint64 DumpedFrames;

      [Description ( 
          "LinkFailure is the number of times that a link error has "
          "occurred. This count is part of the Link Error Status "
          "Block (LESB)." ), 
       Counter]
   uint64 LinkFailures;

      [Description ( 
          "Number of times the signal is lost on the Port since the "
          "last reset of the Device. This count is part of the Link "
          "Error Status Block (LESB)." ), 
       Counter]
   uint64 LossOfSignalCounter;

      [Description ( 
          "Number of times that synchronization is lost on the Port "
          "since the last reset of the Device. Synchronization is "
          "assumed lost after a timeout period (identified by the "
          "Receiver TransmitterTimeout property) is exceeded. This "
          "count is part of the Link Error Status Block (LESB)." ), 
       Counter]
   uint64 LossOfSyncCounter;

      [Description ( 
          "Count of primitive sequence protocol errors that are "
          "detected at this port. This count is part of the Link "
          "Error Status Block (LESB)." ), 
       Counter]
   uint64 PrimitiveSeqProtocolErrCount;

      [Description ( 
          "Number of times that the CRC in a frame does not match "
          "the CRC that is computed by the receiver. This count is "
          "part of the Link Error Status Block (LESB)." ), 
       Counter]
   uint64 CRCErrors;

      [Description ( 
          "The number of transmission words that had an invalid "
          "character (8b10b code violation) in one or more of its "
          "characters, had a K28.5 (8b10b control) in its second, "
          "third, or fourth character position, or had an incorrect "
          "Beginning Running Disparity. This count is part of the "
          "Link Error Status Block (LESB)." ), 
       Counter]
   uint64 InvalidTransmissionWords;

      [Description ( 
          "The number of frames received that were shorter than 28 "
          "octets. The value of 28 is calculated based on an "
          "assumption of 24 header bytes plus 4 CRC bytes. The "
          "count does not include SOF/EOF bytes, which are not "
          "data." ), 
       Counter]
   uint64 FramesTooShort;

      [Description ( 
          "The number of frames received that were longer than 2140 "
          "octets. The value of 2140 is calculated based on an "
          "assumption of 24 header bytes plus 4 CRC bytes and 2112 "
          "bytes of payload." ), 
       Counter]
   uint64 FramesTooLong;

      [Description ( 
          "Count of frames received with unknown addressing. An "
          "example is an unknown SID or DID. The SID or DID is not "
          "known to the routing algorithm." ), 
       Counter]
   uint64 AddressErrors;

      [Description ( 
          "Count of occurrences when all input buffers of a port "
          "were full and outbound buffer-to-buffer credit was "
          "transitioned to zero. There is no credit to provide to "
          "the other side." ), 
       Counter]
   uint64 BufferCreditNotProvided;

      [Description ( 
          "Count of transitions in or out of BBcredit zero state. "
          "The other side is not providing any credit." ), 
       Counter]
   uint64 BufferCreditNotReceived;

      [Description ( 
          "Count of invalid frame delimiters that are received at "
          "this port. An example is a frame with a class 2 start "
          "and a class 3 at the end." ), 
       Counter]
   uint64 DelimiterErrors;

      [Description ( 
          "Count of disparity errors that are received at this port." ), 
       Counter]
   uint64 EncodingDisparityErrors;

      [Description ( 
          "Count of Link resets. This count is the number of LRs received."
           ), 
       Counter]
   uint64 LinkResetsReceived;

      [Description ( 
          "Count of Link resets. This count is the number of LRs transmitted."
           ), 
       Counter]
   uint64 LinkResetsTransmitted;

      [Description ( 
          "Count of Multicast Frames or Packets received." ), 
       Counter]
   uint64 MulticastFramesReceived;

      [Description ( 
          "Count of Multicast Frames or Packets transmitted." ), 
       Counter]
   uint64 MulticastFramesTransmitted;

      [Description ( 
          "FBSYFrames is the number of times that FBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_FBSY" }]
   uint64 FBSYFrames;

      [Description ( 
          "PBSYFrames is the number of times that PBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_PBSY" }]
   uint64 PBSYFrames;

      [Description ( 
          "FRJTFrames is the number of times that FRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_FRJT" }]
   uint64 FRJTFrames;

      [Description ( 
          "PRJTFrames is the number of times that PRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|ErrorCounters|1.SWAPI_STATS_LBL_PRJT" }]
   uint64 PRJTFrames;

      [Description ( 
          "RXClass1Frames is the number of class 1 frames received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1RF" }]
   uint64 RXClass1Frames;

      [Description ( 
          "TXClass1Frames is the number of class 1 frames transmitted."
           ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1TF" }]
   uint64 TXClass1Frames;

      [Description ( 
          "Class1FBSY is the number of times that FBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1FB" }]
   uint64 Class1FBSY;

      [Description ( 
          "Class1PBSY is the number of times that PBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1PB" }]
   uint64 Class1PBSY;

      [Description ( 
          "Class1FRJT is the number of times that FRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1FR" }]
   uint64 Class1FRJT;

      [Description ( 
          "Class1PRJT is the number of times that PRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C1PR" }]
   uint64 Class1PRJT;

      [Description ( 
          "RXClass2Frames is the number of class 2 frames received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2RF" }]
   uint64 RXClass2Frames;

      [Description ( 
          "TXClass2Frames is the number of class 2 frames transmitted."
           ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2LF" }]
   uint64 TXClass2Frames;

      [Description ( 
          "Class2FBSY is the number of times that FBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2FB" }]
   uint64 Class2FBSY;

      [Description ( 
          "Class2PBSY is the number of times that PBSY was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2PB" }]
   uint64 Class2PBSY;

      [Description ( 
          "Class2FRJT is the number of times that FRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2FR" }]
   uint64 Class2FRJT;

      [Description ( 
          "Class2PRJT is the number of times that PRJT was returned "
          "to the port." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C2PR" }]
   uint64 Class2PRJT;

      [Description ( 
          "RXClass3Frames is the number of class 3 frames received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C3RF" }]
   uint64 RXClass3Frames;

      [Description ( 
          "TXClass3Frames is the number of class 3 frames transmitted."
           ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C3TF" }]
   uint64 TXClass3Frames;

      [Description ( 
          "Class3FramesDiscarded is the number of class 3 frames "
          "that were discarded upon reception." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_C3DC" }]
   uint64 Class3FramesDiscarded;

      [Description ( 
          "RXBroadcastFrames is the number of broadcast frames or "
          "packets received." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_RBCO" }]
   uint64 RXBroadcastFrames;

      [Description ( 
          "TXBroadcastFrames is the number of broadcast frames or "
          "packets transmitted." ), 
       Counter, MappingStrings { 
          "FC-SWAPI.T11|PerformanceCounters|1.SWAPI_STATS_LBL_TBCO" }]
   uint64 TXBroadcastFrames;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "FibreChannel switch control and configuration capabilities." )]
class CIM_FCSwitchCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "Boolean that indicates whether the DomainID setting can "
          "be modified." ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|EditDomainID" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.PreferredDomainID" }]
   boolean DomainIDConfigureable;

      [Description ( 
          "Minimum DomainID value supported by the switch." ), 
       MinValue ( 1 ), 
       MaxValue ( 239 ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|MinDomainID" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.PreferredDomainID" }]
   uint8 MinDomainID;

      [Description ( 
          "Maximum DomainID value supported by the switch. This "
          "value must be greater than or equal to MinDomainID." ), 
       MinValue ( 1 ), 
       MaxValue ( 239 ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|MaxDomainID" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.PreferredDomainID" }]
   uint8 MaxDomainID;

      [Description ( 
          "Boolean that indicates whether the DomainIDLocked "
          "setting can be modified." ), 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|EditDomainIDLocked" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.DomainIDLocked" }]
   boolean DomainIDLockedSupported;

      [Description ( 
          "This array contains the principal priority settings that "
          "are supported by the switch." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "Principal", "Subordinate", "Any", "Not Applicable" }, 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_UNIT_CONFIG_CAPS_T|SupportedSwitchPriorities" }, 
       ModelCorrespondence { "CIM_FCSwitchSettings.PrincipalPriority" }]
   uint16 PrincipalPrioritiesSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FibrePortEventCounters
// ==================================================================
   [Deprecated { "CIM_FCPortStatistics" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the FibrePortEventCounters class is "
       "deprecated because FibrePort is deprecated. FCPortStatistics "
       "should be used instead, but it redefines the level at which "
       "data is collected. Therefore, there is no direct translation "
       "of the individual counters between the two classes. Deprecated "
       "description: This object defines error counters that are "
       "specific to a FibrePort." )]
class CIM_FibrePortEventCounters : CIM_DeviceStatisticalInformation {

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of login frames "
          "received." ), 
       Counter]
   uint64 PLOGIsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of login frames sent." ), 
       Counter]
   uint64 PLOGIsSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames received that "
          "contain \'EOF Abort\'." ), 
       Counter]
   uint64 EOFAbortsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames transmitted "
          "that contain \'EOF Abort\'." ), 
       Counter]
   uint64 EOFAbortsTransmitted;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of logouts that were "
          "received from various targets." ), 
       Counter]
   uint64 PLOGOsReceived;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of logout frames "
          "sent." ), 
       Counter]
   uint64 PLOGOsSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of PLOGI frames sent "
          "where the response was LS_RJT." ), 
       Counter]
   uint64 PLOGIsRejected;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of PLOGO frames sent "
          "where the response was LS_RJT." ), 
       Counter]
   uint64 PLOGOsRejected;


      [Deprecated { "CIM_FCPortStatistics.ResetSelectedStats" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Method to reset the Port event "
          "counters. The method takes as input an integer that "
          "indicates which counter to reset. For this input "
          "parameter, 0 indicates all and 1 through 8 indicate a "
          "reset of the individual counters. The method returns 0 "
          "if successful, 1 if not supported, and any other value "
          "if an error occurred. A method is specified so that the "
          "instrumentation of the Device, which tabulates the "
          "errors and warnings, can also reset its internal "
          "processing and counters. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "can also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
          Values { "All", "PLOGIsReceived", "PLOGIsSent", 
             "EOFAbortsReceived", "EOFAbortsTransmitted", 
             "PLOGOsReceived", "PLOGOsSent", "PLOGIsRejected", 
             "PLOGOsRejected" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::LED" ), 
    Description ( 
       "LEDCapabilities describes the capabilities supported for "
       "managing the associated LED." )]
class CIM_IndicatorLEDCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "The conditions that may be indicated by the LED.See "
          "CIM_IndicatorLED.IndicatedCondition for a description of "
          "the values." ), 
       ValueMap { "1", "3", "4", "5", "6", "7", "..", "32768..65535" }, 
       Values { "Other", "Location", "Attention", "Activity", 
          "Powered On", "Fault", "DMTF Reserved", "Vendor Reserved" }]
   uint16 SupportedIndicatedConditions[];

      [Description ( 
          "An array index of this property shall have a value if "
          "the corresponding array index of "
          "SupportedIndicatedConditions contains the value 1 "
          "\"Other\"." ), 
       ModelCorrespondence { 
          "CIM_IndicatorLEDCapabilities.SupportedIndicatedConditions", 
          "CIM_IndicatorLED.OtherIndicatedConditionDescription" }]
   string OtherSupportedIndicatedConditionDescriptions[];

      [Description ( 
          "SupportedControlModes indicates the control modes "
          "supported for the LED.See "
          "CIM_IndicatorLED.CurrentControlMode for more "
          "information." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "Automatic", "Manual", "Test", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IndicatorLED.ControlMode" }]
   uint16 SupportedControlModes[];

      [Description ( 
          "This property indicates the colors supported by the "
          "associated instance of CIM_IndicatorLED." ), 
       ValueMap { "1", "3", "4", "5", "6", "7", "8", "9", "..", 
          "32768..65535" }, 
       Values { "Other", "White", "Red", "Green", "Blue", "Orange", 
          "Yellow", "Black", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IndicatorLED.Color", 
          "CIM_IndicatorLEDCapabilities.OtherSupportedColorDescriptions" }]
   uint16 SupportedColors[];

      [Description ( 
          "An array index of this property shall have a value if "
          "the corresponding array index of SupportedColors "
          "contains the value 1 \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_IndicatorLEDCapabilities.SupportedColors", 
          "CIM_IndicatorLED.OtherColorDescription" }]
   string OtherSupportedColorDescriptions[];

      [Description ( 
          "SupportedControlPatterns describes the control patterns "
          "supported by the associated LED. The values of "
          "SupportedControlPatterns may be an exact match for "
          "values allowed for CIM_IndicatorLED.ControlPatterns or "
          "may indicate general categories of behavior. The "
          "interpretation of value is specific to the business "
          "entity identified by <OrgID>. \n"
          "Each value of SupportedControlPatterns shall be "
          "constructed using the following \"preferred\" algorithm: "
          "<OrgID>::<Pattern> \n"
          "Where <OrgID> and < Pattern> are separated by two colons "
          "(::), and where <OrgID> shall include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "ControlPattern or that is a registered ID assigned to "
          "the business entity by a recognized global authority. "
          "<Pattern> is chosen by the business entity and shall not "
          "be reused to identify different underlying (real-world) "
          "behaviors. If the behavior specified for the LED adheres "
          "to a standard or proprietary specification, <Pattern> "
          "shall be a uniquely assigned value identifying the "
          "behavior. If the behavior for the LED is described using "
          "a standard or proprietary grammar, <Pattern> shall be "
          "prefixed with a uniquely assigned identifier for the "
          "grammar." ), 
       ModelCorrespondence { "CIM_IndicatorLED.ControlPattern" }]
   string SupportedControlPatterns[];

      [Description ( 
          "SupportedActivationStates indicates the supported "
          "activation states for the associated IndicatorLED. See "
          "CIM_IndicatorLED.ActivationState for descriptions of the "
          "values." ), 
       ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Lit", "Blinking", "Off", "Control Pattern", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IndicatorLED.ActivationState" }]
   uint16 SupportedActivationStates[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LabelReaderStatInfo 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "Statistics for a LabelReader, related to read successes, "
       "failures and retries." )]
class CIM_LabelReaderStatInfo : CIM_DeviceStatisticalInformation {

      [Description ( 
          "The number of successful physical label scans." ), 
       Counter]
   uint64 ScanSuccesses;

      [Description ( "The number of failed physical label scans." ), 
       Counter]
   uint64 ScanFailures;

      [Description ( "The number of retried physical label scans." ), 
       Counter]
   uint64 ScanRetries;


      [Description ( 
          "Method to reset the statistical counters. The method "
          "takes one parameter as input - an integer indicating "
          "which counter to reset. For this input parameter, 0 "
          "indicates all, 1 resets the \"Scan Successes\" counter, "
          "2 resets the \"Scan Failures\" counter, and 3 resets the "
          "\"Scan Retries\" counter. The method returns 0 if "
          "successful, 1 if not supported, and any other value if "
          "an error occurred. A method is specified so that the "
          "Device\'s instrumentation can also reset its internal "
          "processing and counters. \n"
          "In a subclass, the set of possible return codes should "
          "be specified in a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "can be specified as a Values array qualifier." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3" }, 
          Values { "All", "Scan Successes", "Scan Failures", 
             "Scan Retries" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "LogicalPortCapabilities describes the configuration "
       "capabilities for properties in LogicalPortSettings." )]
class CIM_LogicalPortCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "List of supported port speeds that can be configured on "
          "LogicalPortSettings.RequestedSpeed." ), 
       ModelCorrespondence { "CIM_NetworkPort.Speed" }]
   uint64 RequestedSpeedsSupported[];

      [Description ( 
          "A boolean indicating whether the value in "
          "LogicalPortSettings.AutoSenseSpeed may be changed "
          "(TRUE), or may only be viewed (FALSE)." ), 
       ModelCorrespondence { "CIM_NetworkPort.Speed" }]
   boolean AutoSenseSpeedConfigurable;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalPortGroup
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "A collection of one or more ports that are logically grouped "
       "for administrative and discovery or topology purposes. "
       "LogicalPortGroups define port collections for access control, "
       "or for use in routing policy or other management tasks. For "
       "example, in Fibre Channel and Infiniband, a LogicalPortGroup "
       "represents the concept of a \'node\'." )]
class CIM_LogicalPortGroup : CIM_SystemSpecificCollection {

      [Description ( 
          "The Name property defines the identity by which the "
          "LogicalPortGroup is known." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_LogicalPortGroup.NameFormat" }]
   string Name;

      [Description ( 
          "The NameFormat property identifies how the Name of the "
          "LogicalPortGroup is generated." ), 
       ValueMap { "Unknown", "Other", "WWN", "GUID" }, 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_LogicalPortGroup.Name", 
          "CIM_LogicalPortGroup.OtherNameFormat" }]
   string NameFormat;

      [Description ( 
          "A string that describes how the LogicalPortGroup is "
          "identified when the NameFormat is \"Other\"." ), 
       ModelCorrespondence { "CIM_LogicalPortGroup.Name" }]
   string OtherNameFormat;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaAccessStatInfo 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Statistics related to reading and writing at a specific "
       "MediaAccessDevice, or for a specific StorageExtent. Although "
       "the same class is used to represent this data, at the instance "
       "level the object holds information for the MediaAccessDevice "
       "(independent of the StorageExtent), OR for the Extent "
       "(independent of its AccessDevice). Note that this class models "
       "the same properties as MediaAccessStatData. The latter, "
       "however, uses the simplified key mechanisms of the "
       "StatisticalData class." )]
class CIM_MediaAccessStatInfo : CIM_DeviceStatisticalInformation {

      [Description ( "The number of attempted read operations." ), 
       Counter]
   uint64 ReadOperations;

      [Description ( "The number of unrecoverable read operations." ), 
       Counter]
   uint64 UnrecoverableReadOperations;

      [Description ( "The number of attempted write operations." ), 
       Counter]
   uint64 WriteOperations;

      [Description ( "The number of unrecoverable write operations." ), 
       Counter]
   uint64 UnrecoverableWriteOperations;

      [Description ( "The number of recovered read operations." ), 
       Counter]
   uint64 RecoveredReadOperations;

      [Description ( "The number of recovered write operations." ), 
       Counter]
   uint64 RecoveredWriteOperations;

      [Description ( "The number of recovered seek operations." ), 
       Counter]
   uint64 RecoveredSeekOperations;

      [Description ( "The number of unrecoverable seek operations." ), 
       Counter]
   uint64 UnrecoverableSeekOperations;


      [Description ( 
          "Method to reset the statistical counters. The method "
          "takes one parameter as input - an integer indicating "
          "which counter to reset. For this input parameter, 0 "
          "indicates all, 1-2 and 5 reset the \'read "
          "operation\'-related counters, 3-4 and 6 reset the \'write "
          "operation\'-related counters, and 7-8 reset the "
          "seek-related counters. The method returns 0 if "
          "successful, 1 if not supported, and any other value if "
          "an error occurred. A method is specified so that the "
          "Device\'s instrumentation can also reset its internal "
          "processing and counters. \n"
          "In a subclass, the set of possible return codes should "
          "be specified in a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "can be specified as a Values array qualifier." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
          Values { "All", "Read Operations", 
             "Unrecoverable Read Operations", "Write Operations", 
             "Unrecoverable Write Operations", 
             "Recovered Read Operations", 
             "Recovered Write Operations", "Recovered Seeks", 
             "Unrecoverable Seeks" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_MemoryError 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "MemoryError defines a memory space that has errors. The Key of "
       "the class is the StartingAddress of the bytes in error." )]
class CIM_MemoryError : CIM_StorageError {

      [Override ( "StartingAddress" ), 
       Description ( 
          "Specifies the address of the memory error. The type of "
          "error is described by the ErrorInfo property. If the "
          "ErrorInfo property is equal to 3, \"OK\", then this "
          "property has no meaning." ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.19", 
          "MIF.DMTF|Physical Memory Array|001.14" }]
   uint64 StartingAddress;

      [Description ( 
          "An integer enumeration describing the type of error that "
          "occurred most recently. For example, single (value=6) or "
          "double bit errors (7) can be specified using this "
          "property. The values, 12-14, are undefined in the CIM "
          "Schema since in DMI, they mix the semantics of the type "
          "of error and whether it was correctable or not. The "
          "latter is indicated in the property, CorrectableError." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "Unknown", "Other", "OK", "Bad Read", 
          "Parity Error", "Single-Bit Error", "Double-Bit Error", 
          "Multi-Bit Error", "Nibble Error", "Checksum Error", 
          "CRC Error" }, 
       MappingStrings { "MIF.DMTF|Memory Device|005.12", 
          "MIF.DMTF|Physical Memory Array|001.8" }, 
       ModelCorrespondence { "CIM_Memory.OtherErrorDescription" }]
   uint16 ErrorInfo;

      [Description ( 
          "Free form string providing more information if the Error "
          "Type property is set to 1, \"Other\". If not set to 1, "
          "this string has no meaning." ), 
       ModelCorrespondence { "CIM_Memory.ErrorInfo" }]
   string OtherErrorDescription;

      [Description ( 
          "Boolean indicating that the most recent error was "
          "correctable. If the ErrorInfo property is equal to 3, "
          "\"OK\", then this property has no meaning." ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.8" }]
   boolean CorrectableError;

      [Description ( 
          "The time that the last memory error occurred. The type "
          "of error is described by the ErrorInfo property. If the "
          "Error Info property is equal to 3, \"OK\", then this "
          "property has no meaning." )]
   datetime ErrorTime;

      [Description ( 
          "An integer enumeration indicating the memory access "
          "operation that caused the last error. The type of error "
          "MUST be described by the ErrorInfo property. If the "
          "ErrorInfo property is equal to 3, \"OK\", then this "
          "property has no meaning." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Read", "Write", "Partial Write" }, 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.10" }]
   uint16 ErrorAccess;

      [Description ( 
          "The size of the data transfer in bits that caused the "
          "last error. 0 indicates no error. If the ErrorInfo "
          "property is equal to 3, \"OK\", then this property "
          "should be set to 0." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.11" }, 
       PUnit ( "bit" )]
   uint32 ErrorTransferSize;

      [Description ( 
          "Data captured during the last erroneous mebmory access. "
          "The data occupies the first n octets of the array "
          "necessary to hold the number of bits specified by the "
          "ErrorTransferSize property. If ErrorTransferSize is 0, "
          "then this property has no meaning." ), 
       OctetString, ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.12" }]
   uint8 ErrorData[];

      [Description ( 
          "The ordering for data stored in the ErrorData property. "
          "\"Least Significant Byte First\" (value=1) or \"Most "
          "Significant Byte First\" (2) can be specified. If "
          "ErrorTransferSize is 0, then this property has no "
          "meaning." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Least Significant Byte First", 
          "Most Significant Byte First" }]
   uint16 ErrorDataOrder;

      [Description ( 
          "Boolean indicating whether the address information in "
          "the property, ErrorAddress, is a system-level address "
          "(TRUE) or a physical address (FALSE). If the ErrorInfo "
          "property is equal to 3, \"OK\", then this property has "
          "no meaning." )]
   boolean SystemLevelAddress;

      [Description ( 
          "Specifies the range, in bytes, to which the last error "
          "can be resolved. For example, if error addresses are "
          "resolved to bit 11 (ie, on a typical page basis), then "
          "errors can be resolved to 4K boundaries and this "
          "property is set to 4000. If the ErrorInfo property is "
          "equal to 3, \"OK\", then this property has no meaning." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.21", 
          "MIF.DMTF|Physical Memory Array|001.15" }, 
       PUnit ( "byte" )]
   uint64 ErrorResolution;

      [Description ( 
          "An array of octets holding additional error information. "
          "An example is ECC Syndrome or the return of the check "
          "bits if a CRC-based ErrorMethodology is used. In the "
          "latter case, if a single bit error is recognized and the "
          "CRC algorithm is known, it is possible to determine the "
          "exact bit that failed. This type of data (ECC Syndrome, "
          "Check Bit or Parity Bit data, or other vendor supplied "
          "information) is included in this field. If the ErrorInfo "
          "property is equal to 3, \"OK\", then AdditionalErrorData "
          "has no meaning." ), 
       OctetString, MappingStrings { 
          "MIF.DMTF|Memory Device|005.18", 
          "MIF.DMTF|Physical Memory Array|001.13" }]
   uint8 AdditionalErrorData[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_MonitorResolution 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "MonitorResolution describes the relationship between "
       "horizontal and vertical resolutions, refresh rate and scan "
       "mode for a DesktopMonitor. The actual resolutions, etc. that "
       "are in use, are the values specified in the VideoController "
       "object." )]
class CIM_MonitorResolution : CIM_Setting {

      [Key, Override ( "SettingID" ), 
       Description ( 
          "The inherited SettingID serves as part of the key for a "
          "MonitorResolution instance." ), 
       MaxLen ( 256 )]
   string SettingID;

      [Description ( "Monitor\'s horizontal resolution in Pixels." ), 
       Units ( "Pixels" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.2" }, 
       ModelCorrespondence { 
          "CIM_VideoController.CurrentHorizontalResolution" }, 
       PUnit ( "pixel" )]
   uint32 HorizontalResolution;

      [Description ( "Monitor\'s vertical resolution in Pixels." ), 
       Units ( "Pixels" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.3" }, 
       ModelCorrespondence { 
          "CIM_VideoController.CurrentVerticalResolution" }, 
       PUnit ( "pixel" )]
   uint32 VerticalResolution;

      [Description ( 
          "Monitor\'s refresh rate in Hertz. If a range of rates is "
          "supported, use the MinRefreshRate and MaxRefreshRate "
          "properties, and set RefreshRate (this property) to 0." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.4" }, 
       ModelCorrespondence { "CIM_VideoController.CurrentRefreshRate" }, 
       PUnit ( "hertz" )]
   uint32 RefreshRate;

      [Description ( 
          "Monitor\'s minimum refresh rate in Hertz, when a range "
          "of rates is supported at the specified resolutions." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.6" }, 
       ModelCorrespondence { "CIM_VideoController.MinRefreshRate" }, 
       PUnit ( "hertz" )]
   uint32 MinRefreshRate;

      [Description ( 
          "Monitor\'s maximum refresh rate in Hertz, when a range "
          "of rates is supported at the specified resolutions." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.7" }, 
       ModelCorrespondence { "CIM_VideoController.MaxRefreshRate" }, 
       PUnit ( "hertz" )]
   uint32 MaxRefreshRate;

      [Description ( 
          "Integer indicating whether the monitor operates in "
          "interlaced (value=5) or non-interlaced (4) mode." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Not Supported", 
          "Non-Interlaced Operation", "Interlaced Operation" }, 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.5" }, 
       ModelCorrespondence { "CIM_VideoController.CurrentScanMode" }]
   uint16 ScanMode;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "NetworkPortCapabilities describes the capabilities supported "
       "for properties that are configurable in NetworkPort." )]
class CIM_NetworkPortCapabilities : CIM_LogicalPortCapabilities {

      [Description ( 
          "Boolean that indicates whether the Speed can be configured."
           ), 
       ModelCorrespondence { 
          "CIM_NetworkPortCapabilities.PortSpeedsSupported" }]
   boolean SpeedConfigurable = false;

      [Description ( 
          "List of supported port speeds that can be configured on "
          "NetworkPort.Speed." ), 
       ModelCorrespondence { "CIM_NetworkPort.Speed" }]
   uint64 PortSpeedsSupported[];

      [Description ( 
          "Boolean indicating whether the NetworkPort can be "
          "configured to connect to specific Networks." ), 
       ModelCorrespondence { "CIM_NetworkPortSettings.NetworkIDs" }]
   boolean NetworkIDsConfigurable;

      [Description ( 
          "The format that is expected to populate the NetworkIds "
          "for the associated NetworkPortSettings.list of supported "
          "LinkTechnologies of the NetworkPort is defined in the "
          "NetworkPortCapabilities." ), 
       ValueMap { "2", "..", "32768..65535" }, 
       Values { "Virtual Fabric ID", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_NetworkPortSettings.NetworkIDs" }]
   uint16 NetworkIDsFormat;

      [Description ( 
          "List of the LinkTechnologies supported by the the NetworkPort."
           ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", ".." }, 
       Values { "Ethernet", "IB", "FC", "FDDI", "ATM", "Token Ring", 
          "Frame Relay", "Infrared", "BlueTooth", "Wireless LAN", 
          "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_NetworkPortSettings.NetworkIDs", 
          "CIM_NetworkPort.LinkTechnology" }]
   uint16 LinkTechnologiesSupported[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( "A collection of one or more PCI device ports." )]
class CIM_PCIPortGroup : CIM_LogicalPortGroup {

      [Description ( 
          "The bus number shared by the PCI device ports." )]
   uint8 BusNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PickerStatInfo 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "Statistics for a PickerElement, related to pick/put successes, "
       "retries and failures." )]
class CIM_PickerStatInfo : CIM_DeviceStatisticalInformation {

      [Description ( "The number of successful picks." ), 
       Counter]
   uint64 PickSuccesses;

      [Description ( "The number of failed picks." ), 
       Counter]
   uint64 PickFailures;

      [Description ( "The number of retried picks." ), 
       Counter]
   uint64 PickRetries;

      [Description ( "The number of successful puts." ), 
       Counter]
   uint64 PutSuccesses;

      [Description ( "The number of failed puts." ), 
       Counter]
   uint64 PutFailures;

      [Description ( "The number of retried puts." ), 
       Counter]
   uint64 PutRetries;


      [Description ( 
          "Method to reset the statistical counters. The method "
          "takes one parameter as input - an integer indicating "
          "which counter to reset. For this input parameter, 0 "
          "indicates all, 1-3 reset the \'pick\'-related counters, "
          "and 4-6 reset the \'put\'- related counters. The method "
          "returns 0 if successful, 1 if not supported, and any "
          "other value if an error occurred. A method is specified "
          "so that the Device\'s instrumentation can also reset its "
          "internal pocessing and counters. \n"
          "In a subclass, the set of possible return codes should "
          "be specified in a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "can be specified as a Values array qualifier." )]
   uint32 ResetCounter(
         [IN, Description ( 
             "This parameter indicates the counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
          Values { "All", "Pick Successes", "Pick Failures", 
             "Pick Retries", "Put Successes", "Put Failures", 
             "Put Retries" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::System::CoolingAndPower" ), 
    Description ( 
       "PowerAllocationSettingData class is used to provide "
       "configuration and capabilities information about power "
       "consumption and/or allocation for a CIM_ManagedSystemElement." )]
class CIM_PowerAllocationSettingData : CIM_ResourceAllocationSettingData {

      [Description ( 
          "When power is consumed by or allocated to a "
          "ManagedSystemElement, there may be well-known or "
          "meaningful levels of allocation or consumption for the "
          "ManagedSystemElement. The PowerAllocationSettingPurpose "
          "property may be used to identify the well known level or "
          "provide context for the interpretation of the other "
          "values of the PowerAllocationSettingData instance. A "
          "value of \"MaxConAuxiliary\" shall indicate the instance "
          "provides information about the maximum power allocated "
          "or consumed by the ManagedSystemElement as currently "
          "configured, while the ManagedSystemElement is turned off "
          "and drawing auxiliary power. Note that an alternate name "
          "for \"auxiliary power\" is \"trickle power\" \n"
          "A value of \"MinWhenOn\" shall indicate the instance "
          "provides information about the minimum value for power "
          "consumption for which a configuration of the "
          "ManagedSystemElement exists such that when it is powered "
          "on and operating in that configuration, the power "
          "consumption of the ManagedSystemElement is guaranteed "
          "not to exceed the specified amount. \n"
          "A value of \"MaxAsConfigured\" shall indicate the "
          "instance provides information about the maximum power "
          "that may be allocated to or consumed by the "
          "ManagedSystemElement as currently configured while "
          "powered on. The actual power consumed may be less.\n"
          "A value of \"MaxIfAllHotPlug\" shall indicate the "
          "instance provides information about the maximum power "
          "allocated or consumed by the ManagedSystemElement if all "
          "components that could be added to the "
          "ManagedSystemElement without requiring a power cycle of "
          "the ManagedSystemElement were added to the "
          "ManagedSystemElement. \n"
          "A value of \"MaxIfAllColdPlug\" shall indicate the "
          "instance provides information about the maximum power "
          "allocated or consumed by the ManagedSystemElement if all "
          "components that could be added to the "
          "ManagedSystemElement, including those that require a "
          "power cycle of the ManagedSystemElement, were added to "
          "the ManagedSystemElement. \n"
          "A value of \"Allocated\" shall indicate the instance "
          "provides information about the current power allocated "
          "to the ManagedSystemElement. \n"
          "A value of \"MinWithoutDegradation\" shall indicate the "
          "instance provides information about the minimum power "
          "allocated or consumed by the ManagedSystemElement with "
          "out causing performance degradation." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "32768..65535" }, 
       Values { "Other", "MaxConAuxiliary", "MinWhenOn", 
          "MaxAsConfigured", "MaxIfAllHotPlug", "MaxIfAllColdPlug", 
          "Allocated", "MinWithoutDegradation", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_PowerAllocationSettingData.OtherSettingPurpose" }]
   uint16 PowerAllocationSettingPurpose;

      [Description ( 
          "This property shall be set to null if SettingPurpose is "
          "any value other than 1. This property shall be non-null "
          "if SettingPurpose has the value 1. If non-null, the "
          "value of this property shall be formatted using the "
          "following algorithm: : , where and are separated by a "
          "colon (:) and shall include a copyrighted, trademarked, "
          "or otherwise unique name that is owned by the business "
          "entity that is creating or defining the value or that is "
          "a registered ID assigned to the business entity by a "
          "recognized global authority. In addition, to ensure "
          "uniqueness, shall not contain a colon (:). If this "
          "algorithm is used, the first colon to appear in the "
          "value shall appear between and . The is chosen by the "
          "business entity and shall be used uniquely." ), 
       ModelCorrespondence { 
          "CIM_PowerAllocationSettingData.PowerAllocationSettingPurpose" }]
   string OtherSettingPurpose;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Device::Processor" ), 
    Description ( 
       "ProcessorCapabilities inherits the capabilities of "
       "EnabledLogicalElementCapabilities and adds properties "
       "describing processor core and hardware thread support." )]
class CIM_ProcessorCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "Number of processor cores available for processor. This "
          "number would not include cores disabled by hardware and "
          "may be obtained from SMBIOS 2.5 Type 4 offset 23h." )]
   uint16 NumberOfProcessorCores;

      [Description ( 
          "Number of hardware threads available for the processor. "
          "May be obtained from SMBIOS v2.5 4 offset 25h." )]
   uint16 NumberOfHardwareThreads;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "A subclass of Capabilities that defines the Masking-related "
       "capabilities of a ProtocolController." )]
class CIM_ProtocolControllerMaskingCapabilities : CIM_Capabilities {

      [Description ( 
          "A list of the valid values for "
          "StrorageHardwareID.IDType. iSCSI IDs MAY use one of "
          "three iSCSI formats - iqn, eui, or naa. This three "
          "letter format is the name prefix; so a single iSCSI type "
          "is provided here, the prefix can be used to further "
          "refine the format." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Port WWN", "Node WWN", "Host Name", 
          "iSCSI Name" }, 
       ArrayType ( "Indexed" )]
   uint16 ValidHardwareIdTypes[];

      [Description ( 
          "An array of strings describing types for valid "
          "StorageHardwareID.IDType. Used when the "
          "ValidHardwareIdTypes includes 1 (\"Other\")." ), 
       ArrayType ( "Indexed" )]
   string OtherValidHardwareIDTypes[];

      [Description ( 
          "An integer enumeration indicating the way that ports per "
          "view (ProtocolController) are handled by the underlying "
          "storage system." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "One Port per View", "Multiple Ports per View", 
          "All Ports share the same View" }]
   uint16 PortsPerView = 2;

      [Description ( 
          "Set to true if this storage system allows the client to "
          "specify the DeviceNumber parameter when calling "
          "ControllerConfigurationService.AttachDevice() or specify "
          "the DeviceNumbers parameter when calling "
          "ControllerConfigurationService.ExposePaths(). Set to "
          "false if the implementation does not allow unit numbers "
          "to vary for a ProtocolController. However, if set to "
          "false and a Device is not the Dependent of a "
          "ProtocolControllerForUnit association, the client MUST "
          "provide a DeviceNumber parameter in "
          "ControllerConfigurationService.AttachDevice or "
          "ControllerConfigurationService.ExposePaths. If set to "
          "false and the Device is already the Dependent of a "
          "ProtocolControllerForUnit association, then the client "
          "can omit the DeviceNumber parameter (or supply the same "
          "value) in subsequent "
          "ControllerConfigurationService.AttachDevice calls." )]
   boolean ClientSelectableDeviceNumbers = true;

      [Description ( 
          "Set to true if this storage system supports the "
          "AttachDevice method." )]
   boolean AttachDeviceSupported;

      [Description ( 
          "Set to true if this storage system limits configurations "
          "to a single subject hardware ID per view. Otherwise, "
          "multiple hardware ID types can be used. The default is "
          "FALSE, that multiple ID types MAY be used in a single "
          "view." )]
   boolean OneHardwareIDPerView = false;

      [Description ( 
          "When set to false, different ProtocolContollers attached "
          "to a LogicalPort can expose the same unit numbers. If "
          "true, then this storage system requires unique unit "
          "numbers across all the ProtocolControllers connected to "
          "a LogicalPort." )]
   boolean UniqueUnitNumbersPerPort = false;

      [Description ( 
          "Set to true if this storage system allows a client to "
          "create a Privilege instance with PrivilegeGranted set to "
          "FALSE." )]
   boolean PrivilegeDeniedSupported = false;

      [Description ( 
          "If true, this property indicates that a "
          "Privilege/Identity pair MUST be specified when "
          "CreateProtocolControllerWithPorts() is called. If false, "
          "then the Privilege/Identity pair in "
          "CreateProtocolControllerWithPorts() MUST NOT be set." )]
   boolean ProtocolControllerRequiresAuthorizedIdentity = false;

      [Description ( 
          "If true, this property indicates that the Identity "
          "parameter of CreateProtocolConntrollerWithPorts() MUST "
          "contain a reference to a CIM_Collection (or subclass) or "
          "to a CIM_Identity (or subclass). If ExposePathsSupported "
          "is true, this property indicates the storage system "
          "supports SystemSpecificCollections of "
          "StorageHardwareIDs." )]
   boolean ProtocolControllerSupportsCollections = false;

      [Description ( 
          "Set to true if this storage system supports the "
          "ExposePaths and HidePaths methods." )]
   boolean ExposePathsSupported;

      [Description ( 
          "Set to true if this storage system supports the "
          "CreateProtocolControllerWithPorts method." )]
   boolean CreateProtocolControllerSupported;

      [Description ( 
          "The maximum number of ProtocolCOntrollerForUnit "
          "associations that can be associated with a single "
          "LogicalDevice (for example, StorageVolume). Zero "
          "indicates there is no limit." )]
   uint16 MaximumMapCount = 0;

      [Description ( 
          "Set to true if the instumentation allows a client to "
          "create a configuration where an SPC has no "
          "LogicalDevices associated via "
          "CIM_ProtocolControllerForUnit associations." )]
   boolean SPCAllowsNoLUs = false;

      [Description ( 
          "Set to true if the instumentation allows a client to "
          "create a configuration where an SPC has no target "
          "SCSIProtocolEndpoints associated via "
          "CIM_SAPAvailableForELement associations." )]
   boolean SPCAllowsNoTargets = false;

      [Description ( 
          "Set to true if the instumentation allows a client to "
          "create a configuration where an SPC has no "
          "StorageHardwareIDs associated via "
          "CIM_AuthorizedTarget/CIM_AuthorizedPrivilege/CIM_AuthorizedSubject."
           )]
   boolean SPCAllowsNoInitiators = false;

      [Description ( 
          "Set to true if it the instrumentation supports \'default "
          "view\' SPCs that exposes logical units to all initiators "
          "(so called \'promiscuous LUNs\'. Default view SPCs MUST "
          "have be associated to a CIM_StorageHardwareID instance "
          "with Name set to the null string. A target port MUST NOT "
          "be associated with more a single default view SPC. If "
          "PortsPerView is \'All Ports share the same View\', then "
          "at most one default view SPC MAY be associated with the "
          "target system. If SPCAllowsNoLUs is true, the "
          "instrumentation MAY instantiate a static default view "
          "instance or let the client create one as needed using "
          "ExposePaths. For other values of PortsPerView, all "
          "default view SPC MUST share the same null-Name "
          "CIM_StorageHardwareID instance." ), 
       ModelCorrespondence { 
          "CIM_ProtocolControllerMaskingCapabilities.PortsPerView" }]
   boolean SPCSupportsDefaultViews = true;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "A class derived from CIM_Capabilities that models the "
       "capabilities of a multipath driver. Note that \'path\' in this "
       "context refers to end-to-end device paths (for example, SCSI "
       "initiator/target) with no understanding of edge paths between "
       "interconnect elements such as switches. Load balancing only "
       "applies to symmetric multipath devices or to the ports in "
       "SCSITargetPortGroups in active access state. \n"
       "A driver may support different algorithms for load balancing. "
       "A few common algorithms are listed. Algorithms for specific "
       "device models and software vendor specific algorithms are also "
       "accommodated. \n"
       "\n"
       "An instance of this capabilities class MUST be instantiated "
       "whenever SCSIPathConfigurationService is instantiated and they "
       "MUST be assocaited one to one using ElementCapabilities. "
       "Multiple instances of the service/acapabilities pair MAY exist "
       "if multiple multipath drivers are installed. Each "
       "LogicalDevice subclass served by the underlying multipath "
       "driver is associated to the associated Service instance via "
       "ServiceAvailableToELement." )]
class CIM_SCSIMultipathConfigurationCapabilities : CIM_Capabilities {

      [Description ( 
          "The load balance types supported by the driver for all "
          "logical units on a target device. If \'Product "
          "Specified\' is included, one or more instances of "
          "CIM_Product must be aggregated to the capabilities "
          "instance via ConcreteComponent. Each Product instance "
          "provides the SCSI Vendor, Product, and Revision ID of a "
          "supported product." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "No Load Balancing", 
          "Round Robin", "Least Blocks", "Least IO", "LBA Region", 
          "Product Specific" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MP_API.SNIA|MP_LOAD_BALANCE_TYPE" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.OtherSupportedLoadBalanceAlgorithmNames", 
          "CIM_SCSIMultipathConfigurationCapabilities.OtherSupportedLoadBalanceVendorNames" }]
   uint16 SupportedLoadBalanceTypes[];

      [Description ( 
          "When the corresponding array entry in "
          "SupportedLoadBalanceTypes[] is \'Other\', this entry "
          "provides a string describing the load balancing "
          "algorithm. When the corresponding array entry in "
          "SupportedLoadBalanceTypes[] is \'Product Specific\', "
          "this entry provides a string specifying the SCSI "
          "vendor/product/revision and must be formatted as exactly "
          "28 ASCII characters - 8 for vendor, 16 for product, and "
          "4 for revision (see SCSI SPC Inquiry response)" ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "SPC.INCITS-T10 |Standard Inquiry Response", 
          "MP_API.SNIA|MP_LOAD_BALANCE_TYPE", 
          "MP_API.SNIA|MP_DEVICE_PRODUCT_PROPERTIES" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.SupportedLoadBalanceTypes", 
          "CIM_SCSIMultipathConfigurationCapabilities.OtherSupportedLoadBalanceVendorNames" }]
   string OtherSupportedLoadBalanceAlgorithmNames[];

      [Description ( 
          "When the corresponding array entry in "
          "SupportedLoadBalanceTypes[] is \'Other\', this entry "
          "provides a string describing the vendor associated with "
          "the load balancing algorithm." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MP_API.SNIA|MP_LOAD_BALANCE_TYPE" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.SupportedLoadBalanceTypes", 
          "CIM_SCSIMultipathConfigurationCapabilities.OtherSupportedLoadBalanceAlgorithmNames" }]
   string OtherSupportedLoadBalanceVendorNames[];

      [Description ( 
          "The capability of the driver to support the SetTPGAccess "
          "method. True if the implementation supports activating "
          "target port groups." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|canSetTPGAccess" }, 
       ModelCorrespondence { 
          "CIM_SCSIPathConfigurationService.SetTPGAccess" }]
   boolean CanSetTPGAccess = false;

      [Description ( 
          "The capability of the driver to support the "
          "SetOverridePath and CancelOverridePaths methods. True if "
          "the implementation supports path overrides." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|canOverridePaths" }, 
       ModelCorrespondence { 
          "CIM_SCSIPathConfigurationService.SetOverridePath" }]
   boolean CanOverridePaths = false;

      [Description ( 
          "False if the MP drivers assure only a single device file "
          "name (e.g. /dev/dsk/...) exists for each MP device. True "
          "if the implementation exposes (or leaves exposed) device "
          "files for the individual paths encapsulated by the "
          "multipath device file. This is typically true for MP "
          "drivers that sit near the top of the driver stack and "
          "false for transport drivers at the bottom of the stack." ), 
       MappingStrings { 
          "MP_API.SNIA|Plugin Properties|exposesPathDeviceFiles" }]
   boolean ExposesPathDeviceFiles;

      [Description ( 
          "A string representing the primary file names the driver "
          "uses for multipath logical units, if those filenames do "
          "not match the names in Logical Unit osDeviceName as "
          "documented in Appendix A of the SNIA MP API "
          "specification. The name is expressing in the following "
          "format: \n"
          "\'*\' represents one or more alphanumeric characters \n"
          "\'#\' represents a string of consecutive digits \n"
          "\'%\' represents a string of hexadecimal digits \n"
          "backslash is an escape character for literal "
          "presentation of *, #, or %. Any other character is "
          "interpreted literally. For example, \'/dev/vx/dmp/*\'. "
          "If the multipath driver creates multipath logical unit "
          "device file names in the same namespace as the OS then "
          "this property should be left null." ), 
       MaxLen ( 256 ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|deviceNameFilespace" }]
   string DeviceNameFilespace;

      [Description ( 
          "True if the only supported device types are those "
          "described in aggregated CIM_Product instances as "
          "described in the description of "
          "SupportedLoadBalanceTypes." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|deviceNameFilespace" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.SupportedLoadBalanceTypes" }]
   boolean OnlySupportsSpecifiedProducts = false;

      [Description ( 
          "Describes the range of administer settable path weights "
          "supported by the driver. A driver with no path "
          "preference capabilities should set this property to "
          "zero. A driver with the ability to enable/disable paths "
          "should set this property to 1. Drivers with more weight "
          "settings can set the property appropriately." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|maximumWeight" }]
   uint32 MaximumWeight;

      [Description ( 
          "Specifies whether the implementation supports "
          "auto-failback (to re-enable paths that revert to a good "
          "state) at the plugin level, the multipath logical unit "
          "level, both levels or whether auto-failback is "
          "unsupported." ), 
       ValueMap { "0", "2", "3", "4", "5" }, 
       Values { "Unknown", "No Autofailback support", 
          "Autofailback support service-wide", 
          "Autofailback support per logical unit", 
          "Autofailback support per service or logical unit" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|autofailbackSupport" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.AutofailbackEnabled", 
          "CIM_SCSIMultipathSettings.AutofailbackEnabled" }]
   uint16 AutofailbackSupport;

      [Description ( 
          "A Boolean indicating that autofailback is enabled to all "
          "logical units associated to the "
          "CIM_SCSIPathConfigurationService associated with this "
          "capabilities instance (unless overridden by "
          "CIM_SCSIMultipathSettings AutoFailbackEnabled." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|autoFailbackEnabled" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.AutofailbackSupport", 
          "CIM_SCSIMultipathSettings.AutofailbackEnabled" }]
   boolean AutoFailbackEnabled;

      [Description ( 
          "The maximum polling rate (in seconds) supported by the "
          "driver. A value of zero indicates the driver/plugin does "
          "not support polling. This maximum applies to both "
          "BadPathPollingRate and InactivePathPollingRate." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|pollingRateMax" }]
   uint32 PollingRateMax;

      [Write, Description ( 
          "The current rate in seconds. Only valid when "
          "pollingRateMax is greater than 0 and canAutoFailback are "
          "true." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|currentPollingRate" }]
   uint32 CurrentPollingRate;

      [Write, Description ( 
          "The load balance types supported by the driver if not "
          "overridden by an administrative action." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "No Load Balancing", 
          "Round Robin", "Least Blocks", "Least IO", 
          "Product Specific" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_PLUGIN_PROPERTIES|defaultLoadBalanceType" }]
   uint16 DefaultLoadBalanceType;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "A class derived from SystemSpecificCollection that models SCSI "
       "Target Port Groups. SCSITargetPortGroup is part of the model "
       "for devices with asymmetric access to logical units - access "
       "is optimized for a subset of target ports. SCSITargetPortGroup "
       "is aggregated to SCSIProtocolEndpoints that expose a common "
       "ValueMap { 2, 3, 4, 5, 6 }, Values { Active/Optimized, "
       "Active/Non-optimized, StandBy, Unavailable, Transitioning }, "
       "access state for a set of associated logical Units (modeled by "
       "various subclasses of LogicalDevice). SCSITargetPortGroups "
       "only apply to target devices with asymmetric multipath access "
       "and not to devices with symmetric (or single path) access." )]
class CIM_SCSITargetPortGroup : CIM_SystemSpecificCollection {

      [Write, Description ( 
          "A boolean indicating whether the associated logical unit "
          "has asymmetric multipath access. If Asymmetric is true, "
          "then there MUST be a SCSITargetPortGroup instance "
          "associated to the LogicalDevice." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|asymmetric" }]
   boolean Asymmetric = false;

      [Write, Description ( 
          "The load balance type for the associated logical unit." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "No Load Balancing", 
          "Round Robin", "Least Blocks", "Least IO", 
          "Product Specific", "Service Wide Default" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|currentLoadBalanceType" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathSettings.OtherCurrentLoadBalanceType" }]
   uint16 CurrentLoadBalanceType = 7;

      [Write, Description ( 
          "A string describing the current load balance algorithm "
          "if CurrentLoadBalanceType is 1 (\'Other\'). This string "
          "MUST be identical to one of the strings from "
          "CIM_SCSIMultipathConfigurationCapabilities "
          "OtherSupportedLoadBalanceAlgorithmNames." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|currentLoadBalanceType" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.OtherSupportedLoadBalanceAlgorithmNames", 
          "CIM_SCSIMultipathSettings.CurrentLoadBalanceType" }]
   string OtherCurrentLoadBalanceType;

      [Write, Description ( 
          "The auto-failback setting for the associated logical "
          "units. Either enabled, disabled, or all associated "
          "logical units follow the service-wide setting from the "
          "capabilities class associated with the appropriate "
          "service." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Enabled for the associated logical units", 
          "Disabled for the associated logical units", 
          "The associated logical units use the service-wide setting" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|autoFailbackEnabled" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.AutoFailbackEnabled" }]
   uint16 AutoFailbackEnabled = 4;

      [Write, Description ( 
          "The maximum polling rate (in seconds) supported by the "
          "driver if different from the service-wide max from the "
          "capabilities instance. Zero (0) indicates the driver "
          "either does not poll for autofailback or has not "
          "provided an interface to set the polling rate for "
          "multipath logical units. If this property and the "
          "service PollingRateMax are non-zero, this value has "
          "precedence for the associate logical units. The "
          "instrumentation should not instantiate this property if "
          "the value from "
          "CIM_SCSIMultipathConfigurationCapabilities is used for "
          "the associated logical units." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|pollingRateMax" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.PollingRateMax" }]
   uint32 PollingRateMax;

      [Write, Description ( 
          "The current polling rate (in seconds) for auto-failback. "
          "This cannot exceed PollingRateMax. If this property and "
          "the service-wide Capabilities instance "
          "CurrentPollingRate are non-zero, this value has "
          "precedence for the associated logical units. The "
          "instrumentation should not instantiate this property if "
          "the value from "
          "CIM_SCSIMultipathConfigurationCapabilities is used for "
          "the associated logical units." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|currentPollingRate" }, 
       ModelCorrespondence { 
          "CIM_SCSIMultipathConfigurationCapabilities.CurrentPollingRate" }]
   uint32 CurrentPollingRate;

      [Description ( 
          "Access to all associated logical units through all "
          "aggregated ports share this access state. Access to the "
          "Logical Units through other ports is specified by the "
          "access state of those port\'s target port group." ), 
       ValueMap { "2", "3", "4", "5", "6" }, 
       Values { "Active/Optimized", "Active/Non-optimized", 
          "StandBy", "Unavailable", "Transitioning" }, 
       MappingStrings { "SPC.INCITS-T10 |Asymmetric Access State", 
          "MP_API.SNIA|MP_ACCESS_STATE_TYPE" }]
   uint16 AccessState;

      [Description ( 
          "True indicates that the underlying implementation "
          "provides an interface allowing drivers to explicitly "
          "request activation of a target port group - either "
          "through the SCSI SET TARGET PORT GROUP or a proprietary "
          "command." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_TARGET_PORT_PROPERTIES|explicitFailover" }]
   boolean ExplicitFailover;

      [Description ( 
          "An integer identifier for the target port group. This "
          "corresponds to the TARGET PORT GROUP field in the REPORT "
          "TARGET PORT GROUPS response and the TARGET PORT GROUP "
          "field in an INQUIRY VPD page 85 response, type 5h "
          "identifier." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_TARGET_PORT_PROPERTIES|tpgID", 
          "SPC.INCITS-T10 | Target Port Group Descriptor | Target Port Group", 
          "SPC.INCITS-T10 | Inquiry VPD page 0x85 | Target Port Group" }]
   uint16 Identifier;

      [Description ( 
          "True indicates that the target device indicates that "
          "access to the associated logical units through the ports "
          "in this target port group is preferred over access "
          "through other ports. This may correspond to the PREF bit "
          "in the SCSI TARGET PORT GROUP descriptor or an "
          "equivalent vendor-specific interface." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_TARGET_PORT_PROPERTIES|preferredLUPath", 
          "SPC.INCITS-T10 | Target Port Group Descriptor | PREF" }]
   boolean Preferred;

      [Description ( 
          "True indicates that the underlying implementation "
          "provides an interface allowing the administrator to "
          "reassign logical units to target port groups." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_TARGET_PORT_PROPERTIES|supportsLuAssignment" }]
   boolean SupportsLuAssignment;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "An instance of this class defines the specific support for the "
       "metered elements and methods for retrieving that statistical "
       "data from a StatisticsService." )]
class CIM_StatisticsCapabilities : CIM_Capabilities {

      [Description ( 
          "The list of element types for which statistical data is "
          "available. This property may not be meaningful if the "
          "StatisticsService these capabilities describe does not "
          "support StatisticalData instances for different types of "
          "elements." )]
   uint16 ElementTypesSupported[];

      [Description ( 
          "The synchronous mechanisms supported for retrieving "
          "statistics and defining and modifying filters for "
          "statistics retrieval." ), 
       ValueMap { "..", "0x8000.." }, 
       Values { "DMTF Reserved", "Vendor Specific" }]
   uint16 SynchronousMethodsSupported[];

      [Description ( 
          "The asychronous mechanisms supported for retrieving statistics."
           ), 
       ValueMap { "..", "0x8000.." }, 
       Values { "DMTF Reserved", "Vendor Specific" }]
   uint16 AsynchronousMethodsSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "A subclass of Capabilities that defines the Capabilities of a "
       "StorageService or StoragePool. For example, an instance of "
       "StorageCapabilities could be associated with either a "
       "StorageConfigurationService or StoragePool by using "
       "ElementCapabilities." )]
class CIM_StorageCapabilities : CIM_Capabilities {

      [Description ( 
          "Enumeration indicating the type of element to which this "
          "StorageCapabilities applies." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Reserved", "Any Type", "StorageVolume", 
          "StorageExtent", "StoragePool", 
          "StorageConfigurationService", "LogicalDisk" }]
   uint16 ElementType;

      [Description ( 
          "Indicates whether or not the associated element supports "
          "no single point of failure. Values are: FALSE = does not "
          "support no single point of failure, and TRUE = supports "
          "no single point of failure." ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.NoSinglePointOfFailureDefault" }]
   boolean NoSinglePointOfFailure;

      [Description ( 
          "Indicates the default value for the "
          "NoSinglePointOfFailure property." ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.NoSinglePointOfFailure" }]
   boolean NoSinglePointOfFailureDefault;

      [Description ( 
          "DataRedundancyMax describes the maximum number of "
          "complete copies of data that can be maintained. Examples "
          "would be RAID 5 (where 1 copy is maintained) and RAID 1 "
          "(where 2 or more copies are maintained). Possible values "
          "are 1 to n. The default redundancy is specified using "
          "DataRedundancyDefault, while the minimum is defined by "
          "DataRedundancyMin." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.DataRedundancyMin", 
          "CIM_StorageCapabilities.DataRedundancyDefault" }]
   uint16 DataRedundancyMax;

      [Description ( 
          "DataRedundancyMin describes the minimum number of "
          "complete copies of data that can be maintained. Examples "
          "would be RAID 5 where 1 copy is maintained and RAID 1 "
          "where 2 or more copies are maintained). Possible values "
          "are 1 to n. The default redundancy is specified using "
          "DataRedundancyDefault, while the maximum is defined by "
          "DataRedundancyMax." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.DataRedundancyMax", 
          "CIM_StorageCapabilities.DataRedundancyDefault" }]
   uint16 DataRedundancyMin;

      [Description ( 
          "DataRedundancyDefault describes the default number of "
          "complete copies of data that can be maintained. Examples "
          "would be RAID 5 where 1 copy is maintained and RAID 1 "
          "where 2 or more copies are maintained. Possible values "
          "are 1 to n. The bounds for the redundancy (max and min) "
          "are defined by DataRedundancyMax and DataRedundancyMin." ), 
       MinValue ( 1 ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.DataRedundancyMax", 
          "CIM_StorageCapabilities.DataRedundancyMin" }]
   uint16 DataRedundancyDefault;

      [Description ( 
          "PackageRedundancyMax describes the maximum number of "
          "redundant packages that can be used. For example, in the "
          "storage domain, package redundancy describes how many "
          "disk spindles can fail without data loss including, at "
          "most, one spare. An example would be RAID5 with a spare "
          "disk which would have a PackageRedundancy of 2. Possible "
          "values are 0 to n. The default redundancy is specified "
          "using PackageRedundancyDefault, while the maximum is "
          "defined by PackageRedundancyMax." ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.PackageRedundancyMin", 
          "CIM_StorageCapabilities.PackageRedundancyDefault" }]
   uint16 PackageRedundancyMax;

      [Description ( 
          "PackageRedundancyMin describes the minimum number of "
          "redundant packages that can be used. For example, in the "
          "storage domain, package redundancy describes how many "
          "disk spindles can fail without data loss including, at "
          "most, one spare. An example would be RAID5 with a spare "
          "disk which would have a PackageRedundancy of 2. Possible "
          "values are 0 to n. The default redundancy is specified "
          "using PackageRedundancyDefault, while the minimum is "
          "defined by PackageRedundancyMin." ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.PackageRedundancyMax", 
          "CIM_StorageCapabilities.PackageRedundancyDefault" }]
   uint16 PackageRedundancyMin;

      [Description ( 
          "PackageRedundancyDefault describes the default number of "
          "redundant packages that will be used. For example, in "
          "the storage domain, package redundancy describes how "
          "many disk spindles can fail without data loss including, "
          "at most, one spare. An example would be RAID5 with a "
          "spare disk which would have a PackageRedundancy of 2. "
          "Possible values are 0 to n. The bounds for redundancy "
          "are specified using the properties, PackageRedundancyMax "
          "and PackageRedundancyMin." ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.PackageRedundancyMin", 
          "CIM_StorageCapabilities.PackageRedundancyMax" }]
   uint16 PackageRedundancyDefault;

      [Description ( 
          "DeltaReservatioMax is a number between 1 (1%) and a 100 "
          "(100%) that specifies the maximum amount of space "
          "reserved in a replica for caching changes. For a "
          "complete copy this would be 100%, but it can be lower in "
          "some implementations. This parameter sets the upper "
          "limit, while DeltaReservationMin sets the lower limit." ), 
       Units ( "Percentage" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.DeltaReservationMin", 
          "CIM_StorageCapabilities.DeltaReservationDefault" }]
   uint16 DeltaReservationMax;

      [Description ( 
          "DeltaReservationMin is a number between 1 (1%) and a 100 "
          "(100%) that specifies the minimum amount of space that "
          "should be reserved in a replica for caching changes. For "
          "a complete copy this would be 100%, but it can be lower "
          "in some implementations. This parameter sets the lower "
          "limit, while DeltaReservationMax sets the upper limit." ), 
       Units ( "Percentage" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.DeltaReservationMax", 
          "CIM_StorageCapabilities.DeltaReservationDefault" }]
   uint16 DeltaReservationMin;

      [Description ( 
          "Delta reservation is a number between 1 (1%) and a 100 "
          "(100%) that specifies how much space should be reserved "
          "by default in a replica for caching changes. For a "
          "complete copy this would be 100%, but it can be lower in "
          "some implementations. This parameter sets the default "
          "value, while DeletaReservationMax and DeltReservationMin "
          "set the upper and lower bounds." ), 
       Units ( "Percentage" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageCapabilities.DeltaReservationMax", 
          "CIM_StorageCapabilities.DeltaReservationMin" }]
   uint16 DeltaReservationDefault;

      [Description ( 
          "Extent Stripe Length describes the number of underlying "
          "StorageExtents across which data is striped in the "
          "common striping-based storage organizations. This is "
          "also known as the number of \'members\' or \'columns\'. \n"
          "A NULL value for ExtentStripeLengthDefault indicates "
          "that the system does not support configuration of "
          "storage by specifying Stripe Length. \n"
          "If Extent Stripe Length is supported, and this "
          "Capabilities instance is associated with a pool that was "
          "created with a range of QOS then "
          "ExtentStripeLengthDefault represents the default value. "
          "Other available values(such as min, max, and discrete "
          "values) can be determined by using the "
          "\'GetSupportedStripeLengths\' and "
          "\'GetSupportedStripeLengthRange\' methods. \n"
          "If Extent Stripe Length is supported and the pool was "
          "created with a single specific QOS, representing a Raid "
          "group, set, or rank, then this property represents the "
          "current/fixed value for the pool, and Extent Stripe "
          "Length is not supported in subsequent creation of "
          "elements from this pool. Consequently, the "
          "\'GetSupportedStripeLength\' methods cannot be used, and "
          "in a StorageSetting instance used as a goal when "
          "creating or modifying a child element of the pool, "
          "ExtentStripeLengthGoal, ExtentStripeLengthMin, and "
          "ExtentStripeLengthMax MUST be set to NULL." ), 
       MinValue ( 1 )]
   uint16 ExtentStripeLengthDefault;

      [Description ( 
          "ParityLayout specifies whether a parity-based storage "
          "organization is using rotated or non-rotated parity. If "
          "this capabilities instance is associated with a pool "
          "that was created with a range of QOS then "
          "ParityLayoutDefault represents the default value. Other "
          "available values can be determined by using the "
          "\'GetSupportedParityLayouts\' method. If the pool was "
          "created with a single specific QOS, representing a Raid "
          "group, set, or rank, then this property represents the "
          "current/fixed value for the pool, and ParityLayout is "
          "not supported in subsequent creation of elements from "
          "this pool. Consequently, the \'GetSupportedParityLayouts\' "
          "method cannot be used, and the ParityLayoutGoal property "
          "in StorageSetting instances used in child element "
          "operations on this pool MUST be set to NULL. A NULL "
          "value for ParityLayoutDefault indicates that the system "
          "does not support configuration of storage by specifying "
          "ParityLayout." ), 
       ValueMap { "2", "3" }, 
       Values { "Non-Rotated Parity", "Rotated Parity" }]
   uint16 ParityLayoutDefault;

      [Description ( 
          "User Data Stripe Depth describes the number of bytes "
          "forming a strip in common striping-based storage "
          "organizations. The strip is defined as the size of the "
          "portion of a stripe that lies on one extent. Thus, "
          "ExtentStripeLength * UserDataStripeDepth will yield the "
          "size of one stripe of user data. A NULL value for "
          "UserDataStripeDepthDefault indicates that the system "
          "does not support configuration of storage by specifying "
          "Stripe Depth. \n"
          "If User Data Stripe Depth is supported, and this "
          "Capabilities instance is associated with a pool that was "
          "created with a range of QOS then "
          "UserDataStripeDepthDefault represents the default value. "
          "Other available values(such as min, max, and discrete "
          "values) can be determined by using the "
          "\'GetSupportedStripeDepths\' and "
          "\'GetSupportedStripeDepthRange\' methods. \n"
          "If User Data Stripe Depth is supported and the pool was "
          "created with a single specific QOS, representing a Raid "
          "group, set, or rank, then this property represents the "
          "current/fixed value for the pool, and User Data Stripe "
          "Depth is not supported in subsequent creation of "
          "elements from this pool. Consequently, the "
          "\'GetSupportedStripeDepth\' methods cannot be used, and "
          "in a StorageSetting instance used as a goal when "
          "creating or modifying a child element of the pool, "
          "UserDataStripeDepthGoal, UserDataStripeDepthMin, and "
          "UserDataStripeDepthMax MUST be set to NULL." ), 
       Units ( "Bytes" ), 
       MinValue ( 1 )]
   uint64 UserDataStripeDepthDefault;


      [Description ( 
          "Method to create and populate a StorageSetting instance "
          "from a StorageCapability instance. This removes the need "
          "to populate default settings and other settings in the "
          "context of each StorageCapabilities (which could be "
          "numerous). If the underlying instrumentation supports "
          "the StorageSettingWithHints subclass, then an instance "
          "of that class will be created instead." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 CreateSetting(
         [IN, Description ( 
             "If \'Default\' is passed for the CreateDefault "
             "parameter, the Max, Goal, and Min setting "
             "attributes are set to the Default values of the "
             "parent StorageCapabilities when the instance is "
             "created. \n"
             "If set to \'Goal\' the new StorageSetting "
             "attributes are set to the related attributes of "
             "the parent StorageCapabilities, e.g. Min to Min, "
             "Goal to Default, and Max to Max. \n"
             "\n"
             "This method maybe deprecated in lieu of intrinsics "
             "once limitations in the CIM Operations are "
             "addressed." ), 
          ValueMap { "2", "3" }, 
          Values { "Default", "Goal" }]
      uint16 SettingType, 
         [IN ( false ), OUT, Description ( 
             "Reference to the created StorageSetting instance." )]
      CIM_StorageSetting REF NewSetting);

      [Description ( 
          "For systems that support Parity-based storage "
          "organizations for volume or pool creation, this method "
          "can be used to the supported parity layouts." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Method completed OK", "Method not supported", 
          "Choice not aavailable for this capability" }]
   uint32 GetSupportedParityLayouts(
         [IN ( false ), OUT, Description ( 
             "List of supported Parity for a Volume/Pool "
             "creation or modification." ), 
          ValueMap { "2", "3" }, 
          Values { "Non-Rotated Parity", "Rotated Parity" }, 
          ArrayType ( "Indexed" )]
      uint16 ParityLayout[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageConfigurationCapabilities 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "A subclass of Capabilities that defines the Capabilities of a "
       "StorageConfigurationService. An instance of "
       "StorageConfigurationCapabilities is associated with a "
       "StorageConfigurationService using ElementCapabilities." )]
class CIM_StorageConfigurationCapabilities : CIM_Capabilities {

      [Description ( 
          "Enumeration indicating what operations will be executed "
          "as asynchronous jobs. If an operation is included in "
          "both this and SupportedSynchronousActions then the "
          "underlying implementation is indicating that it may or "
          "may not create a job." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10" }, 
       Values { "Storage Pool Creation", "Storage Pool Deletion", 
          "Storage Pool Modification", "Storage Element Creation", 
          "Storage Element Return", "Storage Element Modification", 
          "Replica Creation", "Replica Modification", 
          "Replica Attachment" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationCapabilities.SupportedSynchronousActions" }]
   uint16 SupportedAsynchronousActions[];

      [Description ( 
          "Enumeration indicating what operations will be executed "
          "without the creation of a job. If an operation is "
          "included in both this and SupportedAsynchronousActions "
          "then the underlying instrumentation is indicating that "
          "it may or may not create a job." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10" }, 
       Values { "Storage Pool Creation", "Storage Pool Deletion", 
          "Storage Pool Modification", "Storage Element Creation", 
          "Storage Element Return", "Storage Element Modification", 
          "Replica Creation", "Replica Modification", 
          "Replica Attachment" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationCapabilities.SupportedAsynchronousActions" }]
   uint16 SupportedSynchronousActions[];

      [Description ( 
          "Enumeration indicating the type of storage elements that "
          "are supported by the associated "
          "StorageConfigurationService." ), 
       ValueMap { "2", "3", "..", "0x8000..0xFFFF" }, 
       Values { "StorageVolume", "StorageExtent", "DMTF Reserved", 
          "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.CreateOrModifyElementFromStoragePool.ElementType" }]
   uint16 SupportedStorageElementTypes[];

      [Description ( 
          "Enumeration indicating features supported by the "
          "StoragePool methods." ), 
       ValueMap { "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "InExtents", "Single InPool", "Multiple InPools", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.CreateOrModifyStoragePool.InPools", 
          "CIM_StorageConfigurationService.CreateOrModifyStoragePool.InExtents" }]
   uint16 SupportedStoragePoolFeatures[];

      [Description ( 
          "Enumeration indicating features supported by the Storage "
          "Element methods." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "..", 
          "0x8000..0xFFFF" }, 
       Values { "StorageExtent Creation", "StorageVolume Creation", 
          "StorageExtent Modification", 
          "StorageVolume Modification", "Single InPool", 
          "Multiple InPools", "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.CreateOrModifyElementFromStoragePool.ElementType", 
          "CIM_StorageConfigurationService.CreateOrModifyElementFromStoragePool.InPool" }]
   uint16 SupportedStorageElementFeatures[];

      [Description ( 
          "SupportedCopyTypes describes the replication "
          "capabilities supported by the associated "
          "StorageConfigurationServices. Values are: \n"
          "Async: asynchronous copies may be created and "
          "maintained. \n"
          "Sync: synchronous copies may be created and maintained. \n"
          "UnSyncAssoc: unsynchronized copies may be created and "
          "maintained. \n"
          "UnSyncUnAssoc: a \'straight copy\' may be created." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000..0xFFFF" }, 
       Values { "Async", "Sync", "UnSyncAssoc", "UnSyncUnAssoc", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.CreateReplica.CopyType" }]
   uint16 SupportedCopyTypes[];

      [Description ( 
          "InitialReplicationState specifies which initial "
          "ReplicationState is supported by a particular provider. "
          "Values are: \n"
          "Initialized: The replication relationship is known and "
          "unsynchronized, but time required to synchronize may be "
          "long. \n"
          "Prepared: The replication relationship is known and "
          "unsynchronized and the time required to synchronize will "
          "be short. \n"
          "Synchronized: The replicas are synchronized." ), 
       ValueMap { "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Initialized", "Prepared", "Synchronized", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.AttachReplica", 
          "CIM_StorageConfigurationService.CreateReplica" }]
   uint16 InitialReplicationState;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This subclass defines the replication capabilities of a "
       "StorageConfigurationService. Multiple instances of "
       "StorageReplicationCapabilities may be associated with a "
       "StorageConfigurationService using ElementCapabilities. A "
       "provider should create one instance for each supported "
       "SynchronizationType." )]
class CIM_StorageReplicationCapabilities : CIM_Capabilities {

      [Description ( 
          "SupportedSynchronizationType describes the type of "
          "Synchronization that is characterized by this instance "
          "of StorageReplicationCapabilities. Values are:\n"
          "Async: create a mirror that is nearly always "
          "synchronized. Sync: create a mirror that is always synchronized.\n"
          "UnSyncAssocFull: create a full size snapshot (Point In "
          "Time image).\n"
          "UnSyncAssocDelta: create a delta snapshot (Point In Time image).\n"
          "UnSyncUnAssoc: create a full size, independent replica." ), 
       ValueMap { "2", "3", "4", "5", "6", "..", "32768..65535" }, 
       Values { "Async", "Sync", "UnSyncAssoc-Full", 
          "UnSyncAssoc-Delta", "UnSyncUnAssoc", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 SupportedSynchronizationType;

      [Description ( 
          "Enumeration indicating what operations will be executed "
          "as asynchronous jobs. If an operation is included in "
          "both this and SupportedSynchronousActions then the "
          "underlying implementation is indicating that it may or "
          "may not create a job." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", ".." }, 
       Values { "Local Replica Creation", "Remote Replica Creation", 
          "Local Replica Modification", 
          "Remote Replica Modification", "Local Replica Attachment", 
          "Remote Replica Attachment", "Buffer Creation", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_StorageReplicationCapabilities.SupportedSynchronousActions" }]
   uint16 SupportedAsynchronousActions[];

      [Description ( 
          "Enumeration indicating what operations will be executed "
          "without the creation of a job. If an operation is "
          "included in both this and SupportedAsynchronousActions "
          "then the underlying instrumentation is indicating that "
          "it may or may not create a job." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", ".." }, 
       Values { "Local Replica Creation", "Remote Replica Creation", 
          "Local Replica Modification", 
          "Remote Replica Modification", "Local Replica Attachment", 
          "Remote Replica Attachment", "Buffer Creation", 
          "NetworkPipe Creation", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_StorageReplicationCapabilities.SupportedAsynchronousActions" }]
   uint16 SupportedSynchronousActions[];

      [Description ( 
          "InitialReplicationState specifies which initial "
          "ReplicationState is supported by a particular provider. "
          "Values are: \n"
          "Initialized: The replication relationship is known and "
          "unsynchronized, but time required to synchronize may be "
          "long. \n"
          "Prepared: The replication relationship is known and "
          "unsynchronized and the time required to synchronize will "
          "be short. \n"
          "Synchronized: The replicas are synchronized.Idle: an "
          "UnSyncAssoc replica is ready to manage." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000..0xFFFF" }, 
       Values { "Initialized", "Prepared", "Synchronized", "Idle", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.AttachReplica", 
          "CIM_StorageConfigurationService.AttachOrModifyReplica", 
          "CIM_StorageConfigurationService.CreateReplica" }]
   uint16 InitialReplicationState;

      [Description ( 
          "Enumeration indicating which specialized storage element "
          "types are supported by this instance of "
          "StorageReplicationCapabilities. Specialized types are "
          "indicated by the value of the IntendedUsage in "
          "StorageSetting." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "Delta Pool", "Delta Pool Component", 
          "Remote Mirror", "Local Mirror", "Full Snapshot", 
          "Delta Snapshot", "Replication Buffer", "DMTF Reserved", 
          "Vendor Specific" }, 
       ModelCorrespondence { "CIM_StorageSetting.IntendedUsage" }]
   uint16 SupportedSpecializedElements[];

      [Description ( 
          "Enumeration indicating which ModifySynchronization "
          "operations are supported by this instance of "
          "StorageReplicationCapabilities." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "0x8000..0xFFFF" }, 
       Values { "Detach", "Fracture", "Resync", "Restore", 
          "Prepare", "Unprepare", "Quiesce", "Unquiesce", 
          "Reset To Sync", "Reset To Async", "Start Copy", 
          "Stop Copy", "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageConfigurationService.ModifySynchronization" }]
   uint16 SupportedModifyOperations[];

      [Description ( 
          "Indicates host access restrictions for replicas with "
          "thesecapabilities. Values: 2 = not accessible. \n"
          "3 = no restrictions. Any host may access. 4 = only "
          "accessible by associated source element hosts. 5 = not "
          "accessible by source element hosts. Other hosts OK." ), 
       ValueMap { "2", "3", "4", "5", ".." }, 
       Values { "Not Accessible", "No Restrictions", 
          "Source Hosts Only", "Source Hosts Excluded", 
          "DMTF Reserved" }]
   uint16 ReplicaHostAccessibility;

      [Description ( 
          "Lists the replica synchronization states in which the "
          "provider allows host access to replicas. Accessibility "
          "does not guarantee replica contents are valid or "
          "consistent." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "..", "0x8000.." }, 
       Values { "Initialized", "Prepare In Progress", "Prepared", 
          "Resync In Progress", "Synchronized", 
          "Fracture In Progress", "Quiesce In Progress", "Quiesced", 
          "Restore In Progress", "Idle", "Broken", "Fractured", 
          "Frozen", "Copy In Progress", "DMTF Reserved", 
          "Vendor Specific" }, 
       ModelCorrespondence { "CIM_StorageSynchronized.SyncState" }]
   uint16 HostAccessibleState[];

      [Description ( 
          "True indicates space limits on allocation from "
          "StoragePools may be enforced." ), 
       ModelCorrespondence { 
          "CIM_AllocatedFromStoragePool.SpaceLimit" }]
   boolean SpaceLimitSupported;

      [Description ( 
          "True indicates space reserved for replicas can be from a "
          "specialized pool." )]
   boolean SpaceReservationSupported;

      [Description ( 
          "True indicates local mirror can be snapshot source." )]
   boolean LocalMirrorSnapshotSupported;

      [Description ( 
          "True indicates remote mirror can be snapshot source." )]
   boolean RemoteMirrorSnapshotSupported;

      [Description ( 
          "True indicates all delta replicas associated with the "
          "same source element can be incrementally dependent. Only "
          "the oldest replica in the set may be deleted or "
          "resynced." )]
   boolean IncrementalDeltasSupported;

      [Description ( 
          "True indicates replicas can persist during power off or "
          "system reset. False indicates replicas lost during these "
          "events." )]
   boolean PersistentReplicasSupported;

      [Description ( 
          "True indicates peer-to-peer connections are "
          "bi-directional. False indicates connections are "
          "uni-directional." )]
   boolean BidirectionalConnectionsSupported;

      [Description ( 
          "Maximum number of replicas that can be associated with "
          "one source element." )]
   uint16 MaximumReplicasPerSource;

      [Description ( 
          "Maximum number of port pairs assigned to a peer-to-peer "
          "connection." )]
   uint16 MaximumPortsPerConnection;

      [Description ( 
          "Maximum number of peer-to-peer connections to which a "
          "port maybe assigned." )]
   uint16 MaximumConnectionsPerPort;

      [Description ( 
          "Maximum number of peer connections supported by this "
          "instance of StorageConfigurationService." )]
   uint16 MaximumPeerConnections;

      [Description ( 
          "Maximum local mirror replication depth allowed by this "
          "instance of StorageConfigurationService. Value 1 "
          "indicates multi-level replication not supported." )]
   uint16 MaximumLocalReplicationDepth = 1;

      [Description ( 
          "Maximum remote mirror replication depth allowed by this "
          "instance of StorageConfigurationService. Value N means "
          "that remote replicas can span N linked peer-to-peer "
          "connections. Value 1 indicates multi-level replication "
          "not supported." )]
   uint16 MaximumRemoteReplicationDepth = 1;

      [Description ( 
          "Start or do not start background copy when replica is created."
           ), 
       ValueMap { "0", "1", "2", "..", "0x8000.." }, 
       Values { "Not Managed", "Start", "Do Not Start", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageSetting.InitialSynchronization" }]
   uint16 InitialSynchronizationDefault;

      [Description ( 
          "ReplicationPriority allows the priority of background "
          "Replication I/O to be managed relative to host I/O. "
          "Default applies to initial or deferred background "
          "Replication operations. Value can be modified while in "
          "Replication-in-progress state. Values: Low: Replication "
          "engine I/O lower priority than host I/O. \n"
          "Same: Replication engine I/O has the same priority as "
          "host I/O. \n"
          "High: Replication engine I/O has higher priority than "
          "host I/O." ), 
       ValueMap { "0", "1", "2", "3", "..", "0x8000.." }, 
       Values { "Not Managed", "Low", "Same", "High", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { "CIM_StorageSetting.ReplicationPriority" }]
   uint16 ReplicationPriorityDefault;

      [Description ( 
          "Warning threshold for generating an indication for "
          "RemainingManagedSpace. Value of zero means no warning "
          "generated.Triggered when RemainingManagedSpace <= "
          "(TotalManagedSpace*LowSpaceWarningThreshold)/100." ), 
       Units ( "Percentage" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StoragePool.LowSpaceWarningThreshold" }, 
       PUnit ( "percent" )]
   uint8 LowSpaceWarningThresholdDefault;

      [Description ( 
          "Warning threshold for instance modification indication "
          "for SpaceConsumed by a replica element. Value of zero "
          "means no warning generated. Triggered when SpaceConsumed "
          ">= (SpaceLimit*SpaceLimitWarningThreshold)/100." ), 
       Units ( "Percentage" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_AllocatedFromStoragePool.SpaceLimitWarningThreshold" }, 
       PUnit ( "percent" )]
   uint8 SpaceLimitWarningThresholdDefault;

      [Description ( 
          "Remote replication provides StorageConfigurationService "
          "instances for source systems and target systems. A "
          "client determines that extrinsic methods of the service "
          "should be invoked to one instance or the other based on "
          "the value of this property. Values: Not Specified: "
          "invoke a method to either system instance. Source: "
          "invoke to source element service instance. Target: "
          "invoke to target element service instance. Proxy: find "
          "and invoke to proxy service instance." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Not Specified", "Source", "Target", "Proxy", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 RemoteReplicationServicePointAccess;

      [Description ( 
          "Remote replication provides StorageConfigurationService "
          "instances for source systems and target systems. A "
          "client determines that extrinsic methods of the service "
          "should be invoked to one instance or the other based on "
          "the value of this property. If the primary instance is "
          "unavailable, the provider may indicate an alternate "
          "instance. Values: None: no alternate exists. Source: "
          "invoke to source element service instance. Target: "
          "invoke to target element service instance. Proxy: find "
          "and invoke alternate proxy service instance." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "None", "Source", "Target", "Proxy", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 AlternateReplicationServicePointAccess;

      [Description ( 
          "DeltaReplicaPool indicates that a specialized pool is "
          "required as a container for delta replica elements. "
          "Values: Any: delta replicas can be created in any pool. "
          "Exclusive: one specialized, exclusive pool must be "
          "created for each source element that has associated "
          "delta replicas. Shared: one specialized, shared pool "
          "must be created to be shared by all source elements with "
          "associated delta replicas." ), 
       ValueMap { "2", "3", "4", "..", "0x8000.." }, 
       Values { "Any", "Exclusive", "Shared", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 DeltaReplicaPoolAccess;

      [Description ( 
          "Remote replication buffer elements are instances of "
          "CIM_Memory. A buffer element may be created from a "
          "component extent with a BasedOn association or in a "
          "storage pool with an AllocatedFromStoragePool "
          "association. The provider can also make the size and "
          "element type opaque to a client. Values: \n"
          "Not specified: client allows provider to determine size "
          "and container element type. \n"
          "InExtent: buffer must be created from passed component "
          "extent. \n"
          "InPool: buffer must be created in passed pool." ), 
       ValueMap { "0", "2", "3", "..", "0x8000.." }, 
       Values { "Not specified", "InExtent", "InPool", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 RemoteBufferElementType;

      [Description ( 
          "Array provider may require multiple buffer elements per "
          "array instance as indicated by this property. Values: \n"
          "Array: one buffer element for the entire array. \n"
          "ComponentCS: one buffer element per ComputerSystem "
          "element in a clustered array. \n"
          "Pipe: one or two buffer elements per replication pipe." ), 
       ValueMap { "2", "3", "4", "..", "0x8000.." }, 
       Values { "Array", "ComponentCS", "Pipe", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 RemoteBufferHost;

      [Description ( 
          "This property allows the provider to indicate the "
          "required location for remote buffer elements. Values: \n"
          "Source: buffer needed only on platforms hosting source "
          "elements. \n"
          "Target: buffer needed only on platforms hosting target "
          "elements. \n"
          "Both: buffers needed for both source and target "
          "platforms." ), 
       ValueMap { "2", "3", "4", "..", "0x8000.." }, 
       Values { "Source", "Target", "Both", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 RemoteBufferLocation;

      [Description ( 
          "Peer may require a write buffer for remote replica "
          "elements with async I/O buffering. Typically used to "
          "increase remote mirror replication engine performance "
          "while maintaining high availability. Values: \n"
          "Required: must have buffer if any Async remote replicas "
          "are created. \n"
          "Optional: may have buffer if any Async remote replicas "
          "are created." ), 
       ValueMap { "0", "2", "3", "..", "0x8000.." }, 
       Values { "Not Supported", "Required", "Optional", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 RemoteBufferSupported;

      [Description ( 
          "Indicate if an async remote replica pair is allowed to "
          "use a write buffer for asynchronous write buffering. - "
          "Not Managed: use or not of the buffer is up to the "
          "implementation. - Use Buffer: use of a buffer is "
          "required. - Do Not Use Buffer: a buffer shall not be "
          "used." ), 
       ValueMap { "0", "1", "2", "..", "0x8000.." }, 
       Values { "Not Managed", "Use Buffer", "Do Not Use Buffer", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_StorageSetting.UseReplicationBuffer" }]
   uint16 UseReplicationBufferDefault;

      [Description ( 
          "Peer connection protocol is a private, vendor-specific "
          "protocol for replication data transport. A client "
          "verifies that two peers support the same protocol before "
          "establishing a peer-to-peer connection." )]
   string PeerConnectionProtocol;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This association define StorageSettings that reflect the "
       "capabilities of the associated StorageCapabilities. The "
       "associated StorageSetting may not define the operational "
       "characteristics (through settings properties) of any storage "
       "element. Certain StorageSetting instances can be defined as "
       "\"Fixed = Not Changeable\" by using the \"ChangeableType\" "
       "attribute. \"Fixed\" settings have this special association. "
       "This association should be defined between \"Fixed - Not "
       "Changeable\" instances of StorageSetting with the "
       "StorageCapabilities instances that are associated with the "
       "StoragePools which support the storage characteristics "
       "described by the StorageSetting instance. \n"
       "Fixed settings may be associated to many StorageCapabilities." )]
class CIM_StorageSettingsAssociatedToCapabilities : CIM_SettingAssociatedToCapabilities {

      [Override ( "Antecedent" ), 
       Description ( "The StorageCapabilities." )]
   CIM_StorageCapabilities REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The fixed and predefined StorageSetting." )]
   CIM_StorageSetting REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This association define StorageSettings that reflect the "
       "capabilities of the associated StorageCapabilities. The "
       "associated StorageSetting may not define the operational "
       "characteristics (through settings properties) of any storage "
       "element. StorageSettingsGeneratedFromCapabilities is the "
       "association between instances of StorageCapabilities and those "
       "instances of StorageSetting that have been created from the "
       "StorageCapabilities instance using the StorageCapabilities "
       "\"CreateSetting\" method. These settings have a "
       "StorageSetting.ChangeableType of \"Changeable - Transient\" or "
       "\"Changeable - Persistent\" The settings associated by this "
       "class reflect the capabilities from which they are generated. "
       "These setting SHALL be associated with one "
       "StorageCapabilities. \n"
       "A generated setting can be deleted by the implementation at "
       "any time if it is a a StorageSetting of \"Changed - Transient\" "
       "ChangeableType. \n"
       "A client should not use this association to find transient "
       "Settings to subsequently modify and/or use because that would "
       "increase the likelihood of setting contention across clients. "
       "Instead the implementation uses this association to define "
       "transient settings, which can be located through any means, "
       "that have special temporal based life cycle. \n"
       "DefaultSetting is meaningless in this class." )]
class CIM_StorageSettingsGeneratedFromCapabilities : CIM_SettingAssociatedToCapabilities {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The StorageCapabilities." )]
   CIM_StorageCapabilities REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The temporary and client generated StorageSetting." )]
   CIM_StorageSetting REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="CIMCoreCR00734.006" type ="deprecate">Deprecate class.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_VideoControllerResolution
// ==================================================================
   [Deprecated { "CIM_VideoHeadResolution" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of the CIM_VideoControllerResolutionclass has "
       "been deprecated in lieu of CIM_VideoHeadResolution. \n"
       "Deprecated description: \n"
       "VideoControllerResolution describes the various video modes "
       "that a VideoController can support. Video modes are defined by "
       "the possible horizontal and vertical resolutions, refresh "
       "rate, scan mode, and number of color settings that are "
       "supported by a Controller. The actual resolutions and so on "
       "that are in use are the values specified in the "
       "VideoController object." )]
class CIM_VideoControllerResolution : CIM_Setting {

      [Deprecated { "No Value" }, 
       Key, Override ( "SettingID" ), 
       Description ( 
          "The inherited SettingID serves as part of the key for a "
          "VideoControllerResolution instance." ), 
       MaxLen ( 256 )]
   string SettingID;

      [Deprecated { "CIM_VideoHeadResolution.HorizontalResolution" }, 
       Description ( 
          "The horizontal resolution of the Controller in Pixels." ), 
       Units ( "Pixels" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.2" }, 
       ModelCorrespondence { 
          "CIM_VideoController.CurrentHorizontalResolution" }, 
       PUnit ( "pixel" )]
   uint32 HorizontalResolution;

      [Deprecated { "CIM_VideoHeadResolution.VerticalResolution" }, 
       Description ( 
          "The vertical resolution of the Controller in Pixels." ), 
       Units ( "Pixels" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.3" }, 
       ModelCorrespondence { 
          "CIM_VideoController.CurrentVerticalResolution" }, 
       PUnit ( "pixel" )]
   uint32 VerticalResolution;

      [Deprecated { "CIM_VideoHeadResolution.RefreshRate" }, 
       Description ( 
          "Refresh rate in hertz. If a range of rates is supported, "
          "use the MinRefreshRate and MaxRefreshRate properties, "
          "and set RefreshRate (this property) to 0." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.4" }, 
       ModelCorrespondence { "CIM_VideoController.CurrentRefreshRate" }, 
       PUnit ( "hertz" )]
   uint32 RefreshRate;

      [Deprecated { "CIM_VideoHeadResolution.MinRefreshRate" }, 
       Description ( 
          "Minimum refresh rate in hertz, when a range of rates is "
          "supported at the specified resolutions." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.6" }, 
       ModelCorrespondence { "CIM_VideoController.MinRefreshRate" }, 
       PUnit ( "hertz" )]
   uint32 MinRefreshRate;

      [Deprecated { "CIM_VideoHeadResolution.MaxRefreshRate" }, 
       Description ( 
          "Maximum refresh rate in hertz, when a range of rates is "
          "supported at the specified resolutions." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.7" }, 
       ModelCorrespondence { "CIM_VideoController.MaxRefreshRate" }, 
       PUnit ( "hertz" )]
   uint32 MaxRefreshRate;

      [Deprecated { "CIM_VideoHeadResolution.ScanMode" }, 
       Description ( 
          "Integer that indicates whether the Controller operates "
          "in interlaced (value=5) or non-interlaced (value=4) "
          "mode." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Not Supported", 
          "Non-Interlaced Operation", "Interlaced Operation" }, 
       MappingStrings { "MIF.DMTF|Monitor Resolutions|002.5" }, 
       ModelCorrespondence { "CIM_VideoController.CurrentScanMode" }]
   uint16 ScanMode;

      [Deprecated { "CIM_VideoHeadResolution.NumberOfColors" }, 
       Description ( 
          "Number of colors that are supported at the current resolutions."
           ), 
       ModelCorrespondence { 
          "CIM_VideoController.CurrentNumberOfColors" }]
   uint64 NumberOfColors;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "CIM_WiFiPortCapabilities is a specialization of "
       "CIM_NetworkPortCapabilities that describes the capabilities of "
       "a WiFiPort." )]
class CIM_WiFiPortCapabilities : CIM_NetworkPortCapabilities {

      [Description ( 
          "The 802.11 modes that the Port supports. See description "
          "of PortType property in CIM_WiFiPort for more "
          "information." ), 
       ValueMap { "0", "1", "70", "71", "72", "73", "..", "16000.." }, 
       Values { "Unknown", "Other", "802.11a", "802.11b", "802.11g", 
          "802.11n", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_WiFiPort.PortType", 
          "CIM_WiFiPortCapabilities.OtherSupportedPortTypes" }]
   uint16 SupportedPortTypes[];

      [Description ( 
          "Additional 802.11 modes supported by the associated "
          "WiFiPort, but not listed in the valuemap for "
          "SupportedPortTypes." ), 
       ModelCorrespondence { "CIM_WiFiPort.OtherPortType", 
          "CIM_WiFiPortCapabilities.SupportedPortTypes" }]
   string OtherSupportedPortTypes[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "ZoneCapabilities exposes the capabilities for zoning of an "
       "AdminDomain." )]
class CIM_ZoneCapabilities : CIM_Capabilities {

      [Description ( 
          "The maximum length for the Zone Name that the "
          "AdminDomain is capable of supporting." )]
   uint32 ZoneNameMaxLen;

      [Description ( 
          "The ZoneNameFormat supported by the AdminDomain." ), 
       ValueMap { "0", "2", "3", "..", "0x8000.." }, 
       Values { "Unknown", "Numeric", "Alpha Numeric", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 ZoneNameFormat;

      [Description ( 
          "The maximum number of ZoneSets that the AdminDomain is "
          "capable of supporting." )]
   uint32 MaxNumZoneSets;

      [Description ( 
          "The maximum number of Zones that the AdminDomain is "
          "capable of supporting." )]
   uint32 MaxNumZone;

      [Description ( 
          "The maximum number of ZoneMembers that the AdminDomain "
          "is capable of supporting." )]
   uint32 MaxNumZoneMembers;

      [Description ( 
          "The maximum number of Zones per ZoneSet that the "
          "AdminDomain is capable of supporting." )]
   uint32 MaxNumZonesPerZoneSet;

      [Description ( 
          "The maximum number of ZoneAliases that the AdminDomain "
          "is capable of supporting." )]
   uint32 MaxNumZoneAliases;

      [Description ( 
          "In case one of the array elements for "
          "SupportedConnectivityMemberTypes has a value of 1, i.e "
          "Other, then this array lists the Other Supported "
          "Connectivity Member Types." )]
   string OtherSupportedConnectivityMemberTypes[];

      [Description ( 
          "An array of enumerated integers that describe the "
          "supported Zone Member Types. For example, a vendor "
          "supporting only Permanent Address and Network Address as "
          "Zone Member Types would need to return an array of 2 "
          "elements, with the values 2 & 3." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "Permanent Address", 
          "Network Address", "Switch Port ID", "Logical Port Group", 
          "Connectivity Collection", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" )]
   uint16 SupportedConnectivityMemberTypes[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ZoneMembershipSettingData
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "ZoneMembershipSettingData provides the identification criteria "
       "for possible Zone and ZoneAlias members." )]
class CIM_ZoneMembershipSettingData : CIM_ConnectivityMembershipSettingData {

      [Override ( "ConnectivityMemberType" ), 
       Description ( 
          "ConnectivityMemberType specifies the type of "
          "identification used in the ConnectivityMemberID field. "
          "For Fibre Channel, several of the enumerated values "
          "require additional explanation: \n"
          "* A ConnectivityMemberType equal to 2 (Permanent "
          "Address) indicates that an NxPort WWN value should be "
          "specified in the related ConnectivityMemberID property. \n"
          "* A ConnectivityMemberType of 3 (Network Address) "
          "indicates that an NxPort Address ID value should be "
          "specified in the related ConnectivityMemberID property. \n"
          "* A ConnectivityMemberType of 4 (Switch Port ID) "
          "indicates that a Domain or Port Number value should be "
          "specified in the related ConnectivityMemberID property. \n"
          "* A ConnectivityMemberType of 5 (Logical Port Group) "
          "indicates that a Node WWN value should be specified in "
          "the related ConnectivityMemberID property." )]
   uint16 ConnectivityMemberType;


};

//Copyright (c) 2007 DMTF. All Rights Reserved.
   [Association, Abstract, Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_IndicationSubscription describes a flow of Indications. "
       "The flow is specified by the referenced Filter, and directed "
       "to the referenced destination or process in the Handler. "
       "Property values of the referenced CIM_IndicationFilter "
       "instance and CIM_ListenerDestination instance MAY "
       "significantly effect the definition of the subscription. E.g., "
       "a subscription associated with a \"Transient\" destination MAY "
       "be deleted when the destination terminates or is no longer "
       "available." )]
class CIM_AbstractIndicationSubscription {

      [Key, Description ( 
          "The Filter that defines the criteria and data of the "
          "possible Indications of this subscription." )]
   CIM_ManagedElement REF Filter;

      [Key, Description ( 
          "The Handler addressing delivery of the possible "
          "Indications of this subscription." )]
   CIM_ListenerDestination REF Handler;

      [Description ( 
          "Defines the desired behavior for a subscription when a "
          "fatal error occurs in one of the Indication processing "
          "subcomponents (e.g., Indication processor, Indication or "
          "instance provider, or Indication handler) and the "
          "Indication cannot be successfully sent. Specifically, a "
          "failure implies that some aspect of Indication "
          "generation, processing or dispatch is no longer "
          "functioning and Indications may be lost. If the value of "
          "OnFatalErrorPolicy is 2 (\"Ignore\") or not set (NULL), "
          "the subscription MUST continue to be processed in a "
          "\'best effort\' mode. This mode of operation can lead to "
          "unpredictable, and potentially misleading results, "
          "because Indications may be lost. If the value is 3 "
          "(\"Disable\"), the subscription MUST be disabled. With "
          "this policy, no new Indications will be generated or "
          "dispatched until the subscription is explicitly enabled. "
          "This is accomplished via the property, "
          "SubscriptionState. If the value is 4 (\"Remove\"), the "
          "subscription MUST be deleted. Selecting this policy has "
          "the same effect as issuing a DeleteInstance operation on "
          "this subscription instance." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Ignore", "Disable", "Remove" }]
   uint16 OnFatalErrorPolicy;

      [Description ( 
          "A string defining \"Other\" values for "
          "OnFatalErrorPolicy. This value MUST be set to a non NULL "
          "value when OnFatalErrorPolicy is set to a value of 1 "
          "(\"Other\"). For all other values, the "
          "OtherOnFatalErrorPolicy MUST be NULL." )]
   string OtherOnFatalErrorPolicy;

      [Description ( 
          "The FailureTriggerTimeInterval is used by the client to "
          "specify a recommended minimum delay before the "
          "OnFatalErrorPolicy is implemented." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 FailureTriggerTimeInterval;

      [Write, Description ( 
          "Indicates the current processing state of the subscription."
           ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Enabled", "Enabled Degraded", 
          "Disabled" }]
   uint16 SubscriptionState;

      [Description ( 
          "A string defining \"Other\" values for "
          "SubscriptionState. This value MUST be set to a non NULL "
          "value when SubscriptionState is set to a value of 1 "
          "(\"Other\"). For all other values, the "
          "OtherSubscriptionState MUST be NULL." )]
   string OtherSubscriptionState;

      [Description ( 
          "Date and time of the last state change. This value is "
          "based on the notion of local date and time of the "
          "Managed System Element running the Indication processing "
          "subcomponents." )]
   datetime TimeOfLastStateChange;

      [Write, Description ( 
          "SubscriptionDuration defines the desired length of the "
          "subscription. Indications generated after the duration "
          "of the subscription has exceeded SubscriptionDuration "
          "MUST NOT be sent. The duration of a subscription MAY be "
          "changed by modifying this property. An expired "
          "subscription MAY be deleted and MUST NOT be modified. If "
          "the value of SubscriptionDuration is not set, the "
          "subscription MUST be treated as having no expiration "
          "date." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 SubscriptionDuration;

      [Description ( 
          "SubscriptionStartTime is the time the subscription was "
          "started. The value of this property is computed based on "
          "the notion of date and time of the ManagedSystemElement "
          "running the Indication processing subcomponents." )]
   datetime SubscriptionStartTime;

      [Description ( 
          "SubscriptionTimeRemaining is a computed value that "
          "provides a snapshot of the time remaining in the "
          "Subscription." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 SubscriptionTimeRemaining;

      [Description ( 
          "The RepeatNotificationPolicy property defines the "
          "desired behavior for handling Indications that report "
          "the occurrence of the same underlying event (e.g., the "
          "disk is still generating I/O errors and has not yet been "
          "repaired). The defined semantics for the "
          "RepeatNotificationCount, RepeatNotificationInterval, and "
          "RepeatNotificationGap properties depend on the value of "
          "RepeatNotificationPolicy, but values for these "
          "properties MUST be set if the property is defined for "
          "the selected policy. If the value of "
          "RepeatNotificationPolicy is 0 (\"Unknown\") or not set, "
          "no special processing for repeat Indications is defined "
          "by the subscription. The semantics associated with the "
          "handling of repeat Indications MAY be defined by the "
          "Indication processing subcomponents. If the value of "
          "RepeatNotificationPolicy is 2 (\"None\"), special "
          "processing of repeat Indications MUST NOT be performed. "
          "If the value is 3 (\"Suppress\") the first "
          "RepeatNotificationCount Indications, describing the same "
          "event, MUST be sent and all subsequent Indications for "
          "this event suppressed for the remainder of the time "
          "interval RepeatNotificationInterval. A new interval "
          "starts when the next Indication for this event is "
          "received. If the value of RepeatNotificationPolicy is 4 "
          "(\"Delay\") and an Indication is received, this "
          "Indication MUST be suppressed if, including this "
          "Indication, RepeatNoticationCount or fewer Indications "
          "for this event have been received during the prior time "
          "interval defined by RepeatNotificationInterval. If this "
          "Indication is the RepeatNotificationCount + 1 "
          "Indication, this Indication MUST be sent and all "
          "subsequent Indications for this event ignored until the "
          "RepeatNotificationGap has elapsed. A "
          "RepeatNotificationInterval MAY NOT overlap a "
          "RepeatNotificationGap time interval." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "None", "Suppress", "Delay" }]
   uint16 RepeatNotificationPolicy;

      [Description ( 
          "A string defining \"Other\" values for "
          "RepeatNotificationPolicy. This value MUST be set to a "
          "non NULL value when RepeatNotificationPolicy is set to a "
          "value of 1 (\"Other\"). For all other values, the "
          "OtherRepeatNotificationPolicy MUST be NULL." )]
   string OtherRepeatNotificationPolicy;

      [Description ( 
          "Defines the time interval for the repeat notification "
          "policy calculation." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 RepeatNotificationInterval;

      [Description ( 
          "Defines the gap interval for the repeat notification "
          "policy calculation." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 RepeatNotificationGap;

      [Description ( 
          "Defines the count property for the repeat notification "
          "policy calculation." )]
   uint16 RepeatNotificationCount;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Indication, Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "A concrete superclass for CIM Alert notifications. An "
       "AlertIndication is a specialized type of CIM_Indication that "
       "contains information about the severity, cause, recommended "
       "actions and other data of a real world event. This event and "
       "its data may or may not be modeled in the CIM class hierarchy." )]
class CIM_AlertIndication : CIM_ProcessIndication {

      [Description ( "A short description of the Indication." ), 
       MappingStrings { "Recommendation.ITU|X733.Additional text" }]
   string Description;

      [Description ( 
          "The identifying information of the entity (ie, the "
          "instance) for which this Indication is generated. The "
          "property contains the path of an instance, encoded as a "
          "string parameter - if the instance is modeled in the CIM "
          "Schema. If not a CIM instance, the property contains "
          "some identifying string that names the entity for which "
          "the Alert is generated. The path or identifying string "
          "is formatted per the AlertingElementFormat property." ), 
       ModelCorrespondence { 
          "CIM_AlertIndication.AlertingElementFormat" }]
   string AlertingManagedElement;

      [Description ( 
          "The format of the AlertingManagedElement property is "
          "interpretable based upon the value of this property. "
          "Values are defined as: \n"
          "0 - Unknown. The format is unknown or not meaningfully "
          "interpretable by a CIM client application. \n"
          "1 - Other. The format is defined by the value of the "
          "OtherAlertingElementFormat property. \n"
          "2 - CIMObjectPath. The format is a CIMObjectPath, with "
          "format <NamespacePath>:<ClassName>.<Prop1>=\"<Value1>\", "
          "<Prop2>=\"<Value2>\", . . . specifying an instance in "
          "the CIM Schema." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Other", "CIMObjectPath" }, 
       ModelCorrespondence { 
          "CIM_AlertIndication.AlertingManagedElement", 
          "CIM_AlertIndication.OtherAlertingElementFormat" }]
   uint16 AlertingElementFormat = 0;

      [Description ( 
          "A string defining \"Other\" values for "
          "AlertingElementFormat. This value MUST be set to a non "
          "NULL value when AlertingElementFormat is set to a value "
          "of 1 (\"Other\"). For all other values of "
          "AlertingElementFormat, the value of this string must be "
          "set to NULL." ), 
       ModelCorrespondence { 
          "CIM_AlertIndication.AlertingElementFormat" }]
   string OtherAlertingElementFormat;

      [Required, Description ( 
          "Primary classification of the Indication. The following "
          "values are defined: \n"
          "1 - Other. The Indication\'s OtherAlertType property "
          "conveys its classification. Use of \"Other\" in an "
          "enumeration is a standard CIM convention. It means that "
          "the current Indication does not fit into the categories "
          "described by this enumeration. \n"
          "2 - Communications Alert. An Indication of this type is "
          "principally associated with the procedures and/or "
          "processes required to convey information from one point "
          "to another. \n"
          "3 - Quality of Service Alert. An Indication of this type "
          "is principally associated with a degradation or errors "
          "in the performance or function of an entity. \n"
          "4 - Processing Error. An Indication of this type is "
          "principally associated with a software or processing "
          "fault. \n"
          "5 - Device Alert. An Indication of this type is "
          "principally associated with an equipment or hardware "
          "fault. \n"
          "6 - Environmental Alert. An Indication of this type is "
          "principally associated with a condition relating to an "
          "enclosure in which the hardware resides, or other "
          "environmental considerations. \n"
          "7 - Model Change. The Indication addresses changes in "
          "the Information Model. For example, it may embed a "
          "Lifecycle Indication to convey the specific model change "
          "being alerted. \n"
          "8 - Security Alert. An Indication of this type is "
          "associated with security violations, detection of "
          "viruses, and similar issues." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Other", "Communications Alert", 
          "Quality of Service Alert", "Processing Error", 
          "Device Alert", "Environmental Alert", "Model Change", 
          "Security Alert" }, 
       MappingStrings { "Recommendation.ITU|X733.Event type" }]
   uint16 AlertType;

      [Description ( 
          "A string describing the Alert type - used when the "
          "AlertType property is set to 1, \"Other State Change\"." ), 
       ModelCorrespondence { "CIM_AlertIndication.AlertType" }]
   string OtherAlertType;

      [Required, Override ( "PerceivedSeverity" ), 
       Description ( 
          "An enumerated value that describes the severity of the "
          "Alert Indication from the notifier\'s point of view: \n"
          "1 - Other, by CIM convention, is used to indicate that "
          "the Severity\'s value can be found in the OtherSeverity "
          "property. \n"
          "3 - Degraded/Warning should be used when its appropriate "
          "to let the user decide if action is needed. \n"
          "4 - Minor should be used to indicate action is needed, "
          "but the situation is not serious at this time. \n"
          "5 - Major should be used to indicate action is needed "
          "NOW. \n"
          "6 - Critical should be used to indicate action is needed "
          "NOW and the scope is broad (perhaps an imminent outage "
          "to a critical resource will result). \n"
          "7 - Fatal/NonRecoverable should be used to indicate an "
          "error occurred, but it\'s too late to take remedial "
          "action. \n"
          "2 and 0 - Information and Unknown (respectively) follow "
          "common usage. Literally, the AlertIndication is purely "
          "informational or its severity is simply unknown." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Information", 
          "Degraded/Warning", "Minor", "Major", "Critical", 
          "Fatal/NonRecoverable" }, 
       MappingStrings { "Recommendation.ITU|X733.Perceived severity" }]
   uint16 PerceivedSeverity;

      [Required, Description ( 
          "An enumerated value that describes the probable cause of "
          "the situation which resulted in the AlertIndication." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110", "111", "112", "113", "114", "115", 
          "116", "117", "118", "119", "120", "121", "122", "123", 
          "124", "125", "126", "127", "128", "129", "130" }, 
       Values { "Unknown", "Other", "Adapter/Card Error", 
          "Application Subsystem Failure", "Bandwidth Reduced", 
          "Connection Establishment Error", 
          "Communications Protocol Error", 
          "Communications Subsystem Failure", 
          "Configuration/Customization Error", "Congestion", 
          "Corrupt Data", "CPU Cycles Limit Exceeded", 
          "Dataset/Modem Error", "Degraded Signal", 
          "DTE-DCE Interface Error", "Enclosure Door Open", 
          "Equipment Malfunction", "Excessive Vibration", 
          "File Format Error", "Fire Detected", "Flood Detected", 
          "Framing Error", "HVAC Problem", "Humidity Unacceptable", 
          "I/O Device Error", "Input Device Error", "LAN Error", 
          "Non-Toxic Leak Detected", 
          "Local Node Transmission Error", "Loss of Frame", 
          "Loss of Signal", "Material Supply Exhausted", 
          "Multiplexer Problem", "Out of Memory", 
          "Output Device Error", "Performance Degraded", 
          "Power Problem", "Pressure Unacceptable", 
          "Processor Problem (Internal Machine Error)", 
          "Pump Failure", "Queue Size Exceeded", "Receive Failure", 
          "Receiver Failure", "Remote Node Transmission Error", 
          "Resource at or Nearing Capacity", 
          "Response Time Excessive", 
          "Retransmission Rate Excessive", "Software Error", 
          "Software Program Abnormally Terminated", 
          "Software Program Error (Incorrect Results)", 
          "Storage Capacity Problem", "Temperature Unacceptable", 
          "Threshold Crossed", "Timing Problem", 
          "Toxic Leak Detected", "Transmit Failure", 
          "Transmitter Failure", "Underlying Resource Unavailable", 
          "Version MisMatch", "Previous Alert Cleared", 
          "Login Attempts Failed", "Software Virus Detected", 
          "Hardware Security Breached", 
          "Denial of Service Detected", 
          "Security Credential MisMatch", "Unauthorized Access", 
          "Alarm Received", "Loss of Pointer", "Payload Mismatch", 
          "Transmission Error", "Excessive Error Rate", 
          "Trace Problem", "Element Unavailable", "Element Missing", 
          "Loss of Multi Frame", "Broadcast Channel Failure", 
          "Invalid Message Received", "Routing Failure", 
          "Backplane Failure", "Identifier Duplication", 
          "Protection Path Failure", "Sync Loss or Mismatch", 
          "Terminal Problem", "Real Time Clock Failure", 
          "Antenna Failure", "Battery Charging Failure", 
          "Disk Failure", "Frequency Hopping Failure", 
          "Loss of Redundancy", "Power Supply Failure", 
          "Signal Quality Problem", "Battery Discharging", 
          "Battery Failure", "Commercial Power Problem", 
          "Fan Failure", "Engine Failure", "Sensor Failure", 
          "Fuse Failure", "Generator Failure", "Low Battery", 
          "Low Fuel", "Low Water", "Explosive Gas", "High Winds", 
          "Ice Buildup", "Smoke", "Memory Mismatch", 
          "Out of CPU Cycles", "Software Environment Problem", 
          "Software Download Failure", "Element Reinitialized", 
          "Timeout", "Logging Problems", "Leak Detected", 
          "Protection Mechanism Failure", 
          "Protecting Resource Failure", "Database Inconsistency", 
          "Authentication Failure", "Breach of Confidentiality", 
          "Cable Tamper", "Delayed Information", 
          "Duplicate Information", "Information Missing", 
          "Information Modification", "Information Out of Sequence", 
          "Key Expired", "Non-Repudiation Failure", 
          "Out of Hours Activity", "Out of Service", 
          "Procedural Error", "Unexpected Information" }, 
       MappingStrings { "Recommendation.ITU|X733.Probable cause", 
          "Recommendation.ITU|M3100.probableCause", 
          "ITU-IANA-ALARM-TC" }, 
       ModelCorrespondence { 
          "CIM_AlertIndication.ProbableCauseDescription", 
          "CIM_AlertIndication.EventID", 
          "CIM_AlertIndication.EventTime" }]
   uint16 ProbableCause;

      [Description ( 
          "Provides additional information related to the ProbableCause."
           ), 
       ModelCorrespondence { "CIM_AlertIndication.ProbableCause" }]
   string ProbableCauseDescription;

      [Description ( 
          "Provides information on trending - trending up, down or no change."
           ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Not Applicable", "Trending Up", 
          "Trending Down", "No Change" }, 
       MappingStrings { "Recommendation.ITU|X733.TrendIndication" }]
   uint16 Trending;

      [Description ( 
          "Free form descriptions of the recommended actions to "
          "take to resolve the cause of the notification." ), 
       MappingStrings { 
          "Recommendation.ITU|X733.Proposed repair actions" }]
   string RecommendedActions[];

      [Description ( 
          "An instrumentation or provider specific value that "
          "describes the underlying \"real-world\" event "
          "represented by the Indication. Two Indications with the "
          "same, non NULL EventID value are considered, by the "
          "creating entity, to represent the same event. The "
          "comparison of two EventID values is only defined for "
          "Alert Indications with identical, non NULL values of "
          "SystemCreateClassName, SystemName and ProviderName." ), 
       ModelCorrespondence { "CIM_AlertIndication.ProbableCause" }]
   string EventID;

      [Description ( 
          "The time and date the underlying event was first "
          "detected. If specified, this property MUST be set to "
          "NULL if the creating entity is not capable of providing "
          "this information. This value is based on the notion of "
          "local date and time of the Managed System Element "
          "generating the Indication." ), 
       ModelCorrespondence { "CIM_AlertIndication.ProbableCause" }]
   datetime EventTime;

      [Description ( 
          "The scoping System\'s CreationClassName for the Provider "
          "generating this Indication." ), 
       MaxLen ( 256 )]
   string SystemCreationClassName;

      [Description ( 
          "The scoping System\'s Name for the Provider generating "
          "this Indication." ), 
       MaxLen ( 256 )]
   string SystemName;

      [Description ( 
          "The name of the Provider generating this Indication." ), 
       MaxLen ( 256 )]
   string ProviderName;

      [Description ( 
          "The formatted message. This message is constructed by "
          "combining some or all of the dynamic elements specified "
          "in the MessageArguments property with the static "
          "elements uniquely identified by the MessageID in a "
          "message registry or other catalog associated with the "
          "OwningEntity." ), 
       ModelCorrespondence { "CIM_AlertIndication.MessageID", 
          "CIM_AlertIndication.MessageArguments" }]
   string Message;

      [Description ( 
          "An array containing the dynamic content of the message." ), 
       ModelCorrespondence { "CIM_AlertIndication.Message", 
          "CIM_AlertIndication.MessageID" }]
   string MessageArguments[];

      [Description ( 
          "A string that uniquely identifies, within the scope of "
          "the OwningEntity, the format of the Message." ), 
       ModelCorrespondence { "CIM_AlertIndication.Message", 
          "CIM_AlertIndication.MessageArguments" }]
   string MessageID;

      [Description ( 
          "A string that uniquely identifies the entity that owns "
          "the definition of the format of the Message described in "
          "this instance. OwningEntity MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity or standards body defining the "
          "format." )]
   string OwningEntity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "A subclass of CIM_AlertIndication that embeds a CIM_Inst "
       "Indication. It is used when adding AlertIndication data to a "
       "LifeCycle Indication." )]
class CIM_AlertInstIndication : CIM_AlertIndication {

      [Override ( "AlertType" ), 
       Description ( 
          "The primary classification of the Indication, defaulted "
          "to 7, \"Model Change\", for this class. This is done "
          "because: 1) the primary purpose of AlertInstIndication "
          "is to add Alert data to a LifeCycle Indication; and 2) "
          "LifeCycle Indications deal with \'model changes\'." )]
   uint16 AlertType = 7;

      [Required, Description ( 
          "Embeds the InstIndication that is part of this Alert "
          "Indication. Only the properties selected by the "
          "Indication Filter\'s Query are included." ), 
       EmbeddedObject]
   string IndObject;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_ClassIndication is an abstract superclass describing "
       "changes in the definition of the schema. Subclasses represent "
       "specific types of change notifications, such as class "
       "creation, deletion and modification." )]
class CIM_ClassIndication : CIM_Indication {

      [Required, Description ( 
          "The current definition of the class that is created, "
          "changed or deleted in the schema. In the case of a "
          "CIM_ClassDeletion Indication, the definition for the "
          "class just prior to deletion should be placed in this "
          "property." ), 
       EmbeddedObject]
   string ClassDefinition;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_ClassModification notifies when a class definition in the "
       "schema is modified." )]
class CIM_ClassModification : CIM_ClassIndication {

      [Required, Description ( 
          "A copy of the \'previous\' class definition whose change "
          "generated the Indication. PreviousClassDefinition "
          "contains an \'older\' copy of the class\' information, "
          "as compared to what is found in the ClassDefinition "
          "property (inherited from ClassIndication)." ), 
       EmbeddedObject]
   string PreviousClassDefinition;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "A FilterCollection is a subclass of CIM_Collection which "
       "aggregates instances of CIM_IndicationFilter." )]
class CIM_FilterCollection : CIM_Collection {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID shall be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "The Collection Name is to be specified by a profile or "
          "owning organization such that it can be used to identify "
          "a particular collection of indication filters. The value "
          "of CollectionName shall be constructed using the "
          "following algorithm: \n"
          "<OrgID>:<CollectionID> \n"
          "Where <OrgID> and <CollectionID> are separated by a "
          "colon \':\', and where <OrgID> shall include a "
          "copyrighted, trademarked or otherwise unique name that "
          "is owned by the business entity creating/defining the "
          "CollectionName. In addition, to ensure uniqueness "
          "<OrgID> shall not contain a colon (\':\').\n"
          "<CollectionID> is the string label defined in the "
          "specification defining the collection." )]
   string CollectionName;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Association, Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_FilterCollectionSubscription associates the "
       "CIM_FilterCollection with a CIM_ListenerDestionation." )]
class CIM_FilterCollectionSubscription : CIM_AbstractIndicationSubscription {

      [Override ( "Filter" ), 
       Description ( 
          "The Filter that defines the criteria and data of the "
          "possible Indications of this subscription." )]
   CIM_FilterCollection REF Filter;

      [Override ( "Handler" ), 
       Description ( 
          "The Handler addressing delivery of the possible "
          "Indications of this subscription." )]
   CIM_ListenerDestination REF Handler;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Deprecated { "CIM_ListenerDestination" }, 
    Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_IndicationHandler is an abstract superclass describing how "
       "an Indication is to be processd/delivered/\'handled\'. This "
       "may define a destination and protocol for delivering "
       "Indications, or it may define a process to invoke. This class "
       "is derived from CIM_ManagedElement to allow modeling the "
       "dependency of the Handler on a specific service." )]
class CIM_IndicationHandler : CIM_ListenerDestination {

      [Deprecated { "No value" }, 
       Description ( 
          "The name of the entity that created and/or maintains this Handler."
           )]
   string Owner;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Deprecated { "CIM_ListenerDestinationCIMXML" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_IndicationHandlerCIMXML describes the destination for "
       "Indications to be delivered via CIM-XML." )]
class CIM_IndicationHandlerCIMXML : CIM_IndicationHandler {

      [Deprecated { "CIM_ListenerDestinationCIMXML.Destination" }, 
       Required, Override ( "Destination" ), 
       Description ( 
          "The destination URL to which CIM-XML Indication messages "
          "are to be delivered. The scheme prefix MUST be "
          "consistent with the DMTF CIM-XML Specifications. If a "
          "scheme prefix is not specified, the scheme \"http:\" "
          "MUST be assumed." )]
   string Destination;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "IndicationServiceCapabilities describes whether properties on "
       "the Indication Service can be modified by a client." )]
class CIM_IndicationServiceCapabilities : CIM_Capabilities {

      [Description ( 
          "Boolean indicating whether the FilterCreationEnabled "
          "property can be set by a client application." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.FilterCreationEnabled" }]
   boolean FilterCreationEnabledIsSettable;

      [Description ( 
          "Boolean indicating whether the DeliveryRetryAttempts "
          "property can be set by a client application." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.DeliveryRetryAttempts" }]
   boolean DeliveryRetryAttemptsIsSettable;

      [Description ( 
          "Boolean indicating whether the DeliveryRetryInterval "
          "property can be set by a client application." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.DeliveryRetryInterval" }]
   boolean DeliveryRetryIntervalIsSettable;

      [Description ( 
          "Boolean indicating whether the SubscriptionRemovalAction "
          "property can be set by a client application." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.SubscriptionRemovalAction" }]
   boolean SubscriptionRemovalActionIsSettable;

      [Description ( 
          "Boolean indicating whether the "
          "SubscriptionRemovalTimeInterval property can be set by a "
          "client application." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.SubscriptionRemovalTimeInterval" }]
   boolean SubscriptionRemovalTimeIntervalIsSettable;

      [Description ( 
          "MaxListenerDestinations specifies the maximum number of "
          "instances of CIM_ListenerDestination allowed by the "
          "associated CIM_IndicationService." ), 
       MinValue ( 1 )]
   uint32 MaxListenerDestinations = 1;

      [Description ( 
          "MaxActiveSubscriptions specifies the maximum total "
          "number of instances of CIM_IndicationSubcription and "
          "CIM_FilterCollectionSubscription instances supported by "
          "the CIM_IndicationService." ), 
       MinValue ( 1 )]
   uint32 MaxActiveSubscriptions = 1;

      [Description ( 
          "SubscriptionsPersisted indicates whether or not the "
          "IndicationService persists indication subscriptions "
          "across restarts of the service. If "
          "SubscriptionsPersisted has a value of true, the "
          "indication service shall persist indication "
          "subscriptions across restarts of service. If "
          "SubscriptionsPersisted has a value of false, the "
          "indication service shall not persist indication "
          "subscriptions across restarts of the service. A value of "
          "NULL indicates support for subscription persistence is "
          "unknown." )]
   boolean SubscriptionsPersisted = false;


};

//Copyright (c) 2009 DMTF. All Rights Reserved.
   [Association, Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_IndicationSubscription describes a flow of Indications. "
       "The flow is specified by the referenced Filter, and directed "
       "to the referenced destination or process in the Handler. "
       "Property values of the referenced CIM_IndicationFilter "
       "instance and CIM_ListenerDestination instance MAY "
       "significantly effect the definition of the subscription. E.g., "
       "a subscription associated with a \"Transient\" destination MAY "
       "be deleted when the destination terminates or is no longer "
       "available." )]
class CIM_IndicationSubscription : CIM_AbstractIndicationSubscription {

      [Key, Override ( "Filter" ), 
       Description ( 
          "The Filter that defines the criteria and data of the "
          "possible Indications of this subscription." )]
   CIM_IndicationFilter REF Filter;

      [Key, Override ( "Handler" ), 
       Description ( 
          "The Handler addressing delivery of the possible "
          "Indications of this subscription." )]
   CIM_ListenerDestination REF Handler;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Indication, Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_InstCreation notifies when a new instance is created." )]
class CIM_InstCreation : CIM_InstIndication {


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Indication, Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_InstDeletion notifies when an existing instance is deleted." )]
class CIM_InstDeletion : CIM_InstIndication {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "A subclass of CIM_AlertIndications carrying additional "
       "threshold information related to the notification. This "
       "subclass is used when one of the ProbableCauses is set to 53, "
       "\"Threshold Crossed\"." )]
class CIM_ThresholdIndication : CIM_AlertIndication {

      [Description ( 
          "A string describing the threshold or naming the property "
          "that represents the threshold, if modeled in the CIM "
          "hierarchy. In the latter case, the value should be "
          "written as <schema name>_ <class name>.<property name>." ), 
       MappingStrings { 
          "Recommendation.ITU|X733.Threshold information" }]
   string ThresholdIdentifier;

      [Description ( 
          "A string holding the current value of the threshold. "
          "This is modeled as a string for universal mapping, "
          "similar to the CIM_Sensor properties in the Device "
          "Model." ), 
       MappingStrings { 
          "Recommendation.ITU|X733.Threshold information" }]
   string ThresholdValue;

      [Description ( 
          "A string holding the current reading value that exceeds "
          "the threshold. This is modeled as a string for universal "
          "mapping, similar to the CIM_Sensor properties in the "
          "Device Model." ), 
       MappingStrings { 
          "Recommendation.ITU|X733.Threshold information" }]
   string ObservedValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "The CIM_ElementConformsToProfile association defines the "
       "RegisteredProfiles to which the referenced ManagedElement is "
       "conformant. Note: This association may apply to any Managed "
       "Element. Typical usage will apply it to a higher level "
       "instance, such as a System, NameSpace, or Service. When "
       "applied to a higher level instance, all constituent parts MUST "
       "behave appropriately in support of the ManagedElement\'s "
       "conformance to the named RegisteredProfile." )]
class CIM_ElementConformsToProfile {

      [Key, Description ( 
          "The RegisteredProfile to which the ManagedElement conforms."
           )]
   CIM_RegisteredProfile REF ConformantStandard;

      [Key, Description ( 
          "The ManagedElement that conforms to the RegisteredProfile."
           )]
   CIM_ManagedElement REF ManagedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A profile that is referenced by another RegisteredProfile." )]
class CIM_ReferencedProfile : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The RegisteredProfile that is referenced by the Dependent Profile."
           )]
   CIM_RegisteredProfile REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A RegisteredProfile that references other profiles." )]
   CIM_RegisteredProfile REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A subprofile requires another RegisteredProfile for context. "
       "This association mandates the scoping relationship between a "
       "subprofile and its scoping profile." )]
class CIM_SubProfileRequiresProfile : CIM_ReferencedProfile {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The RegisteredProfile that is referenced/required by the "
          "subprofile." )]
   CIM_RegisteredProfile REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A RegisteredSubProfile that requires a scoping profile, "
          "for context." )]
   CIM_RegisteredSubProfile REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "SAAction is the base class for the various types of key "
       "exchange or IPsec actions. It is abstract and used to "
       "categorize the different types of actions of SARules." ), 
    MappingStrings { "IPSP Policy Model.IETF|SAAction" }]
class CIM_SAAction : CIM_PolicyAction {

      [Description ( 
          "DoPacketLogging causes a log message to be generated "
          "when the action is applied to a packet." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|SAAction.DoPacketLogging" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.PacketLoggingActive" }]
   boolean DoPacketLogging;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "SANegotiationAction is the base class for negotiated SAs. It "
       "is abstract, specifying the common parameters that control the "
       "IPsec phase 1 and phase 2 negotiations." ), 
    MappingStrings { "IPSP Policy Model.IETF|SANegotiationAction", 
       "IPSP Policy Model.IETF|IKENegotiationAction" }]
class CIM_SANegotiationAction : CIM_SAAction {

      [Description ( 
          "MinLifetimeSeconds prevents certain denial of service "
          "attacks where the peer requests an arbitrarily low "
          "lifetime value, causing renegotiations with expensive "
          "Diffie-Hellman operations. The property specifies the "
          "minimum lifetime, in seconds, that will be accepted from "
          "the peer. A value of zero (the default) indicates that "
          "there is no minimum value. A non-zero value specifies "
          "the minimum seconds lifetime." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKENegotiationAction.MinLifetimeSeconds" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.LifetimeSeconds" }, 
       PUnit ( "second" )]
   uint64 MinLifetimeSeconds = 0;

      [Description ( 
          "IdleDurationSeconds is the time an SA can remain idle "
          "(i.e., no traffic protected using the security "
          "association) before it is automatically deleted. The "
          "default (zero) value indicates that there is no idle "
          "duration timer and that the SA is deleted based upon the "
          "SA seconds and kilobyte lifetimes. Any non-zero value "
          "indicates the number of seconds that the SA may remain "
          "unused." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKENegotiationAction.IdleDurationSeconds" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.IdleDurationSeconds" }, 
       PUnit ( "second" )]
   uint64 IdleDurationSeconds = 0;

      [Description ( 
          "MinLifetimeKilobytes prevents certain denial of service "
          "attacks where the peer requests an arbitrarily low "
          "lifetime value, causing renegotiations with expensive "
          "Diffie-Hellman operations. The property specifies the "
          "minimum lifetime, in kilobytes, that will be accepted "
          "from the peer. A value of zero (the default) indicates "
          "that there is no minimum value. A non-zero value "
          "specifies the minimum kilobytes lifetime. Note that "
          "there has been considerable debate regarding the "
          "usefulness of applying kilobyte lifetimes to phase 1 "
          "security associations, so it is likely that this "
          "property will only apply to the subclass, IPsecAction." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKENegotiationAction.MinLifetimeKilobytes" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.LifetimeKilobytes" }, 
       PUnit ( "byte * 10^3" )]
   uint64 MinLifetimeKilobytes = 0;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "SAProposal is a base class defining the common properties of, "
       "and anchoring common associations for, IPsec phase 1 and phase "
       "2 proposals. It is defined as a kind of ScopedSettingData "
       "(scoped by a ComputerSystem or AdminDomain), since its "
       "subclasses define sets of IPsec properties that MUST be "
       "applied together, if negotiated. This subclassing is different "
       "than that defined in IETF\'s IPSP Policy draft - where it is "
       "subclassed from Policy. The definition as SettingData is more "
       "consistent with the application of the properties as a set, to "
       "the negotiated Security Association. To indicate that \'this\' "
       "proposaltransform is negotiated for a Security Association, "
       "use the ElementSettingData to associate the proposal and the "
       "SA." ), 
    MappingStrings { "IPSP Policy Model.IETF|SAProposal" }]
class CIM_SAProposal : CIM_ScopedSettingData {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "SAStaticAction is the base class for both key exchange as well "
       "as IPsec actions that require no negotiation. It is a concrete "
       "class that can be aggregated with other subclasses of "
       "PolicyAction (such as NetworkPacketAction) into a PolicyRule, "
       "to describe how packets are handled throughout the lifetime of "
       "the Security Association." ), 
    MappingStrings { "IPSP Policy Model.IETF|SAStaticAction" }]
class CIM_SAStaticAction : CIM_SAAction {

      [Description ( 
          "LifetimeSeconds specifies how long the SA created from "
          "this action should be used/exist. A value of 0 means an "
          "infinite lifetime. A non-zero value is typically used in "
          "conjunction with alternate SAActions performed when "
          "there is a negotiation failure of some sort. \n"
          "\n"
          "Note: If the referenced SAStaticAction object IS-A "
          "PreconfiguredSAAction (that is associated to several "
          "SATransforms), then the actual lifetime of the Security "
          "Association will be the lesser of the value of this "
          "LifetimeSeconds property and of the value of the "
          "MaxLifetimeSeconds property of the associated "
          "SATransform." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|SAStaticAction.LifetimeSeconds" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.LifetimeSeconds" }, 
       PUnit ( "second" )]
   uint64 LifetimeSeconds;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "CIM_AggregationMetricDefinition represents the definitional "
       "aspects of a metric that is derived from another metric value. "
       "The CIM_AggregationMetricDefinition should be associated with "
       "the CIM_ManagedElement(s) to which it applies." )]
class CIM_AggregationMetricDefinition : CIM_BaseMetricDefinition {

      [Override ( "ChangeType" ), 
       Description ( 
          "ChangeType indicates how the metric value changes, in "
          "the form of typical combinations of finer grain "
          "attributes such as direction change, minimum and maximum "
          "values, and wrapping semantics. \n"
          "5=\"Simple Function\": indicates that the derived metric "
          "value is calculated by applying the basic mathematical "
          "function identified by the SimpleFunction property to "
          "the underlying metric values." ), 
       ValueMap { "5", "..", "32768..65535" }, 
       Values { "Simple Function", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_AggregationMetricDefinition.IsContinuous" }]
   uint16 ChangeType = 5;

      [Description ( 
          "The SimpleFunction property identifies the basic "
          "computation performed on an underlying metric to arrive "
          "at the value of this derived metric. This property shall "
          "be NULL when the ChangeType property has a value other "
          "than 5 \"Simple Function\". \n"
          "2=\"Minimum\" indicates that the metric reports the "
          "lowest value detected for the associated monitored "
          "entity. This is also known as a low watermark.\n"
          ".3=\"Maximum\" indicates that the metric reports the "
          "maximum value detected for the associated monitored "
          "entity. This is also known as a high watermark.\n"
          "4=\"Average\" indicates the metric reports the average "
          "value of the underlying metric values.\n"
          "5=\"Median\" indicates the metric reports the median "
          "value of the underlying metric values.\n"
          "6=\"Mode\" indicates the metric reports the modal value "
          "of the underlying metric values." ), 
       ValueMap { "..", "2", "3", "4", "5", "6", "32768..65535" }, 
       Values { "DMTF Reserved", "Minimum", "Maximum", "Average", 
          "Median", "Mode", "Vendor Reserved" }]
   uint16 SimpleFunction;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "Each CIM_AggregationMetricValue object represents the instance "
       "value of a metric defined by an instance of "
       "CIM_AggregationMetricDefinition. The properties inherited from "
       "CIM_BaseMetricValue provide the actual metric value. The "
       "properties introduced in CIM_AggregationMetricValue provide "
       "information about the interval over which the aggregation "
       "function was applied." )]
class CIM_AggregationMetricValue : CIM_BaseMetricValue {

      [Description ( 
          "Identifies the time when the aggregation function was "
          "applied to determine the value of the metric instance. "
          "Note that this is different from the time when the "
          "instance is created. For a given "
          "CIM_AggregationMetricValue instance, the "
          "AggregationTimeStamp changes whenever the aggregation "
          "function is applied to calculate the value." ), 
       ModelCorrespondence { "CIM_AggregationMetricValue.Duration" }]
   datetime AggregationTimeStamp;

      [Description ( 
          "Property that represents the time duration over which "
          "the aggregation was computed. The start of a monitoring "
          "interval over which the aggregation function is applied "
          "is determined by subtracting the AggregationDuration "
          "from the AggregationTimestamp." ), 
       ModelCorrespondence { 
          "CIM_AggregationMetricValue.AggregationTimeStamp" }]
   datetime AggregationDuration;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "This association identifies a specific execution of a UnitOf "
       "Work with the specific LogicalElement that is performing/ has "
       "performed it. Where the LogicalElementUnitOfWorkDef "
       "association describes what an Element can do, this "
       "relationship describes what a particular Element is doing or "
       "has done." )]
class CIM_LogicalElementPerformsUoW : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The LogicalElement performing the UnitOfWork." )]
   CIM_LogicalElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The UnitOfWork being performed." )]
   CIM_UnitOfWork REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "This association ties a CIM_BaseMetricDefinition to a "
       "CIM_ManagedElement to define metrics for the latter. The "
       "metrics definition is given context by the ManagedElement, "
       "which is why the definition is dependent on the element." )]
class CIM_MetricDefForME : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The CIM_ManagedElement that can have metrics of this "
          "type associated with it." )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A CIM_BaseMetricDefinition for a CIM_ManagedElement." )]
   CIM_BaseMetricDefinition REF Dependent;

      [Description ( 
          "MetricCollectionEnabled indicates whether the metric "
          "defined by the referenced CIM_BaseMetricDefinition is "
          "being collected for the referenced CIM_ManagedElement. A "
          "value of 2 \"Enabled\" shall indicate the metric is "
          "being collected. A value of 3 \"Disabled\" shall "
          "indicate the metric is not being collected. When "
          "collection of a metric is re-enabled, the metric is "
          "re-initialized such that any values for a current access "
          "metric reflect data collected after the time at which "
          "collection was re-enabled." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "Enabled", "Disabled", "Reserved", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 MetricCollectionEnabled = 2;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "This association links a ManagedElement to the metric values "
       "being maintained for it." )]
class CIM_MetricForME : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "ManagedElement to which the metric values belong." )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "A metric value for the ManagedElement." )]
   CIM_BaseMetricValue REF Dependent;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "Weak association of metric value objects with their metric "
       "definition. This association ties an instance of "
       "CIM_BaseMetricValue to its CIM_BaseMetricDefinition; it is "
       "weak because the existence of a CIM_BaseMetricValue depends on "
       "the existence of its associated CIM_BaseMetricDefinition: An "
       "instance of CIM_BaseMetricValue must not exist without being "
       "associated to its corresponding CIM_BaseMetricDefinition." )]
class CIM_MetricInstance : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The CIM_BaseMetricDefinition for this particular "
          "CIM_BaseMetricValue." )]
   CIM_BaseMetricDefinition REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A CIM_BaseMetricValue instance holding the Value." )]
   CIM_BaseMetricValue REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetrics" ), 
    Description ( 
       "MetricServiceCapabilities describes the capabilities of the "
       "associated CIM_BaseMetricService." )]
class CIM_MetricServiceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "ControllableMetrics identifies the instances of "
          "CIM_BaseMetricDefinition that can be controlled by the "
          "associated CIM_MetricService instance. Each string value "
          "shall be formatted as a WBEM URI defined as in "
          "accordance with DSP0207 that identifies an instance of "
          "CIM_BaseMetricDefinition. An instance of "
          "CIM_BaseMetricDefinition shall not be identified by a "
          "value of the ControllableMetrics property unless it is "
          "associated through CIM_ServiceAffectsElement to the "
          "associated instance of CIM_MetricService. If a value "
          "corresponding to an instance of CIM_BaseMetricDefinition "
          "is included in the ControllableMetrics property, the "
          "associated instance of CIM_MetricService shall support "
          "enabling and/or disabling at least one metric defined by "
          "the CIM_BaseMetricDefinition instance." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MetricServiceCapabilities.MetricControlTypes" }]
   string ControllableMetrics[];

      [Description ( 
          "MetricControlTypes identifies the type of control "
          "supported by the associated CIM_MetricService instance "
          "for the CIM_BaseMetricDefinition identified by the value "
          "at the same array index in the ControllableMetrics "
          "property. A value of 2 \"Discrete\" shall indicate that "
          "individual metrics defined by the instance of "
          "CIM_BaseMetricDefinition identified at the corresponding "
          "array index of ControllableMetrics may be enabled and or "
          "disabled by the associated instance of "
          "CIM_MetricService.A value of 3 \"Bulk\" shall indicate "
          "that all metrics defined by the instance of "
          "CIM_BaseMetricDefinition identified by the value at the "
          "same array index of ControllableMetrics may be enabled "
          "and or disabled with a single operation. A value of 4 "
          "\"Both\" shall indicate that all metrics defined by the "
          "instance of CIM_BaseMetricDefinition identified by the "
          "value at the same array index of ControllableMetrics may "
          "be enabled and or disabled individually or as a single "
          "operation." ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Discrete", "Bulk", "Both", 
          "DMTF Reserved", "Vendor Specific" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MetricServiceCapabilities.ControllableMetrics" }]
   uint16 MetricsControlTypes[];

      [Description ( 
          "ControllableManagedElements identifies the instances of "
          "CIM_ManagedElement that can be controlled by the "
          "associated CIM_MetricService instance. Each value shall "
          "be formatted as a WBEM URI defined according to DSP0207 "
          "identifying an instance of CIM_ManagedElement If a value "
          "corresponding to an instance of CIM_ManagedElement is "
          "included in the ControllableManagedElements property, "
          "the associated instance of CIM_MetricService shall "
          "support enabling and/or disabling at least one metric "
          "defined for the CIM_ManagedElement instance." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MetricServiceCapabilities.ManagedElementControlTypes" }]
   string ControllableManagedElements[];

      [Description ( 
          "ManagedElementControlTypes identifies the type of "
          "control supported by the associated CIM_MetricService "
          "instance for the CIM_ManagedElement identified by the "
          "value at the same array index in the "
          "ControllableManagedElements property. A value of 2 "
          "\"Discrete\" shall indicate that individual metrics "
          "controlled by the associated instance of "
          "CIM_MetricService may be enabled and or disabled for the "
          "instance of CIM_ManagedElement identified at the "
          "corresponding array index of "
          "ControllableManagedElements.A value of 3 \"Bulk\" shall "
          "indicate that all metrics controlled by the associated "
          "instance of CIM_MetricService may be enabled and or "
          "disabled for the instance of CIM_ManagedElement "
          "identified at the corresponding array index of "
          "ControllableManagedElements. A value of 4 \"Both\" shall "
          "indicate that all metrics controlled by the associated "
          "instance of CIM_MetricService may be enabled and or "
          "disabled with a single operation or individually for the "
          "instance of CIM_ManagedElement identified by the value "
          "at the same array index of ControllableManagedElements." ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Discrete", "Bulk", "Both", 
          "DMTF Reserved", "Vendor Specific" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MetricServiceCapabilities.ControllableManagedElements" }]
   uint16 ManagedElementControlTypes[];

      [Description ( 
          "Each enumeration corresponds to support for the "
          "like-named method of the MetricService." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "..", "0x8000.." }, 
       Values { "ControlMetrics", "ControlMetricsByClass", 
          "ShowMetrics", "ShowMetricsByClass", "GetMetricValues", 
          "ControlSampleTimes", "DMTF Reserved", "Vendor Specific" }]
   uint16 SupportedMethods[];


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "Similar to the SubUoWDef association (which describes the "
       "relationship between definitional UnitsOfWork), this "
       "association identifies the executional UnitOfWork "
       "Dependencies. It associates executing/executed UnitsOfWork "
       "with their parent Units. In most cases, the SubUoW reflects "
       "the execution side of the relationship defined in SubUoWDef. "
       "However, there may be cases where the SubUoWDef is not "
       "defined, but for a particular UnitOfWork, the SubUoW "
       "relationship is valid. Therefore, it is not a requirement (but "
       "it is desirable) that there be a corresponding SubUoWDef for "
       "each instance of SubUoW." )]
class CIM_SubUoW : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The parent executing/executed UnitOfWork. On the "
          "execution side, it is expected that a sub-Unit is "
          "associated with only one parent UnitOfWork." )]
   CIM_UnitOfWork REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The sub-UnitOfWork. On the execution side, it is "
          "expected that a sub-Unit is associated with only one "
          "parent UnitOfWork." )]
   CIM_UnitOfWork REF Dependent;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "A LogicalElement that describes units of work (e.g. "
       "transactions). This class represents the definitional "
       "components of a unit of work, and not the unit itself." )]
class CIM_UnitOfWorkDefinition : CIM_LogicalElement {

      [Override ( "Name" ), 
       Description ( 
          "The name of the Definition. This name does not have to "
          "be unique, but should be descriptive. It may contain "
          "blanks." )]
   string Name;

      [Description ( 
          "A free format string describing the context of the "
          "defined UnitOfWork. For example an \'Add Order\' Unit "
          "could be defined in the context of a book ordering "
          "application, whereas another \'Add Order\' UnitOfWork "
          "could be defined for a computer ordering application. It "
          "may contain blanks." )]
   string Context;

      [Key, Description ( 
          "A 16 byte value that uniquely identifies the UnitOfWork "
          "Definition. The use of OSF UUID/GUIDs is recommended." ), 
       MaxLen ( 16 )]
   string Id;

      [Description ( 
          "A 16 byte value that uniquely identifies the applied "
          "semantics and format of the trace levels used in the "
          "instances of UnitOfWork. The use of OSF UUID/GUIDs is "
          "recommended. \n"
          "TraceLevelTypeId allows management applications to "
          "efficiently discriminate between different trace level "
          "semantics of different UnitOfWorkDefinitions. I.E., "
          "CIM_UnitOfWork.TraceLevel = 1 may have different "
          "semantics if TraceLevelTypeId is different for the "
          "respective instances of UnitOfWork. \n"
          "It is not assumed that different trace level semantics "
          "are used within the same UnitOfWorkDefinition in order "
          "to promote uniform trace level encodings. (Keep in mind: "
          "At least the developers of the business actions "
          "represented by the same UnitOfWorkDefinition instance "
          "should strive to use the same trace level encoding, "
          "otherwise the administrator will have a hard time to "
          "figure out what detailed information to expect.) \n"
          "If the string is empty no traces are expected to be "
          "produced. If the string is not empty, an associated "
          "instance of TraceLevelType may be attached to the "
          "UnitOfWorkDefinition instance. Still, it is useful to "
          "incorporate TraceLevelTypeId into UnitOfWorkDefinition, "
          "to relate to an instance of TraceLevelType. The "
          "management application can more easily detect different "
          "trace level types." ), 
       MaxLen ( 16 ), 
       ModelCorrespondence { "CIM_TraceLevelType.InstanceID" }]
   string TraceLevelTypeId;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "Refers to the refinement of the UnitOfWorkDefinition: the "
       "trace level type. It is not required that a UnitOfWork be "
       "associated to a TraceLevelType. But if it is associated, only "
       "one Type can be specified for the Definition. In contrast, "
       "TraceLevelTypes can be reused for multiple Definitions." )]
class CIM_UoWDefTraceLevelType {

      [Key, Max ( 1 ), 
       Description ( 
          "The trace level type description that is implemented by "
          "the UnitOfWorkDefinition." )]
   CIM_TraceLevelType REF TraceLevelType;

      [Key, Description ( 
          "The UnitOfWorkDefinition which is refined by the "
          "instance of TraceLevelType." )]
   CIM_UnitOfWorkDefinition REF UoWDefn;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "This association ties a MetricDefinition to an instance of a "
       "UnitOfWork. Its primary purpose is to specify the value of the "
       "Metric for the instance of UnitOfWork. It is defined as a "
       "Dependency since the Metric value relies on the specific "
       "UnitOfWork for context." )]
class CIM_UoWMetric : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The UnitOfWork whose Metric value is specified." )]
   CIM_UnitOfWork REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The MetricDefinition for this particular UnitOfWork and "
          "value. Note that the MetricDefinition must be associated "
          "(via UoWMetricDefinition) to the same "
          "UnitOfWorkDefinition to which the UnitOfWork is weakly "
          "associated." )]
   CIM_MetricDefinition REF Dependent;

      [Description ( 
          "The value of the Metric for the referenced UnitOfWork. "
          "Note that the type of the data and other information are "
          "defined by the properties of MetricDefinition." )]
   string Value;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "An association that describes the Metrics related to a "
       "UnitOfWorkDefinition. This is a Dependency relationship since "
       "the MetricDefinition relies on the UnitOfWorkDefinition for "
       "context. At least one context must be defined for a "
       "MetricDefinition, hence the Min (1) qualifier is placed on the "
       "UnitOfWorkDefinition reference." )]
class CIM_UoWMetricDefinition : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The UnitOfWorkDefinition where the Metric applies." )]
   CIM_UnitOfWorkDefinition REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The MetricDefinition for a particular UnitOfWork." )]
   CIM_MetricDefinition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AdministrativeDistance 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "Information in this class affects the choice of one protocol "
       "over another, when two protocols learn the same route. "
       "Properties define the preference of a protocol, called its "
       "distance. The lower the distance, the higher the preference "
       "for that protocol. This class affects ALL routes and contains "
       "the default distances. Specific administrative distances "
       "relative to an individual route and Forwarding Service are "
       "defined in the NextHopForwardedByService association, its "
       "AdminDistance property. \n"
       "\n"
       "AdministrativeDistance, being a global object, is weak to the "
       "AdminDomain that contains it. Hence, the AdminDomain keys are "
       "propagated to this class." )]
class CIM_AdministrativeDistance : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping AdminDomain\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AdminDomain.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping AdminDomain\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AdminDomain.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "This is the name of the AdministrativeDistance class." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "The distance for directly connected peers. It has a "
          "default value of 0." )]
   uint8 DirectConnect = 0;

      [Description ( 
          "The distance for staticly connected peers. It has a "
          "default value of 1." )]
   uint8 Static = 1;

      [Description ( 
          "The distance for peers using EBGP. It has a default value of 20."
           )]
   uint8 EBGP = 20;

      [Description ( 
          "The distance for peers using internal EIGRP. It has a "
          "default value of 90." )]
   uint8 EIGRPInternal = 90;

      [Description ( 
          "The distance for peers using IGRP. It has a default value of 100."
           )]
   uint8 IGRP = 100;

      [Description ( 
          "The distance for peers using OSPF. It has a default value of 110."
           )]
   uint8 OSPF = 110;

      [Description ( 
          "The distance for peers using ISIS. It has a default value of 115."
           )]
   uint8 ISIS = 115;

      [Description ( 
          "The distance for peers using RIP. It has a default value of 120."
           )]
   uint8 RIP = 120;

      [Description ( 
          "The distance for peers using EGP. It has a default value of 140."
           )]
   uint8 EGP = 140;

      [Description ( 
          "The distance for peers using external EIGRP. It has a "
          "default value of 170." )]
   uint8 EIGRPExternal = 170;

      [Description ( 
          "The distance for peers using IBGP. It has a default value of 200."
           )]
   uint8 IBGP = 200;

      [Description ( 
          "The distance for peers using BGP locally. It has a "
          "default value of 200." )]
   uint8 BGPLocal = 200;

      [Description ( 
          "The distance for peers using an unknown protocol. It has "
          "a default value of 255." )]
   uint8 Unknown = 255;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AllocationSchedulingElement 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class is a subclass of the abstract class "
       "SchedulingElement. It introduces five new properties to "
       "support bandwidth-based scheduling. As is the case with all "
       "subclasses of SchedulingElement, the input associated with an "
       "instance of AllocationSchedulingElement is of one of two "
       "types: either a queue, or another scheduler." )]
class CIM_AllocationSchedulingElement : CIM_SchedulingElement {

      [Description ( 
          "A 16-bit unsigned integer enumeration that identifies "
          "the units in which the BandwidthAllocation and "
          "BurstAllocation properties are expressed. The following "
          "values are defined: \n"
          "- Bytes(1) \n"
          "- Packets(2) \n"
          "- Cells(3) (fixed-size, for example, ATM) \n"
          "If no value is specified, 1 (\"Bytes\") should be "
          "assumed." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Bytes", "Packets", "Cells" }]
   uint16 AllocationUnits;

      [Description ( 
          "A 32-bit bit unsigned integer defining the number of "
          "\'units\' per second that should be allocated to the "
          "associated input. \'Units\' are identified by the "
          "AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_AllocationSchedulingElement.AllocationUnits" }]
   uint32 BandwidthAllocation;

      [Description ( 
          "A 32-bit bit unsigned integer specifying the amount of "
          "temporary or short-term bandwidth (in \'units\' per "
          "second) that can be allocated to an input, beyond the "
          "amount of bandwidth allocated through the "
          "BandwidthAllocation property. If the maximum actual "
          "bandwidth allocation for the input were to be measured, "
          "it would be the sum of the BurstAllocation and the "
          "BandwidthAllocation properties. \'Units\' are identified "
          "by the AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_AllocationSchedulingElement.AllocationUnits" }]
   uint32 BurstAllocation;

      [Description ( 
          "A boolean property that, if TRUE, enables unused "
          "bandwidth from the associated input to be allocated to "
          "other inputs serviced by the Scheduler." )]
   boolean CanShare;

      [Description ( 
          "A boolean property that, if TRUE, indicates that the "
          "behavior of the scheduler relative to this input can be "
          "altered by changing the value of the inherited property, "
          "WorkConserving." )]
   boolean WorkFlexible;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPAttributes 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This class defines the BGP Attributes, that can be used to "
       "affect routing decisions. BGPAttributes are specific to a "
       "given AutonomousSystem that contains it. Hence, the keys of "
       "the AutonomousSystem are propagated to this class." )]
class CIM_BGPAttributes : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping AutonomousSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping AutonomousSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.Name" )]
   string SystemName;

      [Key, Description ( 
          "This defines the version of the BGP protocol." )]
   string Version;

      [Description ( 
          "This defines the priority, or preference, of a route, in "
          "order to better compare it with other routes for the "
          "same destination. Higher values indicate a higher "
          "preference for a route." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrLocalPref" }]
   uint16 LocalPreference;

      [Description ( 
          "This attribute is a sequences of the AS numbers through "
          "which routing information carried in this UPDATE message "
          "has passed. The components of this list can be AS_SETs "
          "or AS_SEQUENCEs." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrASPath" }]
   string ASPath;

      [Description ( 
          "This is the set of all elements contained in all "
          "specific paths that are being summarized, so that those "
          "attributes will remain available to the routing decision "
          "process." )]
   string AsSet;

      [Description ( 
          "This attribute defines the IP address of the border "
          "router that should be used as the next hop to the "
          "destinations listed in the UPDATE message." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrNextHop" }]
   string NextHop;

      [Description ( 
          "This defines the next hop to be the IP address of the "
          "border IBGP neighbor." )]
   string NextHopSelf;

      [Description ( 
          "This is used on external (e.g., inter-AS) links to "
          "indicate which is the preferred entry point into an AS, "
          "when that AS has multiple entry points. Lower MED values "
          "have preference." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrMultiExitDisc" }]
   uint32 MED;

      [Description ( 
          "This defines a group of destinations that share a "
          "similar property. Communities are not restricted to a "
          "single AS, and can span multiple ASs. This attribute is "
          "used to simplify routing policies by basing policies on "
          "a logical value, as opposed to an IP address or an AS "
          "number." )]
   uint32 BGPCommunityValue;

      [Description ( 
          "This property is set to TRUE if there are overlapping "
          "routes, and a less-specific route is selected instead of "
          "a more specific one (e.g., a system propagates an "
          "aggregate that causes loss of information). The value is "
          "set to FALSE if a less-specific route is NOT selected." ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgp4PathAttrAtomicAggregate" }]
   boolean AtomicAggregate;

      [Description ( 
          "This specifies the AS and IP address of the router that "
          "has generated an aggregate." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrAggregatorAS" }]
   string Aggregator;

      [Description ( 
          "This is generated by the AS that originates the routing "
          "information. There are three types of origins - IGP, "
          "EGP, and INCOMPLETE. These correspond to whether the "
          "information was learned internally in the AS, externally "
          "via an EGP, or by some other means." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "IGP", "EGP", "INCOMPLETE" }, 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrOrigin" }]
   uint16 Origin;

      [Description ( 
          "This is the router ID for the ORIGIN attribute." )]
   string OriginatorID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPCluster 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "The BGP speakers in an AS are required to be fully meshed. "
       "This can lead to a huge number of TCP connections per router. "
       "One way to reduce the peering requirements is to use a route "
       "reflector. This is based on specifying one or more routers to "
       "act as focal points for IBGP sessions. \n"
       "\n"
       "The route reflector as a whole is called a cluster. It is "
       "logically divided into three types of routers: reflectors, "
       "clients of the route reflector(s), and non-clients of the "
       "route reflector. There can be more than one route reflector in "
       "a cluster, and there can be more than one cluster in an AS." )]
class CIM_BGPCluster : CIM_CollectionOfMSEs {

      [Key, Description ( 
          "If a cluster has more than one route reflector, all of "
          "the route reflectors in the cluster need to be "
          "configured with a 4-byte cluster ID. This allows route "
          "reflectors to recognize updates from other route "
          "reflectors in the same cluster." )]
   uint32 ClusterID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPPathAttributes 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This class defines the per-path information used to process "
       "specific BGP attribute information, as defined in the "
       "bgp4PathAttrTable of RFC 1657." )]
class CIM_BGPPathAttributes : CIM_LogicalElement {

      [Key, Description ( 
          "A comma-separated list of AS numbers, as would be stored "
          "in the value portion of the path segment in the "
          "PathAttrASPathSegment property. This list can be ordered "
          "or unordered." ), 
       MaxLen ( 512 )]
   string ASNumbers;

      [Key, Description ( 
          "This is the address of the border router that should be "
          "used for the destination network." ), 
       MaxLen ( 32 ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrNextHop" }]
   string PathAttrNextHop;

      [Description ( 
          "This property and its description are taken directly "
          "from RFC 1657. The property represents a sequence of AS "
          "path segments. Each AS path segment is represented by "
          "the tuple: \n"
          "<type, length, value> \n"
          "The type is a 1-octet field which has two possible "
          "values: \n"
          "1 = AS_SET \n"
          "2 = AS_SEQUENCE \n"
          "An AS_SET is an unordered set of ASs representing the "
          "path that an UPDATE message has traversed, and an "
          "AS_SEQUENCE is an ordered set of ASs representing the "
          "path that an UPDATE message has traversed. \n"
          "The length is a 1-octet field containing the number of "
          "ASs in the value field. \n"
          "The value field contains one or more AS numbers, each AS "
          "is represented in the octet string as a pair of octets "
          "according to the following algorithm: \n"
          "first-byte-of-pair = ASNumber / 256; \n"
          "second-byte-of-pair = ASNumber & 255; \n"
          "This property is mapped from the "
          "bgp4PathAttrASPathSegment MIB variable, which is an "
          "OctetString. Its length is defined as a minimum of 2 and "
          "a maximum of 255 octets." ), 
       OctetString, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgp4PathAttrASPathSegment" }]
   uint8 PathAttrASPathSegment[];

      [Description ( 
          "This is an enumeration that defines the ultimate origin "
          "of the path information. The value \'IGP\' means that "
          "the origin is interior; the value \'EGP\' means that it "
          "was learned via an EGP; the value \'INCOMPLETE\' means "
          "that the origin is undetermined." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "IGP", "EGP", "Incomplete" }, 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrOrigin" }]
   uint16 PathAttrOrigin;

      [Description ( 
          "This metric is used to discriminate between multiple "
          "adjacent autonomous systems. A value of -1 indicates the "
          "absence of this attribute. The range of this attribute "
          "is defined to be -1 to 2147483647." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrMultiExitDisc" }]
   sint32 PathAttrMultiExitDisc;

      [Description ( 
          "This is the originating BGP4 speaker\'s degree of "
          "preference for an advertised route. A value of -1 "
          "indicates the absence of this attribute. The range of "
          "this attribute is defined to be -1 to 2147483647." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrLocalPref" }]
   sint32 PathAttrLocalPref;

      [Description ( 
          "This is an enumeration that defines whether or not the "
          "local system has selected a less specific route without "
          "selecting a more specific route. There are two values, 1 "
          "and 2, indicating that a less specific route has not and "
          "has been selected, respectively. This is a 32-bit "
          "integer to correspond to the IETF MIB." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Less Specific Not Selected", 
          "Less Specific Selected" }, 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgp4PathAttrAtomicAggregate" }]
   uint32 PathAttrAtomicAggregate;

      [Description ( 
          "This is the AS number of the last BGP speaker that "
          "performed route aggregation. A value of 0 indicates the "
          "absence of this attribute. The range of this attribute "
          "is defined to be 0 to 65535." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrAggregatorAS" }]
   uint16 PathAttrAggregatorAS;

      [Description ( 
          "This is the IP address of the last BGP speaker that "
          "performed route aggregation. A value of 0.0.0.0 "
          "indicates the absence of this attribute." ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgp4PathAttrAggregatorAddr" }]
   string PathAttrAggregatorAddr;

      [Description ( 
          "This is the degree of preference calculated by the "
          "receiving BGP speaker for an advertised route. A value "
          "of -1 indicates the absence of this attribute. The range "
          "of this attribute is defined to be -1 to 2147483647." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrCalcLocalPref" }]
   sint16 PathAttrCalcLocalPref;

      [Description ( 
          "This is an indication of whether or not this route was "
          "chosen as the best BGP route. There are three possible "
          "values, 0 (Unknown), 1 (FALSE) and 2 (TRUE)." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "False", "True" }, 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrBest" }]
   uint16 PathAttrBest;

      [Description ( 
          "This contains one or more path atributes not understood "
          "by this BGP speaker. It is a array of path attributes "
          "that are not understood. The number of attributes is "
          "placed in a separate property of this class, "
          "PathAttrUnknownNumber." ), 
       OctetString, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgp4PathAttrUnknown" }, 
       ModelCorrespondence { 
          "CIM_BGPPathAttributes.PathAttrUnknownNumber" }]
   string PathAttrUnknown[];

      [Description ( 
          "The number of unknown attributes in the array, PathAttrUnknown."
           ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrUnknown" }, 
       ModelCorrespondence { "CIM_BGPPathAttributes.PathAttrUnknown" }]
   uint16 PathAttrUnknownNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPPeerGroup 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "A BGP Peer Group is a set of BGP neighbors that share the same "
       "update policies. This enables an administrator to assign "
       "policies to the peer group, instead of individually. This "
       "enables the routers in the Peer Group to optimize UPDATE "
       "messages. Consequently, Peer Groups have a set of restrictions "
       "that must be followed in order to work correctly with external "
       "BGP peers. Otherwise, loss of routing information could occur. \n"
       "\n"
       "A BGPPeerGroup is weak to the AutonomousSystem that contains "
       "it. Therefore, the keys from System must be propagated to it." )]
class CIM_BGPPeerGroup : CIM_CollectionOfMSEs {

      [Key, Description ( 
          "The scoping AutonomousSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping AutonomousSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." )]
   string CreationClassName;

      [Key, Description ( "This is the name of the BGP Peer Group." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "This defines the time interval, in seconds, for the "
          "ConnectRetry timer for the endpoints of the routers in "
          "the PeerGroup. The suggested value is 120 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpConnectRetryInterval" }]
   uint32 ConnectRetryInterval = 120;

      [Description ( 
          "This defines the time interval in seconds for the Hold "
          "TimeConfigured property of the endpoints of the routers "
          "in the PeerGroup. This value must not be less than three "
          "seconds. The suggested value for this timer is 90 "
          "seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerHoldTimeConfigured" }]
   uint16 HoldTimeConfigured = 90;

      [Description ( 
          "This defines the time interval in seconds for the "
          "KeepAliveConfigured timer for the endpoints of the "
          "routers in the PeerGroup. The suggested value for this "
          "property is 30 seconds. The maximum value of this "
          "property is 21845 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerKeepAliveConfigured" }]
   uint16 KeepAliveConfigured = 30;

      [Description ( 
          "This defines the time interval in seconds for the "
          "MinASOriginationInterval timer for the endpoints of the "
          "routers in the PeerGroup. The suggested value for this "
          "property is 15 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerMinASOriginationInterval" }]
   uint16 MinASOriginationInterval = 15;

      [Description ( 
          "This defines the time interval in seconds for the "
          "MinRouteAdvertisementInterval timer for the endpoints of "
          "the routers in the PeerGroup. The suggested value for "
          "this property is 30 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerMinRouteAdvertisementInterval" }]
   uint16 MinRouteAdvertisementInterval = 30;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPRouteMap 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "A route map is used to control and modify routing information "
       "as well as to define when a route is redistributed between "
       "routing domains. Route maps are placed in router configuration "
       "files, and several instances of the same route map may be used "
       "to implement different actions. RouteMaps MAY use FilterLists "
       "to identify the route. \n"
       "\n"
       "A BGPRouteMap is specific to a given AutonomousSystem that "
       "contains it. Hence, the keys of the AutonomousSystem are "
       "propagated to this class." )]
class CIM_BGPRouteMap : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping AutonomousSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping AutonomousSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AutonomousSystem.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( "This is the name of the RouteMap class." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "This defines whether this RouteMap is used for input, "
          "output, or both input and output filtering." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Input", "Output", "Both" }]
   uint16 Direction;

      [Description ( 
          "This defines whether the action should be to forward or "
          "deny traffic meeting the match condition specified in "
          "this RouteMap." ), 
       ValueMap { "1", "2" }, 
       Values { "Permit", "Deny" }]
   uint16 Action;

      [Description ( 
          "This specifies the criteria that must be matched in "
          "order for the corresponding MatchAction to take effect. "
          "The matching of the criteria may be specified by using a "
          "FilterList. For example, the command \'match ip address "
          "foo\' uses the FilterList named \'foo\' to do the "
          "matching of IP addresses." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Other", "Source Address and Mask", 
          "Destination Address and Mask", "Source Port", 
          "Source Port Range", "Destination Port", 
          "Destination Port Range", "Protocol Type", 
          "Protocol Type and Option" }, 
       ModelCorrespondence { 
          "CIM_BGPRouteMap.OtherMatchConditionType" }]
   uint16 MatchConditionType;

      [Description ( 
          "If the value of the MatchConditionType property in this "
          "class is 1 (i.e., \"Other\"), then the specific type of "
          "filtering is specified in this property." ), 
       ModelCorrespondence { "CIM_BGPRouteMap.MatchConditionType" }]
   string OtherMatchConditionType;

      [Description ( 
          "This defines an additional action to take if the "
          "MatchCondition is satisfied. This definition is "
          "specifically limited to BGP filtering at this time. The "
          "actual value of the metric is specified in the "
          "SetMetricValue property." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Origin", "AS_Path", "NEXT_HOP", "Multi_Exit_Disc", 
          "Local_Pref", "Atomic_Aggregate", "Aggregator", 
          "Community", "Originator_ID" }, 
       ModelCorrespondence { "CIM_BGPRouteMap.SetMetricValue" }]
   uint16 SetMetricType;

      [Description ( 
          "This is the value of the metric that is being set for "
          "the BGP attribute defined in the SetMetricType property." )]
   string SetMetricValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPStatistics 
// ==================================================================
   [Deprecated { "CIM_BGPEndpointStatistics" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This class contains statistical information for a Service\'s "
       "sessions. It is deprecated since the statistics are defined in "
       "the BGP4 MIB at the level of individual peers/ endpoints." )]
class CIM_BGPStatistics : CIM_ServiceStatisticalInformation {

      [Deprecated { "CIM_BGPEndpointStatistics.InUpdates" }, 
       Description ( 
          "This is the number of BGP UPDATE messages received on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerInUpdates" }]
   uint32 InUpdates;

      [Deprecated { "CIM_BGPEndpointStatistics.OutUpdates" }, 
       Description ( 
          "This is the number of BGP UPDATE messages transmitted on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerOutUpdates" }]
   uint32 OutUpdates;

      [Deprecated { "CIM_BGPEndpointStatistics.InTotalMessages" }, 
       Description ( 
          "This is the total number of BGP messages received on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerInTotalMessages" }]
   uint32 InTotalMessages;

      [Deprecated { "CIM_BGPEndpointStatistics.OutTotalMessages" }, 
       Description ( 
          "This is the total number of BGP messages transmitted on "
          "this router\'s BGP connection. This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerOutTotalMessages" }]
   uint32 OutTotalMessages;

      [Deprecated { "CIM_BGPEndpointStatistics.LastError" }, 
       Description ( 
          "This contains the last error code and error subcode for "
          "this router\'s BGP connection. If no error has occurred, "
          "then each integer in the array is zero." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerLastError" }]
   uint8 LastError[];

      [Deprecated { 
          "CIM_BGPEndpointStatistics.FsmEstablishedTransitions" }, 
       Description ( 
          "This contains the total number of times that the BGP "
          "Finite State Machine has transitioned into the "
          "established state for this router\'s BGP connection. "
          "This is a 32-bit counter." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerFsmEstablishedTransitions" }]
   uint32 FsmEstablishedTransitions;

      [Deprecated { "CIM_BGPEndpointStatistics.FsmEstablishedTime" }, 
       Description ( 
          "This indicates how long, in seconds, this peer has been "
          "in the established state, or how long since this peer "
          "was last in the established state. It is set to zero "
          "when a new peer is configured or when the router is "
          "booted. This has the semantics of a 32-bit gauge." ), 
       Units ( "Seconds" ), 
       Gauge, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerFsmEstablishedTime" }]
   uint32 FsmEstablishedTime;

      [Deprecated { "CIM_BGPEndpointStatistics.InUpdateElapsedTime" }, 
       Description ( 
          "This defines the time in seconds since the last BGP "
          "UPDATE message was received from the peer. This has the "
          "semantics of a 32-bit gauge." ), 
       Units ( "Seconds" ), 
       Gauge, MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerInUpdateElapsedTime" }]
   uint32 InUpdateElapsedTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BufferPool 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::Buffers" ), 
    Description ( 
       "This class represents the use of buffers by a Queuing Service. "
       "The existence and management of individual buffers will be "
       "modeled in a future release. At the current level of "
       "abstraction, modeling the existence of the BufferPool is "
       "necessary. Long term, it is not sufficient. \n"
       "\n"
       "In implementations where there are multiple buffer sizes, an "
       "instance of BufferPool should be defined for each set of "
       "buffers with identical or similar sizes. These instances of "
       "buffer pools can then be grouped together using the "
       "CollectedBuffersPool association. \n"
       "\n"
       "Note that this class is derived from CollectionOfMSEs, and not "
       "from Forwarding or ConditioningService. BufferPool is only a "
       "collection of storage, and is NOT a Service." )]
class CIM_BufferPool : CIM_CollectionOfMSEs {

      [Key, Override ( "CollectionID" ), 
       Description ( 
          "This property is defined in the CollectionOfMSEs class, "
          "but is overridden here to serve as part of the "
          "(composite) key that identifies the BufferPool instance." ), 
       MaxLen ( 256 )]
   string CollectionID;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Description ( 
          "The Name property defines the label by which the object is known."
           ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_BufferPool.SizeOfBuffers" }, 
       Description ( 
          "This property is a 16-bit unsigned integer, and defines "
          "the number of bytes in each buffer. It is deprecated in "
          "lieu of a similar uint32 property." ), 
       Units ( "Bytes" )]
   uint16 BufferSize;

      [Description ( 
          "This property is a 32-bit unsigned integer, and defines "
          "the number of bytes in each buffer." ), 
       Units ( "Bytes" )]
   uint32 SizeOfBuffers;

      [Description ( 
          "This property is a 32-bit unsigned integer, and defines "
          "the total number of buffers in the Pool." )]
   uint32 TotalBuffers;

      [Description ( 
          "This property is a 32-bit unsigned integer, and defines "
          "the number of buffers in the Pool that are currently not "
          "allocated to any instance of a QueuingService. Buffers "
          "allocated to a QueuingService could either be in use "
          "(containing packet data), or allocated to a Queue "
          "pending the arrival of new packet data." )]
   uint32 AvailableBuffers;

      [Description ( 
          "This property is a 32-bit unsigned integer, and defines "
          "the number of buffers in the Pool that have been "
          "simultaneously allocated to multiple instances of "
          "QueuingService." )]
   uint32 SharedBuffers;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectedBufferPool 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::Buffers" ), 
    Description ( 
       "CIM_CollectedBufferPool is an aggregation association "
       "representing that a Pool may itself be contained in a \'higher "
       "level\' Pool." )]
class CIM_CollectedBufferPool : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Description ( "The \'higher level\' or parent Pool." )]
   CIM_BufferPool REF Collection;

      [Override ( "Member" ), 
       Description ( "The \'collected\' Pool." )]
   CIM_BufferPool REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConnectivityCollection 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "A ConnectivityCollection groups together a set of "
       "ProtocolEndpoints of the same \'type\' (i.e., class) which are "
       "able to communicate with each other. It may also group related "
       "Systems, users or other ManagedElements. A "
       "ConnectivityCollection represents the ability to send and/or "
       "receive data over a set of ProtocolEndpoints. The collection "
       "is defined in the context of an AdminDomain or scoping "
       "ComputerSystem. This is mandated by the Hosted Collection "
       "association on the SystemSpecificCollection superclass. Note "
       "that the entities aggregated into the Collection are specified "
       "using the association, MemberOfCollection." )]
class CIM_ConnectivityCollection : CIM_SystemSpecificCollection {

      [Description ( 
          "An enumeration describing the current or potential "
          "connectivity between endpoints in this collection. "
          "Connectivity may be provided or not, or may be in a "
          "degraded/partitioned state if one or more endpoints or "
          "links have failed. The latter would prevent full "
          "connectivity between all elements in the Collection, but "
          "would permit connectivity between subsets." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Connectivity/Up", 
          "No Connectivity/Down", "Partitioned" }]
   uint16 ConnectivityStatus;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Network::DHCP" ), 
    Description ( 
       "A class derived from EnabledLogicalElementCapabilities "
       "representing the capabilities of a DHCP client." )]
class CIM_DHCPCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "One or more DHCP options supported by the DHCP client. "
          "These may include: Subnet Mask, Default Router, DNS "
          "Server, etc. See RFC2132 for a description of each "
          "option." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82..83", "84", "85..118", "119", "120", "121..122", 
          "123", "124..256", "257", "258..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Pad", "Subnet Mask", 
          "Time Offset", "Router Option", "Time Server", 
          "Name Server", "Domain Name Server", "Log Server", 
          "Cookie Server", "LPR Server", "Impress Server", 
          "Resource Location Server", "Host Name", "Boot File Size", 
          "Merit Dump File", "Domain Name", "Swap Server", 
          "Root Path", "Extensions Path", 
          "IP Forwarding Enable/Disable", 
          "Non-Local Source Routing Enable/Disable", 
          "Policy Filter", "Maximum Datagram Reassembly Size", 
          "Default IP Time-to-live", "Path MTU Aging Timeout", 
          "Path MTU Plateau Table", "Interface MTU", 
          "All Subnets are Local", "Broadcast Address", 
          "Perform Subnet Mask Discovery", "Mask Supplier", 
          "Perform Router Discovery", "Router Solicitation Address", 
          "Static Route", "Trailer Encapsulation", 
          "ARP Cache Timeout", "Ethernet Encapsulation", 
          "TCP Default TTL", "TCP Keepalive Interval", 
          "TCP Keepalive Garbage", 
          "Network Information Service Domain", 
          "Network Information Servers", 
          "Network Time Protocol Servers", 
          "Vendor Specific Information", 
          "NetBIOS over TCP/IP Name Server", 
          "NetBIOS over TCP/IP Datagram Distribution Server", 
          "NetBIOS over TCP/IP Node Type", 
          "NetBIOS over TCP/IP Scope", 
          "X Window System Font Server", 
          "X Window System Display Manager", "Requested IP Address", 
          "Lease Time", "Option Overload", "Message Type", 
          "Server Identifier", "Parameter Request List", 
          "Error Message", "Maximum Message Size", 
          "Renewal (T1) Time", "Rebinding (T2) Time", 
          "Vendor Class Identifier", "Client Identifier", 
          "DMTF Reserved", "DMTF Reserved", 
          "Network Information Service+ Domain", 
          "Network Information Service+ Servers", 
          "TFTP Server Name", "Bootfile Name", 
          "Mobile IP Home Agent", 
          "Simple Mail Transport Protocol (SMTP) Server", 
          "Post Office Protocol (POP3) Server", 
          "Network News Transport Protocol (NNTP) Server", 
          "Default World Wide Web (WWW) Server", 
          "Default Finger Server", 
          "Default Internet Relay Chat (IRC) Server", 
          "StreetTalk Server", 
          "StreetTalk Directory Assistance (STDA) Server", 
          "User Class", "SLP Directory Agent", "SLP Service Scope", 
          "DMTF Reserved", "Relay Agent Information", 
          "DMTF Reserved", "Name Service Search", 
          "Subnet Selection", "DMTF Reserved", "Classless Route", 
          "DMTF Reserved", "End", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2132.IETF", "RFC2937.IETF", 
          "RFC3011.IETF", "RFC3046.IETF", "RFC3004.IETF", 
          "RFC2610.IETF", "RFC3442.IETF" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived" }]
   uint16 OptionsSupported[];

      [Description ( 
          "One or more DHCP option opcodes supported by the DHCP "
          "client for IPv6. \n"
          "The values of this property shall be the option-codes "
          "specified \n"
          "in RFC3315, Section 22." ), 
       MappingStrings { "RFC3315.IETF" }]
   uint16 IPv6OptionsSupported[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::DHCP" ), 
    Description ( 
       "This class represents the desired configuration settings for "
       "the DHCPProtocolEndpoint (i.e. DHCP client configuration." )]
class CIM_DHCPSettingData : CIM_IPAssignmentSettingData {

      [Override ( "AddressOrigin" ), 
       Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask, and Gateway were assigned to the "
          "IPProtocolEndpoint. A value of 4 indicates that the "
          "values will be assigned via DHCP." ), 
       ValueMap { "0..3", "4", "5..32767", "32768.." }, 
       Values { "DMTF Reserved", "DHCP", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IPProtocolEndpoint.AddressOrigin" }]
   uint16 AddressOrigin = 4;

      [Description ( 
          "A previously allocated IPv4 address for which the client "
          "is requesting re-allocation. This property is used in a "
          "client request (DHCPREQUEST) as the value of the ciaddr "
          "field." ), 
       MappingStrings { "RFC1541.IETF|Section 3.2" }, 
       ModelCorrespondence { "CIM_IPProtocolEndpoint.IPv4Address" }]
   string RequestedIPv4Address;

      [Description ( 
          "This property is used in a client request (DHCPREQUEST) "
          "to allow the client to request a lease time for the IP "
          "address. The value shall be specified as an interval at "
          "a granularity of seconds. This value corresponds to the "
          "value for code 51 as defined in RFC2132." ), 
       Units ( "Seconds" ), 
       MappingStrings { "RFC2132.IETF|Section 9.2" }, 
       ModelCorrespondence { "CIM_DHCPProtocolEndpoint.LeaseTime" }, 
       PUnit ( "second" )]
   uint32 RequestedLeaseTime;

      [Write, Description ( 
          "This property is used by DHCP clients to specify their "
          "unique identifier. DHCP servers use this value to index "
          "their database of address bindings. This value is "
          "expected to be unique for all clients in an "
          "administrative domain. This corresponds to DHCP Option "
          "Code 61 as defined in RFC2132. \n"
          "While this value is an option and therefore could be "
          "expressed using the RequestedOption property, it differs "
          "from other properties in that it includes a value when "
          "specified from the client." ), 
       MappingStrings { "RFC2132.IETF|Section 9.14" }]
   string ClientIdentifier;

      [Write, Description ( 
          "This property is used by DHCP clients to optionally "
          "identify the vendor type and configuration of a DHCP "
          "client. This corresponds to DHCP Option Code 60 as "
          "defined in RFC2132. While this is value is an option and "
          "therefore could be expressed using the RequestedOption "
          "property, it differs from other properties in that it "
          "includes a value when specified from the client." ), 
       MappingStrings { "RFC2132.IETF|Section 9.13" }]
   string VendorClassIdentifier;

      [Write, Description ( 
          "The list of requested DHCP options which the client is "
          "capable of interpreting but not necessarily required for "
          "the client to operate properly. This list of DHCP "
          "options is for IPv4." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82..83", "84", "85..118", "119", "120", "121..122", 
          "123", "124..256", "257", "258..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Pad", "Subnet Mask", 
          "Time Offset", "Router Option", "Time Server", 
          "Name Server", "Domain Name Server", "Log Server", 
          "Cookie Server", "LPR Server", "Impress Server", 
          "Resource Location Server", "Host Name", "Boot File Size", 
          "Merit Dump File", "Domain Name", "Swap Server", 
          "Root Path", "Extensions Path", 
          "IP Forwarding Enable/Disable", 
          "Non-Local Source Routing Enable/Disable", 
          "Policy Filter", "Maximum Datagram Reassembly Size", 
          "Default IP Time-to-live", "Path MTU Aging Timeout", 
          "Path MTU Plateau Table", "Interface MTU", 
          "All Subnets are Local", "Broadcast Address", 
          "Perform Subnet Mask Discovery", "Mask Supplier", 
          "Perform Router Discovery", "Router Solicitation Address", 
          "Static Route", "Trailer Encapsulation", 
          "ARP Cache Timeout", "Ethernet Encapsulation", 
          "TCP Default TTL", "TCP Keepalive Interval", 
          "TCP Keepalive Garbage", 
          "Network Information Service Domain", 
          "Network Information Servers", 
          "Network Time Protocol Servers", 
          "Vendor Specific Information", 
          "NetBIOS over TCP/IP Name Server", 
          "NetBIOS over TCP/IP Datagram Distribution Server", 
          "NetBIOS over TCP/IP Node Type", 
          "NetBIOS over TCP/IP Scope", 
          "X Window System Font Server", 
          "X Window System Display Manager", "Requested IP Address", 
          "Lease Time", "Option Overload", "Message Type", 
          "Server Identifier", "Parameter Request List", 
          "Error Message", "Maximum Message Size", 
          "Renewal (T1) Time", "Rebinding (T2) Time", 
          "Vendor Class Identifier", "Client Identifier", 
          "DMTF Reserved", "DMTF Reserved", 
          "Network Information Service+ Domain", 
          "Network Information Service+ Servers", 
          "TFTP Server Name", "Bootfile Name", 
          "Mobile IP Home Agent", 
          "Simple Mail Transport Protocol (SMTP) Server", 
          "Post Office Protocol (POP3) Server", 
          "Network News Transport Protocol (NNTP) Server", 
          "Default World Wide Web (WWW) Server", 
          "Default Finger Server", 
          "Default Internet Relay Chat (IRC) Server", 
          "StreetTalk Server", 
          "StreetTalk Directory Assistance (STDA) Server", 
          "User Class", "SLP Directory Agent", "SLP Service Scope", 
          "DMTF Reserved", "Relay Agent Information", 
          "DMTF Reserved", "Name Service Search", 
          "Subnet Selection", "DMTF Reserved", "Classless Route", 
          "DMTF Reserved", "End", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2132.IETF", "RFC2937.IETF", 
          "RFC3011.IETF", "RFC3046.IETF", "RFC3004.IETF", 
          "RFC2610.IETF", "RFC3442.IETF" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived" }]
   uint16 RequestedOptions[];

      [Write, Description ( 
          "The list of DHCP options required for the client to "
          "operate properly. This list of DHCP options is for IPv4." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82..83", "84", "85..118", "119", "120", "121..122", 
          "123", "124..256", "257", "258..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Pad", "Subnet Mask", 
          "Time Offset", "Router Option", "Time Server", 
          "Name Server", "Domain Name Server", "Log Server", 
          "Cookie Server", "LPR Server", "Impress Server", 
          "Resource Location Server", "Host Name", "Boot File Size", 
          "Merit Dump File", "Domain Name", "Swap Server", 
          "Root Path", "Extensions Path", 
          "IP Forwarding Enable/Disable", 
          "Non-Local Source Routing Enable/Disable", 
          "Policy Filter", "Maximum Datagram Reassembly Size", 
          "Default IP Time-to-live", "Path MTU Aging Timeout", 
          "Path MTU Plateau Table", "Interface MTU", 
          "All Subnets are Local", "Broadcast Address", 
          "Perform Subnet Mask Discovery", "Mask Supplier", 
          "Perform Router Discovery", "Router Solicitation Address", 
          "Static Route", "Trailer Encapsulation", 
          "ARP Cache Timeout", "Ethernet Encapsulation", 
          "TCP Default TTL", "TCP Keepalive Interval", 
          "TCP Keepalive Garbage", 
          "Network Information Service Domain", 
          "Network Information Servers", 
          "Network Time Protocol Servers", 
          "Vendor Specific Information", 
          "NetBIOS over TCP/IP Name Server", 
          "NetBIOS over TCP/IP Datagram Distribution Server", 
          "NetBIOS over TCP/IP Node Type", 
          "NetBIOS over TCP/IP Scope", 
          "X Window System Font Server", 
          "X Window System Display Manager", "Requested IP Address", 
          "Lease Time", "Option Overload", "Message Type", 
          "Server Identifier", "Parameter Request List", 
          "Error Message", "Maximum Message Size", 
          "Renewal (T1) Time", "Rebinding (T2) Time", 
          "Vendor Class Identifier", "Client Identifier", 
          "DMTF Reserved", "DMTF Reserved", 
          "Network Information Service+ Domain", 
          "Network Information Service+ Servers", 
          "TFTP Server Name", "Bootfile Name", 
          "Mobile IP Home Agent", 
          "Simple Mail Transport Protocol (SMTP) Server", 
          "Post Office Protocol (POP3) Server", 
          "Network News Transport Protocol (NNTP) Server", 
          "Default World Wide Web (WWW) Server", 
          "Default Finger Server", 
          "Default Internet Relay Chat (IRC) Server", 
          "StreetTalk Server", 
          "StreetTalk Directory Assistance (STDA) Server", 
          "User Class", "SLP Directory Agent", "SLP Service Scope", 
          "DMTF Reserved", "Relay Agent Information", 
          "DMTF Reserved", "Name Service Search", 
          "Subnet Selection", "DMTF Reserved", "Classless Route", 
          "DMTF Reserved", "End", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2132.IETF", "RFC2937.IETF", 
          "RFC3011.IETF", "RFC3046.IETF", "RFC3004.IETF", 
          "RFC2610.IETF", "RFC3442.IETF" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived" }]
   uint16 RequiredOptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Network::DNS" ), 
    Description ( 
       "The DNSGeneralSettingData class represents the system wide "
       "configuration options for the DNS client. Therefore, these "
       "configuration parameters are scoped to a computer system and "
       "are applicable to all of the network interfaces of the scoping "
       "system." )]
class CIM_DNSGeneralSettingData : CIM_IPAssignmentSettingData {

      [Override ( "AddressOrigin" ), 
       Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask, and Gateway were assigned to the "
          "IPProtocolEndpoint. This is independent of the DNS "
          "configuration, thus this property has the value of 2 "
          "(\"Not Applicable\")" ), 
       ValueMap { "0..1", "2", "3..32767", "32768.." }, 
       Values { "DMTF Reserved", "Not Applicable", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 AddressOrigin = 2;

      [Write, Description ( 
          "Whether or not the client should automatically append "
          "the primary domain suffix to target names prior to "
          "attempting to resolve." ), 
       ModelCorrespondence { 
          "CIM_DNSProtocolEndpoint.AppendPrimarySuffixes" }]
   boolean AppendPrimarySuffixes;

      [Write, Description ( 
          "Whether or not the client should automatically append "
          "the parent domain suffix to target names prior to "
          "attempting to resolve." ), 
       ModelCorrespondence { 
          "CIM_DNSProtocolEndpoint.AppendParentSuffixes" }]
   boolean AppendParentSuffixes;

      [Write, Description ( 
          "DNS suffixes to append when attempting to resolve a hostname."
           ), 
       ModelCorrespondence { 
          "CIM_DNSProtocolEndpoint.DNSSuffixesToAppend" }]
   string DNSSuffixesToAppend[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.18.1" ), 
    UMLPackagePath ( "CIM::Network::DNS" ), 
    Description ( 
       "DNSSettingData defines the DNSconfiguration settings for a "
       "single IP network connection. With the exception of the the "
       "DNSServerAddresses and the hostname in use, the configuration "
       "of a DNSProtocolEndpoint is indicated by the properties of an "
       "associated instance of DNSSettingData." )]
class CIM_DNSSettingData : CIM_IPAssignmentSettingData {

      [Override ( "AddressOrigin" ), 
       Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask, and Gateway were assigned to the "
          "IPProtocolEndpoint. This is independent of the DNS "
          "configuration, thus this property has the value of 2 "
          "(\"Not Applicable\")" ), 
       ValueMap { "0..1", "2", "3..32767", "32768.." }, 
       Values { "DMTF Reserved", "Not Applicable", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 AddressOrigin = 2;

      [Write, Description ( 
          "The domain to use for this client connection." ), 
       ModelCorrespondence { "CIM_DNSProtocolEndpoint.DomainName" }]
   string DomainName;

      [Write, Description ( 
          "The Hostname requested for this client connection." ), 
       ModelCorrespondence { "CIM_DNSProtocolEndpoint.Hostname" }]
   string RequestedHostname;

      [Description ( 
          "Whether or not the suffix should be appended before "
          "registering the client name with the DNS server." ), 
       ModelCorrespondence { 
          "CIM_DNSProtocolEndpoint.UseSuffixWhenRegistering" }]
   boolean UseSuffixWhenRegistering;

      [Description ( 
          "Whether or not this connection\'s address should be "
          "registered in DNS." ), 
       ModelCorrespondence { 
          "CIM_DNSProtocolEndpoint.RegisterThisConnectionsAddress" }]
   boolean RegisterThisConnectionsAddress;

      [Write, Description ( 
          "The DNS servers to contact. The array ordering "
          "correlates to the order in which the DNS servers will be "
          "contacted. The RemoteServiceAccessPoints associated with "
          "the DNSProtocolEndpoint with the value of the "
          "AccessContext property being \"DNS Server\" represent "
          "the actual DNS Servers being utilized by the DNS client." ), 
       ArrayType ( "Ordered" )]
   string DNSServerAddresses[];

      [Description ( 
          "One or more DHCP options that the DNS client should "
          "utilise if they are returned during a DHCP bind "
          "operation." ), 
       ValueMap { "8", "14", "17", "18..32767", "32768..65535" }, 
       Values { "Domain Name Server", "Host Name", "Domain Name", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived", 
          "CIM_DNSProtocolEndpoint.DHCPOptionsToUse" }]
   uint16 DHCPOptionsToUse[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DynamicForwardingEntry 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A DynamicForwardingEntry represents an entry in the forwarding "
       "(filtering) database associated with the "
       "TransparentBridgingService. The entry is Weak to the Service "
       "as specified by TransparentBridgingDynamicForwarding." )]
class CIM_DynamicForwardingEntry : CIM_LogicalElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( "The scoping Service\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.CreationClassName" )]
   string ServiceCreationClassName;

      [Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.Name" )]
   string ServiceName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "Unicast MAC address for which the TransparentBridging "
          "Service has forwarding and/or filtering information. "
          "Note that the MAC address is formatted as twelve "
          "hexadecimal digits (e.g., \"010203040506\"), with each "
          "pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order according to RFC "
          "2469." ), 
       MaxLen ( 12 ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpFdbAddress" }]
   string MACAddress;

      [Description ( "The status of the entry." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Invalid", "Learned", "Self", "Mgmt" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpFdbStatus" }]
   uint16 DynamicStatus;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterEntryBase 
// ==================================================================
   [Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "A FilterList aggregates instances of (subclasses of) "
       "FilterEntryBase via the aggregation EntriesInFilterList. The "
       "filter entries are always ANDed together when grouped by the "
       "FilterList. Note that it is possible to aggregate different "
       "types of filters into a single FilterList - for example, "
       "packet header filters (represented by the IpHeadersFilter "
       "class) and IPsec security filters. \n"
       "\n"
       "A FilterList is weak to the network device (e.g., the "
       "ComputerSystem) that contains it. Hence, the ComputerSystem "
       "keys are propagated to this class." )]
class CIM_FilterEntryBase : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property defines the label by which the Filter "
          "Entry is known and uniquely identified." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "Boolean indicating that the match condition described in "
          "the properties of the FilterEntryBase subclass should be "
          "negated. This property is defined for ease of use when "
          "filtering on simple negations - for example, to select "
          "all source ports except 162. It is not recommended that "
          "this Boolean be set to True when filtering on multiple "
          "criteria, such as defining an IPHeadersFilter based on "
          "source/destination addresses, ports, and DiffServ Code "
          "Points." )]
   boolean IsNegated;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterList 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "A FilterList is used by network devices to identify routes by "
       "aggregating a set of FilterEntries into a unit, called a "
       "FilterList. FilterLists can also be used to accept or deny "
       "routing updates. \n"
       "\n"
       "A FilterList is weak to the network device (i.e., the "
       "ComputerSystem) that contains it. Hence, the ComputerSystem "
       "keys are propagated to this class." )]
class CIM_FilterList : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string SystemName;

      [Key, Description ( "The type of class that this instance is." )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( "This is the name of the FilterList." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "This defines whether the FilterList is used for input, "
          "output, or both input and output filtering. All values "
          "are used with respect to the interface for which the "
          "FilterList applies. \n"
          "\n"
          "\"Not Applicable\" (0) is used when there is no "
          "direction applicable to the FilterList. \"Input\" (1) is "
          "used when the FilterList applies to packets that are "
          "inbound on the related interface. \"Output\" (2) is used "
          "when the FilterList applies to packets that are outbound "
          "on the related interface. \"Both\" (3) is used to "
          "indicate that the direction is immaterial, e.g., to "
          "filter on a source subnet regardless of whether the flow "
          "is inbound or outbound. \"Mirrored\" (4) is also "
          "applicable to both inbound and outbound flow processing, "
          "but indicates that the filter criteria are applied "
          "asymmetrically to traffic in both directions and, thus, "
          "specifies the reversal of source and destination "
          "criteria (as opposed to the equality of these criteria "
          "as indicated by \"Both\"). The match conditions in the "
          "aggregated FilterEntryBase subclass instances are "
          "defined from the perspective of outbound flows and "
          "applied to inbound flows as well by reversing the source "
          "and destination criteria. So, for example, consider a "
          "FilterList with 3 FilterEntries indicating destination "
          "port = 80, and source and destination addresses of a and "
          "b, respectively. Then, for the outbound direction, the "
          "filter entries match as specified and the \'mirror\' "
          "(for the inbound direction) matches on source port = 80 "
          "and source and destination addresses of b and a, "
          "respectively." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Not Applicable", "Input", "Output", "Both", 
          "Mirrored" }]
   uint16 Direction;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterListsInBGPRouteMap 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "RouteMaps do not have to use FilterLists, but if they do, this "
       "association defines which FilterList is used by a particular "
       "RouteMap." )]
class CIM_FilterListsInBGPRouteMap : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The FilterList used by a RouteMap." )]
   CIM_FilterList REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The RouteMap using the FilterList." )]
   CIM_BGPRouteMap REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Hdr8021Filter 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "8021Filter allows 802.1.source and destination MAC addresses, "
       "as well as the 802.1 protocol ID, priority, and VLAN "
       "identifier fields, to be expressed in a single object to "
       "classify and identify traffic." )]
class CIM_Hdr8021Filter : CIM_FilterEntryBase {

      [Description ( 
          "This property is an OctetString of size 6, representing "
          "a 48-bit source MAC address in canonical format. This "
          "value is compared to the SourceAddress field in the MAC "
          "header, subject to the mask represented in the "
          "8021HdrSrcMACMask property. If a value for this property "
          "is not provided, then the filter does not consider "
          "8021HdrSrcMACAddr in selecting matching packets, i.e., "
          "8021HdrSrcMACAddr matches for all values." ), 
       OctetString]
   uint8 HdrSrcMACAddr8021[];

      [Description ( 
          "This property is an OctetString of size 6, representing "
          "a 48-bit mask to be used in comparing the SourceAddress "
          "field in the MAC header with the value represented in "
          "the 8021HdrSrcMACAddr property. If a value for this "
          "property is not provided, then the filter does not "
          "consider 8021HdrSrcMACMask in selecting matching "
          "packets, i.e., the value of 8021HdrSrcMACAddr must match "
          "the source MAC address in the packet exactly." ), 
       OctetString]
   uint8 HdrSrcMACMask8021[];

      [Description ( 
          "This property is an OctetString of size 6, representing "
          "a 48-bit destination MAC address in canonical format. "
          "This value is compared to the DestinationAddress field "
          "in the MAC header, subject to the mask represented in "
          "the 8021HdrDestMACMask property. If a value for this "
          "property is not provided, then the filter does not "
          "consider 8021HdrDestMACAddr in selecting matching "
          "packets, i.e., 8021HdrDestMACAddr matches for all "
          "values." ), 
       OctetString]
   uint8 HdrDestMACAddr8021[];

      [Description ( 
          "This property is an OctetString of size 6, representing "
          "a 48-bit mask to be used in comparing the "
          "DestinationAddress field in the MAC header with the "
          "value represented in the 8021HdrDestMACAddr property. If "
          "a value for this property is not provided, then the "
          "filter does not consider 8021HdrDestMACMask in selecting "
          "matching packets, i.e., the value of 8021HdrDestMACAddr "
          "must match the destination MAC address in the packet "
          "exactly." ), 
       OctetString]
   uint8 HdrDestMACMask8021[];

      [Description ( 
          "This property is a 16-bit unsigned integer, representing "
          "an Ethernet protocol type. This value is compared to the "
          "Ethernet Type field in the 802.3 MAC header. If a value "
          "for this property is not provided, then the filter does "
          "not consider 8021HdrProtocolID in selecting matching "
          "packets, i.e., 8021HdrProtocolID matches for all values." )]
   uint16 HdrProtocolID8021;

      [Description ( 
          "This property is an 8-bit unsigned integer, representing "
          "an 802.1Q priority. This value is compared to the "
          "Priority field in the 802.1Q header. Since the 802.1Q "
          "Priority field consists of 3 bits, the values for this "
          "property are limited to the range 0..7. If a value for "
          "this property is not provided, then the filter does not "
          "consider 8021HdrPriorityValue in selecting matching "
          "packets, i.e., 8021HdrPriorityValue matches for all "
          "values." ), 
       MinValue ( 0 ), 
       MaxValue ( 7 )]
   uint8 HdrPriorityValue8021;

      [Description ( 
          "This property is an 32-bit unsigned integer, "
          "representing an 802.1Q VLAN Identifier. This value is "
          "compared to the VLAN ID field in the 802.1Q header. "
          "Since the 802.1Q VLAN ID field consists of 12 bits, the "
          "values for this property are limited to the range "
          "0..4095. If a value for this property is not provided, "
          "then the filter does not consider 8021HdrVLANID in "
          "selecting matching packets, i.e., 8021HdrVLANID matches "
          "for all values." ), 
       MinValue ( 0 ), 
       MaxValue ( 4095 )]
   uint32 HdrVLANID8021;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::IEEE8021x" ), 
    Description ( 
       "CIM_IEEE8021xCapabilities describes the IEEE 802.1x security "
       "capabilities of a layer 2 ProtocolEndpoint." )]
class CIM_IEEE8021xCapabilities : CIM_Capabilities {

      [Description ( 
          "The IEEE 802.1x Extensible Authentication Protocol types "
          "supported by the associated ProtocolEndpoint. See "
          "AuthenticationProtocol description in "
          "CIM_IEEE8021xSettings for more information." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", ".." }, 
       Values { "EAP-TLS", "EAP-TTLS/MSCHAPv2", 
          "PEAPv0/EAP-MSCHAPv2", "PEAPv1/EAP-GTC", 
          "EAP-FAST/MSCHAPv2", "EAP-FAST/GTC", "EAP-MD5", "EAP-PSK", 
          "EAP-SIM", "EAP-AKA", "EAP-FAST/TLS", "DMTF Reserved" }]
   uint16 SupportedAuthenticationProtocols[];

      [Description ( 
          "Indicates whether the associated ProtocolEndpoint "
          "supports moving a session due to roaming." )]
   boolean RoamingSupported;

      [Description ( 
          "Indicates whether the associated ProtocolEndpoint "
          "supports fast reconnection of an IEEE 802.1x session "
          "when it roams from one access point to another." )]
   boolean FastRoamingSupported;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPAddressRange 
// ==================================================================
   [Deprecated { "CIM_RangeOfIPAddresses" }, 
    Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "IPAddressRange represents a grouping of specific addresses, "
       "and provides additional semantics for this group if "
       "appropriate. The class is deprecated in lieu of the concrete "
       "class RangeOfIPAddresses since there is sufficient information "
       "for the class to be instantiated. In addition, an address "
       "range should be defined in the context of a System (for "
       "example, a network element or an admin domain). These "
       "semantics are incorporated in the RangeOfIPAddresses class." )]
class CIM_IPAddressRange : CIM_CollectionOfMSEs {

      [Deprecated { "CIM_RangeOfIPAddresses.StartAddress" }, 
       Description ( 
          "The starting IP address of the AddressRange, formatted "
          "according to the appropriate convention as defined in "
          "the AddressType property of this class (e.g., "
          "171.79.6.40)." )]
   string StartAddress;

      [Deprecated { "CIM_RangeOfIPAddresses.EndAddress" }, 
       Description ( 
          "The ending IP address of the AddressRange, formatted "
          "according to the appropriate convention as defined in "
          "the AddressType property of this class (e.g., "
          "171.79.6.40)." )]
   string EndAddress;

      [Deprecated { "CIM_RangeOfIPAddresses.AddressType" }, 
       Description ( 
          "An enumeration that defines how to format the address "
          "and mask of the address range that defines this "
          "IPSubnet. \n"
          "\n"
          "Whenever possible, IPv4-compatible addresses should be "
          "used instead of IPv6 addresses (see RFC 2373, section "
          "2.5.4). In order to have a consistent format for IPv4 "
          "addresses in a mixed IPv4/v6 environment, all IPv4 "
          "addresses and both IPv4-compatible IPv6 addresses and "
          "IPv4-mapped IPv6 addresses, per RFC 2373, section 2.5.4, "
          "should be formatted in standard IPv4 format." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 TypeOfAddress;

      [Deprecated { "No value" }, 
       Description ( 
          "This attribute defines the region that addresses can be "
          "allocated to." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", 
          "Multiregional: 192.0.0.0 to 193.255.255.255", 
          "Europe: 194.0.0.0 to 195.255.255.255", 
          "Others: 196.0.0.0 to 197.255.255.255", 
          "North America: 198.0.0.0 to 199.255.255.255", 
          "Central & South America: 200.0.0.0 to 201.255.255.255", 
          "Pacific Rim: 202.0.0.0 to 203.255.255.255", 
          "Others: 204.0.0.0 to 205.255.255.255", 
          "Others: 206.0.0.0 to 207.255.255.255" }]
   uint16 AllocationRegion;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPConnectivitySubnet 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "An IPConnectivitySubnet represents a group of related "
       "IPProtocolEndpoints that can communicate with each other, as "
       "members of a subnet. The class describes the characteristics "
       "of the subnet." )]
class CIM_IPConnectivitySubnet : CIM_ConnectivityCollection {

      [Description ( 
          "The IP address of the entire subnet, formatted according "
          "to the appropriate convention as defined in the "
          "AddressType property of this class." ), 
       ModelCorrespondence { "CIM_IPConnectivitySubnet.AddressType" }]
   string SubnetNumber;

      [Description ( 
          "The mask for the starting IPv4 address of the IP subnet, "
          "if needed (i.e., if the AddressType property is 1, "
          "\"IPv4\")." )]
   string SubnetMask;

      [Description ( 
          "The prefix length for IPv6 addresses in the IP subnet, "
          "if needed (i.e., if the AddressType property is 2, "
          "\"IPv6\")." )]
   uint8 PrefixLength;

      [Description ( 
          "An enumeration that describes the format of the address "
          "properties in IPConnectivitySubnet." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 AddressType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPHeadersFilter 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "IPHeadersFilter contains the most commonly required properties "
       "for performing filtering on IP, TCP or UDP headers. Properties "
       "not present in an instance of the IPHeadersFilter are treated "
       "as \'all values\'." )]
class CIM_IPHeadersFilter : CIM_FilterEntryBase {

      [Description ( 
          "HdrIPVersion identifies the version of the IP addresses "
          "for IP header filters. It is also used to determine the "
          "sizes of the OctetStrings in the six properties "
          "HdrSrcAddress, HdrSrcAddressEndOfRange, HdrSrcMask, "
          "HdrDestAddress, HdrDestAddressEndOfRange and "
          "HdrDestMask, as follows: \n"
          "ipv4(4): OctetString(SIZE (4)) \n"
          "ipv6(6): OctetString(SIZE (16|20)), \n"
          "depending on whether a scope identifier is present. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider IP version in selecting "
          "matching packets, i.e., IP version matches for all "
          "values. In this case, the HdrSrcAddress, "
          "HdrSrcAddressEndOfRange, HdrSrcMask, HdrDestAddress, "
          "HdrDestAddressEndOfRange and HdrDestMask must also be "
          "not present." ), 
       ValueMap { "4", "6" }, 
       Values { "IPv4", "IPv6" }, 
       ModelCorrespondence { "CIM_IPHeadersFilter.HdrSrcAddress", 
          "CIM_IPHeadersFilter.HdrSrcAddressEndOfRange", 
          "CIM_IPHeadersFilter.HdrSrcMask", 
          "CIM_IPHeadersFilter.HdrDestAddress", 
          "CIM_IPHeadersFilter.HdrDestAddressEndOfRange", 
          "CIM_IPHeadersFilter.HdrDestMask" }]
   uint8 HdrIPVersion;

      [Description ( 
          "HdrSrcAddress is an OctetString, of a size determined by "
          "the value of the HdrIPVersion property, representing a "
          "source IP address. When there is no "
          "HdrSrcAddressEndOfRange value, this value is compared to "
          "the source address in the IP header, subject to the mask "
          "represented in the HdrSrcMask property. (Note that the "
          "mask is ANDed with the address.) When there is a "
          "HdrSrcAddressEndOfRange value, this value is the start "
          "of the specified range (i.e., the HdrSrcAddress is lower "
          "than the HdrSrcAddressEndOfRange) that is compared to "
          "the source address in the IP header and matches on any "
          "value in the range. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrSrcAddress in selecting "
          "matching packets, i.e., HdrSrcAddress matches for all "
          "values." ), 
       OctetString, ModelCorrespondence { 
          "CIM_IPHeadersFilter.HdrIPVersion" }]
   uint8 HdrSrcAddress[];

      [Description ( 
          "HdrSrcAddressEndOfRange is an OctetString, of a size "
          "determined by the value of the HdrIPVersion property, "
          "representing the end of a range of source IP addresses "
          "(inclusive), where the start of the range is the "
          "HdrSrcAddress property value. \n"
          "\n"
          "If a value for HdrSrcAddress is not provided, then this "
          "property also MUST NOT be provided. If a value for this "
          "property is provided, then HdrSrcMask MUST NOT be "
          "provided." ), 
       OctetString, ModelCorrespondence { 
          "CIM_IPHeadersFilter.HdrIPVersion" }]
   uint8 HdrSrcAddressEndOfRange[];

      [Description ( 
          "HdrSrcMask is an OctetString, of a size determined by "
          "the value of the HdrIPVersion property, representing a "
          "mask to be used in comparing the source address in the "
          "IP header with the value represented in the "
          "HdrSrcAddress property. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrSrcMask in selecting "
          "matching packets, i.e., the value of the HdrSrcAddress "
          "or the source address range must match the source "
          "address in the packet exactly. If a value for this "
          "property is provided, then HdrSrcAddressEndOfRange MUST "
          "NOT be provided." ), 
       OctetString, ModelCorrespondence { 
          "CIM_IPHeadersFilter.HdrIPVersion" }]
   uint8 HdrSrcMask[];

      [Description ( 
          "HdrDestAddress is an OctetString, of a size determined "
          "by the value of the HdrIPVersion property, representing "
          "a destination IP address. When there is no "
          "HdrDestAddressEndOfRange value, this value is compared "
          "to the destination address in the IP header, subject to "
          "the mask represented in the HdrDestMask property. (Note "
          "that the mask is ANDed with the address.) When there is "
          "a HdrDestAddressEndOfRange value, this value is the "
          "start of the specified range (i.e., the HdrDestAddress "
          "is lower than the HdrDestAddressEndOfRange) that is "
          "compared to the source address in the IP header and "
          "matches on any value in the range. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrDestAddress in selecting "
          "matching packets, i.e., HdrDestAddress matches for all "
          "values." ), 
       OctetString, ModelCorrespondence { 
          "CIM_IPHeadersFilter.HdrIPVersion" }]
   uint8 HdrDestAddress[];

      [Description ( 
          "HdrDestAddressEndOfRange is an OctetString, of a size "
          "determined by the value of the HdrIPVersion property, "
          "representing the end of a range of destination IP "
          "addresses (inclusive), where the start of the range is "
          "the HdrDestAddress property value. \n"
          "\n"
          "If a value for HdrDestAddress is not provided, then this "
          "property also MUST NOT be provided. If a value for this "
          "property is provided, then HdrDestMask MUST NOT be "
          "provided." ), 
       OctetString, ModelCorrespondence { 
          "CIM_IPHeadersFilter.HdrIPVersion" }]
   uint8 HdrDestAddressEndOfRange[];

      [Description ( 
          "HdrDestMask is an OctetString, of a size determined by "
          "the value of the HdrIPVersion property, representing a "
          "mask to be used in comparing the destination address in "
          "the IP header with the value represented in the "
          "HdrDestAddress property. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrDestMask in selecting "
          "matching packets, i.e., the value of the HdrDestAddress "
          "or the destination address range must match the "
          "destination address in the packet exactly. If a value "
          "for this property is provided, then "
          "HdrDestAddressEndOfRange MUST NOT be provided." ), 
       OctetString, ModelCorrespondence { 
          "CIM_IPHeadersFilter.HdrIPVersion" }]
   uint8 HdrDestMask[];

      [Description ( 
          "HdrProtocolID is an 8-bit unsigned integer, representing "
          "an IP protocol type. This value is compared to the "
          "Protocol field in the IP header. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrProtocolID in selecting "
          "matching packets, i.e., HdrProtocolID matches for all "
          "values." )]
   uint8 HdrProtocolID;

      [Description ( 
          "HdrSrcPortStart represents the lower end of a range of "
          "UDP or TCP source ports. The upper end of the range is "
          "represented by the HdrSrcPortEnd property. The value of "
          "HdrSrcPortStart MUST be no greater than the value of "
          "HdrSrcPortEnd. \n"
          "\n"
          "A source port filter is evaluated by testing whether the "
          "source port identified in the IP header falls within the "
          "range of values between HdrSrcPortStart and "
          "HdrSrcPortEnd, INCLUDING these two end points. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrSrcPortStart in selecting "
          "matching packets, i.e., there is no lower bound in "
          "matching source port values." )]
   uint16 HdrSrcPortStart;

      [Description ( 
          "HdrSrcPortEnd represents the upper end of a range of UDP "
          "or TCP source ports. The lower end of the range is "
          "represented by the HdrSrcPortStart property. The value "
          "of HdrSrcPortEnd MUST be no less than the value of "
          "HdrSrcPortStart. A single port is indicated by equal "
          "values for HdrSrcPortStart and HdrSrcPortEnd. \n"
          "\n"
          "A source port filter is evaluated by testing whether the "
          "source port identified in the IP header falls within the "
          "range of values between HdrSrcPortStart and "
          "HdrSrcPortEnd, INCLUDING these two end points. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrSrcPortEnd in selecting "
          "matching packets, i.e., there is no upper bound in "
          "matching source port values." )]
   uint16 HdrSrcPortEnd;

      [Description ( 
          "HdrDestPortStart represents the lower end of a range of "
          "UDP or TCP destination ports. The upper end of the range "
          "is represented by the HdrDestPortEnd property. The value "
          "of HdrDestPortStart MUST be no greater than the value of "
          "HdrDestPortEnd. A single port is indicated by equal "
          "values for HdrDestPortStart and HdrDestPortEnd. \n"
          "\n"
          "A destination port filter is evaluated by testing "
          "whether the destination port identified in the IP header "
          "falls within the range of values between "
          "HdrDestPortStart and HdrDestPortEnd, INCLUDING these two "
          "end points. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrDestPortStart in selecting "
          "matching packets, i.e., there is no lower bound in "
          "matching destination port values." )]
   uint16 HdrDestPortStart;

      [Description ( 
          "HdrDestPortEnd represents the upper end of a range of "
          "UDP or TCP destination ports. The lower end of the range "
          "is represented by the HdrDestPortStart property. The "
          "value of HdrDestPortEnd MUST be no less than the value "
          "of HdrDestPortStart. A single port is indicated by equal "
          "values for HdrDestPortStart and HdrDestPortEnd. \n"
          "\n"
          "A destination port filter is evaluated by testing "
          "whether the destination port identified in the IP header "
          "falls within the range of values between "
          "HdrDestPortStart and HdrDestPortEnd, INCLUDING these two "
          "end points. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrDestPortEnd in selecting "
          "matching packets, i.e., there is no upper bound in "
          "matching destination port values." )]
   uint16 HdrDestPortEnd;

      [Description ( 
          "HdrDSCP is defined as a set of discrete DiffServ code "
          "points, with no inherent structure. There is no "
          "semantically significant relationship between different "
          "HdrDSCPs. Consequently, there is no provision for "
          "specifying a range of HdrDSCPs. \n"
          "\n"
          "Since, in IPv4, the HdrDSCP field may contain bits to be "
          "interpreted as the TOS IP Precedence, this property is "
          "also used to filter on IP Precedence. Similarly, the "
          "IPv6 Traffic Class field is also filtered using the "
          "value(s) in this property. \n"
          "\n"
          "HdrDSCP is defined as an array, to provide the ability "
          "to specify several discrete DSCPs in a single instance "
          "of IPHeadersFilter, that would be OR\'ed together to "
          "define the filter criteria. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrDSCP in selecting matching "
          "packets, i.e., HdrDSCP matches for all values." ), 
       MaxValue ( 63 )]
   uint8 HdrDSCP[];

      [Description ( 
          "The 20-bit Flow Label field in the IPv6 header may be "
          "used by a source to label sequences of packets for which "
          "it requests special handling by the IPv6 devices, such "
          "as non-default quality of service or \'real-time\' "
          "service. In the filter, this 20-bit string is encoded in "
          "a 24-bit octetstring by right-adjusting the value and "
          "padding on the left with b\'0000\'. \n"
          "\n"
          "If a value for this property is not provided, then the "
          "filter does not consider HdrFlowLabel in selecting "
          "matching packets, i.e., HdrFlowLabel matches for all "
          "values." ), 
       OctetString]
   uint8 HdrFlowLabel[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPSOFilterEntry 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "An IPSOFilterEntry is used to match traffic based on the IP "
       "Security Options header values (ClassificationLevel and "
       "ProtectionAuthority) as defined in RFC1108. This type of "
       "FilterEntry is used to adjust the IPsec encryption level "
       "according to the IPSO classification of the traffic (e.g., "
       "secret, confidential, restricted, etc.)." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPSOFilterEntry" }]
class CIM_IPSOFilterEntry : CIM_FilterEntryBase {

      [Required, Description ( 
          "MatchConditionType specifies whether to match based on "
          "traffic classification level, protection authority or "
          "both. Note that this enumeration is modified from its "
          "definition in the IETF\'s IPSP Policy Model to allow for "
          "both classification level and protection authority "
          "checking, and to allow the enumerated value, \"Other\", "
          "to be added in the future." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Classification Level", "Protection Authority", 
          "Both Classification Level and Protection Authority" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPSOFilterEntry.MatchConditionType" }, 
       ModelCorrespondence { 
          "CIM_IPSOFilterEntry.ClassificationLevel", 
          "CIM_IPSOFilterEntry.ProtectionAuthorities" }]
   uint16 MatchConditionType;

      [Required, Description ( 
          "This is the value to be matched when MatchConditionType "
          "is 1 or 3 - meaning that \"Classification Level\" should "
          "be filtered. In RFC1108, the following semantics are "
          "specified: TopSecret, Secret, Confidential, and "
          "Unclassified. Note that this enumeration\'s values are "
          "different than the RFC list and the IETF\'s IPSP Policy "
          "Model since those lists are simply bit maps, and do not "
          "include specific values for \"Other\" or \"No "
          "Filtering\"." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "Other", "No Filtering on Classification Level", 
          "Top Secret", "Secret", "Confidential", "Unclassified", 
          "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPSOFilterEntry.MatchConditionValue", 
          "RFC1108.IETF|Section 2.3" }, 
       ModelCorrespondence { 
          "CIM_IPSOFilterEntry.MatchConditionType", 
          "CIM_IPSOFilterEntry.OtherClassificationLevel" }]
   uint16 ClassificationLevel;

      [Description ( 
          "Description of the level when the value 1 (\"Other\") is "
          "specified for the property, ClassificationLevel." ), 
       ModelCorrespondence { 
          "CIM_IPSOFilterEntry.ClassificationLevel" }]
   string OtherClassificationLevel;

      [Required, Description ( 
          "These are the values to be matched when "
          "MatchConditionType is 2 or 3 - meaning that \"Protection "
          "Authority\" should be filtered. In RFC1108, the "
          "following authorities are specified: GENSER, SIOP-ESI, "
          "SCI, NSA and DOE. Note that multiple authorities may be "
          "specified. \n"
          "\n"
          "This enumeration is modified from its definition in the "
          "RFC and IETF\'s IPSP Policy Model. Those lists are "
          "simply bit maps, and do not include specific values for "
          "\"Other\" or \"No Filtering\"." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "..", "0x8000.." }, 
       Values { "Other", "No Filtering on Protection Authority", 
          "GENSER", "SIOP-ESI", "SCI", "NSA", "DOE", 
          "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPSOFilterEntry.MatchConditionValue", 
          "RFC1108.IETF|Section 2.4" }, 
       ModelCorrespondence { 
          "CIM_IPSOFilterEntry.MatchConditionType", 
          "CIM_IPSOFilterEntry.OtherProtectionAuthorities" }]
   uint16 ProtectionAuthorities[];

      [Description ( 
          "Description of the authority when the value 1 (\"Other\") "
          "is specified for the property, ProtectionAuthorities." ), 
       ModelCorrespondence { 
          "CIM_IPSOFilterEntry.ProtectionAuthorities" }]
   string OtherProtectionAuthorities[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPXConnectivityNetwork 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( "A network or subnet that uses the IPX protocol." )]
class CIM_IPXConnectivityNetwork : CIM_ConnectivityCollection {

      [Description ( 
          "An IPX network number formatted as eight hexadecimal "
          "digits (e.g., \"00112233\")." )]
   string NetworkNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "The capabilites for an iSCSI Network Entity. An instance of "
       "this class will be associated by ElementCapabilities to a "
       "instance of ComputerSystem that represents the Network Entity. "
       "These capability properties are associated to a Network "
       "Entity/ComputerSystem since they affect all login negotiations "
       "on all iSCSI ProtocolEndpoints aggregated to the system." )]
class CIM_iSCSICapabilities : CIM_Capabilities {

      [Description ( 
          "The minimum version number of the iSCSI specification "
          "such that this iSCSI instance supports this minimum "
          "value, the maximum value indicated by the corresponding "
          "property MaximumSpecificationVersionSupported, and all "
          "versions in between." ), 
       MinValue ( 0 ), 
       MaxValue ( 255 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiInstVersionMin" }, 
       ModelCorrespondence { 
          "CIM_iSCSICapabilities.MaximumSpecificationVersionSupported", 
          "CIM_iSCSIConnection.ActiveiSCSIVersion" }]
   uint8 MinimumSpecificationVersionSupported;

      [Description ( 
          "The maximum version number of the iSCSI specification "
          "such that this iSCSI instance supports this maximum "
          "value, the minimum value indicated by the corresponding "
          "property MinimumSpecificationVersionSupported, and all "
          "versions in between." ), 
       MinValue ( 0 ), 
       MaxValue ( 255 ), 
       MappingStrings { "MIB.IETF|ISCSI-MIB.iscsiInstVersionMax" }, 
       ModelCorrespondence { 
          "CIM_iSCSICapabilities.MinimumSpecificationVersionSupported", 
          "CIM_iSCSIConnection.ActiveiSCSIVersion" }]
   uint8 MaximumSpecificationVersionSupported;

      [Description ( 
          "An array containing a list of authentication methods "
          "supported by this Network Entity." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "(None", "SRP", "CHAP", "Kerberos" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIB.IETF|IPS-AUTH-MIB.ipsAuthCredAuthMethod" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.PrimaryAuthenticationMethod", 
          "CIM_iSCSIConnectionSettings.SecondaryAuthenticationMethod", 
          "CIM_iSCSIConnection.AuthenticationMethodUsed" }]
   uint16 AuthenticationMethodsSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LANConnectivitySegment 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "A collection of LAN Endpoints of a particular type (i.e., "
       "Ethernet or Token Ring), that are able to intercommunicate "
       "without the assistance of bridging or routing services." )]
class CIM_LANConnectivitySegment : CIM_ConnectivityCollection {

      [Description ( "A label or identifier for the LAN segment." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_LANEndpoint.LANID" }]
   string LANID;

      [Description ( 
          "An enumeration that categorizes and classifies instances "
          "of this class. Instances SHOULD aggregate entities of "
          "the appropriate \'type\', as defined by the value of "
          "this enumeration." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Ethernet", "TokenRing", "FDDI" }, 
       ModelCorrespondence { 
          "CIM_LANConnectivitySegment.OtherTypeDescription" }]
   uint16 ConnectivityType;

      [Description ( 
          "A string describing the type of connectivity that is "
          "supported by this Collection, when the value of the Type "
          "property is set to 1 (i.e., \"Other\"). This property "
          "should be set to NULL when the Type property is any "
          "value other than 1." ), 
       ModelCorrespondence { 
          "CIM_LANConnectivitySegment.ConnectivityType" }]
   string OtherTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalNetwork 
// ==================================================================
   [Deprecated { "CIM_ConnectivityCollection" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "A LogicalNetwork groups together a set of ProtocolEndpoints of "
       "a given type which are able to communicate with each other "
       "directly. It is used for describing the characteristics of the "
       "grouping and/or its associated medium. A LogicalNetwork "
       "represents the ability to send and/or receive data over a "
       "network. \n"
       "\n"
       "This class is deprecated in lieu of ConnectivityCollection. "
       "The latter better defines that a LogicalNetwork \'collects\' "
       "ProtocolEndpoints and other related entities, and is hosted "
       "within an AdminDomain." )]
class CIM_LogicalNetwork : CIM_CollectionOfMSEs {

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The scoping AdminDomain\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AdminDomain.CreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "No value" }, 
       Key, Description ( "The scoping AdminDomain\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_AdminDomain.Name" )]
   string SystemName;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_ConnectivityCollection.InstanceID" }, 
       Key, Description ( 
          "The Name property defines the label by which the object is known."
           ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "No value" }, 
       Description ( 
          "Type is an enumeration that provides additional "
          "information that can be used to help categorize and "
          "classify different instances of this class. \n"
          "\n"
          "Subclasses should ensure that they are of the "
          "appropriate type defined in the Type enumeration. That "
          "is, the IPSubnet subclass should define its property as "
          "either IPv4 or IPv6, as opposed to, for example, ATM." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18" }, 
       Values { "Unknown", "Other", "IPv4", "IPv6", "IPX", 
          "AppleTalk", "DECnet", "SNA", "CONP", "CLNP", "VINES", 
          "XNS", "ATM", "Frame Relay", "Ethernet", "TokenRing", 
          "FDDI", "Infiniband", "Fibre Channel" }, 
       ModelCorrespondence { 
          "CIM_LogicalNetwork.OtherTypeDescription" }]
   uint16 NetworkType;

      [Deprecated { "No value" }, 
       Description ( 
          "A string describing the type of protocol that is being "
          "run by this LogicalNetwork, when the value of the Type "
          "property (or any of its subclasses) is set to 1 (i.e., "
          "\"Other\"). This property should be set to NULL when the "
          "Type property is any value other than 1." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_LogicalNetwork.NetworkType" }]
   string OtherTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NamedAddressCollection 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "A NamedAddressCollection groups ProtocolEndpoints/addresses "
       "and other network identifiers for the purposes of assigning a "
       "single name (i.e., an alias). It is a subclass of "
       "SystemSpecificCollection to force the definition of the \'named "
       "collection\' in the context of a System (for example, either a "
       "ComputerSystem or an AdminDomain hosting a naming alias)." )]
class CIM_NamedAddressCollection : CIM_SystemSpecificCollection {

      [Required, Write, Description ( 
          "A name (alias) for the NamedAddressCollection which is "
          "unique in the context of the hosting System." )]
   string CollectionAlias;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.26.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "An instance of NetworkVLAN represents a collection of "
       "VLANSwitchEndpoints and/or VLANEndstationEndpoints which are "
       "members of the VLAN. There SHOULD be an instance of "
       "NetworkVLAN for every VLAN available in a switch. For example, "
       "in a switch with port-based VLANs, if there are 16 VLANs to "
       "which ports can be assigned (VLAN 1 through VLAN 16), there "
       "SHOULD be an instance of NetworkVLAN for each of VLAN 1 "
       "through VLAN 16." )]
class CIM_NetworkVLAN : CIM_ConnectivityCollection {

      [Description ( "A 12-bit VLAN ID used in the VLAN Tag header." ), 
       MinValue ( 1 ), 
       MaxValue ( 4094 ), 
       MappingStrings { "MIB.IETF|Q-BRIDGE-MIB.VlanId" }]
   uint16 VLANId;

      [Description ( 
          "The value of the 802.10 SAID field which would be used "
          "for this VLAN." )]
   uint32 SAIdentifier;

      [Description ( 
          "The value of this property is set to a positive integer "
          "when the value of the MTU for all members (switch "
          "endpoints/endstationendpoints of the VLAN is the same, "
          "otherwise is set to -1 and the Transmission size is set "
          "on each of the individual endpoints." ), 
       ModelCorrespondence { 
          "CIM_VLANSystemCapabilities.MaxMTUsize", 
          "CIM_VLANSystemCapabilities.MinMTUsize" }]
   sint32 TransmissionSize;

      [Description ( 
          "Defines/restricts the media type of the VLAN. This "
          "information is also needed when a VLAN is not yet "
          "associated to any end point." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..16000", ".." }, 
       Values { "Unknown", "Other", "Not Applicable", "Ethernet", 
          "FDDI", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_NetworkVLAN.OtherTypeDescription" }]
   uint16 TypeOfMedia;

      [Description ( 
          "A string describing the type of media that is supported "
          "by this VLAN, when the value of the Type property is set "
          "to 1 (i.e., \"Other\"). This property should be set to "
          "NULL when the Type property is any value other than 1." ), 
       ModelCorrespondence { "CIM_NetworkVLAN.TypeOfMedia" }]
   string OtherTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NextHopIPRoute 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( "NextHopIPRoute specifies routing in an IP network." )]
class CIM_NextHopIPRoute : CIM_NextHopRoute {

      [Description ( 
          "An enumerated integer indicating how the route was "
          "derived. This is useful for display and query purposes." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "Connected", "User-Defined", 
          "IGRP", "EIGRP", "RIP", "Hello", "EGP", "BGP", "ISIS", 
          "OSPF" }, 
       ModelCorrespondence { "CIM_NextHopIPRoute.OtherDerivation" }]
   uint16 RouteDerivation;

      [Description ( 
          "A string describing how the route was derived when the "
          "RouteDerivation property is 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_NextHopIPRoute.RouteDerivation" }]
   string OtherDerivation;

      [Description ( "The mask for the Ipv4 destination address." )]
   string DestinationMask;

      [Description ( 
          "The prefix length for the IPv6 destination address." )]
   uint8 PrefixLength;

      [Description ( 
          "An enumeration that describes the format of the address "
          "properties." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 AddressType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NextHopRouting 
// ==================================================================
   [Deprecated { "CIM_NextHopRoute" }, 
    Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "NextHopRouting relates a destination address to the address or "
       "interface through which the remote address may be reached. An "
       "instance of this class can represent either static or dynamic "
       "routing, and may represent a routing table entry (but it is "
       "not required that all NextHopRoutes be in a routing table). "
       "Static routes are distinguished by setting the IsStatic "
       "boolean property to TRUE. Subclasses of NextHopRouting provide "
       "specific protocol and Key information. NextHopRoutes are "
       "dependent on at least one ForwardingService to execute them. "
       "This is conveyed by the CIM_NextHopForwardedByService "
       "association. \n"
       "\n"
       "NextHopRouting is deprecated in lieu of the more general, "
       "concrete NextHopRoute class. NextHopRoute allows the "
       "definition of BOTH a next hop address and an interface for "
       "transmission of the traffic. Also, it does not mandate the "
       "instantiation of a ForwardingService class. The latter is not "
       "needed if the sole purpose of the instance is to specify a "
       "\'desired/configured\' route. This is simply a specification "
       "of the next hop." )]
class CIM_NextHopRouting : CIM_LogicalElement {

      [Deprecated { "CIM_NextHopRoute.DestinationAddress" }, 
       Description ( 
          "The address which serves as the destination to be reached."
           )]
   string DestinationAddress;

      [Deprecated { "no value" }, 
       Description ( "The mask for the DestinationAddress." )]
   string DestinationMask;

      [Deprecated { "CIM_AssociatedNextHop.Antecedent", 
          "CIM_RouteUsesEndpoint.Antecedent" }, 
       Description ( 
          "This contains either the address of the next-hop router, "
          "or the interface used to reach the destination." )]
   string NextHop;

      [Deprecated { "CIM_NextHopRoute.IsStatic" }, 
       Description ( 
          "TRUE indicates that this is a static route, and FALSE "
          "indicates a dynamically-learned route." )]
   boolean IsStatic;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "Each OSPF router has an association to one or more OSPF areas. "
       "Into these areas, a router advertises summaries filtered by "
       "specific address ranges. This would natively be modeled as a "
       "ternary association (router/OSPFService to OSPFArea to "
       "RangeOfIPAddresses), which is problematic in some "
       "implementations. To get around this issue, the "
       "OSPFAreaConfiguration class is defined to act as a focal point "
       "to bring together the router (indicated as a ComputerSystem "
       "with an instance of OSPFService, associated to the "
       "AreaConfiguration using OSPFServiceConfiguration), the area "
       "(indicated as an OSPFArea, associated to the AreaConfiguration "
       "using AreaOfConfiguration) and the address ranges for "
       "advertising (indicated as instances of RangeOfIPAddresses, "
       "associated to the AreaConfiguration using "
       "RangesOfConfiguration). There would be an instance of "
       "OSPFAreaConfiguration for each connected area of a "
       "router/OSPFService. \n"
       "\n"
       "When network administrators want to control the advertisements "
       "of OSPF routers by filters, they first define the relevant "
       "ranges. In order for a router to handle a range, an instance "
       "of RangeOfIPAddresses MUST be associated to the relevant "
       "OSPFAreaConfiguration (using the relationship, RangesOf "
       "Configuration). The association between the range and area "
       "configuration contains a property defining the handling "
       "(EnableAdvertise) to allow or disallow advertisements in the "
       "range. \n"
       "\n"
       "Notes: \n"
       "- Because RangeOfIPAddresses is scoped by a System (via the "
       "HostedCollection association), an instance of "
       "RangeOfIPAddresses would be associated to an OSPFArea, "
       "satisfying this semantic. \n"
       "- This class is inherited from LogicalElement, because a "
       "suitable subclass \'lower\' in the inheritance hiearchy does "
       "not exist." )]
class CIM_OSPFAreaConfiguration : CIM_LogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<OSPFService ID><Area Configuration ID> \n"
          "where: \n"
          "<OrgID> and the remainder of the InstanceID are "
          "separated by a colon \':\', and where <OrgID> MUST "
          "include a copyrighted, trademarked or otherwise unique "
          "name that is owned by the business entity "
          "creating/defining the InstanceID, or is a registered ID "
          "that is assigned to the business entity by a recognized "
          "global authority. (This is similar to the <Schema "
          "Name>_<Class Name> structure of Schema class names.) In "
          "addition, to ensure uniqueness <OrgID> MUST NOT contain "
          "a colon (\':\'). When using this algorithm, the first "
          "colon to appear in InstanceID MUST appear between "
          "<OrgID> and the <OSPFService ID>. For DMTF defined "
          "instances, the \'preferred\' algorithm MUST be used, and "
          "the <OrgID> set to \'CIM\'. \n"
          "<OSPFService ID> and <Area Configuration ID> MUST "
          "specify vendor-unique identifiers for the OSPFService "
          "and AreaConfiguration." )]
   string InstanceID;

      [Description ( 
          "This attribute contains the value of the default route "
          "that this router advertises into a stub area, see C.2 "
          "RFC 2328." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfStubMetric" }]
   uint32 StubDefaultCost;

      [Description ( 
          "This attribute contains the type of metric advertised as "
          "a default route into a stub area, see 3. in RFC 1850." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "OSPF Metric", "Comparable Cost", "NonComparable" }, 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfStubMetricType" }]
   uint16 StubMetricType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFLink 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "This class is used to represent OSPF connectivity between two "
       "or more OSPF protocol endpoints." )]
class CIM_OSPFLink : CIM_ConnectivityCollection {

      [Required, Description ( 
          "The type of the OSPF link, see section 1.2 in RFC 2328." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "Point-To-Point", "Point-To-Multipoint", 
          "Broadcast", "NBMA" }]
   uint16 LinkType;

      [Description ( 
          "The time, in seconds, between sending OSPF Hello-packets "
          "over the interface, see section C.3 in RFC 2328." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfHelloInterval" }]
   uint32 HelloInterval;

      [Description ( 
          "After ceasing to hear a router\'s Hello-packets, the "
          "number of seconds before its neighbors declare the "
          "router down, see section C.3 in RFC 2328." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfRtrDeadInterval" }]
   uint32 RouterDeadInterval;

      [Required, Description ( 
          "This parameter indicates whether IP multicast datagrams "
          "should be forwarded over this OSPF link, and if so, how "
          "the forwarding should be done, see section B.2 in RFC "
          "1584." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Disabled", "Data-link Multicast", 
          "Data-link Unicast" }, 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfMulticastForwarding" }]
   uint16 MulticastForwarding;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFServiceCapabilities 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "The OSPFServiceCapabilities class represents the capabilities "
       "of an OSPF service." )]
class CIM_OSPFServiceCapabilities : CIM_Capabilities {

      [Description ( 
          "This attribute indicates whether this router supports "
          "NSSA (\"not-so-stubby\") areas or not, see RFC 1587." )]
   boolean SupportNSSA;

      [Description ( 
          "This attribute indicates whether this router supports "
          "on-demand circuits or not, see RFC 1793." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfDemandExtensions" }]
   boolean SupportOnDemand;

      [Description ( 
          "This attribute indicates whether this router supports "
          "MOSPF (multicast enhancements to OSPF) or not, see B.1 "
          "in RFC 1584." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfMulticastExtensions" }]
   boolean SupportMOSPF;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PeerIDPayloadFilterEntry 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "PeerIDPayloadFilterEntry defines filters used to match the "
       "Identification Type field in the ID Payload of the IKE "
       "protocol exchange. It permits the specification of ID values "
       "such as \"*@example.com\" or \"192.0.2.0/24\"." ), 
    MappingStrings { "IPSP Policy Model.IETF|PeerIDPayloadFilterEntry" }]
class CIM_PeerIDPayloadFilterEntry : CIM_FilterEntryBase {

      [Required, Description ( 
          "MatchIdentityType specifies the Identification Type "
          "provided by the peer in the payload. The list of "
          "identities was generated from Section 4.6.2.1 of "
          "RFC2407. Note that the enumeration is different than the "
          "RFC list, since the value \'Other\' is taken into "
          "account." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000.." }, 
       Values { "Other", "IPV4 Address", "FQDN", "User FQDN", 
          "IPV4 Subnet Address", "IPV6 Address", 
          "IPV6 Subnet Address", "IPV4 Address Range", 
          "IPV6 Address Range", "DER ASN1 DN", "DER ASN1 GN", 
          "KEY ID", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerIDPayloadFilterEntry.MatchIdentityType", 
          "RFC2407.IETF|Section 4.6.2.1" }, 
       ModelCorrespondence { 
          "CIM_PeerIDPayloadFilterEntry.MatchIdentityValue" }]
   uint16 MatchIdentityType;

      [Required, Description ( 
          "MatchIdentityValue is the filter value for comparison "
          "with the ID payload, e,g, \"*@company.com\". The syntax "
          "may need to be converted for comparison. For example, if "
          "the type of identity is a DER-encoded distinguished "
          "name, (for example, MatchIdentityType = 10, "
          "\"DER_ASN1_DN\"), the MatchIdentityValue MUST be "
          "converted into a DER-encoded string. This allows it to "
          "be matched against the values extracted from the ID "
          "payload at runtime. \n"
          "\n"
          "Note that a wildcard mechanism may be used when "
          "MatchIdentityType specifies a general character string "
          "(for example, if MatchIdentityType=3, \'FQDN\'). "
          "MatchFieldValue may contain a wildcard character, \'*\', "
          "in the pattern match specification. For example, for "
          "\'FQDN\', a MatchFieldValue of \'*@example.com\' will "
          "successfully match an ID payload of "
          "\'janedoe@example.com\'. A wildcard can be used to "
          "represent 0 or more characters as is appropriate for the "
          "type specified in MatchIdentityType." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerIDPayloadFilterEntry.MatchIdentityValue" }, 
       ModelCorrespondence { 
          "CIM_PeerIDPayloadFilterEntry.MatchIdentityType" }]
   string MatchIdentityValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PreambleFilter 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "PreambleFilter allows the classification of packets using "
       "traffic-conditioning results (where the results are determined "
       "by a PreambleMarkerService and stored in a \'packet "
       "preamble\'). This permits information about the treatment that "
       "a packet receives on an ingress interface to be communicated "
       "along with the packet to the egress interface. An instance of "
       "PreambleFilter selects packets based on a two-part string "
       "(type and value pair) identifying a specific entry in the "
       "preamble. The logic for this match is \'at least one.\' That "
       "is, a packet with multiple entries/results in its preamble "
       "matches a filter if at least one of these matches the filter." )]
class CIM_PreambleFilter : CIM_FilterEntryBase {

      [Description ( 
          "To foster interoperability, the basic format of the "
          "information captured by a PreambleMarker is specified. "
          "That information is contained in the FilterItemList "
          "property (an ordered, string array). Each entry in the "
          "array takes the form \'type,value\'. When entries are "
          "added, they are appended to the end of the list. \n"
          "\n"
          "A limited set of standardized \'type\'s exist. They are: \n"
          "- ConformingFromMeter, NonConformingFromMeter and "
          "PartConformingFromMeter to convey metering results "
          "(where the \'value\' is the name of the meter) \n"
          "- VlanId to describe the traffic\'s VLAN information "
          "(where the \'value\' is the VLAN ID). \n"
          "An implementation is free to define and use other "
          "preamble \'types\'. \n"
          "\n"
          "Note that a wildcard value of \"any\" is allowed to "
          "indicate that the preamble entry matches for any \'value\' "
          "of the specified \'type\'. For example, using the "
          "wildcard, an administrator can define a filter to select "
          "all packets that were found to be conforming (\'type\' = "
          "\"ConformingFromMeter\") without having to name each "
          "meter individually." ), 
       ArrayType ( "Ordered" )]
   string FilterItemList[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PrioritySchedulingElement 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class is a subclass of the abstract class "
       "SchedulingElement. It indicates that a scheduler is taking "
       "packets from a set of inputs using the priority scheduling "
       "discipline. As is the case with all subclasses of "
       "SchedulingElement, the input associated with an instance of "
       "PrioritySchedulingElement is of one of two types: either a "
       "queue, or another scheduler. The Priority property represents "
       "the priority for an input, relative to the priorities of all "
       "the other inputs to which the scheduler (that aggregates this "
       "PrioritySchedulingElement) is associated. Inputs to which the "
       "scheduler is related via other scheduling disciplines do not "
       "figure in this prioritization. Because scheduling of this type "
       "is always work conserving, the inherited boolean property, "
       "WorkConserving, is restricted to TRUE in this class." )]
class CIM_PrioritySchedulingElement : CIM_SchedulingElement {

      [Override ( "WorkConserving" )]
   boolean WorkConserving = true;

      [Description ( 
          "A 16-bit unsigned integer indicating the priority level "
          "of this SchedulingElement\'s input, relative to the "
          "other inputs serviced by the SchedulingElement\'s "
          "aggregating PacketSchedulingService. A larger value "
          "represents a higher priority." )]
   uint16 Priority;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::Misc" ), 
    Description ( 
       "A subclass of EnabledLogicalElementCapabilities that defines "
       "the capabilities of a ProtocolService. An instance of "
       "CIM_ProtocolServiceCapabilities is associated with a "
       "ProtocolService using ElementCapabilities." )]
class CIM_ProtocolServiceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "MaxConnections specifies the maximum number of "
          "connections supported by the protocol service." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       ModelCorrespondence { "CIM_ProtocolService.MaxConnections" }]
   uint16 MaxConnections = 1;

      [Description ( 
          "MaxListeningPorts specifies the maximum number of ports "
          "on which a protocol service will listen." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       ModelCorrespondence { 
          "CIM_ProtocolServiceCapabilities.ListeningPortManagementSupported" }]
   uint16 MaxListeningPorts = 1;

      [Description ( 
          "ListeningPortManagementSupported indicates whether the "
          "management of the ports on which the associated "
          "ProtocolService listens is supported." ), 
       ModelCorrespondence { 
          "CIM_ProtocolServiceCapabilities.MaxListeningPorts" }]
   boolean ListeningPortManagementSupported;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RangeOfIPAddresses 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "The class RangeOfIPAddresses represents an implicit grouping "
       "(or \'pool\') of IP addresses specified by the properties, "
       "Start and EndAddress. It is defined as scoped/contained by a "
       "system such as an individual network element or an admin "
       "domain." )]
class CIM_RangeOfIPAddresses : CIM_SystemSpecificCollection {

      [Description ( 
          "The starting IP address of the AddressRange, formatted "
          "according to the appropriate convention as defined in "
          "the AddressType property of this class (e.g., "
          "171.79.6.40)." ), 
       ModelCorrespondence { "CIM_RangeOfIPAddresses.AddressType" }]
   string StartAddress;

      [Description ( 
          "The ending IP address of the AddressRange, formatted "
          "according to the appropriate convention as defined in "
          "the AddressType property of this class (e.g., "
          "171.79.6.40)." ), 
       ModelCorrespondence { "CIM_RangeOfIPAddresses.AddressType" }]
   string EndAddress;

      [Description ( 
          "An enumeration that defines how the address and mask "
          "properties are formatted." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 AddressType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RangesOfConfiguration 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "This association connects address ranges to the OSPF area "
       "configuration. When network administrators want to control the "
       "advertisements of OSPF routers by filters, they first define "
       "the relevant ranges. In order for a router to handle a range, "
       "an instance of RangeOfIPAddresses MUST be associated to the "
       "router\'s OSPFAreaConfiguration, using this relationship. The "
       "association between the range and area configuration contains "
       "a property (EnableAdvertise) defining the handling - to allow "
       "or disallow advertismenets in the range." )]
class CIM_RangesOfConfiguration : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The address range that is in the OSPF area configuration." )]
   CIM_RangeOfIPAddresses REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The OSPF area configuration that contains the range." )]
   CIM_OSPFAreaConfiguration REF Dependent;

      [Description ( 
          "The address range is advertised (TRUE) or not (FALSE), "
          "see C.2 in RFC 2328." )]
   boolean EnableAdvertise;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "RedirectionServiceCapabilities describes the capabilities of "
       "the associated RedirectionService." )]
class CIM_RedirectionServiceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "SharingModeSupported indicates the possible values to "
          "which the SharingMode of the associated "
          "RedirectionService can be set." ), 
       ValueMap { "0", "2", "3", ".." }, 
       Values { "Unknown", "Exclusive", "Shared", "DMTF Reserved" }]
   uint16 SharingModeSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RoutingPolicy 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This class is used to implement routing policies. It "
       "aggregates a set of FilterLists, along with other appropriate "
       "constructs, into a unit. One of the most important uses of "
       "this class is to change the routing policy by changing values "
       "of various attributes in a consistent manner. \n"
       "\n"
       "A RoutingPolicy is weak to the network device (i.e., the "
       "ComputerSystem) that contains it. Hence, the ComputerSystem "
       "keys are propagated to this class. \n"
       "\n"
       "Note that this class was defined before the Policy Model and "
       "hence is not positioned in that hierarchy. The class will be "
       "repositioned in a later release of the Network Model." )]
class CIM_RoutingPolicy : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( "This is the name of the Routing Policy." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "This defines the type of action that will be performed "
          "if the match conditions of the policy are met. The match "
          "conditions are defined by the associated ListsIn "
          "RoutingPolicy. There are essentially three choices: "
          "forward the traffic unmodified, forward the traffic but "
          "modify either the attributes describing the route and/or "
          "other attributes that define how to condition the "
          "traffic (e.g., its ToS byte settings), or prevent the "
          "traffic from being forwarded." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Accept As Is", 
          "Accept With Protocol Attribute Changes", 
          "Accept and Remark Packet", 
          "Accept With Protocol Attribute Changes and Remark", 
          "Accept With Other Action", 
          "Accept With Protocol Attribute Changes and Other Action", 
          "Accept with Remark and Other Action", 
          "Accept with Protocol Attribute Changes, Remark and Other Action", 
          "Deny" }]
   uint16 Action;

      [Description ( 
          "This controls whether protocol-specific attributes "
          "replace, get prepended, or get appended to their "
          "existing values." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Replace", "Prepend", "Append" }, 
       ModelCorrespondence { "CIM_RoutingPolicy.BGPAction" }]
   uint16 AttributeAction;

      [Description ( 
          "This defines one or more BGP-specific attributes that "
          "should be used to modify this routing update." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }, 
       Values { "Origin", "AS_Path", "NEXT_HOP", "Multi_Exit_Disc", 
          "Local_Pref", "Atomic_Aggregate", "Aggregator", 
          "Community", "Originator_ID", "Cluster_List" }, 
       ModelCorrespondence { "CIM_RoutingPolicy.BGPValue" }]
   uint16 BGPAction;

      [Description ( "The value for the corresponding BGPAction." ), 
       ModelCorrespondence { "CIM_RoutingPolicy.BGPAction" }]
   string BGPValue;

      [Description ( 
          "This defines a remarking action for this traffic." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Change DSCP", "Change ToS", "Change 802.1Q Value", 
          "Change CIR", "Change CBR", "Change ABR", "Change VBR" }, 
       ModelCorrespondence { "CIM_RoutingPolicy.RemarkValue" }]
   uint16 RemarkAction;

      [Description ( "The value for the corresponding RemarkAction." ), 
       ModelCorrespondence { "CIM_RoutingPolicy.RemarkAction" }]
   string RemarkValue;

      [Description ( 
          "This defines another action to be taken for this traffic." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Other", "Input Flow Policing", 
          "Output Flow Policing", "Input Aggregate Policing", 
          "Output Aggregate Policing", "Police By Marking Down", 
          "Police By Dropping Down" }, 
       ModelCorrespondence { "CIM_RoutingPolicy.ConditioningValue", 
          "CIM_RoutingPolicy.OtherConditioningAction" }]
   uint16 ConditioningAction;

      [Description ( 
          "If the value of the ConditioningAction property of this "
          "class is 1, this contains an application-specific type "
          "of conditioning that is to be performed. Otherwise, if "
          "the ConditioningAction property is any other value, the "
          "value of this property should be NULL." ), 
       ModelCorrespondence { "CIM_RoutingPolicy.ConditioningAction" }]
   string OtherConditioningAction;

      [Description ( 
          "The value for the corresponding ConditioningAction, if "
          "appropriate." ), 
       ModelCorrespondence { "CIM_RoutingPolicy.ConditioningAction" }]
   string ConditioningValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SATransform 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "SATransform is the base class for the various types of "
       "transforms that are in effect for an existing IPsecSAEndpoint, "
       "or aggregated into phase 2 proposals used during the IPsec "
       "negotiation process. This class is defined as a kind of "
       "ScopedSettingData, since it describes the set of transform "
       "properties that MUST be applied together, if negotiated. This "
       "subclassing is different than that defined in IETF\'s IPSP "
       "Policy draft - where it is subclassed from Policy. The "
       "definition as SettingData is more consistent with the "
       "application of the properties as a set, to the negotiated "
       "Security Association. \n"
       "\n"
       "Note that an instance of this class is \'scoped\' or contained "
       "by a System (either a ComputerSystem or AdminDomain), rather "
       "than by a SecurityAssociationEndpoint. This is indicated by "
       "instantiating the ScopedSetting association, and is necessary "
       "since the transform data is used in IPsec negotiation policies "
       "(also scoped by Systems) before ever being associated with a "
       "SecurityAssociationEndpoint. The latter semantics (i.e., that "
       "\'this\' transform is negotiated for \'this\' Security "
       "Association) is conveyed via a subclass of ElementSettingData, "
       "TransformOfSecurityAssociation." ), 
    MappingStrings { "IPSP Model.IETF|SATransform" }]
class CIM_SATransform : CIM_ScopedSettingData {

      [Override ( "ElementName" ), 
       MappingStrings { "IPSP Model.IETF|SATransform.CommonName" }]
   string ElementName;

      [Description ( 
          "MaxLifetimeSeconds specifies the maximum time that the "
          "Security Association should be considered valid after it "
          "has been created. A value of 0, the default, indicates "
          "that 8 hours should be used. A non-zero value indicates "
          "the maximum lifetime in seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "IPSP Model.IETF|SATransform.MaxLifetimeSeconds" }]
   uint64 MaxLifetimeSeconds = 0;

      [Description ( 
          "MaxLifetimeKilobytes specifies the maximum kilobyte "
          "lifetime for a Security Association. Different lifetimes "
          "are used, depending on the strength of the encryption "
          "algorithm. A value of 0, the default, indicates that no "
          "maximum should be defined. A non-zero value specifies "
          "the desired kilobyte lifetime." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "IPSP Model.IETF|SATransform.MaxLifetimeKilobytes" }]
   uint64 MaxLifetimeKilobytes = 0;

      [Description ( 
          "VendorID identifies vendor-defined transforms. If this "
          "field is empty (the default), then this is a standard "
          "transform." ), 
       MappingStrings { "IPSP Model.IETF|SATransform.VendorID" }]
   string VendorID = "";


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SpanningTreeStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Statistical information regarding the SpanningTreeService." )]
class CIM_SpanningTreeStatistics : CIM_ServiceStatisticalInformation {

      [Description ( 
          "The time since the last topology change was detected by "
          "the switch." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpTimeSinceTopologyChange" }]
   uint32 TimeSinceTopologyChange;

      [Description ( 
          "The total number of topology changes detected by the "
          "switch since the counter was last reset or initialized." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpTopChanges" }]
   uint32 TopChanges;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A subclass of ProtocolServiceCapabilities that defines the "
       "capabilities of an SSH Service. An instance of "
       "CIM_SSHCapabilities is associated with an instance of "
       "CIM_ProtocolService via the CIM_ElementCapabilities "
       "association." )]
class CIM_SSHCapabilities : CIM_ProtocolServiceCapabilities {

      [Description ( 
          "An array of integers indicating the version or versions "
          "of SSH protocol that the SSH service supports." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "SSHv1", "SSHv2", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHCapabilities.OtherSupportedSSHVersion" }]
   uint16 SupportedSSHVersions[];

      [Description ( 
          "If the SupportedSSHVersions property is set to 1, "
          "\"Other\" then free form string providing more "
          "information about supported SSH protocols. If not set to "
          "1, this string has no meaning." ), 
       ModelCorrespondence { 
          "CIM_SSHCapabilities.SupportedSSHVersions" }]
   string OtherSupportedSSHVersion;

      [Description ( 
          "An array of integers indicating the encryption "
          "algorithms that the SSH service supports." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", 
          "32768..65535" }, 
       Values { "Unknown", "Other", "DES", "DES3", "RC4", "IDEA", 
          "SKIPJACK", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHCapabilities.OtherSupportedEncryptionAlgorithm" }]
   uint16 SupportedEncryptionAlgorithms[];

      [Description ( 
          "If the SupportedEncryptionAlgorithms property is set to "
          "1, \"Other\" then free form string providing more "
          "information about supported algorithms. If not set to 1, "
          "this string has no meaning." ), 
       ModelCorrespondence { 
          "CIM_SSHCapabilities.SupportedEncryptionAlgorithms" }]
   string OtherSupportedEncryptionAlgorithm;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StaticForwardingEntry 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A StaticForwardingEntry represents an entry in the static "
       "(destination-address filtering) database associated with the "
       "TransparentBridgingService. The entry is Weak to the Service "
       "as specified by TransparentBridgingStatic Forwarding." )]
class CIM_StaticForwardingEntry : CIM_LogicalElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( "The scoping Service\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.CreationClassName" )]
   string ServiceCreationClassName;

      [Key, Description ( "The scoping Service\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Service.Name" )]
   string ServiceName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "Destination MAC address (unicast, multicast or "
          "broadcast) to which the filtering information applies. "
          "Note that the MAC address is formatted as twelve "
          "hexadecimal digits (e.g., \"010203040506\"), with each "
          "pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order according to RFC "
          "2469." ), 
       MaxLen ( 12 ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStaticAddress" }]
   string MACAddress;

      [Description ( "The status of the entry." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Invalid", "Permanent", "DeleteOnReset", 
          "DeleteOnTimeout" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStaticStatus" }]
   uint16 StaticStatus;

      [Description ( 
          "The ports to which frames with the destination MAC "
          "address arriving on the port represented by the "
          "SwitchPortStaticForwarding association are allowed to be "
          "forwarded." )]
   uint16 AllowedToGo[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortSourceRoutingStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Statistical information regarding a SwitchPort supporting "
       "source routing." )]
class CIM_SwitchPortSourceRoutingStatistics : CIM_SAPStatisticalInformation {

      [Description ( 
          "The number of Specifically Routed frames, also referred "
          "to as Source Routed Frames, that have been received from "
          "the segment attached to the port." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortSpecInFrames" }]
   uint32 SpecInFrames;

      [Description ( 
          "The number of Specifically Routed frames, also referred "
          "to as Source Routed Frames, that the port has "
          "transmitted on its segment." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortSpecOutFrames" }]
   uint32 SpecOutFrames;

      [Description ( 
          "The number of All Paths Explorer frames, also referred "
          "to as All Routes Explorer frames, that have been "
          "received by the port from its segment." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortApeInFrames" }]
   uint32 ApeInFrames;

      [Description ( 
          "The number of all Paths Explorer Frames, also referred "
          "to as All Routes Explorer frames, that have been "
          "transmitted by the port on its segment." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortApeOutFrames" }]
   uint32 ApeOutFrames;

      [Description ( 
          "The number of spanning tree explorer frames that have "
          "been received by the port from its segment." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortSteInFrames" }]
   uint32 SteInFrames;

      [Description ( 
          "The number of spanning tree explorer frames that have "
          "been transmitted by the port on its segment." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortSteOutFrames" }]
   uint32 SteOutFrames;

      [Description ( 
          "The number of explorer frames that have been discarded "
          "by the port because the routing descriptor field "
          "contained an invalid adjacent segment value." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortSegmentMismatchDiscards" }]
   uint32 SegmentMismatchDiscards;

      [Description ( 
          "The number of frames that have been discarded by the "
          "port because the routing descriptor field contained a "
          "duplicate segment identifier." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortDuplicateSegmentDiscards" }]
   uint32 DuplicateSegmentDiscards;

      [Description ( 
          "The number of explorer frames that have been discarded "
          "by the port because the Routing Information Field has "
          "exceeded the maximum route descriptor length." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortHopCountExceedsDiscards" }]
   uint32 HopCountExceedsDiscards;

      [Description ( 
          "The number of duplicate LAN IDs or Tree errors. This "
          "helps in detection of problems in networks containing "
          "older Source Routing Bridges." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortDupLanIdOrTreeErrors" }]
   uint32 DupLanIdOrTreeErrors;

      [Description ( 
          "The number of ARE and STE frames that were discarded "
          "because the last LAN ID in the routing information field "
          "did not equal the LAN-in ID. This error can occur in "
          "implementations which do only a LAN-in ID and Bridge "
          "Number check instead of a LAN-in ID, Bridge Number, and "
          "LAN-out ID check before they forward broadcast frames." ), 
       Counter, MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortLanIdMismatches" }]
   uint32 LanIdMismatches;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortSpanningTreeStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Statistical information regarding a SwitchPort participating "
       "in the spanning tree." )]
class CIM_SwitchPortSpanningTreeStatistics : CIM_SAPStatisticalInformation {

      [Description ( 
          "The number of times the port has transitioned from the "
          "Learning state to the Forwarding state." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortForwardTransitions" }]
   uint32 ForwardTransitions;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Statistical information regarding a generic SwitchPort, "
       "independent of the specific kind of switching done on frames "
       "arriving at the port." )]
class CIM_SwitchPortStatistics : CIM_SAPStatisticalInformation {

      [Description ( 
          "The number of frames discarded by this port due to "
          "excessive transit delay through the bridge." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dBasePortDelayExceededDiscards" }]
   uint32 DelayExceededDiscards;

      [Description ( 
          "The number of frames discarded by this port due to an "
          "excessive size." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dBasePortMtuExceededDiscards" }]
   uint32 MtuExceededDiscards;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortTransparentBridgingStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Statistical information regarding a SwitchPort, at which "
       "transparent bridging is performed." )]
class CIM_SwitchPortTransparentBridgingStatistics : CIM_SAPStatisticalInformation {

      [Description ( 
          "The number of frames that have been received by the port "
          "from its segment. Note that a frame is only counted if "
          "and only if it is for a protocol being processed by the "
          "local bridging function, including bridge management "
          "frames." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dTpPortInFrames" }]
   uint32 InFrames;

      [Description ( 
          "The number of frames that have been transmitted by the "
          "port to its segment. Note that a frame is only counted "
          "if and only if it is for a protocol being processed by "
          "the local bridging function, including bridge management "
          "frames." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dTpPortOutFrames" }]
   uint32 OutFrames;

      [Description ( 
          "Count of valid frames received which were discarded "
          "(i.e., filtered) by the forwarding process." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dTpPortInDiscards" }]
   uint32 InDiscards;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A subclass of ProtocolServiceCapabilities that defines the "
       "capabilities of a Telnet Service. An instance of "
       "TelnetCapabilities is associated with the ProtocolService "
       "using ElementCapabilities." )]
class CIM_TelnetCapabilities : CIM_ProtocolServiceCapabilities {

      [Description ( 
          "An array of integers indicating the terminal modes that "
          "the service supports." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "VT100", "ANSI", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetCapabilities.OtherSupportedTerminalMode" }]
   uint16 SupportedTerminalModes[];

      [Description ( 
          "If the SupportedTerminalModes property is set to 1, "
          "\"Other\" then free form string providing more "
          "information about supported terminal modes. If not set "
          "to 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetCapabilities.SupportedTerminalModes" }]
   string OtherSupportedTerminalMode[];

      [Description ( 
          "An array of integers indicating the Character display "
          "modes supported by the service." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Console", "Stream", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetCapabilities.OtherSupportedCharacterDisplayMode" }]
   uint16 SupportedCharacterDisplayModes[];

      [Description ( 
          "If the SupportedCharacterDisplayModes property is set to "
          "1 \"Other\" then free form string providing more "
          "information about the supported modes. If not set to 1, "
          "this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetCapabilities.SupportedCharacterDisplayModes" }]
   string OtherSupportedCharacterDisplayMode[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TransparentBridgingStatistics 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Statistical information regarding the TransparentBridging Service."
        )]
class CIM_TransparentBridgingStatistics : CIM_ServiceStatisticalInformation {

      [Description ( 
          "The total number of Forwarding Database entries, which "
          "have been or would have been learnt, but have been "
          "discarded due to a lack of space to store them in the "
          "Forwarding Database." ), 
       Counter, MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dTpLearnedEntryDiscards" }]
   uint32 LearnedEntryDiscards;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::USBRedirection" ), 
    Description ( 
       "USBRedirectionCapabilities describes the capabilities of the "
       "USB Redirection Service." )]
class CIM_USBRedirectionCapabilities : CIM_RedirectionServiceCapabilities {

      [Description ( 
          "The connection mode used to configure the session. A "
          "value set to 2 = \"Listen\" shall indicate that the SAP "
          "will listen for a connection request from the remote USB "
          "redirection server. A CIM_BindsTo association to a "
          "CIM_ProtocolEndoint may be used to represent where the "
          "SAP is listening for the connection request. A value set "
          "to 3 = \"Connect\" shall indicate that the the SAP shall "
          "initiate the connection to the remote USB redirection "
          "server. A CIM_RemoteAccessAvailableToElement association "
          "to a CIM_RemoteServiceAccessPoint may be used to "
          "represent where the SAP shall connect to the remote USB "
          "redirection server." ), 
       ValueMap { "0", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Listen", "Connect", "DMTF Reserved", 
          "Vendor Specified" }, 
       ModelCorrespondence { "CIM_USBRedirectionSAP.ConnectionMode" }]
   uint16 ConnectionModesSupported[];

      [Description ( 
          "An enumeration indicating the USB specification versions "
          "which are supported. The property is expressed as a "
          "Binary-Coded Decimal (BCD) where a decimal point is "
          "implied between the 2nd and 3rd digits. For example, a "
          "value of 0x0201 indicates that version 2.01 is "
          "supported. Note that each entry of this array is related "
          "to the entries of the ClassesSupported, "
          "SubClassesSupported, MaxDevicesSupported and "
          "MaxDevicesPerSAP arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bcdUSB" }, 
       ModelCorrespondence { "CIM_USBDevice.Version", 
          "CIM_USBRedirectionCapabilities.ClassesSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint16 USBVersionsSupported[];

      [Description ( 
          "An enumeration indicating the USB Device Classes which "
          "are supported. Note that each entry of this array is "
          "related to the entries of the USBVersionsSupported, "
          "SubClassesSupported, MaxDevicesSupported, and "
          "MaxDevicesPerSAP arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceClass" }, 
       ModelCorrespondence { "CIM_USBDevice.ClassCode", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint8 ClassesSupported[];

      [Description ( 
          "An enumeration indicating the USB Device SubClasses "
          "which are supported. Note that each entry of this array "
          "is related to the entries of the USBVersionsSupported, "
          "ClassesSupproted, MaxDevicesSupported, and "
          "MaxDevicesPerSAP arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceSubClass" }, 
       ModelCorrespondence { "CIM_USBDevice.SubclassCode", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.ClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint8 SubClassesSupported[];

      [Description ( 
          "An enumeration indicating the number of USB devices "
          "which are supported for the devices specified in the "
          "USBVersionsSupported, ClassesSupported, and "
          "SubClassesSupported array properties. Note that each "
          "entry of this array is related to the entries in the "
          "USBVersionsSupported, ClassesSupported, and "
          "SubClassesSupported arrays that are located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_USBRedirectionCapabilities.ClassesSupported", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.MaxDevicesPerSAP" }]
   uint16 MaxDevicesSupported[];

      [Description ( 
          "An enumeration indicating the number of USB devices per "
          "USB Redirection Session which are supported for the "
          "devices specified in the USBVersionsSupported, "
          "ClassesSupported, and SubClassesSupported array "
          "properties. Note that each entry of this array is "
          "related to the entries in the USBVersionsSupported, "
          "ClassesSupported, and SubClassesSupported arrays that "
          "are located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_USBRedirectionCapabilities.MaxDevicesSupported", 
          "CIM_USBRedirectionCapabilities.USBVersionsSupported", 
          "CIM_USBRedirectionCapabilities.SubClassesSupported", 
          "CIM_USBRedirectionCapabilities.ClassesSupported" }]
   uint16 MaxDevicesPerSAP[];

      [Description ( 
          "An enumeration indicating the whether instances of "
          "USBRedirectionSAPs already exist and whether whether "
          "SAPs can be created. A value set to 2 = \"Pre-Configured "
          "SAPs\" shall indicate that instances of "
          "CIM_USBRedirectionSAP exists which can be enabled. A "
          "value set to 3 = \"Create SAPs\" shall indicate that "
          "instances of CIM_USBRedirectionSAP can be created with "
          "the CreateDevice() and CreateSession() methods. A value "
          "set to 4 = \"Modify Timeouts\" shall indicate that the "
          "timeout parameters of instances of CIM_USBRedirectionSAP "
          "can be modified by applications using \'ModifyInstance\'" ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Pre-Configured SAPs", "Create SAPs", 
          "Modify SAP", "DMTF Reserved", "Vendor Specified" }]
   uint16 SAPCapabilitiesSupported[];

      [Description ( 
          "An enumeration indicating the RequestedStatesSupported "
          "capabilities that may be used when creating a new SAP, "
          "if SAPCapabilitiesSupported has a value of 3, \'Create "
          "SAPs\', otherwise ignored" ), 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElementCapabilities.RequestedStatesSupported", 
          "CIM_USBRedirectionCapabilities.SAPCapabilitiesSupported" }]
   uint16 RequestedStatesSupportedForCreatedSAP[];

      [Description ( 
          "An enumeration indicating which of the formats for "
          "CIM_RemoteServiceAcccessPoint.InfoFormat are supported "
          "by the USB Redirection Service. When a USB Redirection "
          "Session is configured with ConnectionMode = 3 \'Connect\' "
          "the USB Redirection SAP needs to know the remote service "
          "access point to connect to. The "
          "CIM_RemoteServiceAccessPoint class is used to model this "
          "information. InfoFormat describes the address format for "
          "CIM_RemoteServiceAccessPoint.AccessInfo. which tells the "
          "local SAP where to find the USB redirection remote "
          "access point modeled by CIM_RemoteServiceAccessPoint. "
          "InfoFormatsSupported describes the AccessInfo formats "
          "that are supported by the local USB Redirection Service." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "100", "101", "102", "103", "104", 
          "200", "201", "202", "203", "204", "205", "..", 
          "32768..65535" }, 
       Values { "Other", "Host Name", "IPv4 Address", 
          "IPv6 Address", "IPX Address", "DECnet Address", 
          "SNA Address", "Autonomous System Number", "MPLS Label", 
          "IPv4 Subnet Address", "IPv6 Subnet Address", 
          "IPv4 Address Range", "IPv6 Address Range", "Dial String", 
          "Ethernet Address", "Token Ring Address", "ATM Address", 
          "Frame Relay Address", "URL", "FQDN", "User FQDN", 
          "DER ASN1 DN", "DER ASN1 GN", "Key ID", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.InfoFormat" }]
   uint16 InfoFormatsSupported[];

      [Description ( 
          "SingleClassPerSAP indicates that only instances of "
          "CIM_USBDevice whose ClassCode property have the same "
          "value as each other shall be associated with the "
          "instances of CIM_USBRedirectionSAP." ), 
       ModelCorrespondence { "CIM_USBDevice.ClassCode" }]
   boolean SingleClassPerSAP;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::Wireless" ), 
    Description ( "Describes the capabilities of a WiFiEndpoint." )]
class CIM_WiFiEndpointCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "The set of IEEE 802.11 encryption methods supported by "
          "the associated WifiEndpoint. Shall contain one or more "
          "of the values below.\n"
          "\t* Other (1): shall indicate that at least one "
          "encryption method not specified in the list below is "
          "supported. If SupportedEncryptionMethods contains 1, "
          "OtherSupportedEncryptionMethods shall not be NULL and "
          "shall not be empty.\n"
          "\t* WEP (2): shall indicate that Wired Equivalency "
          "Privacy (WEP) is supported. SupportedEncryptionMethods "
          "shall contain 2 only if SupportedAuthenticationMethods "
          "contains 2 (\"Open System\") or 3 (\"Shared Key\").\n"
          "\t* TKIP (3): shall indicate that the Temporal Key "
          "Integrity Protocol (TKIP) is supported. "
          "SupportedEncryptionMethods shall contain 3 only if "
          "SupportedAuthenticationMethods contains 4 (\"WPA PSK\"), "
          "5 (\"WPA IEEE 802.1x\"), 6 (\"WPA2 PSK\"), or 7 (\"WPA2 "
          "IEEE 802.1x\").\n"
          "\t* CCMP (4): shall indicate that the Counter Mode with "
          "Cipher Block Chaining Message Authentication Code "
          "Protocol (CCMP) is supported. SupportedEncryptionMethods "
          "shall contain 4 only if SupportedAuthenticationMethods "
          "contains 4 (\"WPA PSK\"), 5 (\"WPA IEEE 802.1x\"), 6 "
          "(\"WPA2 PSK\"), or 7 (\"WPA2 IEEE 802.1x\").\n"
          "\t* None (5): shall indicate that the associated "
          "WiFiEndpoint supports connecting to a network without "
          "encryption. SupportedEncryptionMethods shall contain 5 "
          "only if SupportedAuthenticationMethods contains 2 (\"Open "
          "System\") or 3 (\"Shared Key\")." ), 
       ValueMap { "1", "2", "3", "4", "5", ".." }, 
       Values { "Other", "WEP", "TKIP", "CCMP", "None", 
          "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 8" }, 
       ModelCorrespondence { "CIM_WifiEndpoint.EncryptionMethod" }]
   uint16 SupportedEncryptionMethods[];

      [Description ( 
          "Shall contain additional encryption methods supported by "
          "the associated WifiEndpoint, but not listed in the "
          "valuemap for SupportedEncryptionMethods. The positions "
          "of these strings are the lowest indices of the array, "
          "and do not correspond to the positions of the values in "
          "SupportedEncryptionMethods." ), 
       ModelCorrespondence { "CIM_WifiEndpoint.OtherEncryptionMethod" }]
   string OtherSupportedEncryptionMethods[];

      [Description ( 
          "The set of IEEE 802.11 authentication methods supported "
          "by the associated WifiEndpoint.\t* Other (1): shall "
          "indicate that at least one authentication method not "
          "specified in the list below is supported. If "
          "SupportedAuthenticationMethods contains 1, "
          "OtherSupportedAuthenticationMethods shall not be NULL "
          "and shall not be empty.\n"
          "\t* Open System (2): shall indicate that Open System "
          "authentication is supported. "
          "SupportedAuthenticationMethods shall contain 2 only if "
          "SupportedEncryptionMethods contains 2 (\"WEP\") or 5 (\"None\").\n"
          "\t* Shared Key (3): shall indicate Shared Key "
          "authentication is supported. "
          "SupportedAuthenticationMethods shall contain 3 only if "
          "SupportedEncryptionMethods contains 2 (\"WEP\") or 5 (\"None\").\n"
          "\t* WPA PSK (4): shall indicate that WPA (Wi-Fi "
          "Protected Access) PSK (Pre-Shared Key) authentication is "
          "supported. SupportedAuthenticationMethods shall contain "
          "4 only if SupportedEncryptionMethods contains 3 (\"TKIP\") "
          "or 4 (\"CCMP\").\n"
          "\t* WPA IEEE 802.1x (5): shall indicate that WPA (Wi-Fi "
          "Protected Access) IEEE 802.1x authentication is "
          "supported. SupportedAuthenticationMethods shall contain "
          "5 only if SupportedEncryptionMethods contains 3 (\"TKIP\") "
          "or 4 (\"CCMP\").\n"
          "\t* WPA2 PSK (6): shall indicate that WPA2 (Wi-Fi "
          "Protected Access Version 2) PSK (Pre-Shared Key) "
          "authentication is supported. "
          "SupportedAuthenticationMethods shall contain 6 only if "
          "SupportedEncryptionMethods contains 3 (\"TKIP\") or 4 (\"CCMP\").\n"
          "\t* WPA2 IEEE 802.1x (7): shall indicate that WPA2 "
          "(Wi-Fi Protected Access Version 2) IEEE 802.1x "
          "authentication is supported. "
          "SupportedAuthenticationMethods shall contain 7 only if "
          "SupportedEncryptionMethods contains 3 (\"TKIP\") or 4 "
          "(\"CCMP\")." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", ".." }, 
       Values { "Other", "Open System", "Shared Key", "WPA PSK", 
          "WPA IEEE 802.1x", "WPA2 PSK", "WPA2 IEEE 802.1X", 
          "DMTF Reserved" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "IEEE 802.11-2007 | 8" }, 
       ModelCorrespondence { "CIM_WifiEndpoint.AuthenticationMethod" }]
   uint16 SupportedAuthenticationMethods[];

      [Description ( 
          "Shall contain additional authentication methods "
          "supported by the associated WifiEndpoint, but not listed "
          "in the valuemap for SupportedAuthenticationMethods. The "
          "positions of these strings are the lowest indices of the "
          "array, and do not correspond to the positions of the "
          "values in SupportedAuthenticationMethods." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_WifiEndpoint.OtherAuthenticationMethod" }]
   string OtherSupportedAuthenticationMethods[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_X509CredentialFilterEntry 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "An X509CredentialFilterEntry allows filtering on the "
       "attributes of an X.509 certificate. Each instance includes a "
       "value for MatchFieldName that specifies the particular X.509 "
       "attribute that is being matched." ), 
    MappingStrings { "IPSP Policy Model.IETF|CredentialFilterEntry" }]
class CIM_X509CredentialFilterEntry : CIM_FilterEntryBase {

      [Required, Description ( 
          "MatchFieldName specifies the X.509 attribute to match "
          "against MatchFieldValue. Note that this enumeration is "
          "modified from the IETF\'s IPSP Policy Model to "
          "explicitly list the \'standard\' X.509 attributes." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "..", "0x8000.." }, 
       Values { "Other", "Version", "Serial Number", 
          "Signature Algorithm Identifier", "Issuer Name", 
          "Validity Period", "Subject Name", 
          "Subject Public Key Info", "Key Usage", "Alternate Name", 
          "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|CredentialFilterEntry.MatchFieldName" }, 
       ModelCorrespondence { 
          "CIM_X509CredentialFilterEntry.MatchFieldValue" }]
   string MatchFieldName;

      [Required, Description ( 
          "MatchFieldValue specifies the value to compare with the "
          "credential attribute (defined in MatchFieldName), to "
          "determine if the credential matches this filter entry. "
          "An implementation must convert this string to a DER- "
          "encoded string before matching against the values "
          "extracted from credentials at runtime. \n"
          "\n"
          "Note that a wildcard mechanism may be used when "
          "MatchFieldName specifies a general character string (for "
          "example, if MatchFieldName=7, \'Subject Name\'). "
          "MatchFieldValue may contain a wildcard character, \'*\', "
          "in the pattern match specification. For example, for "
          "\'Subject Name\', a MatchFieldValue of "
          "\'cn=*,ou=engineering,o=foo,c=be\' will successfully "
          "match a certificate whose subject attribute is "
          "\'cn=JaneDoe,ou=engineering,o=foo,c=be\'. A wildcard can "
          "be used to represent 0 or more characters as would be "
          "displayed to the user (i.e., a wildcard pattern match "
          "operates on displayable character boundaries)." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|CredentialFilterEntry.MatchFieldName" }, 
       ModelCorrespondence { 
          "CIM_X509CredentialFilterEntry.MatchFieldName" }]
   string MatchFieldValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "AdjacentSlots describes the layout of Slots on a HostingBoard "
       "or adapter Card. Information like the distance between the "
       "Slots and whether they are \'shared\' (if one is populated, "
       "then the other Slot can not be used), is conveyed as "
       "properties of the association." )]
class CIM_AdjacentSlots {

      [Key, Description ( "One of the adjacent Slots." )]
   CIM_Slot REF SlotA;

      [Key, Description ( "The \'other\' adjacent Slot." )]
   CIM_Slot REF SlotB;

      [Description ( 
          "The distance, in inches, between adjacent Slots." ), 
       Units ( "Inches" ), 
       PUnit ( "inch" )]
   real32 DistanceBetweenSlots;

      [Description ( 
          "Slots can be located in close proximity on Hosting "
          "Boards or other Cards, such that if one of these Slots "
          "is populated by an adapter Card, the other Slot must be "
          "left empty. This relationship is indicated by the "
          "SharedSlots boolean set to TRUE." )]
   boolean SharedSlots;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "The Card class represents a type of physical container that "
       "can be plugged into another Card or HostingBoard, or is itself "
       "a HostingBoard/Motherboard in a Chassis. The CIM_Card class "
       "includes any package capable of carrying signals and providing "
       "a mounting point for PhysicalComponents, such as Chips, or "
       "other PhysicalPackages, such as other Cards." )]
class CIM_Card : CIM_PhysicalPackage {

      [Description ( 
          "Boolean indicating that this Card is a Motherboard or, "
          "more generically, a baseboard in a Chassis." )]
   boolean HostingBoard;

      [Description ( 
          "SlotLayout is a free-form string that describes the slot "
          "positioning, typical usage, restrictions, individual "
          "slot spacings or any other pertinent information for the "
          "slots on a Card." )]
   string SlotLayout;

      [Description ( 
          "Boolean indicating that at least one daughterboard or "
          "auxiliary Card is required in order to function "
          "properly." )]
   boolean RequiresDaughterBoard;

      [Description ( 
          "Boolean indicating that this Card is physically unique "
          "from other Cards of the same type and therefore requires "
          "a special Slot. For example, a double-wide Card requires "
          "two Slots. Another example is where a certain Card may "
          "be used for the same general function as other Cards but "
          "requires a special Slot (e.g., extra long), whereas the "
          "other Cards can be placed in any available Slot. If set "
          "to TRUE, then the corresponding property, "
          "RequirementsDescription, should specify the nature of "
          "the uniqueness or purpose of the Card." ), 
       ModelCorrespondence { "CIM_Card.RequirementsDescription" }]
   boolean SpecialRequirements;

      [Description ( 
          "A free-form string describing the way(s) in which this "
          "Card is physically unique from other Cards. This "
          "property only has meaning when the corresponding boolean "
          "property, SpecialRequirements, is set to TRUE." ), 
       ModelCorrespondence { "CIM_Card.SpecialRequirements" }]
   string RequirementsDescription;

      [Description ( "Operating voltages required by the Card." ), 
       Units ( "MilliVolts" ), 
       PUnit ( "volt * 10^-3" )]
   sint16 OperatingVoltages[];


      [Description ( 
          "This method manipulates the power to a PhysicalConnector "
          "on a Card. It is intended to be used by a Card "
          "(especially by a motherboard - i.e., HostingBoard=TRUE) "
          "to turn the power on and off for a specific "
          "PhysicalConnector located on it. For example, in a "
          "personal computer, a system slot does not know how to "
          "turn itself on and off. However, the motherboard hosting "
          "this slot may have that capability. This is important in "
          "order to support hot swapping of an adapter card in a "
          "system slot. The method should return 0 if successful, 1 "
          "if the request is not supported, and some other value if "
          "any other error occurred. In a subclass, the set of "
          "possible return codes could be specified, using a "
          "ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 ConnectorPower(
         [IN, Description ( 
             "The connector to change the power setting for." )]
      CIM_PhysicalConnector REF Connector, 
         [IN, Description ( 
             "If TRUE, turn power on for the connector. If "
             "FALSE, turn power off." )]
      boolean PoweredOn);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Chip 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Component" ), 
    Description ( 
       "The Chip class represents any type of integrated circuit "
       "hardware, including ASICs, processors, memory chips, etc." )]
class CIM_Chip : CIM_PhysicalComponent {

      [Description ( 
          "The implementation form factor for the Chip. For "
          "example, values such as SIMM (7), TSOP (9) or PGA (10) "
          "can be specified." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23" }, 
       Values { "Unknown", "Other", "SIP", "DIP", "ZIP", "SOJ", 
          "Proprietary", "SIMM", "DIMM", "TSOP", 
          // 10               
          "PGA", "RIMM", "SODIMM", 
          "SRIMM", "SMD", "SSMP", "QFP", "TQFP", "SOIC", "LCC", 
          // 20               
          "PLCC", "BGA", "FPBGA", 
          "LGA" }]
   uint16 FormFactor;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "ConfigurationCapacity provides information on the minimum and "
       "maximum numbers of power supplies, fans, disk drives, etc. "
       "that can be connected to or placed on/into a PhysicalElement "
       "(and the number that must be connected/added/removed at a "
       "time). The PhysicalElement whose configuration is described is "
       "identified using the ElementCapacity association, inherited "
       "from PhysicalCapacity. The object whose capacities are "
       "indicated (ie, the power supply or fan) is identified in the "
       "ObjectType and VendorCompatibilityStrings properties of this "
       "class. When ObjectType has a value of 25 (Multi-Purpose) then "
       "additional description of the object is provided in the "
       "VendorCompatibilityStrings property. Since the same min/max "
       "configurations can apply to multiple instances, this class is "
       "not defined as \'weak\'. \n"
       "Examples of the use of the ConfigurationCapacity class are to "
       "describe that a \'control unit\' Chassis may be connected to "
       "(at most) 4 other I/O chassis, or to describe what a "
       "StorageLibrary\'s cabinet may contain. Continuing the latter "
       "example, a particular StorageLibrary\'s cabinet might hold a "
       "minimum of 3 and a maximum of 9 TapeDrives, and a minimum of "
       "88 and a maximum of 264 StorageMediaLocations (\"Slots\"). "
       "This information would be described in two instances of "
       "ConfigurationCapacity, both associated to the StorageLibrary\'s "
       "PhysicalPackage. \n"
       "This class does NOT represent the tradeoffs that are likely to "
       "be required of one resource for another. It simply represents "
       "capacities. In the case of the StorageLibrary, there may be "
       "only 2 valid configurations - 9 TapeDrives with 88 Slots, or 3 "
       "TapeDrives with 264 Slots. This class only conveys that \'up "
       "to\' 9 Drives and \'up to\' 264 slots may be available and are "
       "supported." )]
class CIM_ConfigurationCapacity : CIM_PhysicalCapacity {

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as a part of the Configuration "
          "Capacity object key." )]
   string Name;

      [Key, Description ( 
          "The type of object (power supply, fan, disk drive, ...) "
          "whose capacities are indicated. This information is part "
          "of the class\' key." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25" }, 
       Values { "Other", "Processors", "Power Supplies", "Fans", 
          "Batteries", "I/O Slots", "Memory Slots", 
          "MediaAccessDevices (Drives)", 
          "StorageMediaLocation Slots", 
          "StorageMediaLocation Magazines", 
          // 10                
          "StorageMediaLocation Panels", 
          "StorageMediaLocation InterLibrary Ports", 
          "StorageMediaLocation Limited Access Ports", "Doors", 
          "MediaTransferDevice Pickers", 
          "MediaTransferDevice Changers", "LabelReaders", 
          "Contained Chassis", "Connected Chassis", 
          "Connected Frames", 
          // 20                
          "Front Side I/O Slots", 
          "Back Side I/O Slots", "Cache Memory", "NVS Memory", 
          "Volatile Memory", "Multi-Purpose" }, 
       ModelCorrespondence { 
          "CIM_ConfigurationCapacity.OtherTypeDescription" }]
   uint16 ObjectType;

      [Description ( 
          "A string describing the object type - used when the "
          "ObjectType property is set to 0 (\"Other\"). OtherType "
          "Description should be set to NULL when ObjectType is any "
          "value other than 0." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_ConfigurationCapacity.ObjectType" }]
   string OtherTypeDescription;

      [Description ( 
          "Minimum number of Elements of type, ObjectType, that "
          "must be installed." )]
   uint64 MinimumCapacity;

      [Description ( 
          "Maximum number of Elements of type, ObjectType, that may "
          "be installed." )]
   uint64 MaximumCapacity;

      [Description ( 
          "Increment in which Elements must be added or removed." )]
   uint32 Increment;

      [Description ( 
          "An array of strings that identifies the compatibility of "
          "the elements within the configuration capacity. This "
          "allows vendors to provide information to the system "
          "administrators by providing sufficient information to "
          "request the appropriate hardware that can populate the "
          "configuration. In order to ensure uniqueness within the "
          "NameSpace, each value defined by the vendor for use in "
          "the VendorCompatibilityStrings property SHOULD be "
          "constructed using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements." ), 
       ModelCorrespondence { 
          "CIM_PhysicalPackage.VendorCompatibilityStrings", 
          "CIM_Slot.VendorCompatibilityStrings" }]
   string VendorCompatibilityStrings[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConnectedTo 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "The ConnectedTo association indicates that two or more "
       "PhysicalConnectors are connected together." )]
class CIM_ConnectedTo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Antecedent represents a PhysicalConnector that "
          "serves as one end of the connection." )]
   CIM_PhysicalConnector REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Dependent represents another PhysicalConnector that "
          "serves as the other end of the connection." )]
   CIM_PhysicalConnector REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Container 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "The Container association represents the relationship between "
       "a contained and a containing PhysicalElement. A containing "
       "object must be a PhysicalPackage." )]
class CIM_Container : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalPackage that contains other "
          "PhysicalElements, including other Packages." ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalContainedIn" }]
   CIM_PhysicalPackage REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The PhysicalElement which is contained in the Package." )]
   CIM_PhysicalElement REF PartComponent;

      [Description ( 
          "A free-form string representing the positioning of the "
          "PhysicalElement within the PhysicalPackage. Information "
          "relative to stationary elements in the Container (for "
          "example, \'second drive bay from the top\'), angles, "
          "altitudes and other data may be recorded in this "
          "property. This string could supplement or be used in "
          "place of instantiating the CIM_Location object." ), 
       MappingStrings { "MIB.IETF|Entity-MIB.entPhysicalParentRelPos" }]
   string LocationWithinContainer;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementCapacity 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "ElementCapacity associates a PhysicalCapacity object with one "
       "or more PhysicalElements. It serves to associate a description "
       "of min/max hardware requirements or capabilities (stored as a "
       "kind of PhysicalCapacity), with the PhysicalElements being "
       "described." )]
class CIM_ElementCapacity {

      [Key, Description ( 
          "PhysicalCapacity describes the minimum and maximum "
          "requirements, and ability to support different types of "
          "hardware for a PhysicalElement." )]
   CIM_PhysicalCapacity REF Capacity;

      [Key, Min ( 1 ), 
       Description ( "The PhysicalElement being described." )]
   CIM_PhysicalElement REF Element;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "Adapter cards, DIMMs and other physical elements are plugged "
       "into System Connectors for power and/or to transfer data. This "
       "relationship is defined by ElementInConnector." )]
class CIM_ElementInConnector : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Connector into which the Element is inserted." )]
   CIM_PhysicalConnector REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The Element in the Connector." )]
   CIM_PhysicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementsLinked 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Link" ), 
    Description ( 
       "The ElementsLinked association indicates which Physical "
       "Elements are cabled together by a PhysicalLink." )]
class CIM_ElementsLinked : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PhysicalLink." )]
   CIM_PhysicalLink REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PhysicalElement that is linked." )]
   CIM_PhysicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LinkHasConnector 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Link" ), 
    Description ( 
       "Cables and Links utilize PhysicalConnectors to actually "
       "\'connect\' PhysicalElements. This association explicitly "
       "defines this relationship of Connectors for PhysicalLinks." )]
class CIM_LinkHasConnector : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The PhysicalLink that has a Connector." )]
   CIM_PhysicalLink REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The PhysicalConnector." )]
   CIM_PhysicalConnector REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaPhysicalStatInfo 
// ==================================================================
   [Deprecated { "CIM_MediaPhysicalStatData" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Physical::StoragePackage" ), 
    Description ( 
       "Statistics related to reading physical labels and picks/puts "
       "at a specific StorageMediaLocation, or for a specific piece of "
       "PhysicalMedia. Although the same class is used to represent "
       "this data, at the instance level the object holds information "
       "for the Location (independent of the Media), OR for the Media "
       "(independent of its StorageMediaLocation). This class is "
       "deprecated in lieu of MediaPhysicalStatData, to take advantage "
       "of the simplified key structure defined there." )]
class CIM_MediaPhysicalStatInfo : CIM_PhysicalStatisticalInformation {

      [Deprecated { "CIM_MediaPhysicalStatData.ScanSuccesses" }, 
       Description ( 
          "The number of successful physical label scans." ), 
       Counter]
   uint64 ScanSuccesses;

      [Deprecated { "CIM_MediaPhysicalStatData.ScanFailures" }, 
       Description ( "The number of failed physical label scans." ), 
       Counter]
   uint64 ScanFailures;

      [Deprecated { "CIM_MediaPhysicalStatData.ScanRetries" }, 
       Description ( "The number of retried physical label scans." ), 
       Counter]
   uint64 ScanRetries;

      [Deprecated { "CIM_MediaPhysicalStatData.PickSuccesses" }, 
       Description ( "The number of successful picks." ), 
       Counter]
   uint64 PickSuccesses;

      [Deprecated { "CIM_MediaPhysicalStatData.PickFailures" }, 
       Description ( "The number of failed picks." ), 
       Counter]
   uint64 PickFailures;

      [Deprecated { "CIM_MediaPhysicalStatData.PickRetries" }, 
       Description ( "The number of retried picks." ), 
       Counter]
   uint64 PickRetries;

      [Deprecated { "CIM_MediaPhysicalStatData.PutSuccesses" }, 
       Description ( "The number of successful puts." ), 
       Counter]
   uint64 PutSuccesses;

      [Deprecated { "CIM_MediaPhysicalStatData.PutFailures" }, 
       Description ( "The number of failed puts." ), 
       Counter]
   uint64 PutFailures;

      [Deprecated { "CIM_MediaPhysicalStatData.PutRetries" }, 
       Description ( "The number of retried puts." ), 
       Counter]
   uint64 PutRetries;


      [Deprecated { "CIM_StatisticalData.ResetSelectedStats" }, 
       Description ( 
          "Method to reset the statistical counters. The method "
          "takes one parameter as input - an integer indicating "
          "which counter to reset. For this input parameter, 0 "
          "indicates all, 1-3 reset the scan-related counters, 4-6 "
          "reset the \'pick\'-related counters, and 7-9 reset the "
          "\'put\'-related counters. The method returns 0 if "
          "successful, 1 if not supported, and any other value if "
          "an error occurred. A method is specified so that the "
          "Element\'s instrumentation can also reset its internal "
          "processing and counters. The set of possible return "
          "codes should be specified in a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "\'translated\' should be specified as a Values array "
          "qualifier on the method." )]
   uint32 ResetCounter(
         [IN, Description ( "The counter to reset." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
             "9" }, 
          Values { "All", "Scan Successes", "Scan Failures", 
             "Scan Retries", "Pick Successes", "Pick Failures", 
             "Pick Retries", "Put Successes", "Put Failures", 
             "Put Retries" }]
      uint16 SelectedCounter);

};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "MemoryCapacity describes the type of Memory that can be "
       "installed on a PhysicalElement and its minimum/maximum "
       "configurations. Information on what memory is currently "
       "\'installed\', versus an Element\'s min/max requirements, is "
       "located in instances of the PhysicalMemory class." )]
class CIM_MemoryCapacity : CIM_PhysicalCapacity {

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as a part of the "
          "MemoryCapacity object key." )]
   string Name;

      [Key, Description ( 
          "The type of memory. This is a part of the object key. "
          "Values correspond to the list of possible memory types "
          "in the PhysicalMemory class." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26..32567", 
          "32568..65535" }, 
       Values { "Unknown", "Other", "DRAM", "Synchronous DRAM", 
          "Cache DRAM", "EDO", "EDRAM", "VRAM", "SRAM", "RAM", 
          // 10               
          "ROM", "Flash", "EEPROM", 
          "FEPROM", "EPROM", "CDRAM", "3DRAM", "SDRAM", "SGRAM", 
          "RDRAM", // 20               
          "DDR", "DDR2", 
          "BRAM", "FB-DIMM", "DDR3", "FBD2", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_PhysicalMemory.MemoryType" }]
   uint16 MemoryType;

      [Description ( 
          "Minimum amount of memory, in Kbytes, that is needed for "
          "the associated PhysicalElement to operate correctly." ), 
       Units ( "KiloBytes" ), 
       PUnit ( "byte * 2^10" )]
   uint64 MinimumMemoryCapacity;

      [Description ( 
          "Maximum amount of memory, in Kbytes, that can be "
          "supported by the associated PhysicalElement." ), 
       Units ( "KiloBytes" ), 
       PUnit ( "byte * 2^10" )]
   uint64 MaximumMemoryCapacity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackagedComponent 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Component" ), 
    Description ( 
       "A Component is typically contained by a PhysicalPackage, such "
       "as a Chassis or Card. The PackagedComponent association makes "
       "this relationship explicit. In the first sentence, the word, "
       "\'typically\', is used. This is because a Component may be "
       "removed from, or not yet inserted into, its containing Package "
       "(ie, the Removable boolean is TRUE). Therefore, a Component "
       "may not always be associated with a container." )]
class CIM_PackagedComponent : CIM_Container {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalPackage that contains Component(s)." )]
   CIM_PhysicalPackage REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The PhysicalComponent which is contained in the Package." )]
   CIM_PhysicalComponent REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "Adapter cards and other \'packaging\' are plugged into System "
       "Connectors for power and/or to transfer data. This "
       "relationship is defined by PackageInConnector. For example, it "
       "would be used to describe the insertion of a daughtercard onto "
       "another Card. Various subclasses of PackageInConnector are "
       "also defined. PackageInSlot and its subclass, CardInSlot, are "
       "two examples of subclasses." )]
class CIM_PackageInConnector : CIM_ElementInConnector {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Connector into which the Package is inserted." )]
   CIM_PhysicalConnector REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The Package in the Connector." )]
   CIM_PhysicalPackage REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageInSlot 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "Complex networking devices often are Chassis-based. These "
       "Chassis allow for enhancement and/or augmentation of their "
       "base functionality by accepting additional Chassis devices, "
       "similar to accepting functionality in the form of adding "
       "Cards. This association models this capability." )]
class CIM_PackageInSlot : CIM_PackageInConnector {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Slot into which the PhysicalPackage is inserted." )]
   CIM_Slot REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The Package in the Slot." )]
   CIM_PhysicalPackage REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageLocation 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "PackageLocation is a space/hole/shelf, possibly with mounting "
       "brackets or other connecting hardware, where other "
       "PhysicalPackages may be placed. This class describes an entity "
       "that holds something else and is not just a \'place\' (as is "
       "conveyed by the CIM_Location object). This class has several "
       "corollaries to HostingBoard. Where a HostingBoard (backplane) "
       "has connectors/slots to describe the capabilities of holding "
       "additional PhysicalPackages, a PackageLocation is used to "
       "describe the same case for the general package, where there "
       "may or may not be no connectors. Examples of PackageLocations "
       "would include a disk cage in a tower PC or the chassis area "
       "where the power supply is mounted." )]
class CIM_PackageLocation : CIM_PhysicalPackage {

      [Description ( 
          "LocationCoordinates represent the physical location of "
          "the the FrameSlot instance. The property is defined as a "
          "free-form string to allow the location information to be "
          "described in vendor-unique terminology." )]
   string LocationCoordinates;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "PhysicalAssetCapabilities describes the capabilities of "
       "representing the FRU related information of the associated "
       "instance of the CIM_PhysicalElement subclass." )]
class CIM_PhysicalAssetCapabilities : CIM_Capabilities {

      [Description ( 
          "Boolean indicating whether the PartNumber, Serial "
          "Number, Model, Manufacturer, and SKU properties of "
          "PhysicalElement are non-null, non-blank values, and the "
          "availability of the complete FRU information." ), 
       ModelCorrespondence { "CIM_PhysicalElement.PartNumber", 
          "CIM_PhysicalElement.SerialNumber", 
          "CIM_PhysicalElement.Model", 
          "CIM_PhysicalElement.Manufacturer", 
          "CIM_PhysicalElement.SKU" }]
   boolean FRUInfoSupported;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalFrame 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "PhysicalFrame is a superclass of Rack, Chassis and other frame "
       "enclosures, as they are defined in extension classes. "
       "Properties like visible or audible alarm, and data related to "
       "security breaches are in this superclass." )]
class CIM_PhysicalFrame : CIM_PhysicalPackage {

      [Description ( 
          "CableManagementStrategy is a free-form string that "
          "contains information on how the various cables are "
          "connected and bundled for the Frame. With many "
          "networking, storage-related and power cables, cable "
          "management can be a complex and challenging endeavor. "
          "This string property contains information to aid in "
          "assembly and service of the Frame." )]
   string CableManagementStrategy;

      [Description ( 
          "ServicePhilosophy is an enumerated, integer-valued array "
          "that indicates whether the Frame is serviced from the "
          "top (value=2), front (3), back (4) or side (5), whether "
          "it has sliding trays (6) or removable sides (7), and/or "
          "whether the Frame is moveable (8), for example, having "
          "rollers." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Service From Top", 
          "Service From Front", "Service From Back", 
          "Service From Side", "Sliding Trays", "Removable Sides", 
          "Moveable" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalFrame.ServiceDescriptions" }]
   uint16 ServicePhilosophy[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the entries in the Service "
          "Philosophy array. Note, each entry of this array is "
          "related to the entry in ServicePhilosophy that is "
          "located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalFrame.ServicePhilosophy" }]
   string ServiceDescriptions[];

      [Description ( 
          "Boolean indicating whether the Frame is protected with a lock."
           )]
   boolean LockPresent;

      [Description ( 
          "Boolean indicating whether the Frame is equipped with an "
          "audible alarm." )]
   boolean AudibleAlarm;

      [Description ( 
          "Boolean indicating that the equipment includes a visible alarm."
           )]
   boolean VisibleAlarm;

      [Description ( 
          "SecurityBreach is an enumerated, integer-valued property "
          "indicating whether a physical breach of the Frame was "
          "attempted but unsuccessful (value=4) or attempted and "
          "successful (5). Also, the values, \"Unknown\", \"Other\" "
          "or \"No Breach\", can be specified." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "No Breach", "Breach Attempted", 
          "Breach Successful" }, 
       MappingStrings { 
          "MIF.DMTF|Physical Container Global Table|004.12" }, 
       ModelCorrespondence { "CIM_PhysicalFrame.BreachDescription" }]
   uint16 SecurityBreach;

      [Description ( 
          "BreachDescription is a free-form string providing more "
          "information if the SecurityBreach property indicates "
          "that a breach or some other security-related event "
          "occurred." ), 
       ModelCorrespondence { "CIM_PhysicalFrame.SecurityBreach" }]
   string BreachDescription;

      [Description ( 
          "Boolean indicating that the Frame is currently locked." )]
   boolean IsLocked;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Physical::Component" ), 
    Description ( 
       "PhysicalMemory is a subclass of CIM_Chip, representing low "
       "level memory devices - SIMMS, DIMMs, raw memory chips, etc." )]
class CIM_PhysicalMemory : CIM_Chip {

      [Override ( "FormFactor" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.6" }]
   uint16 FormFactor;

      [Description ( 
          "The type of PhysicalMemory. Synchronous DRAM is also "
          "known as SDRAM Cache DRAM is also known as CDRAM CDRAM "
          "is also known as Cache DRAM SDRAM is also known as "
          "Synchronous DRAM BRAM is also known as Block RAM" ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26..32567", 
          "32568..65535" }, 
       Values { "Unknown", "Other", "DRAM", "Synchronous DRAM", 
          "Cache DRAM", "EDO", "EDRAM", "VRAM", "SRAM", "RAM", 
          //10 
          "ROM", "Flash", "EEPROM", "FEPROM", 
          "EPROM", "CDRAM", "3DRAM", "SDRAM", "SGRAM", "RDRAM", 
          // 20              
          "DDR", "DDR-2", "BRAM", 
          "FB-DIMM", "DDR3", "FBD2", "DMTF Reserved", 
          "Vendor Reserved" }, 
       MappingStrings { "MIF.DMTF|Memory Device|005.9" }]
   uint16 MemoryType;

      [Description ( 
          "Total width, in bits, of the PhysicalMemory, including "
          "check or error correction bits. If there are no error "
          "correction bits, the value in this property should match "
          "that specified for DataWidth." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.7" }]
   uint16 TotalWidth;

      [Description ( 
          "Data width of the PhysicalMemory, in bits. A data width "
          "of 0 and a TotalWidth of 8 would indicate that the "
          "Memory is solely used to provide error correction bits." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.8" }]
   uint16 DataWidth;

      [Description ( 
          "The speed of the PhysicalMemory, in nanoseconds." ), 
       Units ( "NanoSeconds" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.24" }]
   uint32 Speed;

      [Description ( 
          "The total capacity of this PhysicalMemory, in bytes." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.5" }]
   uint64 Capacity;

      [Description ( 
          "A string identifying the physically labeled bank where "
          "the Memory is located - for example, \'Bank 0\' or \'Bank "
          "A\'." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.4" }]
   string BankLabel;

      [Description ( 
          "Specifies the position of the PhysicalMemory in a \'row\'. "
          "For example, if it takes two 8-bit memory devices to "
          "form a 16- bit row, then a value of \'2\'means that this "
          "Memory is the second device. 0 is an invalid value for "
          "this property." ), 
       MappingStrings { 
          "MIF.DMTF|Memory Device Mapped Addresses|001.6" }]
   uint32 PositionInRow;

      [Description ( 
          "The position of this PhysicalMemory in an interleave. 0 "
          "indicates non-interleaved. 1 indicates the first "
          "position, 2 the second position and so on. For example, "
          "in a 2:1 interleave, a value of \'1\' would indicate "
          "that the Memory is in the \'even\' position." ), 
       MappingStrings { 
          "MIF.DMTF|Memory Device Mapped Addresses|001.7" }]
   uint32 InterleavePosition;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.21.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "A Rack is a PhysicalFrame that represents an enclosure in "
       "which Chassis are placed. Typically a Rack is nothing more "
       "than the enclosure, and all the functioning componentry is "
       "packaged in the Chassis, loaded in the Rack." )]
class CIM_Rack : CIM_PhysicalFrame {

      [Override ( "Height" ), 
       Description ( 
          "The height of the PhysicalPackage in \'U\'s. A \'U\' is "
          "a standard unit of measure for the height of a Rack or "
          "rack-mountable component. It is equal to 1.75 inches or "
          "4.445 cm." ), 
       Units ( "Us" ), 
       PUnit ( "rack unit" )]
   real32 Height;

      [Description ( 
          "Enumeration indicating the type of Rack. Information "
          "such as \"Telco\" rack (value=2) or standard 19 inch "
          "rack (1) can be specified. The country for which the "
          "Rack is manufactured is defined in the the Country "
          "Designation property." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Standard 19 Inch", "Telco", 
          "Equipment Shelf", "Non-Standard" }, 
       ModelCorrespondence { "CIM_Rack.CountryDesignation" }]
   uint16 TypeOfRack;

      [Description ( 
          "Designation of the country for which the Rack is "
          "designed. Country code strings are as defined by ISO/IEC "
          "3166. The rack type is specified in the TypeOf Rack "
          "property." ), 
       ModelCorrespondence { "CIM_Rack.TypeOfRack" }]
   string CountryDesignation;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ReplacementSet 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "The ReplacementSet class aggregates PhysicalElements that must "
       "be \'replaced\' or \'FRUed\' together. For example, when "
       "replacing a memory card, the component memory chips could be "
       "removed and replaced as well. Or, a set of memory chips may be "
       "specified to be replaced or upgraded together using this "
       "association." )]
class CIM_ReplacementSet : CIM_Collection {

      [Key, Description ( 
          "Name is a free-form string defining a label for the "
          "ReplacementSet. It is the key for the object." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SlotInSlot 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "Slots are special types of Connectors into which adapter Cards "
       "are typically inserted. The SlotInSlot relationship represents "
       "the ability of a special adapter to extend the existing Slot "
       "structure to enable otherwise incompatible Cards to be plugged "
       "into a Frame or Hosting Board. The adapter effectively creates "
       "a new Slot and can be thought of (conceptually) as a Slot in a "
       "Slot. This enables Cards that would otherwise be physically "
       "and/or electrically incompatible with the existing Slots to be "
       "supported, by interfacing to the Slot provided by the adapter. "
       "This has many practical uses. For example, networking boards "
       "are very expensive. As new hardware becomes available, Chassis "
       "and even Card configurations change. To protect the investment "
       "of their customers, networking vendors will manufacture "
       "special adapters that enable old Cards to fit into new Chassis "
       "or Hosting Boards and/or new Cards to fit into old. This is "
       "done using a special adapter that fits over one or more "
       "existing Slots and presents a new Slot into which the Card can "
       "plug." )]
class CIM_SlotInSlot : CIM_ConnectedTo {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Antecedent represents the existing Slot(s) of the "
          "HostingBoard, or Frame that are being adapted to "
          "accommodate a Card that would otherwise not be "
          "physically and/or electrically compatible with it." )]
   CIM_Slot REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The new Slot provided by the adapter board." )]
   CIM_Slot REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::StoragePackage" ), 
    Description ( 
       "StorageMediaLocation is a PackageLocation where PhysicalMedia "
       "may be placed. This class is typically used in the context of "
       "a StorageLibrary. Examples of StorageMediaLocations are Media "
       "AccessDevices, InterLibraryPorts or \'slots\' in a Library\'s "
       "panel." )]
class CIM_StorageMediaLocation : CIM_PackageLocation {

      [Description ( 
          "The type of Location. For example, whether this is an "
          "individual Media \"Slot\" (value=2), a MediaAccessDevice "
          "(value=4) or a \"Magazine\" (value=3) is indicated in "
          "this property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown", "Other", "Slot", "Magazine", 
          "MediaAccessDevice", "InterLibrary Port", 
          "Limited Access Port", "Door", "Shelf", "Vault" }]
   uint16 LocationType;

      [Description ( 
          "Certain StorageMediaLocations may only be able to accept "
          "a limited set of PhysicalMedia MediaTypes. This property "
          "defines an array containing the types of Media that are "
          "acceptable for placement in the Location. Additional "
          "information and description of the contained MediaTypes "
          "can be provided using the TypesDescription array. Also, "
          "size data (for example, DVD disc diameter) can be "
          "specified using the MediaSizesSupported array. \n"
          "\n"
          "Values defined here correspond to those in the "
          "CIM_Physical Media.MediaType property. This allows quick "
          "comparisons using value equivalence calculations. It is "
          "understood that there is no external physical difference "
          "between (for example) DVD- Video and DVD-RAM. But, "
          "equivalent values in both the Physical Media and "
          "StorageMediaLocation enumerations allows for one for one "
          "comparisons with no additional processing logic (i.e., "
          "the following is not required ... if \"DVD-Video\" then "
          "value=\"DVD\")." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66" }, 
       Values { "Unknown", "Other", "Tape Cartridge", 
          "QIC Cartridge", "AIT Cartridge", "DTF Cartridge", 
          "DAT Cartridge", "8mm Tape Cartridge", 
          "19mm Tape Cartridge", "DLT Cartridge", 
          // 10               
          "Half-Inch Magnetic Tape Cartridge", 
          "Cartridge Disk", "JAZ Disk", "ZIP Disk", "SyQuest Disk", 
          "Winchester Removable Disk", "CD-ROM", "CD-ROM/XA", 
          "CD-I", "CD Recordable", 
          // 20                          
          "WORM", 
          "Magneto-Optical", "DVD", "DVD-RW+", "DVD-RAM", "DVD-ROM", 
          "DVD-Video", "Divx", "Floppy/Diskette", "Hard Disk", 
          // 30               
          "Memory Card", "Hard Copy", 
          "Clik Disk", "CD-RW", "CD-DA", "CD+", "DVD Recordable", 
          "DVD-RW", "DVD-Audio", "DVD-5", 
          // 40               
          "DVD-9", "DVD-10", 
          "DVD-18", "Magneto-Optical Rewriteable", 
          "Magneto-Optical Write Once", 
          "Magneto-Optical Rewriteable (LIMDOW)", 
          "Phase Change Write Once", "Phase Change Rewriteable", 
          "Phase Change Dual Rewriteable", "Ablative Write Once", 
          // 50               
          "Near Field Recording", 
          "MiniQic", "Travan", "8mm Metal Particle", 
          "8mm Advanced Metal Evaporate", "NCTP", "LTO Ultrium", 
          "LTO Accelis", "9 Track Tape", "18 Track Tape", 
          // 60               
          "36 Track Tape", 
          "Magstar 3590", "Magstar MP", "D2 Tape", 
          "Tape - DST Small", "Tape - DST Medium", "Tape - DST Large" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalMedia.MediaType", 
          "CIM_StorageMediaLocation.MediaSizesSupported" }]
   uint16 MediaTypesSupported[];

      [Description ( 
          "The sizes (in inches) of the particular MediaTypes that "
          "may be placed in the Location. Note, each entry of this "
          "array is related to the entry in the MediaTypesSupported "
          "array that is located at the same index." ), 
       Units ( "Inches" ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PhysicalMedia.MediaType", 
          "CIM_StorageMediaLocation.MediaSizesSupported", 
          "CIM_StorageMediaLocation.TypeDescriptions" }, 
       PUnit ( "inch" )]
   real32 MediaSizesSupported[];

      [Description ( 
          "A StorageMediaLocation may hold more than one "
          "PhysicalMedia - for example, a Magazine. This property "
          "indicates the Physical Media capacity of the Location." )]
   uint32 MediaCapacity;

      [Description ( 
          "This property provides additional detail related to the "
          "entries in the MediaTypesSupported array. This is "
          "especially critical when the MediaTypesSupported value "
          "is 1 (\"Other\"). Note, each entry of this array is "
          "related to the entry in MediaTypesSupported that is "
          "located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_StorageMediaLocation.MediaTypesSupported" }]
   string TypeDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemBusCard 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "The SystemBusCard class represents additional information for "
       "a CIM_Card, detailing the Card\'s bus type and data width. "
       "These properties dictate the type of Slot into which the Card "
       "can be inserted. For example, using the properties of this "
       "class, one can define that a Card is a PCI, 64 bit adapter." )]
class CIM_SystemBusCard : CIM_Card {

      [Description ( 
          "An enumerated integer describing the System bus type for "
          "this Card. It indicates the type of Slot into which the "
          "Card can plug. The list of permissible values aligns "
          "with the System bus types in "
          "CIM_PhysicalConnector.Connector Type." ), 
       ValueMap { "43", "44", "45", "46", "47", "48", "49", "50", 
          "52", "64", "65", "73", "74", "75", "76", "77", "78", 
          "79", "80", "81", "82", "83", "84", "85", "86", "87", 
          "98", "99", "100", "101", "102", "103", "104", "105", 
          "106", "109", "110", "111", "112" }, 
       Values { // 43               
          "PCI", "ISA", "EISA", 
          "VESA", "PCMCIA", "PCMCIA Type I", "PCMCIA Type II", 
          "PCMCIA Type III", 
          // 52               
          "CardBus", 
          // 64               
          "Access.bus", "NuBus", 
          // 73               
          "AGP", "VME Bus", "VME64", 
          "Proprietary", "Proprietary Processor Card Slot", 
          "Proprietary Memory Card Slot", 
          "Proprietary I/O Riser Slot", 
          // 80               
          "PCI-66MHZ", "AGP2X", 
          "AGP4X", "PC-98", "PC-98-Hireso", "PC-H98", "PC-98Note", 
          "PC-98Full", // 98               
          "PCI-X", 
          "Sbus IEEE 1396-1993 32 bit", 
          // 100               
          "Sbus IEEE 1396-1993 64 bit", 
          "MCA", "GIO", "XIO", "HIO", "NGIO", "PMC", 
          // 109               
          "Future I/O", 
          "InfiniBand", "AGP8X", "PCI-E" }, 
       ModelCorrespondence { "CIM_PhysicalConnector.ConnectorType" }]
   uint16 BusType;

      [Description ( 
          "System bus width (in bits) required by this Card. If "
          "\'unknown\', enter 0. If \'other\' than the values, 8, "
          "16, 32, 64 or 128, enter 1. The list of permissible "
          "values aligns with the data in CIM_Slot.MaxBusWidth." ), 
       Units ( "Bits" ), 
       ValueMap { "0", "1", "8", "16", "32", "64", "128" }, 
       ModelCorrespondence { "CIM_Slot.MaxDataWidth" }]
   uint16 BusWidth;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "An abstract class whose subclasses describe one of a company\'s "
       "and/or administrator\'s credential requirements, and/or other "
       "information that should be authenticated in order to "
       "establish/trust a CIM_Identity. The PolicyConditions collected "
       "by an instance of AuthenticationRule describe the various "
       "requirements under which a CIM_Identity\'s "
       "CurrentlyAuthenticated Boolean is set to TRUE. Note that the "
       "CIM_Identities which are authenticated are specified through "
       "the AuthenticationRule, using the PolicySet AppliesToElement "
       "association." )]
class CIM_AuthenticationCondition : CIM_PolicyCondition {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines specific "
       "biometric data that should be authenticated." )]
class CIM_BiometricAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "Integer enumeration identifying the biometric data that "
          "should be authenticated." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Other", "Facial", "Retina", "Mark", "Finger", 
          "Voice", "DNA-RNA", "EEG" }, 
       ModelCorrespondence { 
          "CIM_BiometricAuthentication.OtherBiometric" }]
   uint16 TypeOfBiometric;

      [Description ( 
          "String specifying the biometric when the TypeOfBiometric "
          "property is set to 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_BiometricAuthentication.TypeOfBiometric" }]
   string OtherBiometric;

      [Description ( 
          "String defining a specific biometric code, which may be "
          "validated by the security infrastructure. If this "
          "property is left blank, it is the responsibility of the "
          "infrastructure to verify the biometric (which MUST be of "
          "a type specified by the TypeOfBiometric property)." )]
   string PersonalIdentifier;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CompoundPolicyAction is used to represent an expression "
       "consisting of an ordered sequence of action terms. Each action "
       "term is represented as a subclass of the PolicyAction class. "
       "Compound actions are constructed by associating dependent "
       "action terms together using the PolicyActionInPolicyAction "
       "aggregation." )]
class CIM_CompoundPolicyAction : CIM_PolicyAction {

      [Description ( 
          "This property gives a policy administrator a way of "
          "specifying how the ordering of the PolicyActions "
          "associated with this PolicyRule is to be interpreted. "
          "Three values are supported: \n"
          "o mandatory(1): Do the actions in the indicated order, "
          "or don\'t do them at all. \n"
          "o recommended(2): Do the actions in the indicated order "
          "if you can, but if you can\'t do them in this order, do "
          "them in another order if you can. \n"
          "o dontCare(3): Do them -- I don\'t care about the order. \n"
          "The default value is 3 (\"DontCare\")." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Mandatory", "Recommended", "Dont Care" }]
   uint16 SequencedActions = 3;

      [Description ( 
          "ExecutionStrategy defines the strategy to be used in "
          "executing the sequenced actions aggregated by this "
          "CompoundPolicyAction. There are three execution "
          "strategies: \n"
          "\n"
          "Do Until Success - execute actions according to "
          "predefined order, until successful execution of a single "
          "action. \n"
          "Do All - execute ALL actions which are part of the "
          "modeled set, according to their predefined order. "
          "Continue doing this, even if one or more of the actions "
          "fails. \n"
          "Do Until Failure - execute actions according to "
          "predefined order, until the first failure in execution "
          "of an action instance. \n"
          "The default value is 2 (\"Do All\")." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Do Until Success", "Do All", "Do Until Failure" }]
   uint16 ExecutionStrategy = 2;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CompoundPolicyCondition is used to represent compound "
       "conditions formed by aggregating simpler policy conditions. "
       "Compound conditions are constructed by associating subordinate "
       "condition terms together using the "
       "PolicyConditionInPolicyCondition aggregation." )]
class CIM_CompoundPolicyCondition : CIM_PolicyCondition {

      [Description ( 
          "Indicates whether the list of CompoundPolicyConditions "
          "associated with this PolicyRule is in disjunctive normal "
          "form (DNF) or conjunctive normal form (CNF). The default "
          "value is 1 (\"DNF\")." ), 
       ValueMap { "1", "2" }, 
       Values { "DNF", "CNF" }]
   uint16 ConditionListType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines the "
       "specific document that should be authenticated." )]
class CIM_DocumentAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "Integer enumeration identifying the document that should "
          "be authenticated." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Other", "Passport", "Birth Certificate", 
          "Credit Card", "Drivers License", "Membership Card", 
          "Social Security Card" }, 
       ModelCorrespondence { 
          "CIM_DocumentAuthentication.OtherDocument" }]
   uint16 TypeOfDocument;

      [Description ( 
          "String specifying the document when the TypeOfDocument "
          "property is set to 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_DocumentAuthentication.TypeOfDocument" }]
   string OtherDocument;

      [Description ( 
          "String defining a particular document which may be used "
          "in the authentication process for example, a specific "
          "driver\'s license or passport number. If left blank, "
          "then any valid document matching the category specified "
          "by the TypeOfDocument property, can be accepted." )]
   string DocumentIdentifier;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines a user "
       "whose Kerberos ticket should be authenticated." )]
class CIM_KerberosAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "String holding the user name for which the ticket is issued."
           )]
   string UserName;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "MethodAction is a PolicyAction that MAY invoke methods as "
       "defined by a query. If there are no results returned from the "
       "query, then no methods are called, otherwise each query result "
       "row defines the method to call and its parameters. The called "
       "method MAY be either an intrinsic method of a CIM Namespace or "
       "an extrinsic method of a CIM_ManagedElement. \n"
       "\n"
       "In order to correlate between methods called by this "
       "MethodAction and any other invoked Methods, InstMethodCall "
       "indications MAY be created for the method calls that result "
       "from this MethodAction. These indications are named by the "
       "value in the InstMethodCallName property. These indications "
       "MUST be produced if that InstMethodCallName value is included "
       "in the FROM clause of the query of some other MethodAction "
       "instance within the same PolicyRule. (The details of how this "
       "is accomplished are implementation dependent.) \n"
       "\n"
       "The input parameters to the method are defined by the query "
       "and MAY be fixed values defined by literals or MAY be defined "
       "by reference to one or more properties of classes named in the "
       "FROM clause of the query. The referenced objects MAY be those "
       "produced by QueryConditions or MethodActions instances "
       "associated to the same PolicyRule instance." )]
class CIM_MethodAction : CIM_PolicyAction {

      [Required, Description ( 
          "In the context of the associated PolicyRule, "
          "InstMethodCallName defines a unique name for the "
          "InstMethodCall instances that result from the methods "
          "invoked as a result of evaluating the Query string. This "
          "name MAY be used in subsequent MethodActions of the same "
          "PolicyRule to identify the set of InstMethodCall "
          "instances that result from evaluation of this "
          "MethodAction in the context of its PolicyRule. This "
          "string is treated as a class name, in a query statement." ), 
       ModelCorrespondence { "CIM_MethodAction.Query" }]
   string InstMethodCallName;

      [Required, Description ( 
          "A query expression that defines the method to invoke and "
          "its input parameters. These are defined by the first and "
          "subsequent select-list entries in the Query string\'s "
          "select-criteria. The FROM clause MAY reference any "
          "object, including those named by the QueryResultName and "
          "MethodCallName produced by QueryConditions or "
          "MethodActions of the same PolicyRule. \n"
          "Note that both intrinsic and extrinsic methods MAY be "
          "called. The first select-list entry MUST be an object "
          "Path to a method. For consistency it SHOULD be called "
          "MethodName. However, if there is a conflict with "
          "existing parameter names, it MAY be called something "
          "else. The remaining select list entries are not "
          "positional and MUST use the name of the corresponding "
          "method parameter. \n"
          "The object path to a method is defined here as a WBEM "
          "URI, (see DSP0207) dot concatenated with a method name. "
          "It must have the form: [<wbemURI>, \".\",] <MethodName>. \n"
          "The named method may be intrinsic or extrinsic. "
          "Extrinsics may be at class level (i.e. static) or not. \n"
          "The particular instance of this class that is invoking "
          "the specified method defines the default namespace, "
          "class, and key values. If any of these are missing from "
          "the WBEM URI, these defaults are assumed. \n"
          "For intrinsic methods (as defined in the \"Specification "
          "for CIM Operations over HTTP\", see DSP0200), any class "
          "name or key values specified in the WBEM URI are "
          "ignored. Similarly, key values are ignored for static "
          "methods. \n"
          "Intrinsic methods that take an <instancename>, an "
          "<objectname>, an <instance>, or a <namedinstance> (as "
          "defined in DSP0200) as an input parameter are "
          "preprocessed by the implementation of the MethodAction "
          "instance. For each of <instancename> or <objectname>, "
          "the corresponding input parameter name is set to a WBEM "
          "URI of the instance or class. /n For each of <instance> "
          "or <namedinstance>, the corresponding input parameter "
          "must be set to a WBEM URI to the instance or class. "
          "Properties of that instance are passed as additional "
          "select list entries with the name of the corresponding "
          "parameter dot appended with the name of the named "
          "instance property. \n"
          "For example: if the call is to ModifyInstance, then "
          "parameter ModifiedInstance is set to the= <wbemURI> of "
          "the instance to modify and for each relevant property to "
          "modify, a parameter is supplied with the name "
          "ModifiedInstance.<propertyName> and is set to the new "
          "value for the named property." ), 
       ModelCorrespondence { "CIM_MethodAction.InstMethodCallName", 
          "CIM_MethodAction.QueryLanguage" }]
   string Query;

      [Required, Description ( 
          "The language in which the Query string is expressed./n "
          "CQL - refers to the \'DMTF:CQL\' language defined by "
          "DSP0200. \n"
          "CQL: indicates a CIM Query Language string. \n"
          "CQLT: indicates a CIM Query Language Template string. "
          "When used, the identifiers recognized in the "
          "$identifier$ tokens are \"SELF\" and the property names "
          "of this class, or one of its subclasses. When used in "
          "the Query string, $SELF$ will be replaced by a string "
          "corresponding to a WBEM URI referencing the instance of "
          "this class that contains the Query template string. "
          "Tokens of the form $<propertyname>$ will be replaced by "
          "a string representing the corresponding property value "
          "of the instance of this class that contains the Query "
          "string." ), 
       ValueMap { "2", "3", "..", "0x8000.." }, 
       Values { "CQL", "CQLT", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_MethodAction.Query" }]
   uint16 QueryLanguage = 2;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class specifies that a "
       "networking ID or address should be verified." )]
class CIM_NetworkingIDAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "A string defining the specific type/subclass of "
          "CIM_Identity which specifies the networking information. "
          "For example, CIM_StorageHardwareID would be entered in "
          "this property to identify that a \'known\' port should "
          "be observed." )]
   string NetworkingIdentityClassName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "NetworkPacketAction standardizes different processing options "
       "that can be taken at the network packet level. The specific "
       "action is defined in the PacketAction enumerated property. "
       "Note that this property can be used in conjunction with other "
       "actions aggregated into a Rule, to fully define its effects. "
       "For example, when aggregated with the SAStaticAction class, "
       "NetworkPacketAction indicates whether a specific packet will "
       "be encrypted, bypassed or discarded for the lifetime of the "
       "Security Association." )]
class CIM_NetworkPacketAction : CIM_PolicyAction {

      [Description ( 
          "A network packet can be processed, bypassed for "
          "processing (i.e., allowed to continue without further "
          "processing, such as being forwarded in the clear versus "
          "being encrypted), or discarded. This enumeration "
          "indicates how a packet should be handled if a "
          "PolicyRule\'s PolicyConditions evaluate to TRUE." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Processed", "Bypassed", "Discarded" }, 
       MappingStrings { "IPSP Policy Model.IETF|IPsecBypassAction", 
          "IPSP Policy Model.IETF|IPsecDiscardAction" }, 
       ModelCorrespondence { "CIM_NetworkPacketAction.OtherAction" }]
   uint16 PacketAction;

      [Description ( 
          "Description of the action when the value 1 (\"Other\") "
          "is specified for the property, PacketAction." ), 
       ModelCorrespondence { "CIM_NetworkPacketAction.PacketAction" }]
   string OtherAction;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PacketFilterCondition specifies packet selection criteria (via "
       "association to FilterLists) for firewall policies, IPsec "
       "policies and similar uses. It is used as an anchor point to "
       "associate various types of filters with policy rules via the "
       "FilterOfPacketCondition association. By definition, policy "
       "rules that aggregate PacketFilterCondition are assumed to "
       "operate against every packet received and/or transmitted from "
       "an ingress and/or egress point. (Whether policy condition "
       "evaluation occurs at ingress or egress is specified by the "
       "Direction property in the associated FilterList.) "
       "PacketFilterCondition MAY also be used to define the specific "
       "CredentialManagementService that validates the credentials "
       "carried in a packet. This is accomplished using the "
       "association, AcceptCredentialFrom. \n"
       "\n"
       "Associated objects (such as FilterListsor Credential "
       "ManagementServices) represent components of the condition that "
       "MAY or MAY NOT apply at a given rule evaluation. For example, "
       "an AcceptCredentialFrom evaluation is only performed when a "
       "credential is available to be evaluated and compared against "
       "the list of trusted credential management services. Similarly, "
       "a PeerIDPayloadFilterEntry MAY only be evaluated when an ID "
       "payload is available for checking. Condition components that "
       "do not have applicability at rule evaluation time, MUST be "
       "evaluated to TRUE." ), 
    MappingStrings { "IPSP Policy Model.IETF|SACondition" }]
class CIM_PacketFilterCondition : CIM_PolicyCondition {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines the "
       "specific type of physical credential that should be "
       "authenticated." )]
class CIM_PhysicalCredentialAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "Integer enumeration identifying the credential that "
          "should be authenticated." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Magnetic Stripe Card", "Smart Card", 
          "Password Generator Card" }, 
       ModelCorrespondence { 
          "CIM_PhysicalCredentialAuthentication.OtherCredential" }]
   uint16 TypeOfCredential;

      [Description ( 
          "String specifying the credential when the "
          "TypeOfCredential property is set to 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_PhysicalCredentialAuthentication.TypeOfCredential" }]
   string OtherCredential;

      [Description ( 
          "String defining a character or binary sequence, which is "
          "built into the physical credential to identify it. If "
          "left blank, it is the responsibility of the security "
          "infrastructure to verify that a valid credential (of the "
          "specified type) has been used." )]
   string PhysicalIdentifier;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CIM_PolicyComponent is a generic association used to establish "
       "\'part of\' relationships between the subclasses of "
       "CIM_Policy. For example, the PolicyConditionInPolicyRule "
       "association defines that PolicyConditions are part of a "
       "PolicyRule." )]
class CIM_PolicyComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent Policy in the association." )]
   CIM_Policy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The child/part Policy in the association." )]
   CIM_Policy REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicyConditions may be aggregated into rules and into "
       "compound conditions. PolicyConditionStructure is the abstract "
       "aggregation class for the structuring of policy conditions. \n"
       "\n"
       "The Conditions aggregated by a PolicyRule or "
       "CompoundPolicyCondition are grouped into two levels of lists: "
       "either an ORed set of ANDed sets of conditions (DNF, the "
       "default) or an ANDed set of ORed sets of conditions (CNF). "
       "Individual PolicyConditions in these lists may be negated. The "
       "property ConditionListType specifies which of these two "
       "grouping schemes applies to a particular PolicyRule or "
       "CompoundPolicyCondition instance. \n"
       "\n"
       "One or more PolicyTimePeriodConditions may be among the "
       "conditions associated with a PolicyRule or "
       "CompoundPolicyCondition via the PolicyConditionStructure "
       "subclass association. In this case, the time periods are "
       "simply additional Conditions to be evaluated along with any "
       "others that are specified." )]
class CIM_PolicyConditionStructure : CIM_PolicyComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property represents the Policy that contains one or "
          "more PolicyConditions." )]
   CIM_Policy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property holds the name of a PolicyCondition "
          "contained by one or more PolicyRule or "
          "CompoundPolicyCondition instances." )]
   CIM_PolicyCondition REF PartComponent;

      [Description ( 
          "Unsigned integer indicating the group to which the "
          "contained PolicyCondition belongs. This integer segments "
          "the Conditions into the ANDed sets (when the "
          "ConditionListType is \"DNF\") or, similarly, into the "
          "ORed sets (when the ConditionListType is \"CNF\")." )]
   uint16 GroupNumber;

      [Description ( 
          "Indication of whether the contained PolicyCondition is "
          "negated. TRUE indicates that the PolicyCondition IS "
          "negated, FALSE indicates that it IS NOT negated." )]
   boolean ConditionNegated;


};

// Copyright (c) 2005 DMTF.  All rights reserved
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "An aggregation of PolicySet instances (PolicyGroups and/or "
       "PolicyRules) that have the same decision strategy and inherit "
       "policy roles. PolicyGroup instances are defined and named "
       "relative to the CIM_System that provides their context." )]
class CIM_PolicyGroup : CIM_PolicySet {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A user-friendly name of this PolicyGroup." ), 
       MaxLen ( 256 )]
   string PolicyGroupName;


};

// Copyright (c) 2005 DMTF.  All rights reserved
   [Association, Deprecated { "CIM_PolicySetComponent" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetComponent provides a more general mechanism for "
       "aggregating both PolicyGroups and PolicyRules and doing so "
       "with the priority value applying only to the aggregated set "
       "rather than policy wide. \n"
       "\n"
       "A relationship that aggregates one or more lower-level "
       "PolicyGroups into a higher-level Group. A Policy Group may "
       "aggregate PolicyRules and/or other Policy Groups." )]
class CIM_PolicyGroupInPolicyGroup : CIM_PolicyComponent {

      [Deprecated { "CIM_PolicySetComponent.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( "A PolicyGroup that aggregates other Groups." )]
   CIM_PolicyGroup REF GroupComponent;

      [Deprecated { "CIM_PolicySetComponent.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( "A PolicyGroup aggregated by another Group." )]
   CIM_PolicyGroup REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicyRoleCollection is used to represent a collection of "
       "ManagedElements that share a common policy role, and the "
       "PolicySets that CAN BE applied to those elements. (Note that "
       "the PolicySets that are CURRENTLY applied are indicated via "
       "instances of the association, PolicySetAppliesToElement.) The "
       "PolicyRoleCollection always exists in the context of a System, "
       "specified using the PolicyRoleCollectionInSystem aggregation. "
       "The value of the PolicyRole property in this class specifies "
       "the role. It is defined as a free-form string. ManagedElements "
       "that share the role defined in this collection are aggregated "
       "into the Collection via the ElementInPolicyRoleCollection "
       "association." )]
class CIM_PolicyRoleCollection : CIM_SystemSpecificCollection {

      [Required, Description ( 
          "The PolicyRole name for the PolicySets and other "
          "ManagedElements that are identified and aggregated by "
          "the Collection. Note that the aggregated PolicySets "
          "define the rules and groups of rules that may be applied "
          "to the associated ManagedElements. \n"
          "\n"
          "Although not officially designated as \'role "
          "combinations\', multiple roles may be specified using "
          "the form: \n"
          "<RoleName>[&&<RoleName>]* \n"
          "where the individual role names appear in alphabetical "
          "order (according to the collating sequence for UCS-2). "
          "Implementations may treat PolicyRole values that are "
          "specified as \'role combinations\' as simple strings." )]
   string PolicyRole;


      [Description ( 
          "Activates/applies the PolicySets aggregated into this "
          "Collection to the specified ManagedElement. The "
          "ManagedElement MUST be a member of the Collection, "
          "associated via ElementInPolicyRoleCollection. The result "
          "of this method, if it is successfully executed, is that "
          "the aggregated PolicySets are deployed and enforced for "
          "the Element. This is reflected by the instantiation of "
          "the PolicySetAppliesToElement association between the "
          "named Element and each PolicySet." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "DMTF Reserved", "Vendor Specific" }]
   uint32 ActivatePolicySet(
         [IN, Description ( 
             "The ManagedElement to which the aggregated "
             "PolicySets of this Collection are applied." )]
      CIM_ManagedElement REF Element);

      [Description ( 
          "Deactivates the aggregated PolicySets for the specified "
          "ManagedElement. The result of this method, if it is "
          "successfully executed, is that the aggregated PolicySets "
          "are NOT enforced for the Element. This is reflected by "
          "the removal of the PolicySetAppliesToElement association "
          "between the named Element and each PolicySet. If a "
          "PolicySet is not currently enforced for the "
          "ManagedElement, then this method has no effect for that "
          "Set." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "DMTF Reserved", "Vendor Specific" }]
   uint32 DeactivatePolicySet(
         [IN, Description ( 
             "The ManagedElement to which the aggregated "
             "PolicySets of this Collection MUST NOT apply." )]
      CIM_ManagedElement REF Element);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The central class used for representing the \'If Condition "
       "then Action\' semantics of a policy rule. A PolicyRule "
       "condition, in the most general sense, is represented as either "
       "an ORed set of ANDed conditions (Disjunctive Normal Form, or "
       "DNF) or an ANDed set of ORed conditions (Conjunctive Normal "
       "Form, or CNF). Individual conditions may either be negated "
       "(NOT C) or unnegated (C). The actions specified by a "
       "PolicyRule are to be performed if and only if the PolicyRule "
       "condition (whether it is represented in DNF or CNF) evaluates "
       "to TRUE. \n"
       "\n"
       "The conditions and actions associated with a PolicyRule are "
       "modeled, respectively, with subclasses of PolicyCondition and "
       "PolicyAction. These condition and action objects are tied to "
       "instances of PolicyRule by the PolicyConditionInPolicyRule and "
       "PolicyActionInPolicyRule aggregations. \n"
       "\n"
       "A PolicyRule may also be associated with one or more policy "
       "time periods, indicating the schedule according to which the "
       "policy rule is active and inactive. In this case it is the "
       "PolicySetValidityPeriod aggregation that provides this "
       "linkage. \n"
       "\n"
       "The PolicyRule class uses the property ConditionListType, to "
       "indicate whether the conditions for the rule are in DNF "
       "(disjunctive normal form), CNF (conjunctive normal form) or, "
       "in the case of a rule with no conditions, as an "
       "UnconditionalRule. The PolicyConditionInPolicyRule aggregation "
       "contains two additional properties to complete the "
       "representation of the Rule\'s conditional expression. The "
       "first of these properties is an integer to partition the "
       "referenced PolicyConditions into one or more groups, and the "
       "second is a Boolean to indicate whether a referenced Condition "
       "is negated. An example shows how ConditionListType and these "
       "two additional properties provide a unique representation of a "
       "set of PolicyConditions in either DNF or CNF. \n"
       "\n"
       "Suppose we have a PolicyRule that aggregates five "
       "PolicyConditions C1 through C5, with the following values in "
       "the properties of the five PolicyConditionInPolicyRule "
       "associations: \n"
       "C1: GroupNumber = 1, ConditionNegated = FALSE \n"
       "C2: GroupNumber = 1, ConditionNegated = TRUE \n"
       "C3: GroupNumber = 1, ConditionNegated = FALSE \n"
       "C4: GroupNumber = 2, ConditionNegated = FALSE \n"
       "C5: GroupNumber = 2, ConditionNegated = FALSE \n"
       "\n"
       "If ConditionListType = DNF, then the overall condition for the "
       "PolicyRule is: \n"
       "(C1 AND (NOT C2) AND C3) OR (C4 AND C5) \n"
       "\n"
       "On the other hand, if ConditionListType = CNF, then the "
       "overall condition for the PolicyRule is: \n"
       "(C1 OR (NOT C2) OR C3) AND (C4 OR C5) \n"
       "\n"
       "In both cases, there is an unambiguous specification of the "
       "overall condition that is tested to determine whether to "
       "perform the PolicyActions associated with the PolicyRule. \n"
       "\n"
       "PolicyRule instances may also be used to aggregate other "
       "PolicyRules and/or PolicyGroups. When used in this way to "
       "implement nested rules, the conditions of the aggregating rule "
       "apply to the subordinate rules as well. However, any side "
       "effects of condition evaluation or the execution of actions "
       "MUST NOT affect the result of the evaluation of other "
       "conditions evaluated by the rule engine in the same evaluation "
       "pass. That is, an implementation of a rule engine MAY evaluate "
       "all conditions in any order before applying the priority and "
       "determining which actions are to be executed." )]
class CIM_PolicyRule : CIM_PolicySet {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( "A user-friendly name of this PolicyRule." ), 
       MaxLen ( 256 )]
   string PolicyRuleName;

      [Description ( 
          "Indicates whether the list of PolicyConditions "
          "associated with this PolicyRule is in disjunctive normal "
          "form (DNF), conjunctive normal form (CNF), or has no "
          "conditions (i.e., is an UnconditionalRule) and is "
          "automatically evaluated to \"True.\" The default value "
          "is 1 (\"DNF\")." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unconditional Rule", "DNF", "CNF" }]
   uint16 ConditionListType = 1;

      [Description ( 
          "A free-form string that can be used to provide "
          "guidelines on how this PolicyRule should be used." )]
   string RuleUsage;

      [Deprecated { "CIM_PolicySetComponent.Priority" }, 
       Description ( 
          "PolicyRule.Priority is deprecated and replaced by "
          "providing the priority for a rule (and a group) in the "
          "context of the aggregating PolicySet instead of the "
          "priority being used for all aggregating PolicySet "
          "instances. Thus, the assignment of priority values is "
          "much simpler. \n"
          "\n"
          "A non-negative integer for prioritizing this Policy Rule "
          "relative to other Rules. A larger value indicates a "
          "higher priority. The default value is 0." )]
   uint16 Priority = 0;

      [Deprecated { "No Value" }, 
       Description ( 
          "A flag indicating that the evaluation of the Policy "
          "Conditions and execution of PolicyActions (if the "
          "Conditions evaluate to TRUE) is required. The evaluation "
          "of a PolicyRule MUST be attempted if the Mandatory "
          "property value is TRUE. If the Mandatory property is "
          "FALSE, then the evaluation of the Rule is \'best effort\' "
          "and MAY be ignored." )]
   boolean Mandatory;

      [Description ( 
          "This property gives a policy administrator a way of "
          "specifying how the ordering of the PolicyActions "
          "associated with this PolicyRule is to be interpreted. "
          "Three values are supported: \n"
          "o mandatory(1): Do the actions in the indicated order, "
          "or don\'t do them at all. \n"
          "o recommended(2): Do the actions in the indicated order "
          "if you can, but if you can\'t do them in this order, do "
          "them in another order if you can. \n"
          "o dontCare(3): Do them -- I don\'t care about the order. \n"
          "The default value is 3 (\"DontCare\")." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Mandatory", "Recommended", "Dont Care" }]
   uint16 SequencedActions = 3;

      [Description ( 
          "ExecutionStrategy defines the strategy to be used in "
          "executing the sequenced actions aggregated by this "
          "PolicyRule. There are three execution strategies: \n"
          "\n"
          "Do Until Success - execute actions according to "
          "predefined order, until successful execution of a single "
          "action. \n"
          "Do All - execute ALL actions which are part of the "
          "modeled set, according to their predefined order. "
          "Continue doing this, even if one or more of the actions "
          "fails. \n"
          "Do Until Failure - execute actions according to "
          "predefined order, until the first failure in execution "
          "of an action instance." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Do Until Success", "Do All", "Do Until Failure" }]
   uint16 ExecutionStrategy;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_PolicySetComponent" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetComponent provides a more general mechanism for "
       "aggregating both PolicyGroups and PolicyRules and doing so "
       "with the priority value applying only to the aggregated set "
       "rather than policy wide. \n"
       "\n"
       "A relationship that aggregates one or more PolicyRules into a "
       "PolicyGroup. A PolicyGroup may aggregate PolicyRules and/or "
       "other PolicyGroups." )]
class CIM_PolicyRuleInPolicyGroup : CIM_PolicyComponent {

      [Deprecated { "CIM_PolicySetComponent.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "A PolicyGroup that aggregates one or more PolicyRules." )]
   CIM_PolicyGroup REF GroupComponent;

      [Deprecated { "CIM_PolicySetComponent.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( "A PolicyRule aggregated by a PolicyGroup." )]
   CIM_PolicyRule REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_PolicySetValidityPeriod" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The PolicyRuleValidityPeriod aggregation represents scheduled "
       "activation and deactivation of a PolicyRule. If a PolicyRule "
       "is associated with multiple policy time periods via this "
       "association, then the Rule is active if at least one of the "
       "time periods indicates that it is active. (In other words, the "
       "PolicyTimePeriodConditions are ORed to determine whether the "
       "Rule is active.) A Time Period may be aggregated by multiple "
       "PolicyRules. A Rule that does not point to a "
       "PolicyTimePeriodCondition via this association is, from the "
       "point of view of scheduling, always active. It may, however, "
       "be inactive for other reasons. For example, the Rule\'s "
       "Enabled property may be set to \"disabled\" (value=2)." )]
class CIM_PolicyRuleValidityPeriod : CIM_PolicyComponent {

      [Deprecated { "CIM_PolicySetValidityPeriod.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property contains the name of a PolicyRule that "
          "contains one or more PolicyTimePeriodConditions." )]
   CIM_PolicyRule REF GroupComponent;

      [Deprecated { "CIM_PolicySetValidityPeriod.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "This property contains the name of a "
          "PolicyTimePeriodCondition defining the valid time "
          "periods for one or more PolicyRules." )]
   CIM_PolicyTimePeriodCondition REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetComponent is a concrete aggregation that collects "
       "instances of the subclasses of PolicySet (i.e., PolicyGroups "
       "and PolicyRules). Instances are collected in sets that use the "
       "same decision strategy. They are prioritized relative to each "
       "other, within the set, using the Priority property of this "
       "aggregation. \n"
       "\n"
       "Together, the PolicySet.PolicyDecisionStrategy and PolicySet "
       "Component.Priority properties determine the processing for the "
       "groups and rules contained in a PolicySet. A larger priority "
       "value represents a higher priority. Note that the Priority "
       "property MUST have a unique value when compared with others "
       "defined for the same aggregating PolicySet. Thus, the "
       "evaluation of rules within a set is deterministically "
       "specified." )]
class CIM_PolicySetComponent : CIM_PolicyComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "A PolicySet that aggregates other PolicySet instances." )]
   CIM_PolicySet REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "A PolicySet aggregated into a PolicySet." )]
   CIM_PolicySet REF PartComponent;

      [Description ( 
          "A non-negative integer for prioritizing this PolicySet "
          "component relative to other elements of the same "
          "PolicySet. A larger value indicates a higher priority. "
          "The Priority property MUST have a unique value when "
          "compared with others defined for the same aggregating "
          "PolicySet." )]
   uint16 Priority;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetInRoleCollection aggregates zero or more PolicyRules "
       "and PolicyGroups (i.e., the subclasses of PolicySet) into a "
       "PolicyRoleCollection object, representing a role "
       "supported/enforced by the PolicySet." )]
class CIM_PolicySetInRoleCollection : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Description ( "The PolicyRoleCollection." )]
   CIM_PolicyRoleCollection REF Collection;

      [Override ( "Member" ), 
       Description ( 
          "The PolicySet that supports/enforces the PolicyRole for "
          "the elements in the PolicyRoleCollection." )]
   CIM_PolicySet REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The PolicySetValidityPeriod aggregation represents scheduled "
       "activation and deactivation of a PolicySet. A PolicySet is "
       "considered \"active\" if it is both \"Enabled\" and in a valid "
       "time period. \n"
       "\n"
       "If a PolicySet is associated with multiple policy time periods "
       "via this association, then the Set is in a valid time period "
       "if at least one of the time periods evaluates to TRUE. If a "
       "PolicySet is contained in another PolicySet via the "
       "PolicySetComponent aggregation (e.g., a PolicyRule in a "
       "PolicyGroup), then the contained PolicySet (e.g., PolicyRule) "
       "is in a valid period if at least one of the aggregate\'s "
       "PolicyTimePeriodCondition instances evaluates to TRUE and at "
       "least one of its own PolicyTimePeriodCondition instances also "
       "evalutes to TRUE. (In other words, the "
       "PolicyTimePeriodConditions are ORed to determine whether the "
       "PolicySet is in a valid time period and then ANDed with the "
       "ORed PolicyTimePeriodConditions of each of PolicySet instances "
       "in the PolicySetComponent hierarchy to determine if the "
       "PolicySet is in a valid time period and, if also \"Enabled\", "
       "therefore, active, i.e., the hierachy ANDs the ORed "
       "PolicyTimePeriodConditions of the elements of the hierarchy. \n"
       "\n"
       "A Time Period may be aggregated by multiple PolicySets. A Set "
       "that does not point to a PolicyTimePeriodCondition via this "
       "association, from the point of view of scheduling, is always "
       "in a valid time period." )]
class CIM_PolicySetValidityPeriod : CIM_PolicyComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property contains the name of a PolicySet that "
          "contains one or more PolicyTimePeriodConditions." )]
   CIM_PolicySet REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property contains the name of a "
          "PolicyTimePeriodCondition defining the valid time "
          "periods for one or more PolicySets." )]
   CIM_PolicyTimePeriodCondition REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines the "
       "specific public/private key pair that should be authenticated." )]
class CIM_PublicPrivateKeyAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "Boolean indicating whether the key pair is self-issued "
          "(TRUE) or issued by a Certificate Authority (FALSE)." )]
   boolean SelfIssuedKey;

      [Description ( 
          "String holding the user\'s (distinguished) name." )]
   string DistinguishedName;

      [Description ( "String holding the public key data." )]
   string PublicKey;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines a "
       "specific identity whose shared secret should be authenticated." )]
class CIM_SharedSecretAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "String defining the principal\'s ID whose secret is authenticated."
           )]
   string IDOfPrincipal;

      [Description ( 
          "String defining a hostname, URI or service/application "
          "name. It defines the specific system or service which "
          "provides the context for the shared secret." )]
   string ContextOfSecret;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Activity 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Describes the date of each transaction and the objects involved."
        )]
class PRS_Activity : PRS_ExchangeElement {

      [Deprecated { "PRS_Activity.NewKeys", "PRS_Activity.Deleted", 
          "PRS_Activity.Modified" }, 
       Description ( 
          "The key fields for the objects in the associated "
          "Transaction. The use of this property is deprecated. The "
          "PRS_SISService StartSISTransaction method uses the New, "
          "Modified and Deleted properties instead of this field. "
          "This field is set to NULL by the StartSISTransaction "
          "method if the other properties are used." )]
   string ParameterList;

      [Description ( 
          "The key fields for the objects added in the associated "
          "Transaction. This property is set by the PRS_SISService "
          "StartSISTransaction method." )]
   string NewKeys;

      [Description ( 
          "The key fields for objects deleted in the associated "
          "Transaction. This property is set by the PRS_SISService "
          "StartSISTransaction method." )]
   string Deleted;

      [Description ( 
          "The key fields for objects modified in the associated "
          "Transaction. This property is set by the PRS_SISService "
          "StartSISTransaction method." )]
   string Modified;

      [Description ( 
          "The date of the Activity. This property is set by the "
          "PRS_SISService StartSISTranasaction method." )]
   datetime LocalDate;

      [Description ( "Description of the activity performed." )]
   string ActionLog;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ActivityResource 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Activity with PRS_Resource." )]
class PRS_ActivityResource : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Activity." )]
   PRS_Activity REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Resource." )]
   PRS_Resource REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ActivityTransaction 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Activity with PRS_Transaction." )]
class PRS_ActivityTransaction : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Activity." )]
   PRS_Activity REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Transaction." )]
   PRS_Transaction REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Address 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Provides address information for PRS_ContactItem." )]
class PRS_Address : PRS_ExchangeElement {

      [Description ( "The type of address." ), 
       ValueMap { "0", "1", "2", "3", "254", "255" }, 
       Values { "Primary", "Shipping", "Billing", "Service", 
          "Other", "Unknown" }]
   uint8 AddressType;

      [Description ( "First line of address information." )]
   string Address1;

      [Description ( "Second line of address information." )]
   string Address2;

      [Description ( "Third line of address information." )]
   string Address3;

      [Description ( "Fourth line of address information." )]
   string Address4;

      [Description ( "The city." )]
   string City;

      [Description ( 
          "The specific region, such as state or province." )]
   string Region;

      [Description ( "The country\'s postal code for the address." )]
   string PostalCode;

      [Description ( "The time zone of the address." )]
   string TimeZone;

      [Description ( "The country code, based on ISO/IEC 3166." )]
   string Country;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_AddressLocation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Address and PRS_Location." )]
class PRS_AddressLocation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Address." )]
   PRS_Address REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Location." )]
   PRS_Location REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Administrative 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Administrative defines administrative information about "
       "associated objects. There must be at least one "
       "PRS_Administrative instance associated with a PRS_Solution. "
       "Administrative information is inherited from a parent object. \n"
       "\n"
       "If the administrative information among objects within a "
       "Solution is not the same, additional PRS_Administrative "
       "instances may be associated with other objects within the "
       "Solution. All instances under a specific parent inherit their "
       "administrative information unless there is an "
       "PRS_Administrative instance associated with that instance. \n"
       "\n"
       "For example, if there is a PRS_Administrative instance "
       "associated with a PRS_Problem instance, all of the "
       "PRS_Statement and PRS_ Product instances within the Problem "
       "use the same Administrative information as the PRS_Problem "
       "instance." )]
class PRS_Administrative : PRS_ExchangeElement {

      [Description ( 
          "Level 0 means all information within a Reference, "
          "Problem or Resolution is conveyed by a single "
          "PRS_Statement. \n"
          "\n"
          "Level 1 means there may be multiple PRS_Statement "
          "instances within a Reference, Problem or Resolution. \n"
          "\n"
          "Level 2 means that a PRS_Statement may be associated "
          "with a PRS_Feature instance within a Reference, Problem "
          "or Resolution." ), 
       ValueMap { "0", "1", "2" }]
   uint16 ComplianceLevel;

      [Description ( 
          "Editorial status of the document. If \'Draft\', "
          "information is complete, but unedited. If \'Reviewed\', "
          "an editorial review has been completed. If \'Published\', "
          "information has been reviewed and approved for "
          "distribution." ), 
       ValueMap { "0", "1", "2", "254", "255" }, 
       Values { "Draft", "Reviewed", "Published", "Other", "Unknown" }]
   uint8 DocumentStatus;

      [Description ( 
          "Intended distribution audience for the associated "
          "information. If \'Proprietary\', information contains "
          "proprietary information and is not to be released "
          "externally. If \'Internal\', information is for internal "
          "use only. If \'Partner\', information is only available "
          "to contracted partners. If \'Public\', information is "
          "available to anyone." ), 
       ValueMap { "0", "1", "2", "3", "254", "255" }, 
       Values { "Proprietary", "Internal", "Partner", "Public", 
          "Other", "Unknown" }]
   uint8 Distribution;

      [Description ( "Language used in the associated information." )]
   string Language;

      [Description ( "Copyright for the associated information." )]
   string Copyright;

      [Description ( "Disclaimers about the associated information." )]
   string Disclaimer;

      [Description ( "Usage rights for the associated information." )]
   string Rights;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_AdministrativeRevision 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Administrative with PRS_Revision." )]
class PRS_AdministrativeRevision : CIM_HostedDependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Administrative." )]
   PRS_Administrative REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Revision." )]
   PRS_Revision REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Agreement 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "The agreement or contract referenced for entitlement to service."
        )]
class PRS_Agreement : PRS_ExchangeElement {

      [Description ( 
          "The identifier for the contract between the Request and "
          "the Provider. This property is set by the Requester "
          "prior to submitting a Service Request." )]
   string ContractID;

      [Description ( "A brief description of the contract." )]
   string AgreementType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Attachment 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Attachment describes file attachments. A PRS_Attachment "
       "may be associated to any object derived from "
       "PRS_ExchangeElement. PRS_Attachment is used to attach objects "
       "of any type including binary files, ASCII documents, or URLs. "
       "Only one object may be attached per PRS_Attachment. \n"
       "\n"
       "The actual attachment carried by the Attachment object is "
       "included by one of two methods: by reference or by value as "
       "embedded data. A \'by reference\' approach links indirectly to "
       "the attachment through the use of a string identifier, e.g. a "
       "file name. An \'embedded data\' approach means the actual "
       "binary data is included in PRS_Attachment." )]
class PRS_Attachment : PRS_ExchangeElement {

      [Description ( 
          "If the attachment is not embedded, where the attachment "
          "is located." )]
   string AttachmentReference;

      [Description ( 
          "Protocol required to read the attachment (e.g., http)." )]
   string Protocol;

      [Description ( "The file format of the attachment." )]
   string Format;

      [Description ( "The size of the attachment in bytes." )]
   string AttachmentSize;

      [Description ( "The attachment itself, if embedded." )]
   string AttachmentObject;

      [Description ( 
          "The purpose of the attachment, as related to the "
          "diagnosis. \'Instructions\' are compilable code. "
          "\'Background\' is descriptive information. \'Log\' is "
          "information captured in a log file." ), 
       ValueMap { "0", "1", "2", "254", "255" }, 
       Values { "Instructions", "Background", "Log", "Unknown", 
          "Undefined" }]
   uint8 AttachmentType;

      [Description ( 
          "The displayable attachment identifier. Used to define "
          "what will appear as the name of the attachment, as "
          "opposed to the specific attachment file name or URL." )]
   string AttachmentName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Category 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Category is used to classify the components of a Solution. "
       "Hierarchical classifications are created by associating "
       "PRS_CategoryParentChild with multiple PRS_Category instances." )]
class PRS_Category : PRS_ExchangeElement {

      [Description ( 
          "The specific value for the category. For example, \'HP "
          "Laserjet\' would be a value for a category containing "
          "printer names." )]
   string CategoryContents;

      [Description ( 
          "The type of category. Used to give additional semantics "
          "to the category. For example, a Category of Type "
          "\'Printers\' would qualify the list of category values "
          "for a list of printers. \n"
          "\n"
          "Note: the relationship of Category Type to Category "
          "Value expresses no intrinsic hierarchy. If a tree of "
          "relationships exists to define categories and "
          "sub-categories, this should be defined using "
          "CategoryParentChild associations." )]
   string CategoryType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_CategoryParentChild 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_CategoryParentChild is used to define classification hierarchies."
        )]
class PRS_CategoryParentChild : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The parent PRS_Category used for classification." )]
   PRS_Category REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The child PRS_Category used for classification." )]
   PRS_Category REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Contact 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Contact is used to anchor associations to PRS_Person and "
       "PRS_Orgnaization. PRS_Contact is also used to anchor "
       "associations to PRS_Revision and PRS_Resolution, as well as "
       "PRS_ServiceIncident." )]
class PRS_Contact : PRS_ExchangeElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ContactItem 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ContactItem is the abstract root class for PRS_Person and "
       "PRS_Organization. It provides a common anchor point for the "
       "PRS_ContactContactItem association." )]
class PRS_ContactItem : PRS_ExchangeElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ContactItemAddress 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_ContactItem with PRS_Address." )]
class PRS_ContactItemAddress : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_ContactItem." )]
   PRS_ContactItem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Address." )]
   PRS_Address REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Expression 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Expression defines a specific relationship between "
       "PRS_ExpressionElements associated with PRS_SolutionElements." )]
class PRS_Expression : PRS_ExpressionElement {

      [Description ( 
          "The operator to be used with the associated "
          "PRS_Expression Elements. The \'AND\', \'OR\' and \'NOT\' "
          "operators are the only operators currently defined by "
          "the standard. (They must be used as uppercase strings.) "
          "Note that this is a vendor-extensible property - so that "
          "additional operators can be defined and used in "
          "implementations." )]
   string Relation;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ExpressionLink 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates a PRS_Expression with PRS_ExpressionElements such "
       "as PRS_Expression, PRS_Product, and PRS_Statement." )]
class PRS_ExpressionLink : CIM_HostedDependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The parent PRS_Expression." )]
   PRS_Expression REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The child PRS_ExpressionElement, either a "
          "PRS_Expression, PRS_Product or PRS_Statement." )]
   PRS_ExpressionElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_FeatureResource 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates PRS_Feature with PRS_Resource. This is used to "
       "track labor and costs associated with specific tasks defined "
       "in a Feature object." )]
class PRS_FeatureResource : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_Feature." )]
   PRS_Feature REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Resource." )]
   PRS_Resource REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Organization 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Organization describes a PRS_Contact\'s organization name "
       "and business." )]
class PRS_Organization : PRS_ContactItem {

      [Description ( "The name of the organization." )]
   string Name;

      [Description ( 
          "Description of organization\'s primary business." )]
   string Business;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Person 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Information about a personal contact." )]
class PRS_Person : PRS_ContactItem {

      [Description ( "Contact\'s first name." )]
   string FirstName;

      [Description ( "Contact\'s last name." )]
   string LastName;

      [Description ( 
          "How the contact is addressed, i.e. Dr., Mr., Ms., Mrs., etc."
           )]
   string Salutation;

      [Description ( "Contact\'s business title." )]
   string Title;

      [Description ( 
          "Description of the contact. For example, they may have "
          "responsibilities not apparent from their title." )]
   string ContactType;

      [Description ( 
          "Contact\'s preferred communication method. See the "
          "PRS_Location.LocationType property." ), 
       ValueMap { "0", "1", "2", "3", "4", "254", "255" }, 
       Values { "Primary_Voice", "Alternate_Voice", "Fax", "Email", 
          "URL", "Other", "Unknown" }]
   uint8 CommunicationMode;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Problem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Problem is the root object of a set of associated objects "
       "that describe a Problem. One or more Problems may be "
       "associated with a Solution. \n"
       "\n"
       "The Problem is described by PRS_Statement and PRS_Product "
       "instances indirectly associated to the PRS_Problem through a "
       "PRS_Expression." )]
class PRS_Problem : PRS_SolutionElement {

      [Description ( 
          "The Likelihood describes the potential for the Problem "
          "to occur. The value of this property shall be an integer "
          "value in the range of 0 to 100, inclusive." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint16 Likelihood;

      [Description ( 
          "The Impact describes the severity of the problem. The "
          "value of this property shall be an integer value in the "
          "range of 0 to 100, inclusive." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint16 Impact;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ProductAsset 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ProductAsset is used to provide specific information about "
       "a PRS_Product. PRS_ProductAsset associates this information to "
       "a PRS_Product using one or more Statements associated to a "
       "PRS_Expression." )]
class PRS_ProductAsset : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The product." )]
   PRS_Product REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The expression." )]
   PRS_Expression REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ProductComponent 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ProductComponent is used to describe \'has a\' "
       "relationships between Products and their components parts. See "
       "PRS_ProductParentChild for \'is a\' relationships." )]
class PRS_ProductComponent : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Description ( "The PRS_Product which contains the component." )]
   PRS_Product REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The component PRS_Product." )]
   PRS_Product REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ProductParentChild 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Products may exist in a hierarchy of relationships with "
       "related Products. If a Producer deems these hierarchy "
       "relationships are relevant to the current Problem or "
       "Resolution, then the position of the Product in a hierarchy "
       "can be implied using one of two types of relationships: \'is "
       "a\' and \'has a\'. An \'is a\' relationship implies a "
       "classification, such as versioning or typing. A \'has a\' "
       "relationship implies that one product contains another. The "
       "PRS_ProductParentChild association is used to imply an \'is a\' "
       "hierarchy. Use the ProductComponent association to imply \'has "
       "a\' relationships." )]
class PRS_ProductParentChild : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Description ( "The parent PRS_Product." )]
   PRS_Product REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The child PRS_Product." )]
   PRS_Product REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Reference 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Reference is a placeholder to support links between "
       "PRS_Expression objects and a PRS_Solution. It does not have "
       "any properties. A \'Reference\' Solution uses PRS_Statement "
       "objects to describe general, non-diagnostic knowledge and may "
       "not include any PRS_Problem and PRS_Resolution instances." )]
class PRS_Reference : PRS_SolutionElement {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Resolution 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Resolution is the root object of a set of associated "
       "objects that describe a the resolution to a Problem. One or "
       "more Resolutions may be associated with a Solution. \n"
       "\n"
       "The Resolution is described by PRS_Statement and PRS_Product "
       "instances indirectly associated to the PRS_Resolution through "
       "a PRS_Expression." )]
class PRS_Resolution : PRS_SolutionElement {

      [Description ( 
          "The Confidence describes the potential for the "
          "Resolution to correct the Problem or Problems associated "
          "with the PRS_Solution. The value of this property shall "
          "be an integer value in the range of 0 to 100, inclusive." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint16 Confidence;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ResolutionResource 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Resolution with PRS_Resource." )]
class PRS_ResolutionResource : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_Resource." )]
   PRS_Resource REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Resolution." )]
   PRS_Resolution REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_RevisionContact 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Revision and PRS_Contact." )]
class PRS_RevisionContact : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Description ( "The PRS_Revision." )]
   PRS_Revision REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceActivity 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_ServiceIncident to PRS_Activity." )]
class PRS_ServiceActivity : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_ServiceIncident." )]
   PRS_ServiceIncident REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Activity." )]
   PRS_Activity REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceAgreement 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_ServiceIncident to PRS_Agreement." )]
class PRS_ServiceAgreement : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_ServiceIncident." )]
   PRS_ServiceIncident REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Agreement." )]
   PRS_Agreement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceProblem 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates PRS_ServiceIncident to PRS_Problem to describe the "
       "Problem being submitted to the Service Provider." )]
class PRS_ServiceProblem : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_ServiceIncident." )]
   PRS_ServiceIncident REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The PRS_Problem." )]
   PRS_Problem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceProvider 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates PRS_ServiceIncident to PRS_Contact to describe the "
       "Service Provider." )]
class PRS_ServiceProvider : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_ServiceIncident." )]
   PRS_ServiceIncident REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceRequester 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_ServiceRequester associates a PRS_ServiceIncident with a "
       "PRS_Contact representing the entity requesting service. Note "
       "that the Contact class is used for both Requesters and "
       "Providers, the context is determined by which association "
       "exists." )]
class PRS_ServiceRequester : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_ServiceIncident." )]
   PRS_ServiceIncident REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ServiceResolutionSolution 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates PRS_ServiceIncident to PRS_Solution to describe the "
       "Resolutions proposed by the Service Provider." )]
class PRS_ServiceResolutionSolution : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Description ( "The PRS_ServiceIncident." )]
   PRS_ServiceIncident REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PRS_Solution. PRS_Solution must be associated with "
          "at least one Resolution." )]
   PRS_Solution REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionCategory 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_SolutionCategory associates PRS_Solution with a "
       "PRS_Category for classification purposes." )]
class PRS_SolutionCategory : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Solution being classified." )]
   PRS_Solution REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The specific PRS_Category being used to classify the Solution."
           )]
   PRS_Category REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionExpression 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates PRS_SolutionElements (PRS_Reference, PRS_Problem or "
       "PRS_Resolution) with PRS_Expressions." )]
class PRS_SolutionExpression : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_SolutionElement." )]
   PRS_SolutionElement REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Expression." )]
   PRS_Expression REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionHasElement 
// ==================================================================
   [Association, Abstract, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_SolutionHasElement is an abstract base class for "
       "associating PRS_Solution with objects derived from "
       "PRS_SolutionElement. This association class allows all "
       "PRS_Reference, PRS_Problem and PRS_Resolution objects to be "
       "retrieved with a single query." )]
class PRS_SolutionHasElement : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Solution root object of the Solution." )]
   PRS_Solution REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PRS_Reference, PRS_Problem or PRS_Resolution "
          "aggregated into the Solution by this association." )]
   PRS_SolutionElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionProblem 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_SolutionProblem aggregates a Problem into a Solution." )]
class PRS_SolutionProblem : PRS_SolutionHasElement {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Solution root object of the Solution." )]
   PRS_Solution REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Problem aggregated into the Solution." )]
   PRS_Problem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionReference 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_SolutionReference aggregates a Reference into a Solution." )]
class PRS_SolutionReference : PRS_SolutionHasElement {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Solution root object of the Solution." )]
   PRS_Solution REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PRS_Reference aggregated into the Solution." )]
   PRS_Reference REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SolutionResolution 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_SolutionResolution aggregates a Resolution into a Solution." )]
class PRS_SolutionResolution : PRS_SolutionHasElement {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Solution root object of the Solution." )]
   PRS_Solution REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PRS_Solution aggregated into the Solution." )]
   PRS_Resolution REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_StatementFeature 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Statement with PRS_Feature." )]
class PRS_StatementFeature : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_Statement." )]
   PRS_Statement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Feature." )]
   PRS_Feature REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "BIOSServiceCapabilities advertises to a client the methods "
       "that are supported by CIM_BIOSService." )]
class CIM_BIOSServiceCapabilities : CIM_Capabilities {

      [Description ( 
          "This property advertises the methods that are supported "
          "by the service" ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", 
          "65536..4294967295" }, 
       Values { "SetBIOSAttribute", "RestoreBIOSDefaults", 
          "SetBIOSAttributeEmbeddedInstance", "ReadRawBIOSData", 
          "WriteRawBIOSData", "SetBIOSAttributes", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint32 MethodsSupported[];

      [Description ( 
          "The transformation algorithm, if any, used to protect "
          "passwords before use in the protocol. For instance, "
          "Kerberos doesn&apos;t store passwords as the shared." ), 
       ModelCorrespondence { "CIM_SharedSecret.Algorithm" }]
   string SupportedPasswordAlgorithms[];

      [Description ( 
          "This property specifies encoding the BIOS supports for "
          "denoting password parameter strings. Encoding defines "
          "the format that a password string is being passed into "
          "the BIOS or set with. \"kbd\" denotes a string in "
          "hexadecimal format containing keyboard scan code input. "
          "An example of a password structured in this format would "
          "be \"321539191E1F1F11181320\", which is the "
          "representation of \"my password\" in US English keyboard "
          "scan codes. \"ascii\" denotes clear text that shall "
          "comply with the ASCII character set. Character encodings "
          "from \" \" (decimal 32) to \"~\" (decimal 126) are "
          "supported. An example would be \"my password\". \"pin\" "
          "denotes that only numeric input in ASCII text is allowed "
          "for the password instance. An example would be \"1234\"." ), 
       ValueMap { "2", "3", "4", "5", "..", "65536..4294967295" }, 
       Values { "ascii", "kbd", "pin", "UTF16", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_BIOSPassword.SupportedEncodings" }]
   uint32 SupportedPasswordEncodings[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "A class derived from Capabilities that describes the boot "
       "configuration management aspects of a system." )]
class CIM_BootServiceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "An enumeration indicating the boot related operations "
          "that can be applied to a managed element. Since this is "
          "an array, multiple values may be specified. The current "
          "values in the enumeration are: \n"
          "0 = \"Unknown\", indicating that the capabilities are "
          "not known at this time. If this value is present in the "
          "array, it shall be the only value.\n"
          "1 = \"Other\", indicating that a capability not "
          "described by another value is present. A description of "
          "the capability can be found in the "
          "OtherBootConfigCapabilities property. \"Other\" can be "
          "present more than once in the BootConfigCapabilities "
          "array. \n"
          "2 = \"Creates Boot Configuration\", indicating that a "
          "boot service can create new boot configuration using an "
          "existing boot configuration as a template. \n"
          "3 = \"Applies Boot Configuration\", indicating that a "
          "boot service can apply the boot configuration of a "
          "computer system, without requiring a reset of the the "
          "computer system.\n"
          "4 = \"Sets Boot Role\", indicating that a boot service "
          "can set the role (Default or Next) of a boot "
          "configuration that is associated to a one or more "
          "computer systems.\n"
          "5 = \"Sets Boot Usage\", indicating that a boot service "
          "can set or unset the role (Default or Next) of a boot "
          "configuration for a specific computer system.\n"
          "6 = \"Change Boot Order Method Not Supported\", "
          "indicating that a boot service cannot change the boot "
          "order using the CIM_BootConfigSetting.ChangeBootOrder() "
          "method" ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "Creates Boot Configuration", 
          "Applies Boot Configuration", "Sets Boot Role", 
          "Sets Boot Usage", "Change Boot Order Not Supported" }, 
       ModelCorrespondence { 
          "CIM_BootServiceCapabilities.OtherBootConfigCapabilities" }]
   uint16 BootConfigCapabilities[];

      [Description ( 
          "A string describing the additional boot configuration "
          "capabilities of the element, used when the corresponding "
          "BootConfigCapabilities array element is set to the value "
          "1, \"Other\".Each element that corresponds to a "
          "BootCapabilitiesSupported array element with a value "
          "other than 1 \"Other\" shall have a value of NULL." ), 
       ModelCorrespondence { 
          "CIM_BootServiceCapabilities.BootConfigCapabilities" }]
   string OtherBootConfigCapabilities[];

      [Description ( 
          "An enumeration indicating the boot string properties in "
          "the CIM_BootSourceSetting which are supported. If the "
          "array contains a value, then all the BootSourceSetting "
          "instances managed by the service are guaranteed to have "
          "a non-null value for the corresponding property.Since "
          "this is an array, multiple values may be specified. The "
          "values in the enumeration are: \n"
          "2 = BootString property supported \n"
          "3 = BIOSBootString property supported \n"
          "4 = StructureBootString property supported" ), 
       ValueMap { "2", "3", "4" }, 
       Values { "BootString", "BIOSBootString", 
          "StructuredBootString" }, 
       ModelCorrespondence { "CIM_BootSourceSetting.BootString", 
          "CIM_BootSourceSetting.BIOSBootString", 
          "CIM_BootSourceSetting.StructuredBootString" }]
   uint16 BootStringsSupported[];

      [Description ( 
          "An enumeration indicating boot related capabilities that "
          "are not related to showing support for operations of a "
          "managed element. Since this is an array, multiple values "
          "may be specified. The current values in the enumeration "
          "are: \n"
          "0 = \"Unknown\", indicating that the capabilities are "
          "not known at this time. If this value is present in the "
          "array, it shall be the only value.\n"
          "1 = \"Other\", indicating that a capability not "
          "described by another value is present. A description of "
          "the capability can be found in the "
          "OtherBootConfigCapabilities property. \"Other\" can be "
          "present more than once in the BootCapabilitiesSupported "
          "array. \n"
          "2 = \"State Data Supported\" indicating that real-time "
          "boot related state properties of systems are modeled "
          "using \'State\' BootConfigSetting instances. In this "
          "methodology, each system shall be associated to a boot "
          "configuration representing the boot related state data "
          "via SettingsDefineState. All persistent boot "
          "configurations shall be related to the \'State\' "
          "instance via ElementSettingData associations." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Other", "State Data Supported" }]
   uint16 BootCapabilitiesSupported[];

      [Description ( 
          "A string describing the additional boot capabilities of "
          "the element, used when the corresponding "
          "BootCapabilitiesSupported array element is set to the "
          "value 1, \"Other\". Each element that corresponds to a "
          "BootCapabilitiesSupported array element with a value "
          "other than 1 \"Other\" shall have a value of NULL." ), 
       ModelCorrespondence { 
          "CIM_BootServiceCapabilities.BootCapabilitiesSupported" }]
   string OtherBootCapabilitiesSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemNodeCapabilities 
// ==================================================================
   [Version ( "2.7.2" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "Indicates general capabilities of a ComputerSystem node, such "
       "as the ability to support a battery (and be portable), and ECC "
       "memory. To tie these capabilities to a ComputerSystem "
       "instance, the ElementCapabilities association is used." )]
class CIM_ComputerSystemNodeCapabilities : CIM_Capabilities {

      [Required, Description ( 
          "Enumeration indicating whether a battery is installable/ "
          "supportable on this System. This is independent of "
          "whether one is currently installed. The latter is "
          "indicated by an instance of the CIM_Battery class "
          "associated using the SystemDevice relationship." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Battery Supported", 
          "Battery Not Supported" }]
   uint16 BatterySupported;

      [Required, Description ( 
          "Enumeration indicating whether ECC single or multi-bit "
          "memory is supported on this node. This is independent of "
          "whether ECC memory is actually installed. The latter is "
          "indicated by an instance of CIM_PhysicalMemory that "
          "\'Realizes\' the CIM_Memory of the System (associated "
          "using SystemDevice)." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Single-bit ECC", "Multi-bit ECC" }, 
       MappingStrings { "MIF.DMTF|Physical Memory|002.10" }]
   uint16 ECCSupported;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "Data related to Diagnostics may be recorded in various "
       "DiagnosticRecord objects. The type of information that is "
       "recorded in a log is specified via the LogOptions property in "
       "DiagnosticSetting." )]
class CIM_DiagnosticRecord : CIM_RecordForLog {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Description ( 
          "This property should reflect the value of the underlying "
          "DiagnosticService.Name property." ), 
       ModelCorrespondence { "CIM_DiagnosticService.Name" }]
   string ServiceName;

      [Required, Description ( 
          "This property SHOULD reflect the value of the underlying "
          "ManagedElement.ElementName property." ), 
       ModelCorrespondence { "CIM_ManagedElement.ElementName" }]
   string ManagedElementName;

      [Description ( 
          "The date and time that the record instance should be "
          "deleted. The expiration datetime SHOULD be set when the "
          "record is fully populated with record data. The value "
          "SHOULD be calculated using the ResultPersistence "
          "property of the DiagnosticSetting class. Once the "
          "Expiration Date has been reached, record instances "
          "SHOULD be deleted as soon as possible.\n"
          "If a ResultPersistence value is not provided, records "
          "MAY be deleted at any time." ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.ResultPersistence" }]
   datetime ExpirationDate;

      [Description ( 
          "The RecordType property specifies the nature of the data "
          "being entered into the ServiceRecord. The value in this "
          "property should match one of the values indicated by the "
          "DiagnosticSetting.LogOptions property. A brief summary "
          "of the various log options can be found in "
          "CIM_DiagnosticSetting.LogOptions." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14" }, 
       Values { "Unknown", "Other", "Results", "Subtests", 
          "Actions", "Warnings", "Status", "Device Errors", 
          "Service Errors", "Setting Data", "Statistics", 
          "Hardware Configuration", "Software Configuration", 
          "References", "Debug" }, 
       ModelCorrespondence { "CIM_DiagnosticSetting.LogOptions", 
          "CIM_DiagnosticRecord.OtherRecordTypeDescription" }]
   uint16 RecordType;

      [Description ( 
          "When \"Other\" (value=1) is entered in the RecordType "
          "property, OtherRecordTypeDescription can be used to "
          "describe the message type." ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.OtherLogOptionsDescriptions", 
          "CIM_DiagnosticRecord.RecordType" }]
   string OtherRecordTypeDescription;

      [Description ( 
          "A timestamp indicating when the record was created." )]
   datetime CreationTimeStamp;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticServiceCapabilities 
// ==================================================================
   [Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "DiagnosticServiceCapabilities is a class that describes the "
       "capabilities of the diagnostic service. This provides the "
       "means for the diagnostic service to describe its abilities, "
       "limitations, and/or potential for use of various diagnostic "
       "service parameters. For example, what types of settings the "
       "diagnostic service supports." )]
class CIM_DiagnosticServiceCapabilities : CIM_Capabilities {

      [Description ( 
          "The SupportedServiceModes property lists the operational "
          "modes that are supported by the Diagnostic Service. "
          "These modes may correspond to, but are not limited to, "
          "settings that may be applied to a Diagnostic Service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "0x8000" }, 
       Values { "Unknown", "Other", "PercentOfTestCoverage", 
          "QuickMode", "HaltOnError", "ResultPersistence", 
          "No Service Modes" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.OtherSupportedServiceModesDescriptions" }]
   uint16 SupportedServiceModes[];

      [Description ( 
          "Provides additional information for "
          "SupportedServiceModes when the corresponding value is "
          "set to 1 (\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedServiceModes" }]
   string OtherSupportedServiceModesDescriptions[];

      [Description ( 
          "The SupportedLoopControl property lists the loop "
          "controls that are supported by the Diagnostic Service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "0x8000" }, 
       Values { "Unknown", "Other", "Continuous", "Count", "Timer", 
          "ErrorCount", "No Loop Control" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSetting.LoopControl", 
          "CIM_DiagnosticServiceCapabilities.OtherSupportedLoopControlDescriptions" }]
   uint16 SupportedLoopControl[];

      [Description ( 
          "Provides additional information for SupportedLoopControl "
          "when the corresponding value is set to 1 (\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedLoopControl" }]
   string OtherSupportedLoopControlDescriptions[];

      [Description ( 
          "The SupportedLogOptions property lists the log options "
          "that are supported by the Diagnostic Service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "0x8000" }, 
       Values { "Unknown", "Other", "Results", "Subtests", 
          "Actions", "Warnings", "Status", "Device Errors", 
          "Service Errors", "Setting Data", "Statistics", 
          "Hardware Configuration", "Software Configuration", 
          "References", "Debug", "No Log Options" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSetting.LogOptions", 
          "CIM_DiagnosticServiceCapabilities.OtherSupportedLogOptionsDescriptions" }]
   uint16 SupportedLogOptions[];

      [Description ( 
          "Provides additional information for SupportedLogOptions "
          "when the corresponding value is set to 1 (\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedLogOptions" }]
   string OtherSupportedLogOptionsDescriptions[];

      [Description ( 
          "The SupportedLogStorage property lists the storage "
          "options for logging that are supported by the Diagnostic "
          "Service. \n"
          "The values are: \n"
          "\"DiagnosticRecordLog\" (Value = 2): Supports use of the "
          "DiagnosticRecordLog class for aggregating "
          "DiagnosticRecords. \n"
          "\"MessageLog\" (Value = 3): Supports writing log "
          "information using the methods in the MessageLog class. \n"
          "\"File\" (Value = 4): Supports writing log information "
          "to a file." ), 
       ValueMap { "0", "1", "2", "3", "4", "0x8000" }, 
       Values { "Unknown", "Other", "DiagnosticRecordLog", 
          "MessageLog", "File", "No Log Storage" }, 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.OtherSupportedLogStorageDescriptions", 
          "CIM_DiagnosticSetting.LogStorage" }]
   uint16 SupportedLogStorage[];

      [Description ( 
          "Provides additional information for SupportedLogStorage "
          "when the corresponding value is set to 1 (\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedLogStorage" }]
   string OtherSupportedLogStorageDescriptions[];

      [Description ( 
          "The SupportedExecutionControls property lists the job "
          "controls that are supported by the Diagnostic Service. "
          "The values are: \n"
          "\"Job Creation\" (Value = 2): publishes that a "
          "ConcreteJob instance will be created to control the "
          "diagnostic job launched by the diagnostic service. \n"
          "\"Kill Job\" (Value = 3): publishes that the diagnostic "
          "service implements the "
          "ConcreteJob.RequestStateChange(Kill) method. \n"
          "\"Suspend Job\" (Value = 4): publishes that the "
          "diagnostic service implements the "
          "ConcreteJob.RequestStateChange(Suspend) method. \n"
          "\"Terminate Job\" (Value = 5): publishes that the "
          "diagnostic service implements the "
          "ConcreteJob.RequestStateChange(Terminate) method." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "0x8000" }, 
       Values { "Unknown", "Other", "Job Creation", "Kill Job", 
          "Suspend Job", "Terminate Job", "No Execution Controls" }, 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.OtherSupportedExecutionControlsDescriptions" }]
   uint16 SupportedExecutionControls[];

      [Description ( 
          "Provides additional information for "
          "SupportedExecutionControls when the corresponding value "
          "is set (\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedExecutionControls" }]
   string OtherSupportedExecutionControlsDescriptions[];

      [Deprecated { 
          "CIM_DiagnosticServiceCapabilities.SupportedLogOptions" }, 
       Description ( 
          "This property is being deprecated because the "
          "TestWarningLevel and LogOptions properties serve the "
          "same purpose. \n"
          "Lists the level of warning messages that MAY be logged. "
          "If for example no warning information is required, the "
          "level would be set to \"No Warnings\" (value=0). Using "
          "\"Missing Resources\" (value=1) will cause warnings to "
          "be generated when required resources or hardware are not "
          "found. Setting the value to 2, \"Testing Impacts\", "
          "results in both missing resources and \'test impact\' "
          "warnings (for example, multiple retries required) to be "
          "reported." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "No Warnings", "Missing Resources", 
          "Testing Impacts", "All Warnings" }]
   uint16 SupportedTestWarnings = 3;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticServiceRecord 
// ==================================================================
   [Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "While a DiagnosticService is running, data generated by the "
       "service may be recorded in DiagnosticServiceRecord objects. A "
       "DiagnosticServiceRecord is related to its MessageLog via an "
       "instance of the RecordInLog aggregation class." )]
class CIM_DiagnosticServiceRecord : CIM_DiagnosticRecord {

      [Description ( 
          "If applicable, this string should contain one or more "
          "vendor specific error codes that the diagnostic service "
          "detected. These error codes may be used by the vendor "
          "for variety of purposes such as: fault data base "
          "indexing, field service trouble ticketing, product "
          "quality tracking, part failure history, etc. Since these "
          "codes are for vendor purposes they may assume any form. "
          "Details on suggested use cases will be left to white "
          "papers. The array of error codes has model "
          "correspondence with an ErrorCount array so the number of "
          "errors reported can be analyzed by individual error "
          "code." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticServiceRecord.ErrorCount" }]
   string ErrorCode[];

      [Description ( 
          "Since some tests may detect transient and correctable "
          "errors such as a network diagnostic or memory test, an "
          "error count is useful to indicate the severity of the "
          "failure. This field contains an integer value of the "
          "number of errors detected by the test. The ErrorCount is "
          "an array with model correspondence to ErrorCode so that "
          "the test can report an ErrorCount on each type of error "
          "encountered. It is recommended that hard errors and "
          "correctable or recoverable errors be given different "
          "codes so that clients with knowledge of the error codes "
          "can evaluate correctable, recoverable, and hard errors "
          "independently." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticServiceRecord.ErrorCode" }]
   uint32 ErrorCount[];

      [Description ( 
          "Since some tests may be looped, it is useful to report "
          "how many iterations passed and failed. This is relevant "
          "in analyzing transitory failures. For example, if all "
          "the errors occurred in just one of 100 iterations, the "
          "device may be viewed as OK or marginal, to be monitored "
          "further rather then failed. Note: LoopsPassed & "
          "LoopsFailed should add up to the loops completed. \n"
          "A value for this property would likely be reported with "
          "a DiagnosticServiceRecord.RecordType value = "
          "\"ResultSummary\", which contains a summary result "
          "covering all iterations of a looped service." )]
   uint32 LoopsFailed;

      [Description ( 
          "Since some tests may be looped, it is useful to report "
          "how many iterations passed and failed. This is relevant "
          "in analyzing transitory failures. For example if all the "
          "errors occurred in just one of 100 iterations, the "
          "device may be viewed as OK or marginal, to be monitored "
          "further rather then failed. Note: LoopsPassed & "
          "LoopsFailed should add up to the loops completed. \n"
          "A value for this property would likely be reported with "
          "a DiagnosticServiceRecord.RecordType value = "
          "\"ResultSummary\", which contains a summary result "
          "covering all iterations of a looped service." )]
   uint32 LoopsPassed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticSetting 
// ==================================================================
   [Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "Specific diagnostic test parameters and execution instructions "
       "are defined by this class. To provide more detailed Settings "
       "for a type of test (i.e., additional properties), subclassing "
       "is appropriate." )]
class CIM_DiagnosticSetting : CIM_Setting {

      [Key, Override ( "SettingID" ), 
       Description ( 
          "In order to ensure uniqueness within the NameSpace, the "
          "value of SettingID SHOULD be constructed using the "
          "following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the SettingID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in SettingID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant SettingID is not re-used across any "
          "SettingIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "A preferred value for <LocalID> is a timestamp (CIM "
          "DateTime). For example, ACME:19980525133015.0000000-300" ), 
       MaxLen ( 256 )]
   string SettingID;

      [Deprecated { "CIM_DiagnosticSetting.LogOptions", 
          "CIM_DiagnosticSetting.VerbosityLevel" }, 
       Write, Description ( 
          "This property is being deprecated because the "
          "TestWarningLevel and LogOptions properties serve the "
          "same purpose. It is deprecated in lieu of using the "
          "LogOptions (\'Warnings\') property in conjunction with "
          "VerbosityLevel to specify this information. The \'Missing "
          "Resources\' and \'Testing Impacts\' values are not "
          "included directly in LogOptions, but they are expected "
          "to be recorded in the resulting DiagnosticServiceRecord "
          "object. \n"
          "\n"
          "Sets the level of warning messages to be logged. \n"
          "If for example no warning information is required, the "
          "level would be set to \"No Warnings\" (value=0). Using "
          "\"Missing Resources\" (value=1) will cause warnings to "
          "be generated when required resources or hardware are not "
          "found. Setting the value to 2, \"Testing Impacts\", "
          "results in both missing resources and \'test impact\' "
          "warnings (for example, multiple retries required) to be "
          "reported." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "No Warnings", "Missing Resources", 
          "Testing Impacts", "All Warnings" }]
   uint16 TestWarningLevel;

      [Deprecated { "CIM_DiagnosticSetting.LogOptions" }, 
       Write, Description ( 
          "When this flag is true, the diagnostic test will report "
          "\'soft errors\'. In this context, a soft error is a "
          "message from the diagnostic reporting a known defect in "
          "the hardware or driver configuration, or execution "
          "environment. Examples are: \'Not enough memory\', "
          "\'Driver IOCTL not implemented\', \'Video RAM compare "
          "failed during polygon fill test (A known defect in the "
          "video chipset)\', etc." )]
   boolean ReportSoftErrors;

      [Deprecated { "CIM_DiagnosticSetting.LogOptions" }, 
       Write, Description ( 
          "When this flag is true, the diagnostic test will report "
          "\'status messages\'. In this context, a status message "
          "indicates that the diagnostic code is at a checkpoint. "
          "Examples are: \"Completion of phase 1\", \"Complex "
          "pattern\", etc." )]
   boolean ReportStatusMessages;

      [Write, Description ( 
          "When this flag is true, the test will halt after finding "
          "the first error." )]
   boolean HaltOnError;

      [Write, Description ( 
          "When this flag is true, the test software should attempt "
          "to run in an accelerated fashion either by reducing the "
          "coverage or number of tests performed." )]
   boolean QuickMode;

      [Write, Description ( 
          "Requests the diagnostic software to reduce test coverage "
          "to the specified percentage. For example, a hard drive "
          "scan test could be asked to run at 50%. The most "
          "effective way to accomplish this is for the test "
          "software to scan every other track, as opposed to only "
          "scanning the first half of a drive. It is assumed that "
          "the effectiveness of the test is impacted proportional "
          "to the percentage of testing requested. Permissible "
          "values for this property range from 0 to 100." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_DiagnosticServiceCapabilities.SupportedServiceModes" }]
   uint8 PercentOfTestCoverage;

      [Write, Description ( 
          "Array entries contain parameters corresponding to "
          "entries in the LoopControl array, limiting the number of "
          "times a test should be repeated with a single invocation "
          "of a test method by a CIM client." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSetting.LoopControl" }]
   string LoopControlParameter[];

      [Write, Description ( 
          "LoopControl, used in conjunction with "
          "LoopControlParameter, sets one or more loop control "
          "mechanisms that limits the number of times a test should "
          "be repeated with a single invocation of a test method by "
          "a CIM client. There is an array-positional "
          "correspondence between LoopControl entries & "
          "LoopControlParameter entries. The entries in these "
          "coupled arrays of loop controls can be used in a logical "
          "OR fashion to achieve the desired loop control. For "
          "example, if a client wants to loop a test 1000 times, "
          "but quit if a timer runs out, it could set both controls "
          "into the LoopControl array as two separate entries in "
          "each array. The looping test will terminate when the "
          "first of the two ORed conditions are met. \n"
          "The descriptions for each loop control are given below: \n"
          "Unknown (= 0) \n"
          "Other (= 1) : Additional detail may be found in "
          "OtherLoopControlDescriptions. \n"
          "Continuous (= 2) : The corresponding LoopControl "
          "Parameter is ignored and the test will execute "
          "continuously. Tests that use this control should also "
          "support DiscontinueTest. \n"
          "Count(=3) : The corresponding LoopControlParameter is "
          "interpreted as a loop count (uint32), indicating the "
          "number of times the test should be repeated with a "
          "single invocation of a test method by a CIM client. \n"
          "Timer (= 4) : The corresponding LoopControlParameter is "
          "interpreted as an initial value (uint32) for a test loop "
          "timer, given in seconds. The looping is terminated when "
          "this timer has lapsed. \n"
          "ErrorCount (= 5) : The corresponding LoopControl "
          "Parameter is interpreted as an error count (uint32). The "
          "loop will continue until the number of errors that have "
          "occurred exceeds the ErrorCount. Note: the ErrorCount "
          "only refers to hard test errors; it does not include "
          "soft errors or warnings." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Continuous", "Count", "Timer", 
          "ErrorCount" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.LoopControlParameter", 
          "CIM_DiagnosticSetting.OtherLoopControlDescriptions", 
          "CIM_DiagnosticServiceCapabilities.SupportedLoopControl" }]
   uint16 LoopControl[];

      [Deprecated { 
          "CIM_DiagnosticSetting.OtherLoopControlDescriptions" }, 
       Write, Description ( 
          "This property is deprecated and replaced with an array. \n"
          "It provides additional information for LoopControl when "
          "its value is set to 1 (\'Other\')." ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.LoopControlParameter" }]
   string OtherLoopControlDescription;

      [Write, Description ( 
          "This property provides additional information for "
          "LoopControl when the corresponding value is set to 1 "
          "(\'Other\')." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.LoopControlParameter", 
          "CIM_DiagnosticSetting.LoopControl" }]
   string OtherLoopControlDescriptions[];

      [Write, Description ( 
          "The ResultPersistence property is a directive from a "
          "diagnostic client to a diagnostic provider. It allows "
          "the client to specify to the diagnostic service provider "
          "how long to persist the messages that result from "
          "execution of a diagnostic service. This applies to "
          "instances of DiagnosticResult as well as the preferred "
          "use of DiagnosticServiceRecord. The timeout period "
          "starts upon completion of the diagnostic action "
          "described by the DiagnosticService. \n"
          "\n"
          "Here is a summary of the choices and behaviors for "
          "different ResultPersistence values: \n"
          "0 = \"No Persistence\": \n"
          "Setting the timer to zero tells the provider not to "
          "persist the diagnostic result. The diagnostic "
          "information is only available while the diagnostic is "
          "executing or at its conclusion. \n"
          "Value > 0 and < 0xFFFFFFFF = \"Persist With TimeOut\": \n"
          "Setting the ResultPersistenceOption to a integer will "
          "cause the DiagnosticResult to be persisted for that "
          "number of seconds. At the end of that time, the "
          "DiagnosticResult may be deleted by the diagnostic "
          "service provider. \n"
          "0xFFFFFFFF = \"Persist Forever\": \n"
          "By setting the timeout value to the very large value, "
          "0xFFFFFFFF, the provider shall persist results forever. "
          "In this case, the client MUST bear the responsibility "
          "for deleting them." ), 
       Units ( "Seconds" )]
   uint32 ResultPersistence;

      [Write, Description ( 
          "The LogOptions property is used to specify the types of "
          "data that SHOULD be logged by the diagnostic service. "
          "Any number of values may be specified in the array. Note "
          "that the default behavior is for nothing to be logged. \n"
          "The AMOUNT of data to be logged can be controlled for "
          "each value selected by specifying a VerbosityLevel "
          "value. Verbosity may not apply to all LogOptions values, "
          "in which case the default VerbosityLevel of \"Standard\" "
          "SHOULD be used. \n"
          "The RecordForLog produced by running a service MUST be "
          "tagged with a RecordType that corresponds to one of "
          "these log option values. \n"
          "Following is a brief description of the available log "
          "options: \n"
          "* \"Other\" (value = 1): Details are given in the "
          "corresponding OtherLogOptionsDescriptions entry. \n"
          "* \"Results\" (value = 2): Log the results obtained by "
          "running the service. This is the most common value for "
          "reporting the service results. \n"
          "* \"Subtests\" (value = 3): Log a test summary report "
          "upon completion of each subtest and each loop iteration. "
          "The summary reports SHOULD state whether the individual "
          "subtest or iteration passed or failed and list relevant "
          "error codes and respective error counts. \n"
          "* \"Actions\" (value = 4): Log corrective action and "
          "instructional messages to guide service personnel; for "
          "example, a prioritized list of actions to perform in "
          "order to isolate a failure or correct a problem. When "
          "ordering steps or prioritizing actions, a number should "
          "proceed the text; for example, 1) Do this first, 2) Do "
          "this next, etc. \n"
          "* \"Warnings\" (value = 5): Log warning messages; for "
          "example, \'device will be taken off line\', \'test is "
          "long-running\' or \'available memory is low\'. The "
          "VerbosityLevel value specified for the Warnings option "
          "is related to the severity of the warnings logged; for "
          "instance, one would specify a high level of verbosity to "
          "get all warnings logged, regardless of severity, and a "
          "low level of verbosity to have only the most severe "
          "warnings logged. \n"
          "* \"Status\" (value = 6): Log status messages; for "
          "example, state information for the driver, device, or "
          "system. \n"
          "* \"Device Errors\" (value = 7): Log errors related to "
          "the managed element being serviced. \n"
          "* \"Service Errors\" (value = 8): Log errors related to "
          "the service itself rather than the element being "
          "serviced, such as \'Resource Allocaton Failure\'. \n"
          "* \"Setting Data\" (value=9): Log the property values of "
          "the DiagnosticSetting object used to configure the "
          "service. \n"
          "* \"Statistics\" (value = 10): Log statistical messages; "
          "for example, packets sent per second. \n"
          "* \"Hardware Configuration\" (value = 11): Log messages "
          "that contain information about the hardware "
          "configuration as viewed by the service; for example, "
          "vendor, version, FRU identification, and location "
          "information. The format and contents of this property is "
          "element dependent. Examples are: SCSI ID, LPTx, PCI Slot "
          "Number, and Dimm#. \n"
          "* \"Software Configuration\" (value = 12): Log messages "
          "that contain information about the software environment "
          "as viewed by the service; for example, the name and "
          "version of all the critical software elements "
          "controlling the device under test. Each configuration "
          "message SHOULD have the following common format: Element "
          "name; element type; manufacturer name; version; for "
          "example, \'Miniport driver; SCSI; Intel; Version 1.2\'. \n"
          "* \"Reference\" (value = 13): Log the keys of an CIM "
          "object of of interest; for example, the element under "
          "test, or a data file. \n"
          "* \"Debug\" (value = 14): Log debug messages. These "
          "messages are vendor specific." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15" }, 
       Values { "Unknown", "Other", "Results", "Subtests", 
          "Actions", "Warnings", "Status", "Device Errors", 
          "Service Errors", "Setting Data", "Statistics", 
          "Hardware Configuration", "Software Configuration", 
          "References", "Debug", "No Log Options" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.OtherLogOptionsDescriptions", 
          "CIM_DiagnosticServiceCapabilities.SupportedLogOptions", 
          "CIM_DiagnosticServiceRecord.RecordType", 
          "CIM_DiagnosticSetting.VerbosityLevel" }]
   uint16 LogOptions[];

      [Write, Description ( 
          "Provides additional information regarding the types of "
          "test messages that are logged when the property "
          "LogOptions includes the value 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_DiagnosticSetting.LogOptions" }]
   string OtherLogOptionsDescriptions[];

      [Write, Description ( 
          "The LogStorage setting property indicates which types of "
          "supported storage should be used by the Diagnostic "
          "Service for logging of the data specified in LogOptions. \n"
          "The values are: \n"
          "\"DiagnosticRecordLog\" (Value = 2): Use the "
          "DiagnosticRecordLog and DiagnosticRecord classes. \n"
          "\"MessageLog\" (Value = 4): Use the MessageLog class and "
          "its methods. \n"
          "\"File\" (Value = 5): Write data to a file." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "DiagnosticRecordLog", 
          "MessageLog", "File" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticSetting.OtherLogStorageDescriptions", 
          "CIM_DiagnosticServiceCapabilities.SupportedLogStorage" }]
   uint16 LogStorage[];

      [Write, Description ( 
          "This property provides additional information for "
          "LogStorage when the corresponding value is set to 1 "
          "(\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSetting.LogStorage" }]
   string OtherLogStorageDescriptions[];

      [Write, Description ( 
          "A client may want to specify the desired volume or "
          "detail logged by a diagnostic service. This property is "
          "applied to a corresponding logging option, acting as a "
          "qualifier on its description. Three levels of verbosity "
          "are defined as follows: \n"
          "* \"Minimum\" (value=2): Specified if the least amount "
          "of information is desired; for example, Pass or Fail. \n"
          "* \"Standard\" (value=3): This is the standard level of "
          "messaging provided by the service. It is the form most "
          "likely to be used if no verbosity value is specified "
          "(default). \n"
          "* \"Full\" (value=4): Specified when all information, "
          "regardless of size, is desired. \n"
          "Note that VerbosityLevel is a subjective property and "
          "relates to the degree of detail, not an absolute metric. "
          "A client simply specifies its desired level of detail "
          "and the provider publishes its data in accordance with "
          "this desired level of detail. \n"
          "Verbosity may not apply to all LogOptions values, in "
          "which case the default VerbosityLevel of \"Standard\" "
          "SHOULD be used." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Minimum", "Standard", "Full" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticSetting.LogOptions" }]
   uint16 VerbosityLevel[];

      [Write, Description ( 
          "This property, along with the locale information in "
          "LocalizationCapabilities and DiagnosticServiceRecord, "
          "meets the requirement to specify locale for results "
          "produced by a diagnostic service. A locale indicates a "
          "particular geographical, political, or cultural region. "
          "The Locales property of the DiagnosticSetting class is "
          "an array of strings whose entries specify a language to "
          "be used in the formulation of information requested by "
          "or delivered to a client as a result of running a "
          "diagnostic service. It is specified by the client as an "
          "input parameter to the RunDiagnostic method, by virtue "
          "of its inclusion in this Setting class which is a "
          "parameter of the method. A single Setting object may "
          "specify more than one Locale. In this case, information "
          "MUST be returned in each language specified. \n"
          "\n"
          "Each array entry consists of three sub-strings, "
          "separated by underscores: \n"
          "- The first sub-string is the language code, as "
          "specified in ISO639. \n"
          "- The second sub-string is the country code, as "
          "specified in ISO3166. \n"
          "- The third sub-string is a variant, which is vendor "
          "specific. \n"
          "For example, US English appears as: \"en_US_WIN\", where "
          "the \"WIN\" variant would specify a Windows "
          "browser-specific collation (if one exists). Since the "
          "variant is not standardized, it is not commonly used and "
          "generally is limited to easily recognizable values "
          "(\"WIN\", \"UNIX\", \"EURO\", etc.) used in standard "
          "environments. The language and country codes are "
          "required; the variant may be empty." ), 
       ModelCorrespondence { 
          "CIM_LocalizationCapabilities.SupportedOutputLocales" }]
   string Locales[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class contains a snapshot of the settings that were used "
       "when the associated Diagnostic service was run." )]
class CIM_DiagnosticSettingDataRecord : CIM_DiagnosticRecord {

      [Description ( 
          "A string containing an encoding of the "
          "DiagnosticSettingData instance that was used when the "
          "diagnostic service was run." ), 
       EmbeddedInstance ( "CIM_DiagnosticSettingData" )]
   string Settings;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "A snapshot of the properties in the DiagnosticSetting instance "
       "that was used when the Diagnostic was run." )]
class CIM_DiagnosticSettingRecord : CIM_DiagnosticRecord {

      [Description ( 
          "When this flag is true, the test will halt after finding "
          "the first error." )]
   boolean HaltOnError;

      [Description ( 
          "When this flag is true, the test software should attempt "
          "to run in an accelerated fashion either by reducing the "
          "coverage or number of tests performed." )]
   boolean QuickMode;

      [Description ( 
          "The requested percentage of coverage for the diagnostic "
          "service. For example, a hard drive scan test could be "
          "asked to run at 50%. Permissible values for this "
          "property range from 0 to 100." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint8 PercentOfTestCoverage;

      [Description ( 
          "Array entries contain parameters corresponding to "
          "entries in the LoopControl array, limiting the number of "
          "times a test should be repeated with a single invocation "
          "of RunTest by a CIM client." ), 
       ArrayType ( "Indexed" )]
   string LoopControlParameter[];

      [Description ( 
          "LoopControl, used in conjunction with "
          "LoopControlParameter, sets one or more loop control "
          "mechanisms that limits the number of times a test should "
          "be repeated with a single invocation of RunTest by a CIM "
          "client. There is an array-positional correspondence "
          "between LoopControl entries & LoopControlParameter "
          "entries. The entries in these coupled arrays of loop "
          "controls can be used in a logical OR fashion to achieve "
          "the desired loop control. For example, if a client wants "
          "to loop a test 1000 times, but quit if a timer runs out, "
          "it could set both controls into the LoopControl array as "
          "two separate entries in each array. The looping test "
          "will terminate when the first of the two Ored conditions "
          "are met. \n"
          "A brief description for each loop control can be found "
          "in the description of DiagnosticSetting.LoopControl." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Continuous", "Count", "Timer", 
          "Error Count" }, 
       ArrayType ( "Indexed" )]
   uint16 LoopControl[];

      [Description ( 
          "Provides additional information for LoopControl when its "
          "value is set to 1 (\'Other\')." ), 
       ArrayType ( "Indexed" )]
   string OtherLoopControlDescriptions[];

      [Description ( 
          "The desired length of time to persist the messages that "
          "result from execution of a diagnostic service. Here is a "
          "summary of the choices and behaviors for different "
          "ResultPersistence values: \n"
          "0 = \"No Persistence\": \n"
          "Setting the timer to zero tells the provider not to "
          "persist the diagnostic result. The diagnostic "
          "information is only available while the diagnostic is "
          "executing or at its conclusion. \n"
          "Value > 0 and < 0xFFFFFFFF = \"Persist With TimeOut\": \n"
          "Setting the ResultPersistenceOption to a integer will "
          "cause the DiagnosticResult to be persisted for that "
          "number of seconds. At the end of that time, the "
          "DiagnosticResult may be deleted by the diagnostic "
          "service provider. \n"
          "0xFFFFFFFF = \"Persist Forever\": \n"
          "By setting the timeout value to the very large value, "
          "0xFFFFFFFF, the provider shall persist results forever. "
          "In this case, the client MUST bear the responsibility "
          "for deleting them." ), 
       Units ( "Seconds" )]
   uint32 ResultPersistence;

      [Description ( 
          "The LogOptions property lists the log options that were "
          "requested for the Diagnostic Service. A brief summary of "
          "the various log options can be found in "
          "CIM_DiagnosticSetting.LogOptions." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "0x8000" }, 
       Values { "Unknown", "Other", "Results", "Subtests", 
          "Actions", "Warnings", "Status", "Device Errors", 
          "Service Errors", "Setting Data", "Statistics", 
          "Hardware Configuration", "Software Configuration", 
          "References", "Debug", "No Log Options" }, 
       ArrayType ( "Indexed" )]
   uint16 LogOptions[];

      [Description ( 
          "Provides additional information regarding the types of "
          "test messages that are logged when the property "
          "LogOptions includes the value 1 (\"Other\")." )]
   string OtherLogOptionsDescriptions[];

      [Description ( 
          "The LogStorage setting property indicates which types of "
          "supported storage should be used by the Diagnostic "
          "Service for logging of the data specified in LogOptions. \n"
          "The values are: \n"
          "\"DiagnosticRecordLog\" (Value = 2): Use the "
          "DiagnosticRecordLog and DiagnosticRecord classes. \n"
          "\"MessageLog\" (Value = 4): Use the MessageLog class and "
          "its methods. \n"
          "\"File\" (Value = 5): Write data to a file." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "DiagnosticRecordLog", 
          "MessageLog", "File" }, 
       ArrayType ( "Indexed" )]
   uint16 LogStorage[];

      [Description ( 
          "This property provides additional information for "
          "LogStorage when the corresponding value is set to 1 "
          "(\"Other\")." ), 
       ArrayType ( "Indexed" )]
   string OtherLogStorageDescriptions[];

      [Description ( 
          "A client may want to specify the volume or detail of "
          "information logged by a diagnostic service. This metric "
          "is applied to a corresponding logging option, acting as "
          "a qualifier on its description. Three levels of "
          "verbosity are defined as follows: \n"
          "* \"Minimum\" (value=2): Specified if the least amount "
          "of information is desired; for example, Pass or Fail. \n"
          "* \"Standard\" (value=3): This is the standard level of "
          "messaging provided by the service. It is the form most "
          "likely to be used if no verbosity value is specified "
          "(default). \n"
          "* \"Full\" (value=4): Specified when all information, "
          "regardless of size, is desired. \n"
          "Verbosity may not apply to all LogOptions values, in "
          "which case the default VerbosityLevel of \"Standard\" "
          "SHOULD be used." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Minimum", "Standard", "Full" }, 
       ArrayType ( "Indexed" )]
   uint16 VerbosityLevel[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileSystemCapabilities 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::FilesystemServices" ), 
    Description ( 
       "This class defines the abilities for persistence and "
       "recoverability of a FileSystem. This information is tied to "
       "the FileSystem using the ElementCapabilities association." )]
class CIM_FileSystemCapabilities : CIM_Capabilities {

      [Description ( 
          "An array of enumerated values representing the "
          "persistence capabilities of the FileSystem. A value of "
          "\"Persistent\" indicates that the FileSystem supports "
          "persistence, can be preserved through an orderly "
          "shutdown and could be protected. A value of \"Temporary\" "
          "indicates that the FileSystem supports non-persistence, "
          "may not be protected and may not survive a shutdown. A "
          "value of \"External\" indicates that the FileSystem "
          "could controlled outside of the operating environment "
          "and may need to be protected by specialized means. A "
          "value of \"Other\" is provided to allow for additional "
          "persistence types, to be described in the "
          "OtherPersistenceType attribute, and is expected to be "
          "rarely, if ever, used." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Persistent", "Temporary", "External" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FileSystemCapabilities.SupportedPersistenceTypes", 
          "CIM_FileSystem.PersistenceType" }]
   uint16 SupportedPersistenceTypes[];

      [Description ( 
          "An array of strings describing the persistence "
          "capabilities where the corresponding entry in "
          "SupportedPersistenceTypes has a value of \"Other\". This "
          "value is ignored in all other cases." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FileSystemCapabilities.SupportedPersistenceTypes", 
          "CIM_FileSystem.OtherPersistenceType" }]
   string SupportedOtherPersistenceTypes[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileSystemSettingData 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "This class allows a client to specify the desired persistence "
       "of a FileSystem. This information is tied to the FileSystem "
       "using the ElementSettingData association." )]
class CIM_FileSystemSettingData : CIM_ScopedSettingData {

      [Write, Description ( 
          "An enumerated value representing the intended "
          "persistence characteristics of the FileSystem. A value "
          "of \"Persistent\" indicates that the FileSystem should "
          "be persistent, should be preserved through an orderly "
          "shutdown and should be protected. A value of \"Temporary\" "
          "indicates that the FileSystem should be non-persistent, "
          "should not be protected and may not survive a shutdown. "
          "A value of \"External\" indicates that the FileSystem "
          "should be controlled outside of the operating "
          "environment and may need to be protected by specialized "
          "means. A value of \"Other\" is provided to allow for "
          "additional persistence types, to be described in the "
          "OtherPersistenceType attribute, and is expected to be "
          "rarely, if ever, used." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Persistent", "Temporary", "External" }, 
       ModelCorrespondence { 
          "CIM_FileSystemSettingData.OtherPersistenceType", 
          "CIM_FileSystem.PersistenceType" }]
   uint16 PersistenceType;

      [Write, Description ( 
          "A string describing the persistence characteristics when "
          "PersistenceType is \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_FileSystemSettingData.PersistenceType", 
          "CIM_FileSystem.OtherPersistenceType" }]
   string OtherPersistenceType;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "The LogEntry object can describe the definitional format for "
       "entries in a Log, or can be used to instantiate the actual "
       "entries in the Log." )]
class CIM_LogEntry : CIM_RecordForLog {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( "The containing Log\'s InstanceID." ), 
       MaxLen ( 256 )]
   string LogInstanceID;

      [Description ( 
          "The containing Log\'s Name. This property is available "
          "for backwards continuity with CIM_LogRecord." ), 
       MaxLen ( 256 )]
   string LogName;

      [Description ( 
          "RecordID may be used to provide a representation of log "
          "entry ordering or pointers/handles for log entries." ), 
       MaxLen ( 256 )]
   string RecordID;

      [Description ( 
          "A LogEntry may include a timestamp for the entry." )]
   datetime CreationTimeStamp;

      [Description ( 
          "A string that uniquely identifies, within the scope of "
          "the OwningEntity, the format of the Message." ), 
       ModelCorrespondence { "CIM_LogEntry.Message", 
          "CIM_LogEntry.MessageArguments" }]
   string MessageID;

      [Description ( 
          "The formatted message. This message is constructed by "
          "combining some or all of the dynamic elements specified "
          "in the MessageArguments property with the static "
          "elements uniquely identified by the MessageID in a "
          "message registry or other catalog associated with the "
          "OwningEntity." ), 
       ModelCorrespondence { "CIM_LogEntry.MessageID", 
          "CIM_LogEntry.MessageArguments" }]
   string Message;

      [Description ( 
          "An array containing the dynamic content of the message.\r\n"
          "Each DYNAMIC_ELEMENT for the message referred to by the "
          "MessageID property shall be contained in "
          "MessageArguments whether the DYNAMIC_ELEMENT is included "
          "in the Message or not.\r\n"
          "In addition, the entries in MessageArguments need to be "
          "in the same order as the DYNAMIC_ELEMENTs." ), 
       ModelCorrespondence { "CIM_LogEntry.Message", 
          "CIM_LogEntry.MessageID" }]
   string MessageArguments[];

      [Description ( 
          "A string that uniquely identifies the entity that owns "
          "the definition of the format of the Message described in "
          "this instance. OwningEntity MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity or standards body defining the "
          "format." )]
   string OwningEntity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalFile 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A LogicalFile is a named collection of data or executable "
       "code, or represents a LogicalDevice or Directory. It is "
       "located within the context of a FileSystem, on a Storage "
       "Extent." )]
class CIM_LogicalFile : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_FileSystem.CSCreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_FileSystem.CSName" )]
   string CSName;

      [Key, Description ( 
          "The scoping FileSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_FileSystem.CreationClassName" )]
   string FSCreationClassName;

      [Key, Description ( "The scoping FileSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_FileSystem.Name" )]
   string FSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as part of the key of a "
          "LogicalFile instance within a FileSystem. A unique "
          "identifier (such as a full path name) is required as a "
          "Name value. Since Files are weak to their FileSystem "
          "(and not to a Directory which would provide a more "
          "granular naming algorithm), care must be taken to make "
          "LogicalFile\'s Name unique for a given Creation "
          "ClassName and FileSystem. A full path name is one way to "
          "do this." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( "Size of the File in bytes." ), 
       Units ( "Bytes" ), 
       Gauge]
   uint64 FileSize;

      [Description ( "File\'s creation date." )]
   datetime CreationDate;

      [Description ( "Time that the File was last modified." )]
   datetime LastModified;

      [Description ( "Time that the File was last accessed." )]
   datetime LastAccessed;

      [Description ( "Boolean indicating that the File can be read." )]
   boolean Readable;

      [Description ( 
          "Boolean indicating that the File can be written." )]
   boolean Writeable;

      [Description ( "Indicates the file is executable." )]
   boolean Executable;

      [Description ( 
          "A free form string indicating the algorithm or tool used "
          "to compress the LogicalFile. If it is not possible or "
          "not desired to describe the compression scheme (perhaps "
          "because it is not known), recommend using the following "
          "words: \"Unknown\" to represent that it is not known "
          "whether the LogicalFile is compressed or not, "
          "\"Compressed\" to represent that the File is compressed "
          "but either its compression scheme is not known or not "
          "disclosed, and \"Not Compressed\" to represent that the "
          "LogicalFile is not compressed." )]
   string CompressionMethod;

      [Description ( 
          "A free form string indicating the algorithm or tool used "
          "to encrypt the LogicalFile. If it is not possible or not "
          "desired to describe the encryption scheme (perhaps for "
          "security reasons), recommend using the following words: "
          "\"Unknown\" to represent that it is not known whether "
          "the LogicalFile is encrypted or not, \"Encrypted\" to "
          "represent that the File is encrypted but either its "
          "encryption scheme is not known or not disclosed, and "
          "\"Not Encrypted\" to represent that the LogicalFile is "
          "not encrypted." )]
   string EncryptionMethod;

      [Description ( 
          "Integer indicating the number of \'file opens\' that are "
          "currently active against the File." ), 
       Counter]
   uint64 InUseCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00775.002" type ="change"> Updat description of
// MessageTimestamp property to indicate what the value for unknown
// should be. </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogRecord
// ==================================================================
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "The LogRecord object can describe the definitional format for "
       "entries in a MessageLog, or can be used to instantiate the "
       "actual records in the Log. The latter approach provides a "
       "great deal more semantic definition and management control "
       "over the individual entries in a MessageLog, than do the "
       "record manipulation methods of the Log class. It is "
       "recommended that the data in individual Log entries be modeled "
       "using subclasses of LogRecord, to avoid the creation of "
       "LogRecords with one property (such as RecordData) without "
       "semantics. \n"
       "Definitional formats for LogRecords could be specified by "
       "establishing a naming convention for the RecordID and Message "
       "Timestamp key properties." )]
class CIM_LogRecord : CIM_RecordForLog {

      [Key, Description ( "The scoping Log\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_MessageLog.CreationClassName" )]
   string LogCreationClassName;

      [Key, Description ( "The scoping Log\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_MessageLog.Name" )]
   string LogName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "RecordID, with the MessageTimestamp property, serve to "
          "uniquely identify the LogRecord within a MessageLog. "
          "Note that this property is different than the "
          "RecordNumber parameters of the MessageLog methods. The "
          "latter are ordinal values only, useful to track position "
          "when iterating through a Log. On the other hand, "
          "RecordID is truly an identifier for an instance of "
          "LogRecord. It may be set to the record\'s ordinal "
          "position, but this is not required." ), 
       MaxLen ( 256 )]
   string RecordID;

      [Key, Description ( 
          "A LogRecord\'s key structure includes a timestamp for "
          "the entry. If the timestamp for the entry is unknown, "
          "the value 99990101000000.000000+000 SHOULD be used." )]
   datetime MessageTimestamp;

      [Deprecated { "CIM_LogRecord.RecordFormat" }, 
       Description ( 
          "A free-form string describing the LogRecord\'s data structure."
           )]
   string DataFormat;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::OperatingSystem" ), 
    Description ( 
       "OperatingSystemCapabilities provides information about the "
       "capabilities of associated instances of CIM_OperatingSystem." )]
class CIM_OperatingSystemCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "HostShutdownBehavior provides information about the "
          "capabilities of an associated instance of "
          "OperatingSystem to shutdown the hosting computer system.\n"
          "A value of \"Disabled\" indicates that if the associated "
          "OperatingSystem is shutdown using the "
          "RequestStateChange() or Shutdown() extrinsic methods, "
          "the ComputerSystem with which the ComputerSystem is "
          "associated through an instance of CIM_RunningOS shall be shutdown.\n"
          "A value of \"No effect\" indicates that if the "
          "associated OperatingSystem is shutdown using the "
          "RequestStateChange() or Shutdown() extrinsic methods, "
          "the ComputerSystem with which the OperatingSystem is "
          "associated through CIM_RunningOS shall not be shutdown.\n"
          "A value of \"Unknown\" indicates that the effect on the "
          "hosting ComputerSystem is unknown." ), 
       ValueMap { "0", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Disabled", "No effect", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 HostShutdownBehavior = 0;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Watchdog" ), 
    Description ( 
       "A class derived from Capabilities that describes the watchdog "
       "service management aspects of a system." )]
class CIM_PlatformWatchdogServiceCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "ActionOnExpirationSupported indicates the actions which "
          "can be performed when the watchdog timer expires. See "
          "CIM_PlatformWatchdogService.ActionOnExpiration for a "
          "description of the values." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "None - Status Only", "System Reset", 
          "System Power Off", "System Power Off, then On", 
          "Generate System NonMaskableInterrupt (NMI)", 
          "Generate System Management Interrupt (SMI)", 
          "Reset Monitored Entity" }, 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.ActionOnExpiration" }]
   uint16 ActionOnExpirationSupported[];

      [Description ( 
          "WatchdogTimerDataSupported indicates the data which is "
          "provided on the value of the watchdog timer. The values "
          "in the enumeration are: A value set to 2 = \"Current "
          "Value\" shall indicate that the time of the current "
          "value of the timer is provided. A value set to 3 = "
          "\"Timer Resolution\" shall indicate that the timer "
          "resolution for the last expiration is provided." ), 
       ValueMap { "2", "3" }, 
       Values { "Current Value", "Timer Resolution" }, 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.CurrentTimerValue", 
          "CIM_PlatformWatchdogService.TimerResolution" }]
   uint16 WatchdogTimerDataSupported[];

      [Description ( 
          "LastExpirationDataSupported indicates the data which is "
          "provided on the last expiration of the watchdog timer. "
          "The values in the enumeration are: A value set to 2 = "
          "\"Time\" shall indicate that the time of the last "
          "expiration is provided." ), 
       ValueMap { "2" }, 
       Values { "Time" }, 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.TimeOfLastExpiration" }]
   uint16 LastExpirationDataSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RecordAppliesToElement 
// ==================================================================
   [Association, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "ManagedSystemElements may create RecordForLog objects to "
       "record their event, error or informational data within Logs. "
       "The relationship between these managed elements and the "
       "records they create is described by this association." )]
class CIM_RecordAppliesToElement : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Record." )]
   CIM_RecordForLog REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ManagedSystemElement that participated in the "
          "creation of the Record." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "CIM_RecordLogcapabilities describes the capabilities supported "
       "by the associated record log." )]
class CIM_RecordLogCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "SupportedRecordTypes indicates which record types are supported.\n"
          "2 (\"Record Data\") indicates that this log is capable "
          "of storing log entry data in the RecordData property of "
          "CIM_RecordForLog in the format that is identified by the "
          "RecordFormat property of CIM_RecordForLog.\n"
          "3 (\"Standard Messages\") indicates that this log is "
          "capable of storing log entries using Standard Messages." ), 
       ValueMap { "0", "2", "3", ".." }, 
       Values { "Unknown", "Record Data", "Standard Messages", 
          "DMTF Reserved" }]
   uint16 SupportedRecordTypes[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SymbolicLink 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "This class is a special type of LogicalFile that represents a "
       "Symbolic Link. This convention is useful for some operating "
       "systems that want to represent a single file in multiple "
       "places or a single file that is represented via multiple "
       "names." )]
class CIM_SymbolicLink : CIM_LogicalFile {

      [Required, Description ( 
          "The target file of the symbolic link." )]
   string TargetFile;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TimeZone 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Time" ), 
    Description ( 
       "The TimeZone class is a set of properties defining a "
       "particular time zone. These properties include the concept of "
       "daylight saving time." )]
class CIM_TimeZone : CIM_Setting {

      [Key, Description ( 
          "Time zone identifier. The Id MAY be expressed in the "
          "form \'area name/city name\' (e.g., \"America/New_York\"), "
          "or as a time zone name (for example, EST or EDT)." )]
   string TimeZoneID;

      [Key, Description ( 
          "The date and time at which this time zone definition "
          "takes effect. The value is specified in UTC." )]
   datetime TimeZoneStartDate;

      [Description ( 
          "Full name of the \'standard\' time zone (e.g., \"U.S. "
          "Eastern Standard Time\"), suitable for presentation to "
          "the user in the default locale." ), 
       ModelCorrespondence { "CIM_TimeZone.StandardCaption" }]
   string StandardName;

      [Description ( 
          "Short name of the \'standard\' time zone (e.g., \"EST\"), "
          "suitable for presentation to the user in the default "
          "locale. Note that a specific StandardCaption property is "
          "defined, instead of using the inherited Caption. This is "
          "done to force consistent property naming for the "
          "StandardXXX and DaylightXXX properties." ), 
       ModelCorrespondence { "CIM_TimeZone.StandardName" }]
   string StandardCaption;

      [Description ( 
          "The number of minutes by which this \'standard\' time "
          "differs from UTC. For example, U.S. EST differs from UTC "
          "by -5.0 hours or -300 minutes, whereas Australia "
          "Adelaide Standard Time differs by 9.5 hours or 570 "
          "minutes." ), 
       Units ( "Minutes" )]
   sint32 StandardOffset;

      [Description ( 
          "The month in which daylight saving time ends (and "
          "\'standard\' time begins). Specify 0 for January, 1 for "
          "February, and so on." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "January", "February", "March", "April", "May", 
          "June", "July", "August", "September", "October", 
          "November", "December" }, 
       ModelCorrespondence { "CIM_TimeZone.StandardDay" }]
   uint8 StandardMonth;

      [Description ( 
          "There are two different interpretations for this "
          "property, depending on the value of StandardDayOfWeek. "
          "In one case, StandardDay defines the day-in-month on "
          "which daylight saving time ends. This interpretation is "
          "used when the StandardDayOfWeek is 0. A positive or "
          "negative integer is specified to indicate whether the "
          "StandardDay should be calculated from the beginning or "
          "the end of the month. For example, 5 indicates the fifth "
          "day in the StandardMonth and -1 indicates the last day "
          "in the StandardMonth. \n"
          "\n"
          "When StandardDayOfWeek is not 0, StandardDay is the day- "
          "in-month on which daylight saving time ends, defined in "
          "conjunction with StandardDayOfWeek. For example, if "
          "StandardDay is 15 and StandardDayOfWeek is Saturday, "
          "then daylight saving time ends on the first Saturday on "
          "or after the 15th day in the StandardMonth (i.e., the "
          "third Saturday in the month). If StandardDay is 20 and "
          "StandardDayOfWeek is -Saturday, then this indicates the "
          "first Saturday on or before the 20th day in the "
          "StandardMonth. If StandardDay is -1 and "
          "StandardDayOfWeek is -Sunday, then this indicates the "
          "last Sunday in the StandardMonth." ), 
       MinValue ( -31 ), 
       MaxValue ( 31 ), 
       ModelCorrespondence { "CIM_TimeZone.StandardDayOfWeek" }]
   sint8 StandardDay;

      [Description ( 
          "Positive or negative integer used in conjunction with "
          "StandardDay to indicate the day of the week on which "
          "daylight saving time ends (and \'standard\' time "
          "begins). StandardDayOfWeek is set to 0 to indicate an "
          "exact day of the month, such as March 1. A positive "
          "integer (representing Sunday, Monday, ..., Saturday) "
          "means that the day of week is found on or after the "
          "specified StandardDay. A negative integer (representing "
          "-Sunday, -Monday, ..., -Saturday) means that the day of "
          "week is found on or before the StandardDay." ), 
       ValueMap { "-7", "-6", "-5", "-4", "-3", "-2", "-1", "0", 
          "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "-Saturday", "-Friday", "-Thursday", "-Wednesday", 
          "-Tuesday", "-Monday", "-Sunday", "ExactDayOfMonth", 
          "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", 
          "Friday", "Saturday" }, 
       ModelCorrespondence { "CIM_TimeZone.StandardDay" }]
   sint8 StandardDayOfWeek;

      [Description ( 
          "The time interval after midnight when daylight saving "
          "time ends. For example, \n"
          "00000000020000.000000:000 \n"
          "indicates that daylight saving time ends at two o\'clock, "
          "local time (usually, daylight saving time)." )]
   datetime StandardStartInterval;

      [Description ( 
          "Full name of the \'daylight\' time zone (e.g., \"U.S. "
          "Eastern Daylight Saving Time\"), suitable for "
          "presentation to the user in the default locale." ), 
       ModelCorrespondence { "CIM_TimeZone.DaylightCaption" }]
   string DaylightName;

      [Description ( 
          "Short name of the \'daylight\' time zone (e.g., \"EDT\"), "
          "suitable for presentation to the user in the default "
          "locale. Note that a specific DaylightCaption property is "
          "defined, instead of using the inherited Caption. This is "
          "done to force consistent property naming for the "
          "StandardXXX and DaylightXXX properties." ), 
       ModelCorrespondence { "CIM_TimeZone.DaylightName" }]
   string DaylightCaption;

      [Description ( 
          "The number of minutes by which this daylight saving time "
          "differs from UTC. For example, U.S. EDT differs from UTC "
          "by -4.0 hours or -240 minutes, whereas Australia "
          "Adelaide Daylight Time differs by 10.5 hours or 630 "
          "minutes." ), 
       Units ( "Minutes" )]
   sint32 DaylightOffset;

      [Description ( 
          "The month in which daylight saving time starts. Specify "
          "0 for January, 1 for February, and so on." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "January", "February", "March", "April", "May", 
          "June", "July", "August", "September", "October", 
          "November", "December" }, 
       ModelCorrespondence { "CIM_TimeZone.DaylightDay" }]
   uint8 DaylightMonth;

      [Description ( 
          "There are two different interpretations for this "
          "property, depending on the value of DaylightDayOfWeek. "
          "In one case, DaylightDay defines the day-in-month on "
          "which daylight saving time starts. This interpretation "
          "is used when the DaylightDayOfWeek is 0. A positive or "
          "negative integer is specified to indicate whether the "
          "DaylightDay should be calculated from the beginning or "
          "the end of the month. For example, 5 indicates the fifth "
          "day in the DaylightMonth and -1 indicates the last day "
          "in the DaylightMonth. \n"
          "\n"
          "When DaylightDayOfWeek is not 0, DaylightDay is the day- "
          "in-month on which daylight saving time starts, defined "
          "in conjunction with DaylightDayOfWeek. For example, if "
          "DaylightDay is 15 and DaylightDayOfWeek is Saturday, "
          "then daylight saving time starts on the first Saturday "
          "on or after the 15th day in the DaylightMonth (i.e., the "
          "third Saturday in the month). If DaylightDay is 20 and "
          "DaylightDayOfWeek is -Saturday, then this indicates the "
          "first Saturday on or before the 20th day in the "
          "DaylightMonth. If DaylightDay is -1 and "
          "DaylightDayOfWeek is -Sunday, then this indicates the "
          "last Sunday in the month." ), 
       MinValue ( -31 ), 
       MaxValue ( 31 ), 
       ModelCorrespondence { "CIM_TimeZone.DaylightDayOfWeek" }]
   sint8 DaylightDay;

      [Description ( 
          "Positive or negative integer used in conjunction with "
          "DaylightDay to indicate the day of the week on which "
          "daylight saving time starts. Set DaylightDayOfWeek to 0 "
          "to indicate an exact day of month, such as March 1. "
          "Positive integer (Sunday, Monday, ..., Saturday) means "
          "that the day of week is found on or after DaylightDay. "
          "Negative integer (-Sunday, -Monday, ..., -Saturday) "
          "means that the day of week is found on or before "
          "DaylightDay." ), 
       ValueMap { "-7", "-6", "-5", "-4", "-3", "-2", "-1", "0", 
          "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "-Saturday", "-Friday", "-Thursday", "-Wednesday", 
          "-Tuesday", "-Monday", "-Sunday", "ExactDayOfMonth", 
          "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", 
          "Friday", "Saturday" }, 
       ModelCorrespondence { "CIM_TimeZone.DaylightDay" }]
   sint8 DaylightDayOfWeek;

      [Description ( 
          "The time interval after midnight when daylight saving "
          "time starts. For example, \n"
          "00000000020000.000000:000 \n"
          "indicates that daylight saving time starts at two "
          "o\'clock, local time (usually, standard time)." )]
   datetime DaylightStartInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixFile 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "The UnixFile class holds properties that are valid for various "
       "subclasses of LogicalFile, in a Unix environment. This is "
       "defined as a separate and unique class since it is applicable "
       "to Unix files, directories, etc. It is associated via a "
       "FileIdentity relationship to these subclasses of LogicalFile. "
       "Unless this approach of creating and associating a separate "
       "class is used, it is necessary to subclass each of the "
       "inheritance hierarchies under LogicalFile, duplicating the "
       "properties in this class. The referenced _PC* and _POSIX* "
       "constants are defined in unistd.h. Some properties indicate "
       "whether the UNIX implementation support a feature such as "
       "asynchronous I/O or priority I/O. If supported, sysconf "
       "returns the value as defined in the appropriate header file "
       "such as unistd.h. If a feature is not supported, then pathconf "
       "returns a -1. In this case, the corresponding property should "
       "be returned without any value." )]
class CIM_UnixFile : CIM_LogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalFile.CSCreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalFile.CSName" )]
   string CSName;

      [Key, Description ( 
          "The scoping FileSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalFile.FSCreationClassName" )]
   string FSCreationClassName;

      [Key, Description ( "The scoping FileSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalFile.FSName" )]
   string FSName;

      [Key, Description ( 
          "The scoping LogicalFile\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_LogicalFile.CreationClassName" )]
   string LFCreationClassName;

      [Key, Description ( "The scoping LogicalFile\'s Name." ), 
       MaxLen ( 1024 ), 
       Propagated ( "CIM_LogicalFile.Name" )]
   string LFName;

      [Required, Description ( 
          "An Identifer that uniquely describes the owner of this file."
           )]
   string UserID;

      [Required, Description ( 
          "An identifier that describes the group that owns this file."
           )]
   string GroupID;

      [Description ( 
          "Indicates restricted deletion for directories, or "
          "possible implementation defined properties for "
          "executable files. For directories this is known as the "
          "sticky bit." )]
   boolean SaveText;

      [Description ( "Count of the number of names for this file." ), 
       Counter]
   uint64 LinkCount;

      [Description ( "File Inode number, as printed by \"ls -i\"." ), 
       MappingStrings { "UNIX.TOG|ls -i" }]
   string FileInodeNumber;

      [Description ( 
          "Indicates whether the associated file has setuid permissions."
           )]
   boolean SetUid;

      [Description ( 
          "Indicates whether the associated file has setgid permissions."
           )]
   boolean SetGid;

      [Description ( 
          "The time that the Inode was last modified. This includes "
          "the Inode creation time, state modification, and etc." )]
   datetime LastModifiedInode;

      [Description ( "Maximum number of links to a single file." ), 
       MinValue ( 8 ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_LINK_MAX" }]
   uint64 LinkMax;

      [Description ( 
          "Maximum number of bytes in a filename, not including "
          "terminating null." ), 
       Units ( "Bytes" ), 
       MinValue ( 14 ), 
       MappingStrings { "POSIX.TOG|pathconf|_POSIX_NAME_MAX" }]
   uint64 NameMax;

      [Description ( 
          "Maximum number of bytes in a pathname, including the "
          "terminating null character." ), 
       Units ( "Bytes" ), 
       MinValue ( 255 ), 
       MappingStrings { "POSIX.TOG|pathconf|_POSIX_PATH_MAX" }]
   uint64 PathMax;

      [Description ( 
          "The use of chown() is restricted to a process with "
          "appropriate privileges. chown() is used to change the "
          "group ID of a file. The group ID can be changed to the "
          "effective group ID or one of its supplementary group "
          "IDs." ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_CHOWN_RESTRICTED" }]
   uint64 PosixChownRestricted;

      [Description ( 
          "Indicates whether pathname components longer than "
          "NameMax generate an error." ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_NO_TRUNC" }, 
       ModelCorrespondence { "CIM_UnixFile.NameMax" }]
   uint64 PosixNoTrunc;

      [Description ( 
          "Indicates whether asynchronous input or output "
          "operations may be performed for the associated file." ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_ASYNC_IO" }]
   uint64 PosixAsyncIo;

      [Description ( 
          "Indicates whether prioritized input or output operations "
          "may be performed for the associated file." ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_PRIO_IO" }]
   uint64 PosixPrioIo;

      [Description ( 
          "Indicates whether synchronised input or output "
          "operations may be performed for the associated file." ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_SYNC_IO" }]
   uint64 PosixSyncIo;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "The CIM_VirtualSystemSettingDataComponent association "
       "establishes a \'part of\' relationship between an instance of "
       "the CIM_VirtualSystemSettingData class and a set of instances "
       "of the CIM_ResourceAllocationSettingData class." )]
class CIM_VirtualSystemSettingDataComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "Reference to an instance of the "
          "CIM_VirtualSystemSettingData class that is the top-level "
          "object of a virtual system configuration." )]
   CIM_VirtualSystemSettingData REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "Reference to an instance of the "
          "CIM_ResourceAllocationSettingData class representing a "
          "part of a virtual system configuration applicable to one "
          "particular virtual resource." )]
   CIM_ResourceAllocationSettingData REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AccessControlInformation 
// ==================================================================
   [Deprecated { "CIM_AuthorizedPrivilege", "CIM_SecuritySensitivity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AccessControl" ), 
    Description ( 
       "CIM_AccessControlInformation provides, through its properties "
       "and its associations, the specification of the access rights "
       "granted to a set of subject users to a set of target "
       "resources. The AccessControlInformation class is weak to the "
       "system (e.g., Computer System or Administrative Domain) for "
       "which the access controls apply. \n"
       "\n"
       "This class is deprecated in lieu of two others: "
       "AuthorizedPrivilege (defining specific access details) and "
       "SecuritySensitivity (defining individual security levels). The "
       "reasons for this are: 1. More specific access details are "
       "defined in Privilege (the superclass of AuthorizedPrivilege); "
       "and, 2. SecuritySensitivity allows security levels to be "
       "applied to other elements than access control information." )]
class CIM_AccessControlInformation : CIM_LogicalElement {

      [Deprecated { "No value" }, 
       Key, Description ( "Hosting system creation class name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "No value" }, 
       Key, Description ( "Hosting system name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_AuthorizedPrivilege.InstanceID" }, 
       Key, Override ( "Name" ), 
       Description ( 
          "The Name property defines the unique label, in the "
          "context of the hosting system, by which the "
          "AccessControlInformation is known." ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_SecuritySensitivity.SecurityLevel" }, 
       Description ( 
          "The SecurityClassification property specifies a named "
          "level of security associated with the "
          "AccessControlInformation, e.g., \'Confidential\', \'Top "
          "Secret\', etc." )]
   string SecurityClassification;

      [Deprecated { "CIM_AuthorizedPrivilege.Activities" }, 
       Description ( 
          "The AccessType property is an array of string values "
          "that specifies the type of access for which the "
          "corresponding permission applies. For example, it can be "
          "used to specify a generic access such as \'Read-only\', "
          "\'Read/Write\', etc. for file or record access control "
          "or it can be used to specifiy an entry point name for "
          "service access control." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AccessControlInformation.AccessQualifier", 
          "CIM_AccessControlInformation.Permission" }]
   string AccessType[];

      [Deprecated { "CIM_AuthorizedPrivilege.ActivityQualifiers" }, 
       Description ( 
          "The AccessQualifier property is an array of string "
          "values may be used to further qualify the type of access "
          "for which the corresponding permission applies. For "
          "example, it may be used to specify a set of parameters "
          "that are permitted or denied in conjunction with the "
          "corresponding AccessType entry point name." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AccessControlInformation.AccessType", 
          "CIM_AccessControlInformation.Permission" }]
   string AccessQualifier[];

      [Deprecated { "CIM_AuthorizedPrivilege" }, 
       Description ( 
          "The Permission property is an array of string values "
          "indicating the permission that applies to the "
          "corresponding AccessType and AccessQualifier array "
          "values. The values may be extended in subclasses to "
          "provide more specific access controls. \n"
          "\n"
          "This property is deprecated in lieu of the general "
          "AuthorizedPrivilege class. This is because the "
          "Permissions, \'Access\' and \'Deny\', are addressed by "
          "the PrivilegeGranted property, while \'Manage\' maps to "
          "specific activities with their corresponding qualifiers "
          "and formats." ), 
       ValueMap { "Unknown", "Allow", "Deny", "Manage" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AccessControlInformation.AccessType", 
          "CIM_AccessControlInformation.AccessQualifier" }]
   string Permission[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "AccountManagementCapabilities describes the capabilities "
       "supported for managing Accounts associated with an instance of "
       "AccountManagementService. AccountManagementCapabilities is "
       "associated with an instance of AccountManagementService "
       "through the ElementCapabilities association." )]
class CIM_AccountManagementCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "OperationsSupported describes the type of operations "
          "that are supported for an Account associated with the AccountManagementService.\n"
          "\"Create\" indicates the AccountManagementService may be "
          "used to create new accounts.\n"
          "\"Modify\" indicates that the associated Accounts may be modified.\n"
          "\"Delete\" indicates that associated Accounts may be "
          "deleted." ), 
       ValueMap { "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Create", "Modify", "Delete", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 OperationsSupported[];

      [Description ( 
          "Additional implementation-specific algorithms that a "
          "client may use to encrypt a value in the UserPassword "
          "property when creating or modifying an instance of "
          "CIM_Account. If this property is non-NULL, a client may "
          "select an algorithm in it by setting "
          "CIM_Account.UserPasswordEncryptionAlgorithm to 1 "
          "(\"Other\") and setting "
          "CIM_Account.OtherUserPasswordEncryptionAlgorithm to the "
          "value of the selected algorithm string." ), 
       ModelCorrespondence { 
          "CIM_Account.OtherUserPasswordEncryptionAlgorithm", 
          "CIM_AccountManagementCapabilities.SupportedUserPasswordEncryptionAlgorithms" }]
   string OtherSupportedUserPasswordEncryptionAlgorithms[];

      [Description ( 
          "This property enumerates encryption algorithms that a "
          "client may use to encrypt a value in the UserPassword "
          "property when creating or modifying an instance of "
          "CIM_Account. This capability is aimed at ensuring some "
          "measure of confidentiality when the password is "
          "transferred over an unencrypted transport protocol. An "
          "implementation may elect to accept only encrypted "
          "passwords, without regard to whether the transport "
          "protocol is encrypted. Similarly, a a client may elect "
          "to always provide encrypted passwords to implementations "
          "that accept either unencrypted or encrypted passwords, "
          "even if the underlying transport protocol is encrypted.\n"
          "See CIM_Account property UserPasswordEncryptionAlgorithm "
          "for a description of each enum value." ), 
       ValueMap { "0", "1", "2", ".." }, 
       Values { "None", "Other", "HTTP Digest MD5(A1)", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_Account.UserPasswordEncryptionAlgorithm", 
          "CIM_AccountManagementCapabilities.OtherSupportedUserPasswordEncryptionAlgorithms" }]
   uint16 SupportedUserPasswordEncryptionAlgorithms[];

      [Description ( 
          "A value unique to the specific WBEM server that may be "
          "used in the selected UserPassword encryption algorithm "
          "to ensure a value that is unique among all WBEM servers "
          "even if a user uses the same password on multiple WBEM "
          "servers." ), 
       ModelCorrespondence { 
          "CIM_Account.UserPasswordEncryptionAlgorithm" }]
   string UserPasswordEncryptionSalt;

      [Description ( 
          "MaximumAccountsSupported shall indicate the maximum "
          "number of accounts that may be managed by the associated "
          "instance of CIM_AccountManagementService. Note that if "
          "multiple instances of CIM_AccountManagementService "
          "manage the accounts of a system, the total maximum "
          "number of accounts supported on the system is the sum of "
          "MaximumAccountsSupported for all of the instances of "
          "CIM_AccountManagementService. A value of zero shall "
          "indicate that the maximum number of accounts is unknown "
          "or that a maximum number of accounts is not enforced." )]
   uint16 MaximumAccountsSupported;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssignedIdentity 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Identity" ), 
    Description ( 
       "This relationship associates an Identity to a specific "
       "ManagedElement, whose trust is represented." )]
class CIM_AssignedIdentity {

      [Key, Description ( 
          "An Identity of the referenced ManagedElement." )]
   CIM_Identity REF IdentityInfo;

      [Key, Max ( 1 ), 
       Description ( 
          "The ManagedElement assigned to a specific Identity." )]
   CIM_ManagedElement REF ManagedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthenticationRequirement 
// ==================================================================
   [Deprecated { "CIM_AuthenticationCondition", 
       "CIM_AuthenticationRule", "CIM_SecuritySensitivity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AuthenticationReqmt" ), 
    Description ( 
       "CIM_AuthenticationRequirement provides, through its "
       "associations, the authentication requirements for access to "
       "system resources. For a particular set of target resources, "
       "the AuthenticationService may require that credentials be "
       "issued by a specific CredentialManagementService. The "
       "AuthenticationRequirement class is weak to the system (e.g., "
       "ComputerSystem or Administrative Domain) for which the "
       "requirements apply. \n"
       "\n"
       "Note that this class was defined before the Policy Model "
       "existed, and is deprecated in lieu of authentication policy - "
       "specifically, the AuthenticationCondition and "
       "AuthenticationRule classes. In the updated design, "
       "AuthenticationCondition describes the specific combinations of "
       "credentials (or alternative credentials) that are required in "
       "order to authenticate an Identity. This allows a more explicit "
       "and flexible description of authentication requirements. Also, "
       "the definition of \'security classification\' as a property of "
       "this class was problematic - since it could not be assigned to "
       "an element in a straight forward fashion. To correct this "
       "issue, the SecuritySensitivity class (and its association, "
       "ElementSecuritySensitivity) are defined." )]
class CIM_AuthenticationRequirement : CIM_LogicalElement {

      [Deprecated { "CIM_AuthenticationRule.SystemCreationClassName" }, 
       Key, Description ( "Hosting systemcreation class name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "CIM_AuthenticationRule.SystemName" }, 
       Key, Description ( "Hosting system name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Deprecated { "CIM_AuthenticationRule.CreationClassName" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_AuthenticationRule.PolicyRuleName" }, 
       Key, Override ( "Name" ), 
       Description ( 
          "The Name property defines the unique label, in the "
          "context of the hosting system, by which the "
          "AuthenticationRequirement is known." ), 
       MaxLen ( 256 )]
   string Name;

      [Deprecated { "CIM_SecuritySensitivity.SecurityLevel" }, 
       Description ( 
          "The SecurityClassification property specifies a named "
          "level of security associated with the "
          "AuthenticationRequirement, e.g., \'Confidential\', \'Top "
          "Secret\', etc." )]
   string SecurityClassification;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthenticationTarget 
// ==================================================================
   [Association, Deprecated { "CIM_PolicySetAppliesToElement" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AuthenticationReqmt" ), 
    Description ( 
       "CIM_AuthenticationTarget is an association used to apply "
       "authentication requirements for access to specific resources. "
       "For example, a shared secret may be sufficient for access to "
       "unclassified resources, but for confidential resources, a "
       "stronger authentication may be required. Since the "
       "AuthenticationRequirement class is deprecated in lieu of "
       "explicit policy rules, this association is similarly "
       "deprecated to its \'policy\' equivalent." )]
class CIM_AuthenticationTarget : CIM_Dependency {

      [Deprecated { "CIM_PolicySetAppliesToElement.PolicySet" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "AuthenticationRequirement that applies to specific resources."
           )]
   CIM_AuthenticationRequirement REF Antecedent;

      [Deprecated { "CIM_PolicySetAppliesToElement.ManagedElement" }, 
       Override ( "Dependent" ), 
       Description ( 
          "Target resources that may be in a Collection or an "
          "individual ManagedElement. These resources are protected "
          "by the AuthenticationRequirement." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizationSubject 
// ==================================================================
   [Association, Deprecated { "CIM_AuthorizedSubject" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AccessControl" ), 
    Description ( 
       "CIM_AuthorizationSubject is an association used to apply "
       "authorization decisions to specific subjects (i.e., users). "
       "This association is deprecated in lieu of a semantically "
       "equivalent one, AuthorizedSubject, since one of the referenced "
       "classes (AccessControlInformation) has been deprecated." )]
class CIM_AuthorizationSubject : CIM_Dependency {

      [Deprecated { "CIM_AuthorizedSubject.Privilege" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "AccessControlInformation that applies to a subject set." )]
   CIM_AccessControlInformation REF Antecedent;

      [Deprecated { "CIM_AuthorizedSubject.PrivilegedElement" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The subject set may be specified as a collection or as a "
          "set of associations to ManagedElements that represent "
          "users." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizationTarget 
// ==================================================================
   [Association, Deprecated { "CIM_AuthorizedTarget" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AccessControl" ), 
    Description ( 
       "CIM_AuthorizationTarget is an association used to apply "
       "authorization decisions to specific target resources. The "
       "target resources may be aggregated into a collection or may be "
       "represented as a set of associations to ManagedElements. This "
       "association is deprecated in lieu of a semantically equivalent "
       "one, AuthorizedTarget, since one of the referenced classes "
       "(AccessControlInformation) has been deprecated." )]
class CIM_AuthorizationTarget : CIM_Dependency {

      [Deprecated { "CIM_AuthorizedTarget.Privilege" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "AccessControlInformation that applies to the target set." )]
   CIM_AccessControlInformation REF Antecedent;

      [Deprecated { "CIM_AuthorizedTarget.TargetElement" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The target set of resources may be specified as a "
          "collection or as a set of associations to "
          "ManagedElements that represent target resources." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizedPrivilege 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "Privilege is the base class for all types of activities which "
       "are granted or denied to a Role or an Identity. "
       "AuthorizedPrivilege is a subclass defining static renderings "
       "of authorization policy rules. The association of Roles and "
       "Identities to AuthorizedPrivilege is accomplished using the "
       "AuthorizedSubject relationship. The entities that are "
       "protected are defined using the AuthorizedTarget relationship. \n"
       "\n"
       "Note that this class and its AuthorizedSubject/Target "
       "associations provide a short-hand, static mechanism to "
       "represent authorization policies." )]
class CIM_AuthorizedPrivilege : CIM_Privilege {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizedSubject 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "CIM_AuthorizedSubject is an association used to tie specific "
       "AuthorizedPrivileges to specific subjects (i.e., Identities, "
       "Roles or Collections of these). At this time, only Identities "
       "and Roles (or Collections of Identities and Roles) should be "
       "associated to AuthorizedPrivileges using this relationship. "
       "Note that any Privileges not explicitly granted to a subject, "
       "SHOULD be denied." )]
class CIM_AuthorizedSubject {

      [Key, Description ( 
          "The AuthorizedPrivilege either granted or denied to an "
          "Identity, Role or Collection. Whether the privilege is "
          "granted or denied is defined by the inherited property, "
          "CIM_Privilege.PrivilegeGranted." )]
   CIM_AuthorizedPrivilege REF Privilege;

      [Key, Description ( 
          "The Subject for which AuthorizedPrivileges are granted "
          "or denied. Whether the privilege is granted or denied is "
          "defined by the property, CIM_Privilege.PrivilegeGranted." )]
   CIM_ManagedElement REF PrivilegedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizedTarget 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "CIM_AuthorizedTarget is an association used to tie an "
       "Identity\'s or Role\'s AuthorizedPrivileges to specific target "
       "resources." )]
class CIM_AuthorizedTarget {

      [Key, Description ( 
          "The AuthorizedPrivilege affecting the target resource." )]
   CIM_AuthorizedPrivilege REF Privilege;

      [Key, Description ( 
          "The target set of resources to which the "
          "AuthorizedPrivilege applies." )]
   CIM_ManagedElement REF TargetElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectionInOrganization 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_CollectionInOrganization is an association used to "
       "establish a parent-child relationship between a collection and "
       "an \'owning\' OrganizationalEntity. A single collection should "
       "not have both a CollectionInOrganization and a "
       "CollectionInSystem association." )]
class CIM_CollectionInOrganization {

      [Key, Aggregate, Max ( 1 ), 
       Description ( 
          "The parent organization responsible for the collection." )]
   CIM_OrganizationalEntity REF Parent;

      [Key, Description ( "The collection." )]
   CIM_Collection REF Child;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_CredentialManagementCapabilities describes the "
       "capabilities for managing credentials." )]
class CIM_CredentialManagementCapabilities : CIM_EnabledLogicalElementCapabilities {

      [Description ( 
          "Each enumeration corresponds to support for the "
          "like-named method of the associated "
          "CIM_CredentialManagementService instance(s) for the "
          "exception of \"Delete Credential Instance\" that refers "
          "to the capability of executing delete operation on the "
          "instances of the CIM_Credential subclasses." ), 
       ValueMap { "4", "..", "0x8000.." }, 
       Values { "DeleteCredentialInstance", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 SupportedMethods[];

      [Description ( 
          "Defines the methodology used by the implementation to "
          "accumulate the user\'s privileges for credentials or "
          "credential stores that are directly or indirectly "
          "associated with the CIM_CredentialManagementService that "
          "this instace represents the capability of. \r\n"
          "This methodology is applicable to the credentials and "
          "credential stores that are members of another credential store.\r\n"
          "The methodology describes how the same user\'s privilges "
          "for a credential gets reconciled with that user\'s "
          "privileges for the credential store that the credential "
          "belongs to. The methodology is also applicable for "
          "multi-level credential stores where one credential store "
          "is a member of another credential store.\r\n"
          "2 - Collection Privileges Override - the user\'s "
          "privileges on the instance of CIM_CredentialStore that "
          "is referenced by the Collection property of "
          "CIM_MemberOfCollection association, overrides the same "
          "user\'s privileges on the CIM_Credential and/or "
          "CIM_CredentialStore referenced by the Member property of "
          "the same CIM_MemberOfCollection asscociation.\r\n"
          "3 - Member Privileges Override - the user\'s privileges "
          "on the instance of CIM_Credential and/or "
          "CIM_CredentialStore that is referenced by the Member "
          "property of CIM_MemberOfCollection association, "
          "overrides the same user\'s privileges on the "
          "CIM_CredentialStore referenced by the Collection "
          "property of the same CIM_MemberOfCollection asscociation.\r\n"
          "4 - Collection-Member Privileges Union - the user\'s "
          "privileges on the instance of CIM_Credential and/or "
          "CIM_CredentialStore that is referenced by the Member "
          "property of CIM_MemberOfCollection association, are "
          "added to the same user\'s privileges on the "
          "CIM_CredentialStore referenced by the Collection "
          "property of the same CIM_MemberOfCollection asscociation.\r\n"
          "5 - Collection-Member Privileges Intersection - the "
          "user\'s privileges on the instance of CIM_Credential "
          "and/or CIM_CredentialStore that is referenced by the "
          "Member property of CIM_MemberOfCollection association, "
          "are valid only if the privileges are mirrored with the "
          "same user\'s privileges on the CIM_CredentialStore "
          "referenced by the Collection property of the same "
          "CIM_MemberOfCollection asscociation." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "Collection Privileges Override", 
          "Member Privileges Override", 
          "Collection-Member Privileges Union", 
          "Collection-Member Privileges Intersection" }]
   uint16 CumulativePrivilegeMethodology;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "CIM_CredentialStore class represents a collection of "
       "credentials such as certificates and biometric credentials. "
       "Credential collection can be used to store the credentials "
       "used by the service for validation of served up credentials or "
       "for the owned credentials of the service." )]
class CIM_CredentialStore : CIM_Collection {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness, "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the organizational entity and "
          "SHOULD not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "Usage of the CIM_CredentialStore. 2 - Owned value means "
          "CIM_CredentialStore instance represents a collection of "
          "credentials that belong to parties local to the manager "
          "of the store. 3 - Trusted value means "
          "CIM_CredentialStore instance public credentials that "
          "belong to parties trusted by the manager of the store. 4 "
          "- Mixed value means CIM_CredentialStore instance "
          "represents a collection of both Trusted and Owned "
          "credentials." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "Owned", "Trusted", "Mixed", "DMTF Reserved", 
          "Vendor Specified" }]
   uint16 Usage;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementAsUser 
// ==================================================================
   [Association, Deprecated { "CIM_AssignedIdentity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "CIM_ElementAsUser is an association used to establish the "
       "\'ownership\' of UsersAccess object instances. That is, the "
       "ManagedElement may have UsersAccess to systems and, therefore, "
       "be \'users\' on those systems. UsersAccess instances must have "
       "an \'owning\' ManagedElement. Typically, the ManagedElements "
       "will be limited to Collection, Person, Service and "
       "ServiceAccessPoint. Other non-human ManagedElements that might "
       "be thought of as having UsersAccess (e.g., a device or system) "
       "have services that have the UsersAccess. \n"
       "\n"
       "Since the UsersAccess class is deprecated in lieu of "
       "CIM_Identity, this association is also deprecated and replaced "
       "by one of similar semantics, AssignedIdentity. It should be "
       "noted that the new class is NOT defined as a Dependency "
       "relationship, since it was felt that the association was not "
       "truly a dependency of the element on its access." )]
class CIM_ElementAsUser : CIM_Dependency {

      [Deprecated { "CIM_AssignedIdentity.ManagedElement" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ManagedElement that has UsersAccess." )]
   CIM_ManagedElement REF Antecedent;

      [Deprecated { "CIM_AssignedIdentity.IdentityInfo" }, 
       Override ( "Dependent" ), 
       Description ( "The \'owned\' UsersAccess." )]
   CIM_UsersAccess REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementSecuritySensitivity 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::SecurityLevel" ), 
    Description ( 
       "This association relates a security sensitivity level to a "
       "ManagedElement. It describes the level assigned to the "
       "element." )]
class CIM_ElementSecuritySensitivity {

      [Key, Description ( 
          "The security sensitivity level of the element." )]
   CIM_SecuritySensitivity REF SecurityLevel;

      [Key, Description ( 
          "The element which is assigned a sensitivity level." )]
   CIM_ManagedElement REF ManagedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01299" type = "change"> Add iSCSI support to the
// enum of ID Types used for SCSI LUN Masking </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_GatewayPathID
// ==================================================================
   [Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::User::StorageHardwareID" ), 
    Description ( 
       "GatewayPathID extends StorageHardwareID to name a path segment "
       "defined by the end identities, HardwareID and GatewayID. The "
       "purpose is to describe Identity to allow access control to be "
       "applied to a particular path segment. Think of the element "
       "identified by GatewayPathID as a Gateway between a non-trusted "
       "world and a trusted world." )]
class CIM_GatewayPathID : CIM_StorageHardwareID {

      [Required, Description ( 
          "The ID representing the Gateway for a path segment from "
          "the element identified in the HardwareID property to the "
          "Gateway." ), 
       ModelCorrespondence { "CIM_GatewayPathID.GatewayIDType", 
          "CIM_GatewayPathID.OtherGatewayIDType" }]
   string GatewayID;

      [Required, Description ( 
          "The type of the ID property. iSCSI GatewayIDs may use "
          "one of three iSCSI formats - iqn, eui, or naa. This "
          "three letter format is the name prefix; so a single "
          "iSCSI type is provided here, the prefix can be used to "
          "further refine the format." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "PortWWN", "NodeWWN", "Hostname", 
          "iSCSI Name" }, 
       ModelCorrespondence { "CIM_GatewayPathID.GatewayID" }]
   uint16 GatewayIDType;

      [Description ( 
          "The gateway ID type when Gateway IDType is \"Other\"." ), 
       ModelCorrespondence { "CIM_GatewayPathID.GatewayID" }]
   string OtherGatewayIDType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01515" type = "change"> Clarify inteeded use for
// LDAP, not general </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Group
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Group" ), 
    Description ( 
       "The Group class is used to collect ManagedElements that are "
       "intended to be conformant with an LDAP GroupOfNames, as "
       "defined by IETF RFC 2256. For other purposes, "
       "ConcreteCollection, or other subclasses of Collection, may be "
       "more appropriate. \n"
       "This class is defined so as to incorporate commonly-used LDAP "
       "attributes to permit implementations to easily derive this "
       "information from LDAP-accessible directories. This class\'s "
       "properties are a subset of a related class, "
       "OtherGroupInformation, which defines all the group properties "
       "and in array form for directory compatibility." ), 
    MappingStrings { "RFC2407.IETF|Section 7.10 GroupOfNames" }]
class CIM_Group : CIM_Collection {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "The BusinessCategory property may be used to describe "
          "the kind of business activity performed by the members "
          "of the group." ), 
       MaxLen ( 128 )]
   string BusinessCategory;

      [Required, Description ( 
          "A Common Name is a (possibly ambiguous) name by which "
          "the group is commonly known in some limited scope (such "
          "as an organization) and conforms to the naming "
          "conventions of the country or culture with which it is "
          "associated." )]
   string CommonName;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "CIM_Keystore class represents a keystore, collection of key "
       "based credentials such as certificates. Keystore can be used "
       "to store the certificates that are used for the client role of "
       "the validation of the served up certificates, or for the "
       "server role, serving up the certificates to the client for the "
       "validation. Certificates in the keystore can be "
       "revoked/invalidated by the means of application of Certificate "
       "Revocation List (CRL)." )]
class CIM_Keystore : CIM_CredentialStore {

      [Override ( "Usage" ), 
       Description ( 
          "Usage of the keystore.\n"
          "2 - Owned value means CIM_Keystore instance represents a "
          "collection of key based credentials that belong to "
          "parties local to the manager of the keystore. \n"
          "3 - Trusted value means CIM_Keystore instance represents "
          "a collection of public key based credentials that belong "
          "to parties trusted by the manager of the keystore.\n"
          "4 - Mixed value means CIM_Keystore instance represents a "
          "collection of both Trusted and Owned key based "
          "credentials." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "Owned", "Trusted", "Mixed", "DMTF Reserved", 
          "Vendor Specified" }]
   uint16 Usage;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MemberPrincipal 
// ==================================================================
   [Association, Deprecated { "CIM_MemberOfCollection" }, 
    Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_MemberPrincipal is an aggregation used to establish "
       "membership of principals (i.e., users) in a Collection. That "
       "membership can be established either directly or indirectly as "
       "indicated in the UsersAccessBy property. For example, a user "
       "may be identified directly by their userid (i.e., Account "
       "object instance) or the user may be identified indirectly by "
       "realm from which a ticket was issued (i.e., "
       "CredentialManagementService object instance). \n"
       "\n"
       "This association is deprecated in lieu of its superclass. "
       "Usage feedback on the class has indicated confusion regarding "
       "defining the members of the collection. Also, the UsersAccess "
       "aspects of this association have been deprecated." )]
class CIM_MemberPrincipal : CIM_MemberOfCollection {

      [Deprecated { "CIM_MemberOfCollection.Collection" }, 
       Aggregate, Override ( "Collection" )]
   CIM_Collection REF Collection;

      [Deprecated { "CIM_MemberOfCollection.Member" }, 
       Override ( "Member" )]
   CIM_ManagedElement REF Member;

      [Deprecated { "No value" }, 
       Description ( 
          "A MemberPrincipal may be identifed in several ways that "
          "may be either direct or indirect membership in the "
          "collection. \n"
          "-A \'UsersAccess\' membership directly identifies the "
          "user by the UsersAccess object instance. \n"
          "- An \'Account\' membership directly identifies the user "
          "by the Account object class instance. \n"
          "- A \'UsingElement\' membership indirectly identifies "
          "the user by the ManagedElement object instance that has "
          "ElementAsUser associations to UsersAccess object "
          "instances. Hence, all UsersAccess instances are "
          "indirectly included in the collection." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "UsersAccess", "Account", "UsingElement", 
          "CredentialManagementService" }]
   uint16 UserAccessBy;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MoreGroupInfo 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::User::Group" ), 
    Description ( 
       "CIM_MoreGroupInfo is an association used to extend the "
       "information in a CIM_Group class instance." )]
class CIM_MoreGroupInfo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Group which has more information." )]
   CIM_Group REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "Additional data concerning the Group." )]
   CIM_OtherGroupInformation REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MoreOrgUnitInfo 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_MoreOrgUnitInfo is an association used to extend the "
       "information in an CIM_OrgUnit class instance." )]
class CIM_MoreOrgUnitInfo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The OrgUnit which has more information." )]
   CIM_OrgUnit REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "Additional data concerning the OrgUnit." )]
   CIM_OtherOrgUnitInformation REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Organization 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "The Organization class is used to represent an organization "
       "such as a corporation or other autonomous entity. The class is "
       "defined so as to incorporate commonly-used LDAP attributes to "
       "permit implementations to easily derive this information from "
       "LDAP-accessible directories. This class\'s properties are a "
       "subset of a related class, OtherOrganizationInformation, which "
       "defines all the group properties and in array form for "
       "directory compatibility." )]
class CIM_Organization : CIM_OrganizationalEntity {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "This property describes the kind of business performed "
          "by an organization." ), 
       MaxLen ( 128 )]
   string BusinessCategory;

      [Description ( 
          "The organization\'s facsimile telephone number." )]
   string FacsimileTelephoneNumber;

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName;

      [Description ( 
          "Based on RFC1274, the mail box addresses for the "
          "organization as defined in RFC822." )]
   string Mail;

      [Required, Description ( "The name of the organization." )]
   string OrganizationName;

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the organization." )]
   string PostalAddress[];

      [Description ( 
          "The PostalCode property specifies the postal code of the "
          "organization. If this value is present it will be part "
          "of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode;

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince;

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the organization, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "A subclass of Capabilities that defines the capabilities of "
       "the Privilege Management Service." )]
class CIM_PrivilegeManagementCapabilities : CIM_Capabilities {

      [Description ( 
          "Set to TRUE if this PrivilegeManagementService supports "
          "association of multiple subjects or targets to a "
          "particular Privilege. If False, the AssignAccess method "
          "supports at most one entry each in the Subjects and "
          "Targets parameters." )]
   boolean SharedPrivilegeSupported = false;

      [Description ( 
          "A super set of activities that could be granted or "
          "denied to a role or an identity by the associated "
          "privileges. The Activities property of the instances of "
          "CIM_Privilege that are associated to the role or the "
          "identity MUST contain only the values enumerated in the "
          "ActivitiesSupported array property. The supported "
          "activities apply to all entities specified in the "
          "ActivityQualifiersSupported array. Refer to the "
          "CIM_Privilege.Activities property for the detailed "
          "description of values." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "..", "16000.." }, 
       Values { "Other", "Create", "Delete", "Detect", "Read", 
          "Write", "Execute", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_PrivilegeManagementCapabilities.ActivityQualifiersSupported" }]
   uint16 ActivitiesSupported[];

      [Description ( 
          "The ActivityQualifiersSupported property is an array of "
          "string values used to further qualify and specify the "
          "supported activities of privileges. The "
          "ActivityQualifiers property of the instances of "
          "CIM_Privilege that are associated to the role or the "
          "identity MUST contain only the values enumerated in the "
          "ActivityQualifiersSupported array property. Details on "
          "the semantics of the individual entries in "
          "ActivityQualifiersSupported are provided by "
          "corresponding entries in the QualifierFormatsSupported "
          "array. Refer to the CIM_Privilege.ActivityQualifiers "
          "property for the detailed description of values." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_PrivilegeManagementCapabilities.ActivitiesSuppported", 
          "CIM_Privilege.QualifierFormatsSupported" }]
   string ActivityQualifiersSupported[];

      [Description ( 
          "Defines the semantics of corresponding entries in the "
          "ActivityQualifierSupported array. The QualifierSupported "
          "property of the instances of CIM_Privilege that are "
          "associated to the role or the identity MUST contain only "
          "the values enumerated in the QualifierSupported array "
          "property. Refer to the CIM_Privilege.QualifierSupported "
          "property for the detailed description of values." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "..", "16000.." }, 
       Values { "Class Name", "<Class.>Property", "<Class.>Method", 
          "Object Reference", "Namespace", "URL", 
          "Directory/File Name", "Command Line Instruction", 
          "SCSI Command", "Packets", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_Privilege.ActivityQualifierSupported" }]
   uint16 QualifierFormatsSupported[];

      [Description ( 
          "Each enumeration corresponds to support for the "
          "like-named method of the PrivilegeManagementService." ), 
       ValueMap { "0", "1", "2", "3", "4..40", "..", "0x8000.." }, 
       Values { "ChangeAccess", "ShowAccess", "AssignAccess", 
          "RevokeAccess", "DMTF Role Reserved", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 SupportedMethods[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::User::Role" ), 
    Description ( 
       "The Role object class is used to represent a position or set "
       "of responsibilities within an organization, organizational "
       "unit or other scope, and MAY be filled by a person or persons "
       "(or non-human entities represented by ManagedSystemElement "
       "subclasses) - i.e., the \'role occupants\'. The latter MAY be "
       "explicitly associated to a Role, by associating Identities "
       "using MemberOfCollection. The \'position or set of "
       "responsibilities\' of a Role are represented as a set of "
       "rights defined by instances of the Privilege class, and are "
       "also associated to the Role via MemberOfCollection. If "
       "Identities are not explicitly associated, instances of "
       "AuthorizationRule MUST be associated with a Role using "
       "AuthorizationRuleAppliesToRole. The rule defines how subject "
       "entities are authorized for a Role and to which target "
       "entities the Role applies. \n"
       "\n"
       "The Role class is defined so as to incorporate commonly-used "
       "LDAP attributes to permit implementations to easily derive "
       "this information from LDAP-accessible directories. This "
       "class\'s properties are a subset of a related class, "
       "OtherRoleInformation, which defines all the group properties "
       "and uses arrays for directory compatibility." )]
class CIM_Role : CIM_Collection {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "This property may be used to describe the kind of "
          "business activity performed by the members (role "
          "occupants) in the position or set of responsibilities "
          "represented by the Role." ), 
       MaxLen ( 128 )]
   string BusinessCategory;

      [Required, Description ( 
          "A Common Name is a (possibly ambiguous) name by which "
          "the role is commonly known in some limited scope (such "
          "as an organization) and conforms to the naming "
          "conventions of the country or culture with which it is "
          "associated." )]
   string CommonName;

      [Description ( 
          "RoleCharacteristics provides descriptive information "
          "about the intended usage of the Role.\n"
          "When the value 2 \"Static\" is specified, no "
          "modification to the role shall be allowed. Any requests "
          "by client to change the privileges or the scope of the "
          "role by modifying the associated instances of "
          "CIM_Privilege or referencing associations shall fail.\n"
          "When the value 2 \"Static\" is not specified, the "
          "instance of CIM_Role may be modified by a client. The "
          "modification may include changing the scope of the role "
          "or rights granted. When the value 3 \"Opaque\" is "
          "specified, the rights granted by the CIM_Role instance "
          "shall not be explicitly modeled through aggregation of "
          "instances of CIM_Privilege.\n"
          "When the value 3 \"Opaque\" is not specified, the rights "
          "granted by the instance of CIM_Role shall be explicitly "
          "modeled through aggregation of instances of "
          "CIM_Privilege." ), 
       ValueMap { "2", "3", "..", "32000..65535" }, 
       Values { "Static", "Opaque", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 RoleCharacteristics[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::User::Privilege" ), 
    Description ( 
       "A subclass that extends the capabilities of the "
       "CIM_RoleBasedAuthorizationService." )]
class CIM_RoleBasedManagementCapabilities : CIM_PrivilegeManagementCapabilities {

      [Override ( "SupportedMethods" ), 
       Description ( 
          "The enumeration values \"ChangeAccess\", \"ShowAccess\", "
          "\"AssignAccess\", \"RevokeAccess\", \"CreateRole\", "
          "\"ModifyRole\", \"AssignRoles\", \"ShowRoles\", and "
          "\"DeleteRole\" corresponds to support for the like-named "
          "method of the RoleBasedAuthorizationService. \n"
          "The value \"ModifyPrivilege\" corresponds to support for "
          "directly modifying an instance of CIM_Privilege using an "
          "intrinsic operation." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "..", "32768..65535" }, 
       Values { "ChangeAccess", "ShowAccess", "AssignAccess", 
          "RevokeAccess", "CreateRole", "ModifyRole", "AssignRoles", 
          "ShowRoles", "ModifyPrivilege", "DeleteRole", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 SupportedMethods[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::User::Role" ), 
    Description ( 
       "The Role object class is used to represent a position or set "
       "of responsibilities within an organization, organizational "
       "unit or other scope. When explicitly restricting the target "
       "elements that may be accessed from this Role, this association "
       "MUST be used." )]
class CIM_RoleLimitedToTarget {

      [Key, Description ( 
          "The Role whose target set is explicitly defined." )]
   CIM_Role REF DefiningRole;

      [Key, Description ( 
          "Reference to the target set that can be accessed from the Role."
           )]
   CIM_ManagedElement REF TargetElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UserContact 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "UserContact contains the details related to contacting a user. "
       "This information will be promoted to UserEntity in a later "
       "major release of CIM, but cannot be promoted at this time "
       "since UserEntity is abstract today, with no keys. Key and "
       "required properties cannot be added to a class in a minor "
       "version release since this breaks backward compatibility." )]
class CIM_UserContact : CIM_UserEntity {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "The Name property defines the label by which the object "
          "is known. In the case of an LDAP-derived instance, the "
          "Name property value may be set to the distinguished name "
          "of the LDAP-accessed object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "The Given Name property is used for the part of a "
          "person\'s name that is not their surname nor their "
          "middle name (i.e., their first name)." )]
   string GivenName;

      [Required, Description ( 
          "The Surname property specifies the linguistic construct "
          "that normally is inherited by an individual from the "
          "individual\'s parent or assumed by marriage, and by "
          "which the individual is commonly known." )]
   string Surname;

      [Description ( 
          "Based on RFC1274, the mail box addresses for the person "
          "as defined in RFC822." )]
   string Mail;

      [Description ( 
          "A User ID property. Based on RFC1274, the property may "
          "be used to specify a computer system login name." )]
   string UserID;

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName;

      [Description ( 
          "The PostalAddress property values specify the address "
          "information required for the physical delivery of postal "
          "messages by the postal authority to the person." )]
   string PostalAddress[];

      [Description ( 
          "The State or Province name property specifies a state or province."
           )]
   string StateOrProvince;

      [Description ( 
          "The PostalCode property specifies the postal code of the "
          "organization. If this value is present it will be part "
          "of the object\'s postal address." ), 
       MaxLen ( 40 )]
   string PostalCode;

      [Description ( 
          "The TelephoneNumber property specifies a telephone "
          "number of the organization, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string TelephoneNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UsersCredential 
// ==================================================================
   [Association, Deprecated { "CIM_AuthenticationCondition" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "CIM_UsersCredential is an association used to establish the "
       "credentials that may be used for a UsersAccess to a system or "
       "set of systems. \n"
       "\n"
       "Since the UsersAccess class is deprecated in lieu of "
       "CIM_Identity, this association is also deprecated and replaced "
       "by policy - where the AuthenticationCondition class describes "
       "the credentials that SHOULD be authenticated in order to "
       "establish the Identity." )]
class CIM_UsersCredential : CIM_Dependency {

      [Deprecated { "CIM_AuthenticationCondition" }, 
       Override ( "Antecedent" ), 
       Description ( "The issued credential that may be used." )]
   CIM_Credential REF Antecedent;

      [Deprecated { "CIM_Identity" }, 
       Override ( "Dependent" ), 
       Description ( "The UsersAccess that has use of a credential." )]
   CIM_UsersAccess REF Dependent;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    ClassConstraint { 
       "/* The constraints below aim to efficiently */ /* represent a singular OctetString. Each of the properties*/  /* is a single encoded stringthus only the first element */  /* needs to be populated. */ inv:self.PublicKey->size()<=1 and self.SerialNumber->size()<=1 and self.EncodedCertificate->size()<=1" }, 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "CIM_X509Certificate describes Internet X509 Public Key "
       "Infrastructure (PKI) standard based certificates. The "
       "certificates are signed by a trusted Certificate Authority "
       "(CA) or by the owner of the certificate and issued to an "
       "authenticated entity (e.g., human user, service, etc.) called "
       "the Subject in the certificate. The public key in the "
       "certificate is cryptographically related to a private key that "
       "is held and kept private by the authenticated Subject. The "
       "certificate and its related private key can then be used for "
       "establishing trust relationships and securing communications "
       "with the Subject. Refer to the Internet X.509 PKI standard "
       "(RFC 3280) for more information." )]
class CIM_X509Certificate : CIM_X509Infrastructure {

      [Description ( 
          "Distinguished name identifying the subject of the "
          "certificate.Subject shall contain information as "
          "required by section 4.1.2.6 of RFC 3280 and shall be "
          "formatted based on RFC 4514." ), 
       DN, MappingStrings { "RFC3280.IETF|Section 4.1.2.6" }]
   string Subject;

      [Description ( 
          "Alternate subject identifier for the Certificate." ), 
       MappingStrings { "RFC3280.IETF|Section 4.2.1.7" }]
   string AltSubject;

      [Description ( 
          "The DER-encoded raw public key that belongs to the "
          "subject the certificate vouches for.Only the first "
          "element of PublicKey array property shall be populated "
          "with DER encoded raw public key octet string." ), 
       OctetString, MappingStrings { "RFC3280.IETF|Section 4.1.2.7" }]
   string PublicKey[];

      [Description ( 
          "The length of the public key represented in the "
          "PublicKey property." ), 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.7" }]
   uint16 PublicKeySize;

      [Description ( 
          "IsValid represents whether the certificate is currently "
          "valid. When the certificate is revoked or expired or put "
          "on hold or invalidated for any reason IsValid shall be "
          "set to FALSE." )]
   boolean IsValid;

      [Description ( 
          "Unique number that identifies this certificate.Only the "
          "first element of the array property shall be populated." ), 
       OctetString, MappingStrings { "RFC3280.IETF|Section 4.1.2.2" }]
   string SerialNumber[];

      [Description ( "Public key algorithm." ), 
       ValueMap { "0", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "RSA", "DSA", "ECDSA", "DMTF Reserved", 
          "Vendor Specified" }, 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.7" }]
   uint16 PublicKeyAlgorithm;

      [Description ( 
          "Key usage defines the purpose of the key. Key usage "
          "could include digital signing, key agreement, "
          "certificate signing, and more. The key usage is an "
          "extension to the X.509 specification." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8..32767", 
          "32768..65535" }, 
       Values { "Unknown", "Digital Signature", "Non Repudiation", 
          "Key Encipherment", "Data Encipherment", "Key Agreement", 
          "Key Certificate Signature", "DMTF Reserved", 
          "Vendor Specified" }, 
       MappingStrings { "RFC3280.IETF|Section 4.2.1.3" }]
   uint16 KeyUsage[];

      [Description ( 
          "This extension indicates one or more purposes for which "
          "the certified public key may be used, in addition to or "
          "in place of the basic purposes indicated in the key "
          "usage extension." ), 
       MappingStrings { "RFC3280.IETF|Section 4.2.1.13" }]
   string ExtendedKeyUsage[];

      [Description ( 
          "An X.509 certificate may contain an optional extension "
          "that identifies whether the subject of the certificate "
          "is a certificate authority (CA). If the subject is a CA, "
          "this property defines the number of certificates that "
          "may follow this certificate in a certification chain." ), 
       MappingStrings { "RFC3280.IETF|Section 4.2.1.10" }]
   uint16 PathLengthConstraint;

      [Description ( 
          "The full content of the certificate in binary form.Only "
          "the first element of the array property shall be "
          "populated." ), 
       OctetString, MappingStrings { "RFC3280.IETF|Section 4" }]
   string EncodedCertificate[];

      [Description ( 
          "Extension identifier array for additional attributes "
          "associated with the certificate. The corresponding array "
          "element in the IsCritical property denotes whether the "
          "extension is critical. The corresponding array element "
          "in the ExtensionValue property contains the value of the "
          "extension attribute." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.9", 
          "RFC3280.IETF|Section 4.2" }, 
       ModelCorrespondence { "CIM_X509Certificate.IsCritical", 
          "CIM_X509Certificate.ExtensionValue" }]
   string ExtensionID[];

      [Description ( 
          "Certificate extension attribute value array. The "
          "corresponding array element in the ExtensionID property "
          "contains the identifier of the certificate extension "
          "attribute. The corresponding array element in the "
          "IsCritical property denotes whether the extension is "
          "critical." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.9", 
          "RFC3280.IETF|Section 4.2" }, 
       ModelCorrespondence { "CIM_X509Certificate.IsCritical", 
          "CIM_X509Certificate.ExtensionID" }]
   string ExtensionValue[];

      [Description ( 
          "TRUE value represents that the extension attribute is "
          "critical. The corresponding array element in the "
          "ExtensionID property contains the identifier of the "
          "extension attribute. The corresponding array element in "
          "the ExtensionValue property contains the value of the "
          "extension attribute." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.9", 
          "RFC3280.IETF|Section 4.2" }, 
       ModelCorrespondence { "CIM_X509Certificate.ExtensionID", 
          "CIM_X509Certificate.ExtensionValue" }]
   boolean IsCritical[];

      [Description ( 
          "String that identifies the issuer of the certificate." ), 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.8" }]
   string IssuerUniqueID;

      [Description ( "Certificate\'s unique subject identifier." ), 
       MappingStrings { "RFC3280.IETF|Section 4.1.2.8" }]
   string SubjectUniqueID;

      [Description ( 
          "TRUE value represents that the certificate is a trusted "
          "root certificate." )]
   boolean TrustedRootCertificate;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    ClassConstraint { 
       "/* The constraints below aim to efficiently */  /* represent a singular OctetString. Each of the properties*/  /* is a single encoded string, thus only the first element */  /* needs to be populated. */ inv:self.EncodedCRL->size()=1" }, 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "CIM_X509CRL describes Internet X509 Public Key Infrastructure "
       "(PKI) standard based Certificate Revocation List (CRL). CRL is "
       "issued by a Certificate Authority\'s (CA) to update the list "
       "of the certificates used in the authentication. Upon "
       "application of a CRL to a set of certificates, the "
       "certificates matched to those contained in the CRL would be "
       "revoked and invalidated for use in authentication. Refer to "
       "the Internet X.509 PKI standard (RFC 3280) for more "
       "information." )]
class CIM_X509CRL : CIM_X509Infrastructure {

      [Override ( "Issued" ), 
       Description ( 
          "This property corresponds to the thisUpdate field in the "
          "Internet X509 PKI standard. The property represents the "
          "issue date of the CRL. Use a value of all "
          "\'00000101000000.000000+000\', (midnight, January 1, 1 "
          "BCE at coordinated universal time +0 minutes), if this "
          "information is not applicable. On CreateInstance, if "
          "this property is unspecified, or set to NULL, then "
          "current time is assumed." )]
   datetime Issued;

      [Override ( "Expires" ), 
       Description ( 
          "This property is not applicable for CIM_X509CRL class "
          "and shall either have value of \n"
          "\'99991231115959.999999-720\' as defined by DSP0004 to "
          "mean \"infinite future or NULL." )]
   datetime Expires;

      [Description ( 
          "The property represents the date by which the next CRL "
          "will be issued. The next CRL could be issued before the "
          "indicated date, but it will not be issued any later than "
          "the indicated date. If this information is not "
          "applicable, use a value of \n"
          "\'99991231115959.999999-720\' as defined by DSP0004 to "
          "mean \"infinite future." )]
   datetime NextUpdate;

      [Description ( 
          "The full content of the CRL in binary form.Only the "
          "first element of the array property shall be populated." ), 
       OctetString]
   string EncodedCRL[];

      [Description ( 
          "An array of serial numbers of X.509 certificates that "
          "are part of CRL." ), 
       OctetString]
   string SerialNumbers[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InstalledProduct 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::InstalledProduct" ), 
    Description ( 
       "The InstalledProduct object allows the grouping of "
       "SoftwareFeatures and SoftwareElements that represent the "
       "result of the installation of a purchased Product. "
       "InstalledProduct is defined to be Weak to a Product. \n"
       "Often, Products are purchased once but may be installed "
       "several times in different locations on one or more systems. "
       "All of the SoftwareElements and SoftwareFeatures of a single "
       "install are grouped by an instance of InstalledProduct. These "
       "are defined using the associations, CollectedSoftwareFeatures "
       "and Collected SoftwareElements." )]
class CIM_InstalledProduct : CIM_Collection {

      [Key, Description ( "The scoping Product\'s identification." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_Product.IdentifyingNumber" )]
   string ProductIdentifyingNumber;

      [Key, Description ( 
          "The scoping Product\'s commonly used name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Product.Name" )]
   string ProductName;

      [Key, Description ( "The scoping Product\'s name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Product.Vendor" )]
   string ProductVendor;

      [Key, Description ( 
          "The scoping Product\'s version information." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_Product.Version" )]
   string ProductVersion;

      [Key, Description ( 
          "The identifying information of the System (ie, the "
          "instance) on which the Product is installed. If the "
          "System is not known, this property returns NULL. If the "
          "System is known and represented in CIM, the property "
          "contains the namespace and model paths of the instance, "
          "encoded as a string parameter. If known but not "
          "represented in CIM, the property contains some "
          "identifying string that names the System on which the "
          "Product is installed." ), 
       MaxLen ( 256 )]
   string SystemID;

      [Key, Description ( 
          "The identification of the InstalledProduct object. This "
          "key can be used to differentiate between Product "
          "installations and could include the installation "
          "location." ), 
       MaxLen ( 256 )]
   string CollectionID;

      [Description ( 
          "The Name property defines the label by which the object "
          "is known to the world, outside the data processing "
          "system. This label is a human-readable name that "
          "uniquely identifies the element in the context of the "
          "element\'s namespace." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InstalledProductImage 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::InstalledProduct" ), 
    Description ( 
       "InstalledProductImage identifies the collection of Software "
       "Features and SoftwareElements that are the result of the "
       "installation of the referenced Product." )]
class CIM_InstalledProductImage {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The product that has been installed." )]
   CIM_Product REF Product;

      [Key, Weak, Description ( 
          "The collection containing the set of SoftwareFeatures "
          "and SoftwareElements that are the result of installing "
          "the Product." )]
   CIM_InstalledProduct REF Collection;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeConnectionStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeConnectionStats class defines the performance "
       "statistics that are provided by a connection. JCA and JDBC "
       "connection statistics are represented by this class. The "
       "semantics are determined by the class to which the "
       "ConnectionStats instance is associated via the "
       "CIM_ElementStatisticalData association." )]
class CIM_J2eeConnectionStats : CIM_J2eeStatistic {

      [Description ( 
          "The time spent waiting for a connection to be available. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.19.1.3 getWaitTime|V1.0" }]
   datetime WaitTime;

      [Description ( 
          "The maximum amount of time spent waiting for a "
          "connection to be available since the beginning of this "
          "measurement. The time is represented as a datetime "
          "interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.2 getMaxTime|V1.0" }]
   datetime WaitTimeMaxTime;

      [Description ( 
          "The minimum amount of time spent waiting for a "
          "connection to be available since the beginning of this "
          "measurement. The time is represented as a datetime "
          "interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.3 getMinTime|V1.0" }]
   datetime WaitTimeMinTime;

      [Description ( 
          "The total amount of time spent waiting for a connection "
          "to be available since the beginning of this measurement. "
          "Dividing WaitTimeTotalTime by WaitTime will provide the "
          "average time spent waiting for a connection. The time is "
          "represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.4 getTotalTime|V1.0" }]
   datetime WaitTimeTotalTime;

      [Description ( 
          "The time spent using a connection. The time is "
          "represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.19.1.3 getUseTime|V1.0" }]
   datetime UseTime;

      [Description ( 
          "The maximum amount of time spent using a connection "
          "since the beginning of this measurement. The time is "
          "represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.2 getMaxTime|V1.0" }]
   datetime UseTimeMaxTime;

      [Description ( 
          "The minimum amount of time spent using a connection "
          "since the beginning of this measurement. The time is "
          "represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.3 getMinTime|V1.0" }]
   datetime UseTimeMinTime;

      [Description ( 
          "The total amount of time spent using a connection since "
          "the beginning of this measurement. Dividing "
          "UseTimeTotalTime by UseTime will provide the average "
          "time spent using a connection. The time is represented "
          "as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.4 getTotalTime|V1.0" }]
   datetime UseTimeTotalTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeEJBStats 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeEJBStats class defines the performance statistics that "
       "are available for all EJB component types." )]
class CIM_J2eeEJBStats : CIM_J2eeStatistic {

      [Description ( 
          "A count of the number of times that the beans create "
          "method was called." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.11.1.1 getCreateCount|V1.0" }]
   uint64 CreateCount;

      [Description ( 
          "A count of the number of times that the beans remove "
          "method was called." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.11.1.2 getRemoveCount|V1.0" }]
   uint64 RemoveCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeEntityBeanStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeEntityBeanStats class defines the performance "
       "statistics that are provided by entity beans." )]
class CIM_J2eeEntityBeanStats : CIM_J2eeEJBStats {

      [Description ( 
          "The number of bean instances in the ready state." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.12.1.1 getReadyCount|V1.0" }]
   uint64 ReadyCount;

      [Description ( 
          "The lowest number of bean instances in the ready state "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 ReadyLowWaterMark;

      [Description ( 
          "The highest number of bean instances in the ready state "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 ReadyHighWaterMark;

      [Description ( 
          "The number of bean instances in the pooled state." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.12.1.2 getPooledCount|V1.0" }]
   uint64 PooledCount;

      [Description ( 
          "The lowest number of bean instances in the pooled state "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 PooledLowWaterMark;

      [Description ( 
          "The highest number of bean instances in the pooled state "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 PooledHighWaterMark;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJavaMailStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeJavaMailStats class defines the performance statistics "
       "that are provided by Java mail resources." )]
class CIM_J2eeJavaMailStats : CIM_J2eeStatistic {

      [Description ( "The number of mail messages received." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.13.1.1 getSentMailCount|V1.0" }]
   uint64 SentMailCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJCAStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeJCAStats class defines the performance statistics that "
       "are provided by a JCA resource." )]
class CIM_J2eeJCAStats : CIM_J2eeStatistic {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJDBCStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeJDBCStats class defines the performance statistics "
       "that are provided by a JDBC resource." )]
class CIM_J2eeJDBCStats : CIM_J2eeStatistic {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSConnectionStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJMSConnectionStats class defines the performance "
       "statistics that are provided by a JMS connection." )]
class CIM_J2eeJMSConnectionStats : CIM_J2eeStatistic {

      [Description ( 
          "The transactional state of the JMS connection. A value "
          "of true indicates that the JMS connection is "
          "transactional." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.25.1.2 isTransactional|V1.0" }]
   boolean IsTransactional;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSEndpointStats 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJMSEndpointStats class is a base class that "
       "defines the performance statistics that are provided by a JMS "
       "message producer or JMS message consumer." )]
class CIM_J2eeJMSEndpointStats : CIM_J2eeStatistic {

      [Description ( 
          "The number of messages that expired before delivery." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.27.1.1 getExpiredMessageCount|V1.0" }]
   uint64 ExpiredMessageCount;

      [Description ( "The number of messages sent or received." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.27.1.2 getMessageCount|V1.0" }]
   uint64 MessageCount;

      [Description ( 
          "The time spent by a message before being delivered. The "
          "time is represented as a datetime interval." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.27.1.3 getMessageWaitTime|V1.0" }]
   datetime MessageWaitTime;

      [Description ( 
          "The maximum amount of time spent by a message before "
          "being delivered since the beginning of this measurement. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.2 getMaxTime|V1.0" }]
   datetime MessageWaitTimeMaxTime;

      [Description ( 
          "The minimum amount of time spent by a message before "
          "being delivered since the beginning of this measurement. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.3 getMinTime|V1.0" }]
   datetime MessageWaitTimeMinTime;

      [Description ( 
          "The total amount of time spent by a message before being "
          "delivered since the beginning of this measurement. "
          "Dividing MessageWaitTimeTotalTime by MessageWaitTime "
          "will provide the average time spent using a connection. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.4 getTotalTime|V1.0" }]
   datetime MessageWaitTimeTotalTime;

      [Description ( "The number of pending messages." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.27.1.4 getPendingMessageCount|V1.0" }]
   uint64 PendingMessageCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSProducerStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJMSProducerStats class defines the performance "
       "statistics that are provided by a JMS message producer." )]
class CIM_J2eeJMSProducerStats : CIM_J2eeJMSEndpointStats {

      [Description ( 
          "A string that encapsulates the identity of the message "
          "destination." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.28.1.1 getDestination|V1.0" }]
   string Destination;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSSessionStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJMSSessionStats class defines the performance "
       "statistics that are provided by a JMS session." )]
class CIM_J2eeJMSSessionStats : CIM_J2eeStatistic {

      [Description ( "The number of durable subscriptions." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.26.1.3 getDurableSubscriptionCount|V1.0" }]
   uint64 DurableSubscriptionCount;

      [Description ( "The number of expired messages." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.26.1.4 getExpiredMessageCount|V1.0" }]
   uint64 ExpiredMessageCount;

      [Description ( "The number of messages exchanged." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.26.1.5 getMessageCount|V1.0" }]
   uint64 MessageCount;

      [Description ( 
          "The time spent by a message before being delivered. The "
          "time is represented as a datetime interval." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.26.1.6 getMessageWaitTime|V1.0" }]
   datetime MessageWaitTime;

      [Description ( 
          "The maximum amount of time spent by a message before "
          "being delivered since the beginning of this measurement. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.2 getMaxTime|V1.0" }]
   datetime MessageWaitTimeMaxTime;

      [Description ( 
          "The minimum amount of time spent by a message before "
          "being delivered since the beginning of this measurement. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.3 getMinTime|V1.0" }]
   datetime MessageWaitTimeMinTime;

      [Description ( 
          "The total amount of time spent by a message before being "
          "delivered since the beginning of this measurement. "
          "Dividing MessageWaitTimeTotalTime by MessageWaitTime "
          "will provide the average time spent using a connection. "
          "The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.4 getTotalTime|V1.0" }]
   datetime MessageWaitTimeTotalTime;

      [Description ( "The number of pending messages." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.26.1.7 getPendingMessageCount|V1.0" }]
   uint64 PendingMessageCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJMSStats class defines the performance statistics "
       "that are provided by a JMS resource." )]
class CIM_J2eeJMSStats : CIM_J2eeStatistic {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJTAStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJTAStats class defines the performance statistics "
       "that are provided by a JTA resource." )]
class CIM_J2eeJTAStats : CIM_J2eeStatistic {

      [Description ( "The number of active transactions." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.30.1.1 getActiveCount|V1.0" }]
   uint64 ActiveCount;

      [Description ( "The number of committed transactions." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.30.1.2 getCommittedCount|V1.0" }]
   uint64 CommittedCount;

      [Description ( "The number of rolled-back transactions." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.30.1.3 getRolledbackCount|V1.0" }]
   uint64 RolledbackCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.2" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJVMStats class defines the performance statistics "
       "that are provided by a Java VM." )]
class CIM_J2eeJVMStats : CIM_J2eeStatistic {

      [Description ( "The heap size of the JVM." ), 
       Units ( "Bytes" ), 
       Gauge, MappingStrings { 
          "JSR77.JCP|JSR77.6.31.1.1 getHeapSize|V1.0" }, 
       PUnit ( "byte" )]
   uint64 HeapSize;

      [Description ( "The upper limit for the heap size of the JVM." ), 
       Units ( "Bytes" ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.1 getUpperBound|V1.0" }, 
       PUnit ( "byte" )]
   uint64 HeapSizeUpperBound;

      [Description ( "The lower limit for the heap size of the JVM." ), 
       Units ( "Bytes" ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.2 getLowerBound|V1.0" }, 
       PUnit ( "byte" )]
   uint64 HeapSizeLowerBound;

      [Description ( 
          "The smallest size of the JVM heap since the beginning of "
          "the measurement." ), 
       Units ( "Bytes" ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }, 
       PUnit ( "byte" )]
   uint64 HeapSizeLowWaterMark;

      [Description ( 
          "The largest size of the JVM heap since the beginning of "
          "the measurement." ), 
       Units ( "Bytes" ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }, 
       PUnit ( "byte" )]
   uint64 HeapSizeHighWaterMark;

      [Description ( 
          "The amount of time the JVM has been running. The time is "
          "represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.31.1.2 getUpTime|V1.0" }]
   datetime UpTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeManagedObjectCapabilities 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeManagedObjectCapabilities is a class for defining "
       "additional capabilities of J2EE managed objects. It contains "
       "the attributes that are common to all J2EE managed objects. "
       "These common attributes are mapped to the corresponding J2EE "
       "classes using the CIM_ElementCapabilities association." )]
class CIM_J2eeManagedObjectCapabilities : CIM_Capabilities {

      [Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2EE "
          "ManagedObject\'s Capabilities in a given namespace. In "
          "order to ensure uniqueness, the value of InstanceID MUST "
          "be constructed using the form specified in JSR77.3.1.1.1 "
          "in order to avoid the need for manual key propagation." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeManagedObjectCapabilities.ElementName" }]
   string InstanceID;

      [Override ( "ElementName" ), 
       Description ( 
          "The name of a J2EE managed object. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeManagedObjectCapabilities.InstanceID" }]
   string ElementName;

      [Description ( 
          "A property that indicates whether the managed object "
          "implements the state management model as defined in "
          "State Management chapter of the JSR77 specification. A "
          "value of true indicates that the managed object "
          "implements the state management interface. A value of "
          "false indicates that the managed object does not "
          "implement the state management interface." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.3.1.1.2 stateManageable|V1.0" }]
   boolean StateManageable;

      [Description ( 
          "A property that indicates whether the managed object "
          "implements the statistics provider model as defined in "
          "Performance Monitoring chapter of the JSR77 "
          "specification. A value of true indicates that the "
          "managed object implements the statistics provider "
          "interface. A value of false indicates that the managed "
          "object does not implement the statistics provider "
          "interface." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.3.1.1.3 statisticsProvider|V1.0" }]
   boolean StatisticsProvider;

      [Description ( 
          "A property that indicates whether the managed object "
          "implements the event provider model as defined in the "
          "Events chapter of the JSR77 specification. A value of "
          "true indicates that the managed object implements the "
          "event provider interface. A value of false indicates "
          "that the managed object does not implement the event "
          "provider interface." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.4 eventProvider|V1.0" }]
   boolean EventProvider;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeMessageDrivenBeanStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeMessageDrivenBeanStats class defines the performance "
       "statistics that are provided by message driven beans." )]
class CIM_J2eeMessageDrivenBeanStats : CIM_J2eeEJBStats {

      [Description ( "The number of messages received." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.13.1.1 getMessageCount|V1.0" }]
   uint64 MessageCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeServletStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeServletStats class defines the performance "
       "statistics that are provided by a Servlet component." )]
class CIM_J2eeServletStats : CIM_J2eeStatistic {

      [Description ( 
          "The execution time of the servlet\'s service method. The "
          "time is represented as a datetime interval." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.32.1.1 getServiceTime|V1.0" }]
   datetime ServiceTime;

      [Description ( 
          "The maximum execution time of the servlet\'s service "
          "method since the beginning of this measurement. The time "
          "is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.2 getMaxTime|V1.0" }]
   datetime ServletTimeMaxTime;

      [Description ( 
          "The minimum execution time of the servlet\'s service "
          "method since the beginning of this measurement. The time "
          "is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.3 getMinTime|V1.0" }]
   datetime ServiceTimeMinTime;

      [Description ( 
          "The total execution time of the servlet\'s service "
          "method since the beginning of this measurement. Dividing "
          "ServletTimeTotalTime by ServletTime will provide the "
          "average time spent executing the servlet\'s service "
          "method. The time is represented as a datetime interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.6.1.4 getTotalTime|V1.0" }]
   datetime ServletTimeTotalTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeSessionBeanStats 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeSessionBeanStats class is a base class that defines "
       "the performance statistics that are provided by both stateful "
       "and stateless session beans." )]
class CIM_J2eeSessionBeanStats : CIM_J2eeEJBStats {

      [Description ( 
          "The number of bean instances in the method-ready state." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.14.1.1 getMethodReadyCount|V1.0" }]
   uint64 MethodReadyCount;

      [Description ( 
          "The lowest number of bean instances in the method-ready "
          "state since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 MethodReadyLowWaterMark;

      [Description ( 
          "The highest number of bean instances in the method-ready "
          "state since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 MethodReadyHighWaterMark;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeStatefulSessionBeanStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeStatefulSessionBeanStats class defines the performance "
       "statistics that are provided by a stateful session bean." )]
class CIM_J2eeStatefulSessionBeanStats : CIM_J2eeSessionBeanStats {

      [Description ( 
          "The number of bean instances in a passive state." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.15.1.1 getPassiveCount|V1.0" }]
   uint64 PassiveCount;

      [Description ( 
          "The lowest number of bean instances in the passive state "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 PassiveLowWaterMark;

      [Description ( 
          "The highest number of bean instances in the passive "
          "state since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 PassiveHighWaterMark;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeStatelessSessionBeanStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeStatelessSessionBeanStats class defines the "
       "performance statistics that are provided by a stateless "
       "session bean." )]
class CIM_J2eeStatelessSessionBeanStats : CIM_J2eeSessionBeanStats {


};

// Copyright (c) 2009 DMTF.  All Rights Reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The CIM_SoftwareElement class is used to decompose a "
       "CIM_SoftwareFeature object into a set of individually "
       "manageable or deployable parts, for a particular platform. A "
       "SoftwareElement\'s platform is uniquely identified by its "
       "underlying hardware architecture and operating system (for "
       "example Sun Solaris on Sun Sparc or Windows NT on Intel "
       "platforms). As such, to understand the details of how the "
       "functionality of a particular SoftwareFeature is provided on a "
       "particular platform, the CIM_SoftwareElement objects "
       "referenced by CIM_SoftwareFeatureSoftwareElements associations "
       "are organized in disjoint sets based on the "
       "TargetOperatingSystem property. A CIM_SoftwareElement object "
       "captures the management details of a part or component in one "
       "of four states characterized by the SoftwareElementState "
       "property." )]
class CIM_SoftwareElement : CIM_LogicalElement {

      [Key, Override ( "Name" ), 
       Description ( 
          "The name used to identify this SoftwareElement." ), 
       MaxLen ( 256 )]
   string Name;

      [Key, Description ( 
          "Software Version should be in the form "
          "<Major>.<Minor>.<Revision> or "
          "<Major>.<Minor><letter><revision>." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|SubComponent Software |001.4" }]
   string Version;

      [Key, Description ( 
          "The SoftwareElementState is defined in this model to "
          "identify various states of a SoftwareElement\'s life "
          "cycle. \n"
          "- A SoftwareElement in the deployable state describes "
          "the details necessary to successfully distribute it and "
          "the details (Checks and Actions) required to move it to "
          "the installable state (i.e, the next state). \n"
          "- A SoftwareElement in the installable state describes "
          "the details necessary to successfully install it and the "
          "details (Checks and Actions) required to create an "
          "element in the executable state (i.e., the next state). \n"
          "- A SoftwareElement in the executable state describes "
          "the details necessary to successfully start it and the "
          "details (Checks and Actions) required to move it to the "
          "running state (i.e., the next state). \n"
          "- A SoftwareElement in the running state describes the "
          "details necessary to manage the started element." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Deployable", "Installable", "Executable", "Running" }]
   uint16 SoftwareElementState;

      [Key, Description ( 
          "This is an identifier for the SoftwareElement and is "
          "designed to be used in conjunction with other keys to "
          "create a unique representation of the element." ), 
       MaxLen ( 256 )]
   string SoftwareElementID;

      [Key, Description ( 
          "The TargetOperatingSystem property specifies the "
          "element\'s operating system environment. The value of "
          "this property does not ensure that it is binary "
          "executable. Two other pieces of information are needed. "
          "First, the version of the OS needs to be specified using "
          "the class, CIM_OSVersion Check. The second piece of "
          "information is the architecture that the OS runs on. "
          "This information is verified using "
          "CIM_ArchitectureCheck. The combination of these "
          "constructs clearly identifies the level of OS required "
          "for a particular SoftwareElement." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110" }, 
       Values { "Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", 
          "DECNT", "Tru64 UNIX", "OpenVMS", "HPUX", "AIX", 
          //10 
          "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", 
          "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", 
          //20 
          "NCR3000", "NetWare", "OSF", "DC/OS", 
          "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", 
          "Sequent", "IRIX", "Solaris", //30 
          "SunOS", 
          "U6000", "ASERIES", "HP NonStop OS", "HP NonStop OSS", 
          "BS2000", "LINUX", "Lynx", "XENIX", "VM", 
          //40 
          "Interactive UNIX", "BSDUNIX", "FreeBSD", 
          "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", 
          "QNX", "EPOC", //50 
          "IxWorks", "VxWorks", 
          "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", 
          "Rhapsody", "Windows 2000", "Dedicated", 
          //60 
          "OS/390", "VSE", "TPF", "Windows (R) Me", 
          "Caldera Open UNIX", "OpenBSD", "Not Applicable", 
          "Windows XP", "z/OS", "Microsoft Windows Server 2003", 
          //70
          "Microsoft Windows Server 2003 64-Bit", 
          "Windows XP 64-Bit", "Windows XP Embedded", 
          "Windows Vista", "Windows Vista 64-Bit", 
          "Windows Embedded for Point of Service", 
          "Microsoft Windows Server 2008", 
          "Microsoft Windows Server 2008 64-Bit", "FreeBSD 64-Bit", 
          "RedHat Enterprise Linux", 
          //80
          "RedHat Enterprise Linux 64-Bit", 
          "Solaris 64-Bit", "SUSE", "SUSE 64-Bit", "SLES", 
          "SLES 64-Bit", "Novell OES", "Novell Linux Desktop", 
          "Sun Java Desktop System", "Mandriva", 
          //90
          "Mandriva 64-Bit", "TurboLinux", 
          "TurboLinux 64-Bit", "Ubuntu", "Ubuntu 64-Bit", "Debian", 
          "Debian 64-Bit", "Linux 2.4.x", "Linux 2.4.x 64-Bit", 
          "Linux 2.6.x", //100
          "Linux 2.6.x 64-Bit", 
          "Linux 64-Bit", "Other 64-Bit", 
          "Microsoft Windows Server 2008 R2", "VMware ESXi", 
          "Microsoft Windows 7", "CentOS 32-bit", "CentOS 64-bit", 
          "Oracle Enterprise Linux 32-bit", 
          "Oracle Enterprise Linux 64-bit", 
          //110 
          "eComStation 32-bitx" }, 
       MappingStrings { "MIF.DMTF|SubComponent Software|001.8" }, 
       ModelCorrespondence { "CIM_OperatingSystem.OSType" }]
   uint16 TargetOperatingSystem;

      [Description ( 
          "The OtherTargetOS property records the manufacturer and "
          "operating system type for a SoftwareElement when the "
          "TargetOperatingSystem property has a value of 1 "
          "(\"Other\"). For all other values of "
          "TargetOperatingSystem, the OtherTargetOS property is "
          "NULL." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { 
          "CIM_OperatingSystem.OtherTypeDescription" }]
   string OtherTargetOS;

      [Description ( "Manufacturer of this SoftwareElement." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|SubComponent Software|001.3" }]
   string Manufacturer;

      [Description ( 
          "The internal identifier for this compilation of SoftwareElement."
           ), 
       MaxLen ( 64 ), 
       MappingStrings { 
          "MIF.DMTF|Software Component Information|002.4" }]
   string BuildNumber;

      [Description ( 
          "The assigned serial number of this SoftwareElement." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|ComponentID|001.4" }]
   string SerialNumber;

      [Description ( 
          "The code set used by this SoftwareElement. It defines "
          "the bit patterns that a system uses to identify "
          "characters. ISO defines various code sets such as UTF-8 "
          "and ISO8859-1." ), 
       MaxLen ( 64 )]
   string CodeSet;

      [Description ( 
          "The manufacturer\'s identifier for this SoftwareElement. "
          "Often this will be a stock keeping unit (SKU) or a part "
          "number." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|SubComponent Software|001.6" }]
   string IdentificationCode;

      [Description ( 
          "The value of this property identifies the language "
          "edition of this SoftwareElement. The language codes "
          "defined in ISO 639 should be used. Where the element "
          "represents a multi-lingual or international version, the "
          "string \"Multilingual\" should be used." ), 
       MaxLen ( 32 ), 
       MappingStrings { "MIF.DMTF|SubComponent Software|001.7" }]
   string LanguageEdition;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareElementComponent 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "SoftwareElements may have an arbitrarily complex hierarchy. "
       "SoftwareElementComponent is used to construct that hierarchy. "
       "It should not be used to represent dependency." )]
class CIM_SoftwareElementComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The parent element in the association." )]
   CIM_SoftwareElement REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The child element in the association." )]
   CIM_SoftwareElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareFeature 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The CIM_SoftwareFeature class defines a particular function or "
       "capability of a product or application system. This class "
       "captures a level of granularity describing a unit of "
       "installation, rather than the units that reflect how the "
       "product is built or packaged. The latter detail is captured "
       "using a CIM_SoftwareElement class. When a SoftwareFeature can "
       "exist on multiple platforms or operating systems (for example, "
       "a client component of a three tiered client/server application "
       "that runs on Solaris, Windows NT, and Windows 95), the Feature "
       "is a collection of all the SoftwareElements for these "
       "different platforms. In this case, the users of the model must "
       "be aware of this situation since typically they will be "
       "interested in a sub-collection of the SoftwareElements "
       "required for a particular platform. \n"
       "SoftwareFeatures are always defined in the context of a "
       "CIM_Product, using the CIM_ProductSoftwareFeature association. "
       "Features are delivered through Products. Optionally, "
       "SoftwareFeatures from one or more Products can be organized "
       "into ApplicationSystems using the "
       "CIM_ApplicationSystemSoftwareFeature association." )]
class CIM_SoftwareFeature : CIM_LogicalElement {

      [Key, Description ( "The scoping Product\'s identification." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_Product.IdentifyingNumber" )]
   string IdentifyingNumber;

      [Key, Description ( 
          "The scoping Product\'s commonly used name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Product.Name" )]
   string ProductName;

      [Key, Description ( "The scoping Product\'s supplier." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Product.Vendor" )]
   string Vendor;

      [Key, Description ( "The scoping Product\'s version." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_Product.Version" )]
   string Version;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property defines the unique label by which the "
          "SoftwareFeature is identified. This label should be a "
          "human-readable name that uniquely identifies the element "
          "in the context of the element\'s namespace." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareFeatureComponent 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The SoftwareFeatureComponent aggregation models a set of "
       "subordinate or independent Software Features of a Product. "
       "These are aggregated together to form a higher-level or large "
       "grain Feature under the same Product." )]
class CIM_SoftwareFeatureComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent SoftwareFeature." )]
   CIM_SoftwareFeature REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The component SoftwareFeature." )]
   CIM_SoftwareFeature REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareFeatureSoftwareElements 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "SoftwareFeatureSoftwareElements identifies the Software "
       "Elements that make up a particular SoftwareFeature." )]
class CIM_SoftwareFeatureSoftwareElements : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The SoftwareFeature that groups the SoftwareElement." )]
   CIM_SoftwareFeature REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The SoftwareElement that makes up the Feature." )]
   CIM_SoftwareElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VideoBIOSElement 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "VideoBIOSElement represents the low-level software that is "
       "loaded into non-volatile storage and used to bring up, "
       "configure and access a ComputerSystem\'s VideoController and "
       "Display." )]
class CIM_VideoBIOSElement : CIM_SoftwareElement {

      [Override ( "Version" ), 
       MappingStrings { "MIF.DMTF|Video BIOS|001.3" }]
   string Version;

      [Override ( "Manufacturer" ), 
       MappingStrings { "MIF.DMTF|Video BIOS|001.2" }]
   string Manufacturer;

      [Description ( 
          "If true, indicates that the Video BIOS is shadowed." ), 
       MappingStrings { "MIF.DMTF|Video BIOS|001.5" }]
   boolean IsShadowed;

      [Description ( "Date that this BIOS was released." ), 
       MappingStrings { "MIF.DMTF|Video BIOS|001.4" }]
   datetime ReleaseDate;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VideoBIOSFeature 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "VideoBIOSFeature represents the capabilities of the low-level "
       "software that is used to bring up, configure and use a "
       "ComputerSystem\'s VideoController and Display." )]
class CIM_VideoBIOSFeature : CIM_SoftwareFeature {

      [Description ( 
          "An array of integers that specify the features supported "
          "by the VideoBIOS. For example, one could indicate "
          "support for VESA power management (value=6) or video "
          "BIOS shadowing (8). The value, 3, is not valid in the "
          "CIM Schema since in DMI it represents that no BIOS "
          "Features are supported. In this case, the object should "
          "not be instantiated." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Other", "Unknown", "Undefined", 
          "Standard Video BIOS", "VESA BIOS Extensions Supported", 
          "VESA Power Management Supported", 
          "VESA Display Data Channel Supported", 
          "Video BIOS Shadowing Allowed", "Video BIOS Upgradeable" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Video BIOS Characteristic|001.3" }, 
       ModelCorrespondence { 
          "CIM_VideoBIOSFeature.CharacteristicDescriptions" }]
   uint16 Characteristics[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the VideoBIOS features indicated "
          "in the Characteristics array. Note, each entry of this "
          "array is related to the entry in the Characteristics "
          "array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Video BIOS Characteristic|001.4" }, 
       ModelCorrespondence { "CIM_VideoBIOSFeature.Characteristics" }]
   string CharacteristicDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VideoBIOSFeatureVideoBIOSElements 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "A link between VideoBIOSFeature and its aggregated VideoBIOSElements."
        )]
class CIM_VideoBIOSFeatureVideoBIOSElements : CIM_SoftwareFeatureSoftwareElements {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The VideoBIOSFeature." )]
   CIM_VideoBIOSFeature REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The VideoBIOSElement that implements the capabilities "
          "described by VideoBIOSFeature." )]
   CIM_VideoBIOSElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00717.001" type ="add">Deprecated</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ActsAsSpare
// ==================================================================
   [Association, Deprecated { "CIM_IsSpare" }, 
    Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "The ActsAsSpare association indicates which elements can spare "
       "or replace the other aggregated elements. The fact that a "
       "spare can operate in \"hot standby\" mode is specified on an "
       "element by element basis. \n"
       "The use of this class is being deprecated in lieu of using the "
       "IsSpare relationship." )]
class CIM_ActsAsSpare {

      [Deprecated { "CIM_IsSpare.Dependent" }, 
       Key, Description ( "The SpareGroup." )]
   CIM_SpareGroup REF Group;

      [Deprecated { "CIM_IsSpare.Antecedent" }, 
       Key, Description ( 
          "A ManagedSystemElement acting as a spare and "
          "participating in the SpareGroup." )]
   CIM_ManagedSystemElement REF Spare;

      [Deprecated { "CIM_IsSpare.SpareStatus" }, 
       Description ( 
          "HotStandby is a boolean indicating that the spare is "
          "operating as a hot standby." )]
   boolean HotStandby;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Capabilities" ), 
    Description ( 
       "CIM_AllocationCapabilities extends the CIM_Capabilities class "
       "for the purposes of expressing the resource allocation "
       "capabilities of the associated managed element for the "
       "allocation of a specific Resource Type. This class describes "
       "the supported types of allocations allowed, specific or "
       "general, the sharing modes supported for the device, dedicated "
       "and or shared and the system states where the addition or "
       "removal of the Resource Type is allowed." )]
class CIM_AllocationCapabilities : CIM_Capabilities {

      [Description ( 
          "The type of resource this allocation setting represents." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "..", "0x8000..0xFFFF" }, 
       Values { "Other", "Computer System", "Processor", "Memory", 
          "IDE Controller", "Parallel SCSI HBA", "FC HBA", 
          "iSCSI HBA", "IB HCA", "Ethernet Adapter", 
          "Other Network Adapter", "I/O Slot", "I/O Device", 
          "Floppy Drive", "CD Drive", "DVD drive", "Disk Drive", 
          "Tape Drive", "Storage Extent", "Other Storage Device", 
          "Serial port", "Parallel port", "USB Controller", 
          "Graphics controller", "IEEE 1394 Controller", 
          "Partitionable Unit", "Base Partitionable Unit", "Power", 
          "Cooling Capacity", "Ethernet Switch Port", 
          "Logical Disk", "Storage Volume", "Ethernet Connection", 
          "DMTF reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_AllocationCapabilities.OtherResourceType", 
          "CIM_ResourceAllocationSettingData.ResourceType" }]
   uint16 ResourceType;

      [Description ( 
          "A string that describes the resource type when a well "
          "defined value is not available and ResourceType has the "
          "value \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.ResourceType" }]
   string OtherResourceType;

      [Description ( 
          "A string describing an implementation specific sub-type "
          "for this resource. For example, this may be used to "
          "distinguish different models of the same resource type." )]
   string ResourceSubType;

      [Description ( 
          "Indicates whether requesting a specific resource is "
          "supported \n"
          "\"Specific\" -- request can include a request for "
          "specific resource \n"
          "\"General\" -- request does not include specific "
          "resource \n"
          "\"Both\" -- both specific and general requests are "
          "supported." ), 
       ValueMap { "0", "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Specific", "General", "Both", 
          "DMTF reserved", "Vendor Reserved" }]
   uint16 RequestTypesSupported;

      [Description ( 
          "Indicates how access to underlying resource is granted: \n"
          "\"Dedicated\" -- exclusive access to underlying resource \n"
          "\"Shared\" -- shared use of underlying resource. \n"
          "Actual quantity is controlled by min, max size, weights, "
          "etc." ), 
       ValueMap { "0", "2", "3", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Dedicated", "Shared", "DMTF reserved", 
          "Vendor Reserved" }]
   uint16 SharingMode;

      [Description ( 
          "Indicates the states that the System, to which the "
          "resource will be associated via SystemDevice, may be in "
          "when a new resource is created." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Enabled", "Disabled", "Shutting Down", 
          "Not Applicable", "Enabled but Offline", "In Test", 
          "Deferred", "Quiesce", "Starting", "Paused", "Suspended", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 SupportedAddStates[];

      [Description ( 
          "Indicates the states that the System, to which the "
          "resource is associated via SystemDevice, may be in when "
          "a the resource is removed ." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Enabled", "Disabled", "Shutting Down", 
          "Not Applicable", "Enabled but Offline", "In Test", 
          "Deferred", "Quiesce", "Starting", "Paused", "Suspended", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 SupportedRemoveStates[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00707.002" type ="add">CPUBS corrections to CoreCollection.mof</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectedCollections 
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_CollectedCollections is an aggregation association "
       "representing that a CollectionOfMSEs can itself be contained "
       "in a CollectionOfMSEs." )]
class CIM_CollectedCollections {

      [Key, Aggregate, Description ( 
          "The \'higher level\' or parent element in the aggregation."
           )]
   CIM_CollectionOfMSEs REF Collection;

      [Key, Description ( "The \'collected\' Collection." )]
   CIM_CollectionOfMSEs REF CollectionInCollection;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectedMSEs 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "CIM_CollectedMSEs is a generic association used to establish "
       "the members of the grouping object, CollectionOf MSEs." )]
class CIM_CollectedMSEs : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Description ( 
          "The grouping or \'bag\' object that represents the Collection."
           )]
   CIM_CollectionOfMSEs REF Collection;

      [Override ( "Member" ), 
       Description ( "The members of the Collection." )]
   CIM_ManagedSystemElement REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectionConfiguration
// ==================================================================
   [Association, Deprecated { "CIM_ElementSettingData", 
       "CIM_CollectionSetting" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Configuration class is being deprecated in lieu of "
       "using a ConcreteComponent relationship to indicate a hierarchy "
       "of instances of Setting or SettingData. This relationship "
       "allows the reuse of the collection-to-Setting and "
       "element-to-SettingData associations instead of defining peer "
       "associations specifically for Configurations. \n"
       "Deprecated description: This association relates a "
       "Configuration object to one or more CollectionOfMSEs objects. "
       "The Configuration object represents a certain behavior or a "
       "desired functional state for the associated Collection." )]
class CIM_CollectionConfiguration {

      [Deprecated { "CIM_ElementSettingData.ManagedElement", 
          "CIM_CollectionSetting.Collection" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The CollectionOfMSEs." )]
   CIM_CollectionOfMSEs REF Collection;

      [Deprecated { "CIM_ElementSettingData.SettingData", 
          "CIM_CollectionSetting.Setting" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Configuration object that groups the "
          "Settings and dependencies that are associated with the "
          "Collection." )]
   CIM_Configuration REF Configuration;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectionSetting
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CollectionSetting represents the association between a "
       "CollectionOfMSEs class and the Setting classes that are "
       "defined for it." )]
class CIM_CollectionSetting {

      [Key, Description ( "The CollectionOfMSEs." )]
   CIM_CollectionOfMSEs REF Collection;

      [Key, Description ( 
          "The Setting object that is associated with the Collection."
           )]
   CIM_Setting REF Setting;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConcreteDependency
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_ConcreteDependency is a generic association used to "
       "establish dependency relationships between ManagedElements. It "
       "is defined as a concrete subclass of the abstract "
       "CIM_Dependency class, to be used in place of many specific "
       "subclasses of Dependency that add no semantics, that is "
       "subclasses that do not clarify the type of dependency, update "
       "cardinalities, or add or remove qualifiers. Note that when you "
       "define additional semantics for Dependency, this class must "
       "not be subclassed. Specific semantics continue to be defined "
       "as subclasses of the abstract CIM_Dependency. "
       "ConcreteDependency is limited in its use as a concrete form of "
       "a general dependency. \n"
       "\n"
       "It was deemed more prudent to create this concrete subclass "
       "than to change Dependency from an abstract to a concrete "
       "class. Dependency already had multiple abstract subclasses in "
       "the CIM Schema, and wider industry usage and impact could not "
       "be anticipated." )]
class CIM_ConcreteDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "Antecedent represents the independent object in this association."
           )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "Dependent represents the object that is dependent on the "
          "Antecedent." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConcreteIdentity
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_ConcreteIdentity associates two elements that represent "
       "different aspects of the same underlying entity. It is defined "
       "as a concrete subclass of the abstract CIM_LogicalIdentity "
       "class, to be used in place of many specific subclasses of "
       "LogicalIdentity that add no semantics, that is, subclasses "
       "that do not clarify the type of identity, update "
       "cardinalities, or add or remove qualifiers. Note that when you "
       "define additional semantics for LogicalIdentity, this class "
       "should not be subclassed. Specific semantics continue to be "
       "defined as subclasses of the abstract CIM_LogicalIdentity. "
       "ConcreteIdentity is limited in its use as a concrete form of a "
       "general identity relationship. \n"
       "\n"
       "It was deemed more prudent to create this concrete subclass "
       "than to change LogicalIdentity from an abstract to a concrete "
       "class. LogicalIdentity already had multiple abstract "
       "subclasses in the CIM Schema, and wider industry usage and "
       "impact could not be anticipated." )]
class CIM_ConcreteIdentity : CIM_LogicalIdentity {

      [Override ( "SystemElement" ), 
       Description ( 
          "One aspect of the ManagedElement. The use of \'System\' "
          "in the name does not limit the scope of the association. "
          "This name is an artifact of the original definition of "
          "the association." )]
   CIM_ManagedElement REF SystemElement;

      [Override ( "SameElement" ), 
       Description ( "Another aspect of the ManagedElement." )]
   CIM_ManagedElement REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00714.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ContainedLocation
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Physical" ), 
    Description ( 
       "ContainedLocation defines one location in the context of "
       "another. For example, a campus might \'contain\' a building, "
       "which in turn \'contains\' a floor." )]
class CIM_ContainedLocation : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The containing location." )]
   CIM_Location REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The contained location." )]
   CIM_Location REF PartComponent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "ElementAllocatedFromPool associates an instance of "
       "CIM_LogicalElement representing an allocated Resource with the "
       "CIM_ResourcePool from which it was allocated." )]
class CIM_ElementAllocatedFromPool : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The resource pool." )]
   CIM_ResourcePool REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The allocated resource." )]
   CIM_LogicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00714.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementLocation
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Physical" ), 
    Description ( 
       "ElementLocation associates a ManagedElement with a location "
       "for positioning, inventory, maintenance and similar purposes. "
       "PhysicalElements can certainly have locations. They are "
       "explicitly defined in a subclass, PhysicalElement Location. "
       "However, other ManagedElements can also be associated with "
       "locations. For example, Organizations can be \'in\' one or "
       "more locations, or Services can be restricted to a location." )]
class CIM_ElementLocation {

      [Key, Description ( 
          "The ManagedElement whose location is specified." )]
   CIM_ManagedElement REF Element;

      [Key, Description ( "The location of the element." )]
   CIM_Location REF PhysicalLocation;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementProfile
// ==================================================================
   [Association, Deprecated { "CIM_ElementSettingData", 
       "CIM_ElementSetting" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The Profile class is being deprecated in lieu of using a "
       "ConcreteComponent relationship to indicate a hierarchy of "
       "Setting or SettingData instances. This relationship allows the "
       "reuse of the element to Setting or SettingData associations "
       "instead of defining a peer association specifically for "
       "Profiles. \n"
       "Deprecated description: ElementProfile represents the "
       "association between ManagedElements and the Profiles "
       "(collection of settings) that are defined for them. This "
       "association indicates that the settings that are collected by "
       "the Profile apply to the associated ManagedElement." )]
class CIM_ElementProfile {

      [Deprecated { "CIM_ElementSettingData.ManagedElement", 
          "CIM_ElementSetting.Element" }, 
       Key, Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The managed element." )]
   CIM_ManagedElement REF ManagedElement;

      [Deprecated { "CIM_ElementSettingData.SettingData", 
          "CIM_ElementSetting.Setting" }, 
       Key, Description ( 
          "Note: The use of this object is deprecated. Deprecated "
          "description: The Profile object that is associated with "
          "the element." )]
   CIM_Profile REF Profile;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementSetting
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "ElementSetting represents the association between "
       "ManagedSystemElements and the Setting classes defined for "
       "them." )]
class CIM_ElementSetting {

      [Key, Description ( "The ManagedSystemElement." )]
   CIM_ManagedSystemElement REF Element;

      [Key, Description ( 
          "The Setting object that is associated with the "
          "ManagedSystemElement." )]
   CIM_Setting REF Setting;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Core::Software" ), 
    Description ( 
       "ElementSoftwareIdentity allows a Managed Element to report its "
       "software related asset information (firmware, drivers, "
       "configuration software, and etc.)" )]
class CIM_ElementSoftwareIdentity : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "A LogicalElement\'s Software Asset." )]
   CIM_SoftwareIdentity REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ManagedElement that requires or uses the software." )]
   CIM_ManagedElement REF Dependent;

      [Description ( 
          "Indicates the element\'s ability to upgrade this "
          "software asset.\n"
          "\'Resides off element\'(2), indicates the persistence of "
          "the software is outside of the element. Typically for a "
          "element this software is part of the OperatingSystem is "
          "typically upgradeable.\n"
          "\'Owner Upgradeable\' (3), indicates the persistence of "
          "the software is on the element and is upgradeable by the owner.\n"
          "\'FactoryUpgradeable\' (4),indicates the persistence of "
          "the software is on the element and is upgradeable by the manufacturer.\n"
          "\'Not Upgradeable\' (5), indicates the presistence of "
          "the software is on the element and is not upgradeable. "
          "(i.e. burned into a non replaceable ROM chip." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", 
          "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "Resides off device", 
          "Owner Upgradeable", "Factory Upgradeable", 
          "Not Upgradeable", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ElementSoftwareIdentity.OtherUpgradeCondition" }]
   uint16 UpgradeCondition;

      [Description ( 
          "Describes the upgrade condition, when UpgradeCondition "
          "is set to 1 (\"Other\")." ), 
       ModelCorrespondence { 
          "CIM_ElementSoftwareIdentity.UpgradeCondition" }]
   string OtherUpgradeCondition;

      [Description ( 
          "A collection of properties describing the status of the "
          "software on the managed element. Multiple properties "
          "could be set at the same time. For example a "
          "ElementSoftwareStatus could have \"Installed\", "
          "\"Default\", \"Current\" and \"FallBack\" set at the "
          "same time. \n"
          "\"Current\" indicates that the software is currently "
          "running on or for the Managed Element. \n"
          "\"Next\" indicates that the software will run after the "
          "next reset or reboot unless superseded by a software "
          "with a status of \"SingleUse\". \n"
          "\"FallBack\" indicates that the software will be run if "
          "the software which has a status of \"Next\" or "
          "\"SingleUse\" fails to run. \n"
          "\"Default\" indicates the default version of the "
          "software that was originally shipped by the "
          "manufacturer. \n"
          "\"Installed\" indicates that the software is "
          "persistently located and is available for use on the "
          "Managed Element. \n"
          "\"SingleUse\" indicates that the software will run only "
          "after the next reset or reboot but will not run after "
          "the subsequent reset or reboot. \n"
          "\"Available\" indicates that the software is available "
          "for installation on the Managed Element. \n"
          "\"Supports\"indicates that the software will work with "
          "or operate the Managed Element but is or will be "
          "installed on a different Managed Element." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "..", 
          "32768..65535" }, 
       Values { "Unknown", "Current", "Next", "FallBack", "Default", 
          "Installed", "Single Use", "Available", "Supports", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 ElementSoftwareStatus[];


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "The EthernetPortAllocationSettingData class represents "
       "settings specifically related to the allocation of an "
       "EthernetPort that are outside the scope of the EthernetPort "
       "CIM class itself. These settings are used to provide "
       "information specific to the resource itself." )]
class CIM_EthernetPortAllocationSettingData : CIM_ResourceAllocationSettingData {

      [Description ( 
          "The desired VLAN mode that is requested for use. This "
          "property is used to set the initial "
          "OperationalEndpointMode property value in the instance "
          "of CIM_VLANEndpoint associated with the targeted "
          "Ethernet Port.Refer to the description for the property "
          "OperationalEndpointMode in CIM_VLANEndpoint for a "
          "description of the values" ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "0x8000..0xFFFF" }, 
       Values { "DMTF Reserved", "Other", "Access", "Dynamic Auto", 
          "Dynamic Desirable", "Trunk", "Dot1Q Tunnel", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode", 
          "CIM_VLANEndpoint.DesiredEndpointMode", 
          "CIM_EthernetPortAllocationSettingData.OtherEndpointMode" }]
   uint16 DesiredVLANEndpointMode;

      [Description ( 
          "A string describing the type of VLAN endpoint model that "
          "is supported by this VLANEndpoint, when the value of the "
          "mode property is set to 1 (i.e., \"Other\"). This "
          "property should be set to NULL when the mode property is "
          "any value other than 1." ), 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.DesiredVLANEndpointMode" }]
   string OtherEndpointMode;

      [Description ( 
          "An array of 802.1Q PCP values that this port is allowed "
          "to transmit." )]
   uint16 AllowedPriorities[];

      [Description ( 
          "An indexed array of MAC address that this port is "
          "allowed to accept receive traffic. This array is "
          "index-correlated with the AllowedToReceiveVLANs array to "
          "support filtering on MAC,VID pairs." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.AllowedToReceiveVLANs" }]
   string AllowedToReceiveMACAddresses[];

      [Description ( 
          "An indexed array of VIDs that this port is allowed to "
          "accept traffic from. This array is index-correlated with "
          "the AllowedToReceiveMACAddresses array to support "
          "filtering on MAC,VID pairs." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.AllowedToReceiveMACAddresses" }]
   uint16 AllowedToReceiveVLANs[];

      [Description ( 
          "An indexed array of MAC addresses used for source MAC "
          "filtering. This array is index-correlated with the "
          "AllowedToTransmitVLANs array to support filtering on "
          "MAC,VID Pairs." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.AllowedToTransmitVLANs" }]
   string AllowedToTransmitMACAddresses[];

      [Description ( 
          "An index array of VIDs that this port is allowed to "
          "transmit. This array is index-correlated with the "
          "AllowedToTransmitMACAddresses array to support filtering "
          "on MAC,VID pairs." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.AllowedToTransmitMACAddresses" }]
   uint16 AllowedToTransmitVLANs[];

      [Description ( 
          "Default VID value for the PortVID on this port." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpointSettingData.DefaultVLAN" }]
   uint16 DefaultPortVID;

      [Description ( 
          "The default 802.1Q PCP bits assigned to transmit packets." )]
   uint16 DefaultPriority;

      [Description ( 
          "The GroupID is an identifier that refers to the VLAN "
          "associated with the VSI specified in the VDP TLV as "
          "definded in IEEE 802.1Qbg." )]
   uint32 GroupID;

      [Description ( 
          "If not null has the value of the VDP TLV VSI Manager ID "
          "as specified in 802.1Qbg" )]
   uint32 ManagerID;

      [Description ( 
          "Network port profile ID is used to map the port with an "
          "existing network port profile conforming to the schema "
          "specified in DSP8049." )]
   string NetworkPortProfileID;

      [Description ( 
          "Used to indicate the type of the network profile ID, "
          "typically a UUID or URI" ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "URI", "UUID", 
          "VSI Instance ID", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.OtherNetworkPortProfileIDTypeInfo" }]
   uint16 NetworkPortProfileIDType;

      [Description ( 
          "A string that shall describe the "
          "NetworkPortProfileIDType when a well defined value is "
          "not available and NetworkPortProfileIDType matches "
          "1(Other). This property should be set to null when the "
          "NetworkPortProfileIDType is set to any other value than "
          "1." ), 
       ModelCorrespondence { 
          "CIM_EthernetPortAllocationSettingData.NetworkPortProfileIDType" }]
   string OtherNetworkPortProfileIDTypeInfo;

      [Description ( 
          "This property is used to identify a port within a data "
          "center. The property is typically set to the port VSI "
          "Instance ID." )]
   string PortCorrelationID;

      [Description ( 
          "VID that is used to tag untagged traffic received on this port."
           ), 
       ModelCorrespondence { "CIM_VLANEndpointSettingData.NativeVLAN" }]
   uint16 PortVID;

      [Description ( 
          "If set to true receive traffic without destination MAC "
          "address filtering. If set to false MAC address filtering "
          "may be performed." )]
   boolean Promiscuous;

      [Description ( 
          "This property specifes the upper bounds or maximum "
          "amount of receive bandwidth allowed through this port. "
          "The value of the ReceiveBandwidthLimit property is "
          "expressed in the unit specified by the value of the "
          "AllocationUnits property." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.AllocationUnit" }]
   uint64 ReceiveBandwidthLimit;

      [Description ( 
          "This property specifies the amount of receive bandwidth "
          "guaranteed to be available for this allocation. The "
          "value of the ReceiveBandwidthReservation property is "
          "expressed in the unit specified by the value of the "
          "AllocationUnits property. On systems which support "
          "over-commitment of resources, this value is typically "
          "used for admission control to prevent an an allocation "
          "from being accepted thus preventing starvation." ), 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.AllocationUnit" }]
   uint64 ReceiveBandwidthReservation;

      [Description ( 
          "Set to true if source MAC filtering is enabled. If "
          "enabled only incoming traffic with a MAC Address that "
          "matches the CIM_LANEndpoint.MACAddress or traffic with a "
          "MAC Address and VID that matches one of the pairing of "
          "property values contained in "
          "AllowedToTransmitMACAddresses[] and "
          "AllowedToTransmitVLANS[] is allowed. If not enable all "
          "traffic with any MAC address or VID is allowed." ), 
       ModelCorrespondence { "CIM_LANEndpoint.MACAddress" }]
   boolean SourceMACFilteringEnabled;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Deprecated { "CIM_RedundancySet" }, 
    Version ( "2.21.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A class derived from RedundancyGroup indicating that the "
       "aggregated elements have more capacity or capability than is "
       "needed. An example of this type of redundancy is the "
       "installation of N+1 power supplies or fans in a system. \n"
       "The use of this class is being deprecated in lieu of using "
       "RedundancySet." )]
class CIM_ExtraCapacityGroup : CIM_RedundancyGroup {

      [Deprecated { "CIM_RedundancySet.MinNumberNeeded" }, 
       Description ( 
          "MinNumberNeeded indicates the smallest number of "
          "elements that must be operational in order to have "
          "redundancy. For example, in an N+1 redundancy "
          "relationship, the MinNumberNeeded property should be set "
          "equal to N." )]
   uint32 MinNumberNeeded;

      [Deprecated { "CIM_RedundancySet.TypeOfSet" }, 
       Description ( 
          "Boolean indicating whether load balancing is supported "
          "by the ExtraCapacityGroup." )]
   boolean LoadBalancedGroup;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_Job
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "A Job is a LogicalElement that represents an executing unit of "
       "work, such as a script or a print job. A Job is distinct from "
       "a Process in that a Job can be scheduled or queued, and its "
       "execution is not limited to a single system." )]
class CIM_Job : CIM_LogicalElement {

      [Description ( 
          "A free-form string that represents the status of the "
          "job. The primary status is reflected in the inherited "
          "OperationalStatus property. JobStatus provides "
          "additional, implementation-specific details." ), 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.OperationalStatus" }]
   string JobStatus;

      [Description ( 
          "The time that the Job was submitted to execute. A value "
          "of all zeroes indicates that the owning element is not "
          "capable of reporting a date and time. Therefore, the "
          "ScheduledStartTime and StartTime are reported as "
          "intervals relative to the time their values are "
          "requested." )]
   datetime TimeSubmitted;

      [Deprecated { "CIM_Job.RunMonth", "CIM_Job.RunDay", 
          "CIM_Job.RunDayOfWeek", "CIM_Job.RunStartInterval" }, 
       Write, Description ( 
          "The time that the current Job is scheduled to start. "
          "This time can be represented by the actual date and "
          "time, or an interval relative to the time that this "
          "property is requested. A value of all zeroes indicates "
          "that the Job is already executing. The property is "
          "deprecated in lieu of the more expressive scheduling "
          "properties, RunMonth, RunDay, RunDayOfWeek, and "
          "RunStartInterval." )]
   datetime ScheduledStartTime;

      [Description ( 
          "The time that the Job was actually started. This time "
          "can be represented by an actual date and time, or by an "
          "interval relative to the time that this property is "
          "requested. Note that this property is also present in "
          "the JobProcessingStatistics class. This class is "
          "necessary to capture the processing information for "
          "recurring Jobs, because only the \'last\' run time can "
          "be stored in this single-valued property." )]
   datetime StartTime;

      [Description ( 
          "The time interval that the Job has been executing or the "
          "total execution time if the Job is complete. Note that "
          "this property is also present in the "
          "JobProcessingStatistics class. This class is necessary "
          "to capture the processing information for recurring "
          "Jobs, because only the \'last\' run time can be stored "
          "in this single-valued property." )]
   datetime ElapsedTime;

      [Write, Description ( 
          "The number of times that the Job should be run. A value "
          "of 1 indicates that the Job is not recurring, while any "
          "non-zero value indicates a limit to the number of times "
          "that the Job will recur. Zero indicates that there is no "
          "limit to the number of times that the Job can be "
          "processed, but that it is terminated either after the "
          "UntilTime or by manual intervention. By default, a Job "
          "is processed once." )]
   uint32 JobRunTimes = 1;

      [Write, Description ( 
          "The month during which the Job should be processed. "
          "Specify 0 for January, 1 for February, and so on." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "January", "February", "March", "April", "May", 
          "June", "July", "August", "September", "October", 
          "November", "December" }, 
       ModelCorrespondence { "CIM_Job.RunDay", 
          "CIM_Job.RunDayOfWeek", "CIM_Job.RunStartInterval" }]
   uint8 RunMonth;

      [Write, Description ( 
          "The day in the month on which the Job should be "
          "processed. There are two different interpretations for "
          "this property, depending on the value of DayOfWeek. In "
          "one case, RunDay defines the day-in-month on which the "
          "Job is processed. This interpretation is used when the "
          "DayOfWeek is 0. A positive or negative integer indicates "
          "whether the RunDay should be calculated from the "
          "beginning or end of the month. For example, 5 indicates "
          "the fifth day in the RunMonth and -1 indicates the last "
          "day in the RunMonth. \n"
          "\n"
          "When RunDayOfWeek is not 0, RunDay is the day-in-month "
          "on which the Job is processed, defined in conjunction "
          "with RunDayOfWeek. For example, if RunDay is 15 and "
          "RunDayOfWeek is Saturday, then the Job is processed on "
          "the first Saturday on or after the 15th day in the "
          "RunMonth (for example, the third Saturday in the month). "
          "If RunDay is 20 and RunDayOfWeek is -Saturday, then this "
          "indicates the first Saturday on or before the 20th day "
          "in the RunMonth. If RunDay is -1 and RunDayOfWeek is "
          "-Sunday, then this indicates the last Sunday in the "
          "RunMonth." ), 
       MinValue ( -31 ), 
       MaxValue ( 31 ), 
       ModelCorrespondence { "CIM_Job.RunMonth", 
          "CIM_Job.RunDayOfWeek", "CIM_Job.RunStartInterval" }]
   sint8 RunDay;

      [Write, Description ( 
          "A positive or negative integer used in conjunction with "
          "RunDay to indicate the day of the week on which the Job "
          "is processed. RunDayOfWeek is set to 0 to indicate an "
          "exact day of the month, such as March 1. A positive "
          "integer (representing Sunday, Monday, ..., Saturday) "
          "means that the day of week is found on or after the "
          "specified RunDay. A negative integer (representing "
          "-Sunday, -Monday, ..., -Saturday) means that the day of "
          "week is found on or BEFORE the RunDay." ), 
       ValueMap { "-7", "-6", "-5", "-4", "-3", "-2", "-1", "0", 
          "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "-Saturday", "-Friday", "-Thursday", "-Wednesday", 
          "-Tuesday", "-Monday", "-Sunday", "ExactDayOfMonth", 
          "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", 
          "Friday", "Saturday" }, 
       ModelCorrespondence { "CIM_Job.RunMonth", "CIM_Job.RunDay", 
          "CIM_Job.RunStartInterval" }]
   sint8 RunDayOfWeek;

      [Write, Description ( 
          "The time interval after midnight when the Job should be "
          "processed. For example, \n"
          "00000000020000.000000:000 \n"
          "indicates that the Job should be run on or after two "
          "o\'clock, local time or UTC time (distinguished using "
          "the LocalOrUtcTime property." ), 
       ModelCorrespondence { "CIM_Job.RunMonth", "CIM_Job.RunDay", 
          "CIM_Job.RunDayOfWeek", "CIM_Job.RunStartInterval" }]
   datetime RunStartInterval;

      [Write, Description ( 
          "This property indicates whether the times represented in "
          "the RunStartInterval and UntilTime properties represent "
          "local times or UTC times. Time values are synchronized "
          "worldwide by using the enumeration value 2, \"UTC Time\"." ), 
       ValueMap { "1", "2" }, 
       Values { "Local Time", "UTC Time" }]
   uint16 LocalOrUtcTime;

      [Write, Description ( 
          "The time after which the Job is invalid or should be "
          "stopped. This time can be represented by an actual date "
          "and time, or by an interval relative to the time that "
          "this property is requested. A value of all nines "
          "indicates that the Job can run indefinitely." ), 
       ModelCorrespondence { "CIM_Job.LocalOrUtcTime" }]
   datetime UntilTime;

      [Write, Description ( 
          "The User who is to be notified upon the Job completion or failure."
           )]
   string Notify;

      [Description ( 
          "The User that submitted the Job, or the Service or "
          "method name that caused the job to be created." ), 
       ModelCorrespondence { "CIM_OwningJobElement" }]
   string Owner;

      [Write, Description ( 
          "Indicates the urgency or importance of execution of the "
          "Job. The lower the number, the higher the priority. Note "
          "that this property is also present in the "
          "JobProcessingStatistics class. This class is necessary "
          "to capture the setting information that would influence "
          "the results of a job." )]
   uint32 Priority;

      [Description ( 
          "The percentage of the job that has completed at the time "
          "that this value is requested. Note that this property is "
          "also present in the JobProcessingStatistics class. This "
          "class is necessary to capture the processing information "
          "for recurring Jobs, because only the \'last\' run data "
          "can be stored in this single-valued property. \n"
          "Note that the value 101 is undefined and will be not be "
          "allowed in the next major revision of the specification." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 101 ), 
       PUnit ( "percent" )]
   uint16 PercentComplete;

      [Write, Description ( 
          "Indicates whether or not the job should be automatically "
          "deleted upon completion. Note that the \'completion\' of "
          "a recurring job is defined by its JobRunTimes or "
          "UntilTime properties, or when the Job is terminated by "
          "manual intervention. If this property is set to false "
          "and the job completes, then the extrinsic method "
          "DeleteInstance must be used to delete the job instead of "
          "updating this property." )]
   boolean DeleteOnCompletion;

      [Description ( 
          "A vendor-specific error code. The value must be set to "
          "zero if the Job completed without error. Note that this "
          "property is also present in the JobProcessingStatistics "
          "class. This class is necessary to capture the processing "
          "information for recurring Jobs, because only the \'last\' "
          "run error can be stored in this single-valued property." ), 
       ModelCorrespondence { "CIM_Job.ErrorDescription" }]
   uint16 ErrorCode;

      [Description ( 
          "A free-form string that contains the vendor error "
          "description. Note that this property is also present in "
          "the JobProcessingStatistics class. This class is "
          "necessary to capture the processing information for "
          "recurring Jobs, because only the \'last\' run error can "
          "be stored in this single-valued property." ), 
       ModelCorrespondence { "CIM_Job.ErrorCode" }]
   string ErrorDescription;

      [Description ( 
          "Describes the recovery action to be taken for an "
          "unsuccessfully run Job. The possible values are: \n"
          "0 = \"Unknown\", meaning it is unknown as to what "
          "recovery action to take \n"
          "1 = \"Other\", indicating that the recovery action will "
          "be specified in the OtherRecoveryAction property \n"
          "2 = \"Do Not Continue\", meaning stop the execution of "
          "the job and appropriately update its status \n"
          "3 = \"Continue With Next Job\", meaning continue with "
          "the next job in the queue \n"
          "4 = \"Re-run Job\", indicating that the job should be "
          "re-run \n"
          "5 = \"Run Recovery Job\", meaning run the Job associated "
          "using the RecoveryJob relationship. Note that the "
          "recovery Job must already be in the queue from which it "
          "will run." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Do Not Continue", 
          "Continue With Next Job", "Re-run Job", "Run Recovery Job" }, 
       ModelCorrespondence { "CIM_Job.OtherRecoveryAction" }]
   uint16 RecoveryAction;

      [Description ( 
          "A string describing the recovery action when the "
          "RecoveryAction property of the instance is 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_Job.RecoveryAction" }]
   string OtherRecoveryAction;


      [Deprecated { "CIM_ConcreteJob.RequestStateChange()" }, 
       Description ( 
          "KillJob is being deprecated because there is no "
          "distinction made between an orderly shutdown and an "
          "immediate kill. CIM_ConcreteJob.RequestStateChange() "
          "provides \'Terminate\' and \'Kill\' options to allow "
          "this distinction. \n"
          "A method to kill this job and any underlying processes, "
          "and to remove any \'dangling\' associations." ), 
       ValueMap { "0", "1", "2", "3", "4", "6", "7", "..", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Access Denied", "Not Found", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 KillJob(
         [IN, Description ( 
             "Indicates whether or not the Job should be "
             "automatically deleted upon termination. This "
             "parameter takes precedence over the property, "
             "DeleteOnCompletion." )]
      boolean DeleteOnKill);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00714.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalElementLocation
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Physical" ), 
    Description ( 
       "PhysicalElementLocation associates a PhysicalElement with a "
       "Location object for inventory or replacement purposes." )]
class CIM_PhysicalElementLocation : CIM_ElementLocation {

      [Override ( "Element" ), 
       Description ( 
          "The PhysicalElement whose location is specified." )]
   CIM_PhysicalElement REF Element;

      [Override ( "PhysicalLocation" ), 
       Max ( 1 ), 
       Description ( "The location of the PhysicalElement." )]
   CIM_Location REF PhysicalLocation;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductSoftwareComponent 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "Indicates that the referenced SoftwareIdentity is acquired as "
       "part of a Product." )]
class CIM_ProductSoftwareComponent : CIM_Component {

      [Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Product." )]
   CIM_Product REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The software which is a part of the Product." )]
   CIM_SoftwareIdentity REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00717.001" type ="add">Deprecated</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RedundancyComponent
// ==================================================================
   [Association, Deprecated { "CIM_MemberOfCollection" }, 
    Aggregation, Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A RedundancyGroup aggregates Managed System Elements and "
       "indicates that these elements, taken together, provide "
       "redundancy. All elements aggregated in a RedundancyGroup "
       "should be instantiations of the same object class. \n"
       "The use of this class is being depreacted in lieu of using "
       "MemberOfCollection in conjunction with RedundancySet." )]
class CIM_RedundancyComponent : CIM_Component {

      [Deprecated { "CIM_MemberOfCollection.Collection" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The RedundancyComponent association indicates that \'this "
          "set of fans\' or \'these physical extents\' participate "
          "in a single RedundancyGroup." )]
   CIM_RedundancyGroup REF GroupComponent;

      [Deprecated { "CIM_MemberOfCollection.Member" }, 
       Override ( "PartComponent" ), 
       Description ( "The component of the redundancy group." )]
   CIM_ManagedSystemElement REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A class derived from SystemSpecificCollection that is a "
       "special collection of ManagedElements. This collection "
       "indicates that the aggregated elements together provide "
       "redundancy, or that redundancy is provided via sparing. All "
       "elements collected in a RedundancySet SHOULD be instantiations "
       "of the same object class." )]
class CIM_RedundancySet : CIM_SystemSpecificCollection {

      [Description ( 
          "RedundancyStatus provides information on the state of "
          "the RedundancyGroup. \'Fully Redundant\' (value=2) means "
          "that all of the configured redundancy is still "
          "available; \'Degraded Redundancy\' (3) means that some "
          "configured elements are degraded, missing or failed but "
          "that the number of elements in the set is still greater "
          "than the minimum required (\'MinNumberNeeded\'); "
          "\'Redundancy Lost\' (4) means that sufficient configured "
          "elements are missing or failed that no redundancy is "
          "available and the next failure experienced will cause "
          "overall failure. \'Overall Failure\' (5) means that "
          "there has been an overall failure of the RedundancySet." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "DMTF Reserved", "Fully Redundant", 
          "Degraded Redundancy", "Redundancy Lost", "Overall Failure" }, 
       ModelCorrespondence { "CIM_RedundancySet.MinNumberNeeded" }]
   uint16 RedundancyStatus;

      [Description ( 
          "TypeOfSet provides information on the type of "
          "redundancy. N+1 (=2) indicates all members are active, "
          "are unaware and function independent of one another. "
          "However, there exist at least one extra member to "
          "achieve functionality. \'Sparing\' is implied (i.e. each "
          "member can be a spare for the other(s). An example of "
          "N+1 is a system that has 2 power supplies, but needs "
          "only 1 power supply to functioning properly. N+1 is a "
          "special case of N+M redundancy where M=1. A value of N+1 "
          "(=2) shall be used for N+M redundancy. - Load Balanced "
          "(=3) indicates all members are active. However, there "
          "functionality is not independent of each other. Their "
          "functioning is determined by some sort of load balancing "
          "algrothim (implemented in hardware and/or software). "
          "\'Sparing\' is implied (i.e. each member can be a spare "
          "for the other(s). \n"
          "- Sparing (=4) indicates that all members are active and "
          "are aware of each others. However, their functionality "
          "is independent until failover. Each member can be a "
          "spare for the other(s). \n"
          "- Limited Sparing (=5) indicates that all members are "
          "active, and they may or may not be aware of each and "
          "they are not spares for each other. Instead, their "
          "redundancy is indicated by the IsSpare relationship." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "N+1", "Load Balanced", 
          "Sparing", "Limited Sparing", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_RedundancySet.OtherTypeOfSet" }]
   uint16 TypeOfSet[];

      [Description ( 
          "MinNumberNeeded indicates the smallest number of "
          "elements that MUST be operational in order to function. "
          "For example, in an N+1 redundancy relationship, the "
          "MinNumberNeeded property is set equal to N. In a "
          "\'LimitedSparing\' environment, this property is "
          "meaningless and SHOULD be set to zero." ), 
       MinValue ( 0 )]
   uint32 MinNumberNeeded;

      [Description ( 
          "MaxNumberSupported indicates the largest number of "
          "elements that can participate in the RedundancySet. A "
          "value of 0 indicates there is no limit on the number of "
          "elements." )]
   uint32 MaxNumberSupported;

      [Description ( 
          "VendorIdentifyingInfo captures the vendor identifying "
          "data for the RedundancySet. One example is the product "
          "name for a cluster." )]
   string VendorIdentifyingInfo;

      [Description ( 
          "When the corresponding array entry in TypeOfSet[] is "
          "\'Other\', this entry provides a string describing the "
          "type of set." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_RedundancySet.TypeOfSet" }]
   string OtherTypeOfSet[];

      [Write, Description ( 
          "The current load balance algorithm. \n"
          "Least Blocks, Least IO, and Address Region are used in "
          "storage device path redundancy drivers to optimize load "
          "balancing by routing requests to a path with the least "
          "queued blocks or IO requests, or based on locality of "
          "reference. \n"
          "\'Product Specific\' indicates that the algorithm is "
          "optimized for a particular type of product. Information "
          "about that product SHOULD be provided in an associated "
          "CIM_Product instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "No Load Balancing", 
          "Round Robin", "Least Blocks", "Least IO", 
          "Address Region", "Product Specific" }, 
       ModelCorrespondence { 
          "CIM_RedundancySet.OtherLoadBalanceAlgorithm" }]
   uint16 LoadBalanceAlgorithm = 2;

      [Write, Description ( 
          "When LoadBalanceAlgorithm is Other, this property "
          "describes the algorithm." ), 
       ModelCorrespondence { "CIM_RedundancySet.LoadBalanceAlgorithm" }]
   string OtherLoadBalanceAlgorithm;


      [Description ( 
          "This method forces a failover from one ManagedElement to "
          "another. There are two parameters to the Failover "
          "method. \n"
          "- FailoverFrom is a reference to an \'active\' "
          "ManagedElement that will become inactive after the "
          "method. This element SHOULD be part of the RedundancySet "
          "via a MemberOfCollection relationship. \n"
          "- FailoverTo is a reference to the ManagedElement that "
          "will take over for the FailoverFrom element. This "
          "element SHOULD either be a member of the RedundancySet "
          "or be associated with the RedundancySet via an IsSpare "
          "relationship. \n"
          "\n"
          "Upon sucessful completion: \n"
          "- the FailoverTo element SHOULD be associated to the "
          "RedundancySet via MemberOfCollection. \n"
          "- the FailFrom element SHOULD either still be associated "
          "to the RedundandySet via MemberOfCollection with a "
          "OperationalStatus or EnableState that indicates it not "
          "active, or it SHOULD be associated to the \'Spared\' "
          "collection via the MemberOfCollection association." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy/In Use", 
          "Paramter Error", "DMTF Reserved", "Vendor Reserved" }]
   uint32 Failover(
         [IN, Description ( 
             "The primary ManagedSystemElement that will become "
             "inactive after the method." )]
      CIM_ManagedElement REF FailoverFrom, 
         [IN, Description ( 
             "The ManagedSystemElement that will take over from "
             "the primary MSE." )]
      CIM_ManagedElement REF FailoverTo);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Resource" ), 
    Description ( 
       "ResourceAllocationFromPool associates an instance of "
       "CIM_ResourceAllocationSettingData representing a resource "
       "allocation with the CIM_ResourcePool from which it is "
       "allocated." )]
class CIM_ResourceAllocationFromPool : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The resource pool." )]
   CIM_ResourcePool REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The resource allocation." )]
   CIM_ResourceAllocationSettingData REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ScopedSetting
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "ScopedSetting defines a setting in the context of the "
       "ManagedElement in which it is located." )]
class CIM_ScopedSetting : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The scoping ManagedElement." )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The setting that is defined for the ManagedElement." )]
   CIM_ScopedSettingData REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "A subclass of SystemSpecificCollection which collects together "
       "statistics for a system. This class forms an \'anchor point\' "
       "from which all the statistics kept for the system can be found "
       "(via the MemberOfCollection associations)." )]
class CIM_StatisticsCollection : CIM_SystemSpecificCollection {

      [Description ( 
          "This property provides the minimum sampling interval for "
          "the associated statistics so that client applications "
          "can determine the minimum interval that the "
          "StatisticsCollection should be sampled. If the "
          "statistics are sampled at different cycles, this "
          "property MUST be set to a zero time interval." )]
   datetime SampleInterval = "00000000000000.000000:000";

      [Description ( 
          "The time that the statistics collection was last "
          "sampled. Note that this property MAY be used to trigger "
          "an indication for \'push\' delivery of statistics "
          "samples." )]
   datetime TimeLastSampled;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "A class derived from RedundancySet describing storage-related "
       "redundancy information. StorageRedundancySets are used to "
       "protect user data. They aggregate one or more underlying "
       "StorageExtents, associated via MemberOfCollection, and produce "
       "one or more higher-level Extents. The Extents are related to "
       "each other via a BasedOn association. And, the higher level "
       "Extent is related to the StorageRedundancy Set via the "
       "LogicalIdentity association. \n"
       "Note that StorageRedundancySets may overlap in their "
       "aggregation of members. If this occurs, the overlapping "
       "Extents SHOULD NOT contain any check data." )]
class CIM_StorageRedundancySet : CIM_RedundancySet {

      [Description ( 
          "TypeOfAlgorithm specifies the algorithm used for storage "
          "data redundancy and reconstruction. For example, \'P+Q\' "
          "(=5) or \'P+S\' (=7) may be specified." ), 
       ValueMap { "0", "1", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Copy", "XOR", "P+Q", "S", "P+S" }, 
       MappingStrings { "MIF.DMTF|Redundancy Group|001.2" }, 
       ModelCorrespondence { 
          "CIM_StorageRedundancySet.OtherAlgorithm" }]
   uint16 TypeOfAlgorithm;

      [Description ( 
          "A string describing the redundancy algorithm when the "
          "TypeOfAlgorithm is set to 1 \'Other\'." ), 
       ModelCorrespondence { 
          "CIM_StorageRedundancySet.TypeOfAlgorithm" }]
   string OtherAlgorithm;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "Instances of this class associate a "
       "BlockStatisticsManifestCollection to the StatisticsCollection "
       "to which is is applied. The ManifestCollection contains the "
       "Manifests that are used to filter requests for the retrieval "
       "of statistics." )]
class CIM_AssociatedBlockStatisticsManifestCollection {

      [Key, Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The collection of statistics filtered by the "
          "BlockStatisticsManifestCollection." )]
   CIM_StatisticsCollection REF Statistics;

      [Key, Description ( 
          "The collection of Manifests applied to the StatisticsCollection."
           )]
   CIM_BlockStatisticsManifestCollection REF ManifestCollection;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "A specialization of the StatisticsCapabilities class that "
       "describes the capabilities of a BlockStatisticsService, which "
       "provides statistical data for instances of "
       "BlockStatisticalData." )]
class CIM_BlockStatisticsCapabilities : CIM_StatisticsCapabilities {

      [Required, Override ( "ElementTypesSupported" ), 
       Description ( 
          "The list of element types for which statistical data is "
          "available. The values of this array correspond to the "
          "values defined for the ElementType property of the "
          "BlockStatisticalData class." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000.." }, 
       Values { "Computer System", "Front-end Computer System", 
          "Peer Computer System", "Back-end Computer System", 
          "Front-end Port", "Back-end Port", "Volume", "Extent", 
          "Disk Drive", "Arbitrary LUs", "Remote Replica Group", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 ElementTypesSupported[];

      [Override ( "SynchronousMethodsSupported" ), 
       Description ( 
          "The synchronous mechanisms supported for retrieving "
          "statistics and defining and modifying filters for "
          "statistics retrieval." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "..", "0x8000.." }, 
       Values { "Execute Query", "Query Collection", 
          "GetStatisticsCollection", "Manifest Creation", 
          "Manifest Modification", "Manifest Removal", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 SynchronousMethodsSupported[];

      [Override ( "AsynchronousMethodsSupported" ), 
       Description ( 
          "The asychronous mechanisms supported for retrieving statistics."
           ), 
       ValueMap { "2", "3", "..", "0x8000.." }, 
       Values { "GetStatisticsCollection", "Indications", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 AsynchronousMethodsSupported[];

      [Description ( 
          "An internal clocking interval for all timers in the "
          "subsystem, measured in microseconds (Unit of measure in "
          "the timers, measured in microseconds). Time counters are "
          "monotanically increasing counters that contain \'ticks\'. "
          "Each tick represents one ClockTickInterval. If "
          "ClockTickInterval contained a value of 32 then each time "
          "counter tick would represent 32 microseconds." ), 
       Units ( "MicroSeconds" ), 
       PUnit ( "second * 10^-6" )]
   uint64 ClockTickInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "FibreChannel port control and configuration capabilities." )]
class CIM_FCPortCapabilities : CIM_LogicalPortCapabilities {

      [Description ( 
          "List of supported port types that can be configured on "
          "FCPortSettings.RequestedType. \n"
          "RequestedType acts as a filter on the enabled port types "
          "that a port may auto-negotiate during port login. \n"
          "\"G\" = Port may only act as an expansion port (E), or a "
          "fabric port (F). \"GL\" = Port may only act an an "
          "expansion port (E), a fabric port (F), or a fabric port "
          "supporting FC arbitrated loop (FL). \"E\" = Port may "
          "only act as an expansion port (E) connecting fabric "
          "elements. \"F\" = Port may only act as a fabric port "
          "(F). \"FX\" = Port may only act as a fabric port (F), or "
          "a fabric port supporting FC arbitrated loop (FL). \"B\" "
          "= Port may only act as a bridge port (B). \"NX\" = Port "
          "may only act as a node port (N) or a node port "
          "supporting FC arbitrated loop (NL). \"N\" = Port may "
          "only act as a Node port. \"NL\" = Port may only act as a "
          "Node Port supporting FC arbitrated loop. \"NX\" = Port "
          "may only act as a node port (N) or a node port "
          "supporting FC arbitrated loop (NL)." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "..", "16000..65535" }, 
       Values { "G", "GL", "E", "F", "FX", "B", "NX", "N", "NL", 
          "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "FC-SWAPI.INCITS-T11|SWAPI_PORT_CONFIG_CAPS_T.ConfigurablePortTypes" }, 
       ModelCorrespondence { "CIM_FCPortSettings.RequestedType" }]
   uint16 RequestedTypesSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_GroupInDiskGroup
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DiskGroup" ), 
    Description ( 
       "CIM_GroupInDiskGroup describes that a DiskGroup can be divided "
       "into smaller named Collections." )]
class CIM_GroupInDiskGroup : CIM_CollectedCollections {

      [Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( 
          "The DiskGroup that is divided into smaller Collections." )]
   CIM_DiskGroup REF Collection;

      [Override ( "CollectionInCollection" ), 
       Description ( 
          "The DiskGroup that is a subset of the larger Group." )]
   CIM_DiskGroup REF CollectionInCollection;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "Description of a print request that is either waiting on a "
       "Queue for a Printer to become available or in the process of "
       "being output on a Printer, or that has previously been printed "
       "on a Printer. PrintJobs are weak to their current Queue, or to "
       "the last Queue that held them. The ABNF for CIM references to "
       "PWG Standards and MIBs is in the directory "
       "\'ftp://ftp.pwg.org/pub/pwg/general/process\' in the file "
       "\'pwg-cim-references-format-20060309.txt\'. An example for a "
       "MappingStrings reference to a PWG Standard is "
       "\'PWG5101-1.PWG|Section 4 Media Color Names\'. An example for "
       "a MappingStrings reference to a PWG MIB is "
       "\'MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorCompletedJobs\'." )]
class CIM_PrintJob : CIM_Job {

      [Key, Description ( 
          "The CreationClassName of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_PrintQueue.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The Name of the scoping System." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIB.IETF|SNMPv2-MIB.sysName" }, 
       Propagated ( "CIM_PrintQueue.SystemName" )]
   string SystemName;

      [Key, Description ( 
          "The CreationClassName of the scoping Queue." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_PrintQueue.CreationClassName" )]
   string QueueCreationClassName;

      [Key, Description ( "The Name of the scoping Queue." ), 
       MaxLen ( 256 ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jmGeneralJobSetName", 
          "MIB.IETF|Job-Monitoring-MIB.queueNameRequested", 
          "RFC2911.IETF|Job.output-device-assigned" }, 
       Propagated ( "CIM_PrintQueue.Name" )]
   string QueueName;

      [Override ( "JobStatus" ), 
       Description ( 
          "The inherited JobStatus is used to provide additional "
          "information about the status of a PrintJob beyond that "
          "enumerated by PrintJobStatus." ), 
       MappingStrings { "MIB.IETF|Job-Monitoring-MIB.jmJobState", 
          "MIB.IETF|Job-Monitoring-MIB.jmJobStateReasons1", 
          "RFC2911.IETF|Job.job-state", 
          "RFC2911.IETF|Job.job-state-reasons", 
          "RFC2911.IETF|Job.job-state-message" }, 
       ModelCorrespondence { "CIM_PrintJob.PrintJobStatus" }]
   string JobStatus;

      [Key, Description ( 
          "Uniquely identifies this Job within its scoping Queue, "
          "but NOT across different Queues or PrintServices." ), 
       MappingStrings { "MIB.IETF|Job-Monitoring-MIB.jmJobIndex", 
          "MIB.IETF|Job-Monitoring-MIB.jmJobSubmissionID", 
          "RFC2911.IETF|Job.job-id" }]
   string JobID;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this free-form string property is "
          "deprecated in lieu of the more semantically rich "
          "CIM_JobSettingData class inherited from CIM_Job." )]
   string SchedulingInformation;

      [Description ( 
          "Specifies the size of the PrintJob (as a byte stream) in "
          "units of Kbytes." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jmJobKOctetsProcessed", 
          "RFC2911.IETF|Job.job-k-octets" }, 
       ModelCorrespondence { "CIM_Printer.MaxSizeSupported", 
          "CIM_PrintServiceCapabilities.MaxJobSize", 
          "CIM_PrintQueue.MaxJobSize" }, 
       PUnit ( "byte * 10^3" )]
   uint32 JobSize;

      [Deprecated { "CIM_PrintJob.MimeTypes" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use MimeTypes. \n"
          "Enumerated print languages are only available in the "
          "IETF Printer MIB v1/v2 (RFC 1759/3805) and are not "
          "available in open standard print protocols (i.e., no "
          "known mapping). \n"
          "Deprecated description: \n"
          "Specifies the print language that is used by this Job. \n"
          "Note: For legacy compatiblity reasons, this property is "
          "NOT exactly aligned (in order of values) with the "
          "authoritative PrtInterpreterLangFamilyTC in the IANA "
          "Printer MIB, unlike the newer property "
          "PrintInterpreter.LangType (which is exactly aligned with "
          "the IANA Printer MIB)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "50", "51", "52", "53", "54", "55", "56", 
          "57", "58", "59", "60", "61", "62", "63", "64", "65", 
          "66", "67", "68", "69", ".." }, 
       Values { "Other", "Unknown", "PCL", "HPGL", "PJL", "PS", 
          "PSPrinter", "IPDS", "PPDS", "EscapeP", "Epson", "DDIF", 
          "Interpress", "ISO6429", "Line Data", "MODCA", "REGIS", 
          "SCS", "SPDL", "TEK4014", "PDS", "IGP", "CodeV", "DSCDSE", 
          "WPS", "LN03", "CCITT", "QUIC", "CPAP", "DecPPL", 
          "Simple Text", "NPAP", "DOC", "imPress", "Pinwriter", 
          "NPDL", "NEC201PL", "Automatic", "Pages", "LIPS", "TIFF", 
          "Diagnostic", "CaPSL", "EXCL", "LCDS", "XES", "MIME", 
          "TIPSI", "Prescribe", "LinePrinter", "IDP", "XJCL", "PDF", 
          "RPDL", "IntermecIPL", "UBIFingerprint", 
          "UBIDirectProtocol", "Fujitsu", "PCLXL", "ART", "CGM", 
          "JPEG", "CALS1", "CALS2", "NIRS", "C4", "XPS", "OpenXPS", 
          "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtInterpreterLangFamily", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtInterpreterLangFamilyTC", 
          "MIB.IETF|Job-Monitoring-MIB.documentFormat", 
          "PWG5100-7.PWG|Job.document-format-supplied" }, 
       ModelCorrespondence { "CIM_Printer.LanguagesSupported", 
          "CIM_PrintService.LanguagesSupported", 
          "CIM_PrintJob.MimeTypes" }]
   uint16 Language;

      [Description ( 
          "Specifies the MIME types that are used by the PrintJob." ), 
       ModelCorrespondence { "CIM_PrintJob.Language", 
          "CIM_Printer.MimeTypesSupported", 
          "CIM_PrintServiceSettings.DocumentFormat", 
          "CIM_PrintService.MimeTypesSupported" }]
   string MimeTypes[];

      [Description ( 
          "A string that specifies the type of paper that is "
          "required by this PrintJob. The values of the property "
          "SHOULD conform to the requirements of the PWG Media "
          "Standardized Names specification [PWG5101.1], which "
          "defines the normative values for this property. See "
          "older Appendix B \'Media Size Names\' and Appendix C "
          "\'Media Names\' of IETF Printer MIB v2 [RFC3805] which "
          "list the values of standardized media names defined in "
          "ISO DPA [ISO10175]." ), 
       MappingStrings { "PWG5101-1.PWG|Media Standardized Names", 
          "MIB.IETF|Job-Monitoring-MIB.mediumRequested", 
          "RFC2911.IETF|Job.media" }, 
       ModelCorrespondence { "CIM_Printer.PaperTypesAvailable", 
          "CIM_PrintServiceSettings.Media", 
          "CIM_PrintService.PaperTypesAvailable" }]
   string RequiredPaperType;

      [Description ( 
          "Note: The use of this property will been deprecated due "
          "to ambiguity in a future version. Instead use the "
          "experimental property Finishings. \n"
          "Enumerated finishings are not available in open standard "
          "print protocols (i.e., no known mapping). \n"
          "Deprecated description: \n"
          "An array of integers that indicates the type of "
          "finishing that is required by this Job. It is equivalent "
          "to the Capabilities property that is provided by the "
          "Printer." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21" }, 
       Values { "Unknown", "Other", "Color Printing", 
          "Duplex Printing", "Copies", "Collation", "Stapling", 
          "Transparency Printing", "Punch", "Cover", "Bind", 
          "Black and White Printing", "One Sided", 
          "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", 
          "Landscape", "Reverse Portrait", "Reverse Landscape", 
          "Quality High", "Quality Normal", "Quality Low" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Printer.Capabilities", 
          "CIM_PrintService.Capabilities" }]
   uint16 Finishing[];

      [Description ( 
          "The number of physical copies of the output that will be "
          "produced from this Job." ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jobCopiesRequested", 
          "RFC2911.IETF|Job.copies" }, 
       ModelCorrespondence { "CIM_Printer.MaxCopies", 
          "CIM_PrintServiceCapabilities.Copies", 
          "CIM_PrintServiceSettings.Copies" }]
   uint32 Copies;

      [Description ( 
          "The resolution of the in Pixels per Inch for the Job in "
          "the cross-feed direction, i.e., short-edge in portrait "
          "feed mode." ), 
       Units ( "Pixels per Inch" ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.printerResolutionRequested", 
          "RFC2911.IETF|Job.printer-resolution" }, 
       ModelCorrespondence { "CIM_Printer.HorizontalResolution", 
          "CIM_PrintServiceCapabilities.Resolution", 
          "CIM_PrintServiceSettings.Resolution" }, 
       PUnit ( "pixel / inch" )]
   uint32 HorizontalResolution;

      [Description ( 
          "The resolution in Pixels per Inch for the Job in the "
          "feed direction, i.e., long-edge in portrait feed mode." ), 
       Units ( "Pixels per Inch" ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.printerResolutionRequested", 
          "RFC2911.IETF|Job.printer-resolution" }, 
       ModelCorrespondence { "CIM_Printer.VerticalResolution", 
          "CIM_PrintServiceCapabilities.Resolution", 
          "CIM_PrintServiceSettings.Resolution" }, 
       PUnit ( "pixel / inch" )]
   uint32 VerticalResolution;

      [Description ( 
          "Specifies the character set and encoding method that "
          "should be used by the Printer for the management of this "
          "Job. The strings should conform to the semantics and "
          "syntax that are specified by section 4.1.2 \'Charset "
          "parameter\' in RFC 2046 (MIME Part 2) and contained in "
          "the IANA character-set registry. Examples include "
          "\'utf-8\', \'us-ascii\', and \'iso-8859-1\'." ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jobCodedCharSet", 
          "MIB.IETF|IANA-CHARSET-MIB.IANACharset", 
          "RFC2911.IETF|Job.attributes-charset" }, 
       ModelCorrespondence { "CIM_Printer.CharSetsSupported", 
          "CIM_PrintServiceCapabilities.Charset" }]
   string CharSet;

      [Description ( 
          "Identifies the language that should be used by the "
          "Printer for the management of this Job. The specified "
          "value should conform to RFC 5646. For example, \'en\' is "
          "used for English." ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jobNaturalLanguageTag", 
          "RFC2911.IETF|Job.attributes-natural-language" }, 
       ModelCorrespondence { 
          "CIM_Printer.NaturalLanguagesSupported", 
          "CIM_PrintServiceCapabilities.NaturalLanguage" }]
   string NaturalLanguage;

      [Description ( 
          "The number of print-stream pages that should be rendered "
          "onto a single media sheet when the Printer outputs this "
          "PrintJob." ), 
       MappingStrings { "RFC2911.IETF|Job.number-up" }, 
       ModelCorrespondence { "CIM_Printer.MaxNumberUp", 
          "CIM_PrintServiceCapabilities.NumberUp", 
          "CIM_PrintServiceSettings.NumberUp" }]
   uint32 NumberUp;

      [Description ( 
          "Describes the current state of this Job with respect to "
          "the PrintQueue and the Printer. Additional information "
          "can be specified in JobStatus. \n"
          "1 (Other) means this Job is in some non-standard state. \n"
          "2 (Unknown) means this Job is in an unknown state. \n"
          "3 (Pending) maps to IPP job-state \'pending\'. \n"
          "4 (Blocked) maps to IPP job-state \'pending-held\'. \n"
          "5 (Completed) maps to IPP job-state \'completed\'. \n"
          "6 (Completed With Error) maps to IPP job-state "
          "\'completed\' in combination with IPP job-state-reasons "
          "\'completed-with-errors\'. \n"
          "7 (Printing) maps to IPP job-state \'processing\'. \n"
          "8 (Processing Stopped) maps to IPP job-state "
          "\'processing-stopped\'. \n"
          "9 (Canceled) maps to IPP job-state \'canceled\'. \n"
          "10 (Aborted) maps to IPP job-state \'aborted\'." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }, 
       Values { "Other", "Unknown", "Pending", "Blocked", 
          "Complete", "Completed With Error", "Printing", 
          "Processing Stopped", "Canceled", "Aborted" }, 
       MappingStrings { "MIB.IETF|Job-Monitoring-MIB.jmJobState", 
          "RFC2911.IETF|Job.job-state" }, 
       ModelCorrespondence { "CIM_PrintJob.TimeCompleted", 
          "CIM_PrintJob.JobStatus" }]
   uint16 PrintJobStatus;

      [Description ( 
          "The time when this Job was completed. This value is "
          "valid only if the PrintJobStatus has been assigned to "
          "\'Complete\' or \'Completed With Error\'." ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jobCompletionTime", 
          "RFC2911.IETF|Job.date-time-at-completed" }, 
       ModelCorrespondence { "CIM_PrintJob.PrintJobStatus" }]
   datetime TimeCompleted;

      [Description ( 
          "Describes the job sheets that should be used when this "
          "Job is output on the Printer. \n"
          "Complete standard values are in the IANA IPP Registry. \n"
          "Additional vendor or site values may also be used. \n"
          "Standard values defined in IPP/1.1 (RFC 2911) include: \n"
          "Value \'none\' indicates no job start/end sheets. \n"
          "Value \'standard\' indicates one or more site-specific "
          "standard job sheets." ), 
       MappingStrings { "RFC2911.IETF|Job.job-sheets" }, 
       ModelCorrespondence { "CIM_Printer.AvailableJobSheets", 
          "CIM_PrintServiceCapabilities.JobSheets", 
          "CIM_PrintServiceSettings.JobSheets" }]
   string RequiredJobSheets[];

      [Description ( 
          "Provides additional information, beyond Job Owner that "
          "is inherited from CIM_Job, to identify the origins of "
          "the PrintJob. This property could include information "
          "such as the System, Application, or Process that created "
          "the Job." ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jobOriginatingHost", 
          "MIB.IETF|Job-Monitoring-MIB.submittingServerName", 
          "MIB.IETF|Job-Monitoring-MIB.submittingApplicationName", 
          "RFC2911.IETF|Job.job-originating-user-name" }]
   string JobOrigination;

      [Override ( "ElapsedTime" ), 
       Description ( 
          "The processing elapsed time of this instance of "
          "PrintJob, after the Job has completed. \n"
          "Note: This property is NOT meaningful before PrintJob "
          "completion." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.3.14.3 time-at-completed", 
          "RFC2911.IETF|Section 4.3.14.7 date-time-at-completed" }, 
       ModelCorrespondence { "CIM_PrintJob.TimeCompleted" }]
   datetime ElapsedTime;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of PrintJob. In "
          "addition, the user-friendly name can be used as an index "
          "property for a search or query. (Note: The name does not "
          "have to be unique within a namespace.) This name shall "
          "be supplied by the client or generated by the "
          "PrintService (if missing in job creation operation)." ), 
       MappingStrings { "RFC2911.IETF|Section 4.3.5 job-name" }]
   string ElementName;

      [Override ( "StartTime" ), 
       Description ( 
          "The processing start time of this instance of PrintJob." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.3.14.2 time-at-processing", 
          "RFC2911.IETF|Section 4.3.14.6 date-time-at-processing" }]
   datetime StartTime;

      [Override ( "TimeSubmitted" ), 
       Description ( 
          "The creation time of this instance of PrintJob." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.3.14.1 time-at-creation", 
          "RFC2911.IETF|Section 4.3.14.5 date-time-at-creation" }]
   datetime TimeSubmitted;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Zone
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "A Zone is a group of Ports, Endpoints, Nodes, Zones, and "
       "NamedAddressCollections that are managed collectively by the "
       "same domain. The managing domain is indicated by the "
       "HostedCollection association. For Fibre Channel, a Zone "
       "indicates a set of members that are participating together in "
       "the fabric." )]
class CIM_Zone : CIM_ConnectivityCollection {

      [Required, Override ( "ElementName" ), 
       Write, Description ( 
          "A user-friendly name for the Zone that is unique within "
          "the AdminDomain." )]
   string ElementName;

      [Required, Description ( 
          "Indicates that this Zone is currently active (that is, "
          "under enforcement of a fabric). This property can be "
          "used to distinguish between a Zone that is currently "
          "active and a snapshot of a Zone (with the same "
          "InstanceName) that is for \"offline\" editing." )]
   boolean Active;

      [Required, Description ( "The type of zoning to be enforced." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Default", "Protocol", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_Zone.OtherZoneTypeDescription" }]
   uint16 ZoneType;

      [Description ( 
          "A string that describes the ZoneType when the ZoneType "
          "value is 1 \"Other\"." ), 
       ModelCorrespondence { "CIM_Zone.ZoneType" }]
   string OtherZoneTypeDescription;

      [Description ( 
          "Specific clarification to be used when the ProtocolType "
          "has an enumeration that requires it. Specifically, if "
          "ProtocolType is \"Protocol\", then SubType is the Fibre "
          "Channel FC4 type." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "SCSI", "VI", "IP", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_Zone.OtherZoneSubTypeDescription" }]
   uint16 ZoneSubType;

      [Description ( 
          "A string that describes the ZoneSubType when the "
          "ZoneSubType value is 1 \"Other\"." ), 
       ModelCorrespondence { "CIM_Zone.ZoneSubType" }]
   string OtherZoneSubTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ZoneSet
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "A ZoneSet is a group of zones that are managed collectively by "
       "the same domain. The managing domain is indicated by the "
       "HostedCollection association. For example, for Fibre Channel, "
       "this property would indicate a set of zones that are part of a "
       "fabric. The zones are under enforcement by the fabric, only if "
       "the Zoneset is set to active." )]
class CIM_ZoneSet : CIM_ConnectivityCollection {

      [Required, Override ( "ElementName" ), 
       Write, Description ( 
          "A user-friendly name for the ZoneSet that is unique "
          "within the AdminDomain." )]
   string ElementName;

      [Required, Write, Description ( 
          "Indicates that this ZoneSet is currently active (that "
          "is, under enforcement of a fabric). This property can be "
          "used to distinguish between a ZoneSet that is currently "
          "active and a snapshot of a ZoneSet (with the same "
          "InstanceName) that is for \"offline\" editing." )]
   boolean Active;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_ClassCreation notifies when a new class is defined in the schema."
        )]
class CIM_ClassCreation : CIM_ClassIndication {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Indication, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "CIM_ClassDeletion notifies when a class is deleted from the schema."
        )]
class CIM_ClassDeletion : CIM_ClassIndication {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "A subclass of IndicationSubscription that defines the text "
       "formatting of Indication information. The "
       "TextFormatOwningEntity, TextFormatID, TextFormat, and "
       "TextFormatParameters properties are used to describe a "
       "human-readable representation of the Indication as defined by "
       "the referenced CIM_IndicationFilter. This representation MAY "
       "be used by the CIM_ListenerDestination when the intended "
       "consumer of the Indication is human. For example, this format "
       "could be used when writing the Indication to a system log or "
       "sending an e-mail notification to a system administrator." )]
class CIM_FormattedIndicationSubscription : CIM_IndicationSubscription {

      [Description ( 
          "The TextFormatOwningEntity is a string that uniquely "
          "identifies the entity that owns the definition of the "
          "human-readable format described in this instance. "
          "OwningEntity MUST include a copyrighted, trademarked or "
          "otherwise unique name that is owned by the business "
          "entity or standards body defining the format." ), 
       ModelCorrespondence { 
          "CIM_FormattedIndicationSubscription.TextFormatID", 
          "CIM_FormattedIndicationSubscription.TextFormat", 
          "CIM_FormattedIndicationSubscription.TextFormatParameters" }]
   string TextFormatOwningEntity;

      [Description ( 
          "An opaque string that uniquely identifies, within the "
          "scope of the TextFormatOwningEntity, a human-readable "
          "format for representing the Indications described by "
          "this Subscription." ), 
       ModelCorrespondence { 
          "CIM_FormattedIndicationSubscription.TextFormatOwningEntity", 
          "CIM_FormattedIndicationSubscription.TextFormat", 
          "CIM_FormattedIndicationSubscription.TextFormatParameters" }]
   string TextFormatID;

      [Description ( 
          "A string describing the human-readable format for "
          "representing the Indications described by this "
          "Subscription. The actual text is constructed by applying "
          "the dynamic content, defined in the Indication, to the "
          "string specified in this property. /n /n The dynamic "
          "content is specified by embedding the following syntax "
          "in the appropriate places in the format string: \n"
          "\"{\" <index>[\"[\"[<index>]\"]\"],<type>\"}\" \n"
          "- the first occurrence of <index> defines the element of "
          "TextFormatParameters that contains the name of the "
          "Indication property to be used to populate the text message.\n"
          "- if the Indication property defined by the first "
          "<index> is an array property, then the first index MUST "
          "be followed by either empty brackets (i.e., []) or an "
          "index value enclosed in brackets (e.g., [1]). If empty "
          "brackets are specified (e.g., {4[], string}), then the "
          "dynamic content of the text message is populated with a "
          "list of the array elements. If an index is specified "
          "(e.g., {4[1], string}, then only the specified array "
          "element is used to populate the message. If the value of "
          "the dynamic content is not defined in the Indication, "
          "then the string \"UNKNOWN\" is used to populate the text message.\n"
          "- <type> defines the type of the dynamic content. Valid "
          "values for <type> are: \'boolean\', \'string\', "
          "\'char16\', \'uint8\', \'sint8\', \'uint16\', \'sint16\', "
          "\'uint32\', \'sint32\', \'uint64\', \'sint64\', "
          "\'datetime\', \'real32\', \'real64\' or \'ref\'. \n"
          "\n"
          "The string encoding for the dynamic content MUST conform "
          "to the MOF Syntax Grammar described in the CIM "
          "Infrastructure Specification. The string encoding for a "
          "list of array elements MUST conform to the definition of "
          "the arrayInitializer element.\n"
          "As an example, a format string for a UPS AlertIndication "
          "could be defined as follows: \"A {4,string} UPS Alert of "
          "type {5,uint16} was detected on the device {6,string} on "
          "the system {2,string} at {1,datetime}. The following "
          "actions have been recommended to resolve the alert: "
          "{3[],string}\"." )]
   string TextFormat;

      [Description ( 
          "An indexed array containing the names of properties "
          "defined in the select clause of the associated "
          "CIM_IndicationFilter Query. The values of these "
          "Indication properties are used to populate the dynamic "
          "content of the text message." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_FormattedIndicationSubscription.TextFormatOwningEntity", 
          "CIM_FormattedIndicationSubscription.TextFormatID", 
          "CIM_FormattedIndicationSubscription.TextFormat" }]
   string TextFormatParameters[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "ContainedProposal holds an ordered list of SAProposals that "
       "make up an SANegotiationAction. If the referenced "
       "NegotiationAction is an IKEAction, then the SAProposal objects "
       "MUST be IKEProposals. If the referenced NegotiationAction "
       "object is an IPsecTransport/TunnelAction, then the referenced "
       "SAProposal objects MUST be IPsecProposals." ), 
    MappingStrings { "IPSP Policy Model.IETF|ContainedProposal" }]
class CIM_ContainedProposal : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The SANegotiationAction containing a list of SAProposals." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedProposal.GroupComponent" }]
   CIM_SANegotiationAction REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The SAProposal in this negotiation action." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedProposal.PartComponent" }]
   CIM_SAProposal REF PartComponent;

      [Description ( 
          "SequenceNumber indicates the ordering to be used when "
          "chosing from among the proposals. Lower-valued proposals "
          "are preferred over proposals with higher values. For "
          "ContainedProposals that reference the same "
          "SANegotiationAction, SequenceNumber values MUST be "
          "unique." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedProposal.SequenceNumber" }]
   uint16 SequenceNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IKEAction specifies the parameters to use for an IPsec IKE "
       "phase 1 negotiation." ), 
    MappingStrings { "IPSP Policy Model.IETF|IKEAction" }]
class CIM_IKEAction : CIM_SANegotiationAction {

      [Description ( 
          "The ExchangeMode designates the mode IKE should use for "
          "its key negotiations." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Base", "Main", "Aggressive" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEAction.ExchangeMode" }]
   uint16 ExchangeMode;

      [Description ( 
          "UseIKEIdentityType specifies what network identity type "
          "should be used when negotiating with the peer. It is "
          "used in conjunction with the available IPNetworkIdentity "
          "instances, that are associated with an "
          "IPProtocolEndpoint." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "0x8000.." }, 
       Values { "Other", "IPV4 Address", "FQDN", "User FQDN", 
          "IPV4 Subnet Address", "IPV6 Address", 
          "IPV6 Subnet Address", "IPV4 Address Range", 
          "IPV6 Address Range", "DER ASN1 DN", "DER ASN1 GN", 
          "KEY ID", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEAction.UseIKEIdentityType", 
          "RFC2407.IETF|Section 4.6.2.1" }, 
       ModelCorrespondence { "CIM_IPNetworkIdentity.IdentityType" }]
   uint16 UseIKEIdentityType;

      [Description ( 
          "VendorID specifies the value to be used in the Vendor ID "
          "payload. An empty string (the default) means that the "
          "Vendor ID payload will not be generated or accepted. A "
          "non-NULL value means that a Vendor ID payload will be "
          "generated (when acting as an initiator) or is expected "
          "(when acting as a responder)." ), 
       MappingStrings { "IPSP Policy Model.IETF|IKEAction.VendorID" }]
   string VendorID = "";

      [Description ( 
          "When IKEAction.ExchangeMode is set to \"Aggressive\" "
          "(4), this property specifies the key exchange groupID to "
          "use in the first packets of the phase 1 negotiation. "
          "This property is ignored unless the ExchangeMode is "
          "\'aggressive\'. If the GroupID number is from the "
          "vendor- specific range (32768-65535), the VendorID "
          "qualifies the group number. Well-known group identifiers "
          "from RFC2412, Appendix E, are: Group 1=\'768 bit prime\', "
          "Group 2=\'1024 bit prime\', Group 3=\'Elliptic Curve "
          "Group with 155 bit field element\', Group 4=\'Large "
          "Elliptic Curve Group with 185 bit field element\', and "
          "Group 5=\'1536 bit prime\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "No Group/Non-Diffie-Hellman Exchange", 
          "DH-768 bit prime", "DH-1024 bit prime", 
          "EC2N-155 bit field element", 
          "EC2N-185 bit field element", "DH-1536 bit prime", 
          "Standard Group - Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEAction.AggressiveModeGroupID", 
          "RFC2412.IETF|Appendix E" }, 
       ModelCorrespondence { "CIM_IKEAction.VendorID" }]
   uint16 AggressiveModeGroupID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IKEProposal contains the parameters necessary to drive the "
       "phase 1 IKE negotiation." ), 
    MappingStrings { "IPSP Policy Model.IETF|IKEProposal" }]
class CIM_IKEProposal : CIM_SAProposal {

      [Description ( 
          "MaxLifetimeSeconds specifies the maximum time the IKE "
          "message sender proposes for an SA to be considered valid "
          "after it has been created. A value of zero indicates "
          "that the default of 8 hours be used. A non-zero value "
          "indicates the maximum seconds lifetime." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEProposal.MaxLifetimeSeconds" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.LifetimeSeconds" }, 
       PUnit ( "second" )]
   uint64 MaxLifetimeSeconds;

      [Description ( 
          "MaxLifetimeKilobytes specifies the maximum kilobyte "
          "lifetime the IKE message sender proposes for an SA to be "
          "considered valid after it has been created. A value of "
          "zero (the default) indicates that there should be no "
          "maximum kilobyte lifetime. A non-zero value specifies "
          "the desired kilobyte lifetime." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEProposal.MaxLifetimeKilobytes" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.LifetimeKilobytes" }, 
       PUnit ( "byte * 10^3" )]
   uint64 MaxLifetimeKilobytes;

      [Description ( 
          "CipherAlgorithm is an enumeration that specifies the "
          "proposed encryption algorithm. The list of algorithms "
          "was generated from Appendix A of RFC2409. Note that the "
          "enumeration is different than the RFC list and aligns "
          "with the values in IKESAEndpoint.CipherAlgorithm." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8..65000", 
          "65001..65535" }, 
       Values { "Other", "DES", "IDEA", "Blowfish", "RC5", "3DES", 
          "CAST", "DMTF/IANA Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEProposal.CipherAlgorithm", 
          "RFC2409.IETF|Appendix A" }, 
       ModelCorrespondence { "CIM_IKESAEndpoint.CipherAlgorithm", 
          "CIM_IKEProposal.OtherCipherAlgorithm" }]
   uint16 CipherAlgorithm;

      [Description ( 
          "Description of the encryption algorithm when the value 1 "
          "(\"Other\") is specified for the property, "
          "CipherAlgorithm." ), 
       ModelCorrespondence { 
          "CIM_IKESAEndpoint.OtherCipherAlgorithm", 
          "CIM_IKEProposal.CipherAlgorithm" }]
   string OtherCipherAlgorithm;

      [Description ( 
          "HashAlgorithm is an enumeration that specifies the "
          "proposed hash function. The list of algorithms was "
          "generated from Appendix A of RFC2409. Note that the "
          "enumeration is different than the RFC list and aligns "
          "with the values in IKESAEndpoint.HashAlgorithm." ), 
       ValueMap { "1", "2", "3", "4", "5..65000", "65001..65535" }, 
       Values { "Other", "MD5", "SHA-1", "Tiger", 
          "DMTF/IANA Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEProposal.HashAlgorithm", 
          "RFC2409.IETF|Appendix A" }, 
       ModelCorrespondence { "CIM_IKESAEndpoint.HashAlgorithm", 
          "CIM_IKEProposal.OtherHashAlgorithm" }]
   uint16 HashAlgorithm;

      [Description ( 
          "Description of the hash function when the value 1 "
          "(\"Other\") is specified for the property, "
          "HashAlgorithm." ), 
       ModelCorrespondence { "CIM_IKESAEndpoint.OtherHashAlgorithm", 
          "CIM_IKEProposal.HashAlgorithm" }]
   string OtherHashAlgorithm;

      [Description ( 
          "AuthenticationMethod is an enumeration that specifies "
          "the proposed authentication. The list of methods was "
          "generated from Appendix A of RFC2409. Note that the "
          "enumeration is different than the RFC list and aligns "
          "with the values in IKESAEndpoint.AuthenticationMethod. "
          "There is one change to the list - the value 65000 has "
          "special meaning. It is a special value that indicates "
          "that this particular proposal should be repeated once "
          "for each authentication method corresponding to "
          "credentials installed on the machine. For example, if "
          "the system has a pre-shared key and an public-key "
          "certificate, a proposal list would be constructed which "
          "includes a proposal that specifies a pre-shared key and "
          "a proposal for any of the public-key certificates." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7..64999", "65000", 
          "65001..65535" }, 
       Values { "Other", "Pre-shared Key", "DSS Signatures", 
          "RSA Signatures", "Encryption with RSA", 
          "Revised Encryption with RSA", "DMTF/IANA Reserved", 
          "Any", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEProposal.AuthenticationMethod", 
          "RFC2409.IETF|Appendix A" }, 
       ModelCorrespondence { 
          "CIM_IKESAEndpoint.AuthenticationMethod", 
          "CIM_IKEProposal.OtherAuthenticationMethod" }]
   uint16 AuthenticationMethod;

      [Description ( 
          "Description of the method when the value 1 (\"Other\") "
          "is specified for the property, AuthenticationMethod." ), 
       ModelCorrespondence { 
          "CIM_IKESAEndpoint.OtherAuthenticationMethod", 
          "CIM_IKEProposal.AuthenticationMethod" }]
   string OtherAuthenticationMethod;

      [Description ( 
          "The property GroupId specifies the proposed phase 1 "
          "security association key exchange group. This property "
          "is ignored for all aggressive mode exchanges "
          "(IKEAction.ExchangeMode = 4). If the GroupID number is "
          "from the vendor-specific range (32768-65535), the "
          "property VendorID qualifies the group number. Well-known "
          "group identifiers from RFC2412, Appendix E, are: Group "
          "1=\'768 bit prime\', Group 2=\'1024 bit prime\', Group 3 "
          "=\'Elliptic Curve Group with 155 bit field element\', "
          "Group 4= \'Large Elliptic Curve Group with 185 bit field "
          "element\', and Group 5=\'1536 bit prime\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "No Group/Non-Diffie-Hellman Exchange", 
          "DH-768 bit prime", "DH-1024 bit prime", 
          "EC2N-155 bit field element", 
          "EC2N-185 bit field element", "DH-1536 bit prime", 
          "Standard Group - Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKEProposal.GroupID", 
          "RFC2412.IETF|Appendix E" }, 
       ModelCorrespondence { "CIM_IKESAEndpoint.GroupID", 
          "CIM_IKEProposal.VendorID" }]
   uint16 GroupId;

      [Description ( 
          "VendorID identifies the vendor when the value of GroupID "
          "is in the vendor-specific range, 32768 to 65535." ), 
       ModelCorrespondence { "CIM_IKESAEndpoint.VendorID", 
          "CIM_IKEProposal.GroupId" }]
   string VendorID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IPsecAction specifies the parameters to use for an IPsec phase "
       "2 negotiation." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecAction" }]
class CIM_IPsecAction : CIM_SANegotiationAction {

      [Description ( 
          "UsePFS indicates whether perfect forward secrecy is "
          "required when refreshing keys." ), 
       MappingStrings { "IPSP Policy Model.IETF|IPsecAction.UsePFS" }, 
       ModelCorrespondence { "CIM_IPsecSAEndpoint.PFSInUse" }]
   boolean UsePFS;

      [Description ( 
          "UsePhase1Group indicates that the phase 2 GroupId should "
          "be the same as that used in the phase 1 key exchange. If "
          "UsePFS is False, then this property is ignored. Note "
          "that a value of False indicates that the property "
          "GroupId will contain the key exchange group to use for "
          "phase 2." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecAction.UseIKEGroup" }]
   boolean UsePhase1Group;

      [Description ( 
          "GroupId specifies the PFS group ID to use. This value is "
          "only used if PFS is True and UsePhase1Group is False. If "
          "the GroupID number is from the vendor-specific range "
          "(32768-65535), the VendorID qualifies the group number. "
          "Well-known group identifiers from RFC2412, Appendix E, "
          "are: Group 1=\'768 bit prime\', Group 2=\'1024 bit "
          "prime\', Group 3=\'Elliptic Curve Group with 155 bit "
          "field element\', Group 4=\'Large Elliptic Curve Group "
          "with 185 bit field element\', and Group 5=\'1536 bit "
          "prime\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "No Group/Non-Diffie-Hellman Exchange", 
          "DH-768 bit prime", "DH-1024 bit prime", 
          "EC2N-155 bit field element", 
          "EC2N-185 bit field element", "DH-1536 bit prime", 
          "Standard Group - Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecAction.GroupID", 
          "RFC2412.IETF|Appendix E" }, 
       ModelCorrespondence { "CIM_IPsecAction.VendorID", 
          "CIM_IKESAEndpoint.GroupID" }]
   uint16 GroupId;

      [Description ( 
          "The property VendorID is used together with the property "
          "GroupID (when it is in the vendor-specific range) to "
          "identify the key exchange group. VendorID is ignored "
          "unless UsePFS is true, AND UsePhase1Group is False, AND "
          "GroupID is in the vendor-specific range (32768-65535)." ), 
       MappingStrings { "IPSP Policy Model.IETF|IPsecAction.VendorID" }, 
       ModelCorrespondence { "CIM_IPsecAction.GroupId", 
          "CIM_IKESAEndpoint.VendorID" }]
   string VendorID;

      [Description ( 
          "The property Granularity is an enumeration that "
          "specifies how the selector for the SA should be derived "
          "from the traffic that triggered the negotiation. Its "
          "values are: \n"
          "1=Other; See the OtherGranularity property for more "
          "information \n"
          "2=Subnet; The source and destination subnet masks are "
          "used \n"
          "3=Address; The source and destination IP addresses of "
          "the triggering packet are used \n"
          "4=Protocol; The source and destination IP addresses and "
          "the IP protocol of the triggering packet are used \n"
          "5=Port; The source and destination IP addresses, IP "
          "protocol and the source and destination layer 4 ports of "
          "the triggering packet are used." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Subnet", "Address", "Protocol", "Port" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecAction.Granularity" }, 
       ModelCorrespondence { "CIM_IPsecAction.OtherGranularity" }]
   uint16 Granularity;

      [Description ( 
          "Description of the granularity when the value 1 "
          "(\"Other\") is specified for the property, Granularity." ), 
       ModelCorrespondence { "CIM_IPsecAction.Granularity" }]
   string OtherGranularity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "The class IPsecProposal adds no new properties, but inherits "
       "proposal properties from SAProposal as well as associating the "
       "security association transforms necessary for building an "
       "IPsec proposal (see the class ContainedTransform)." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecProposal" }]
class CIM_IPsecProposal : CIM_SAProposal {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IPsecTransportAction is used to specify that a transport-mode "
       "SA should be negotiated." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecTransportAction" }]
class CIM_IPsecTransportAction : CIM_IPsecAction {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IPsecTunnelAction is used to specify that a tunnel-mode SA "
       "should be negotiated." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecTunnelAction" }]
class CIM_IPsecTunnelAction : CIM_IPsecAction {

      [Description ( 
          "DFHandling controls how the Don\'t Fragment bit is "
          "managed by the tunnel." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Copy from Internal to External IP Header", 
          "Set DF Bit in External Header to 1", 
          "Set DF Bit in External Header to 0" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|PreconfiguredTunnelAction.DFHandling" }, 
       ModelCorrespondence { "CIM_IPsecSAEndpoint.DFHandling" }]
   uint16 DFHandling;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "Subclasses of PreconfiguredSAAction are used to create SAs "
       "using preconfigured, hard-wired algorithms and keys. No "
       "negotiation is necessary. Note that this class is defined as "
       "concrete, since its superclass is also concrete. However, it "
       "should not be directly instantiated, but one of its subclasses "
       "used instead. \n"
       "\n"
       "Also note that: \n"
       "- The SPI for a preconfigured SA action is contained in the "
       "association, TransformOfPreconfiguredAction. \n"
       "- The session key (if applicable) is contained in an instance "
       "of SharedSecret. For an instance of the SharedSecret class: "
       "The session key is stored in the Secret property; the property "
       "protocol contains one of the values, \"ESP-encrypt\", "
       "\"ESP-auth\" or \"AH\"; and, the class\' property algorithm "
       "contains the algorithm used to protect the secret. (The latter "
       "can be \"PLAINTEXT\" if the IPsec entity has no secret "
       "storage.) The value of the class\' RemoteID property is the "
       "concatenation of the remote IPsec peer IP address in dotted "
       "decimal, of the character \"/\", of \"IN\" (or respectively "
       "\"OUT\") for inbound/outbound SAs, of the character \"/\" and "
       "of the hexadecimal representation of the SPI." ), 
    MappingStrings { "IPSP Policy Model.IETF|PreconfiguredSAAction" }]
class CIM_PreconfiguredSAAction : CIM_SAStaticAction {

      [Description ( 
          "LifetimeKilobytes defines a traffic limit in kilobytes "
          "that can be consumed before the SA is deleted. A value "
          "of zero (the default) indicates that there is no "
          "lifetime associated with this action (i.e., infinite "
          "lifetime). A non-zero value is used to indicate that "
          "after this number of kilobytes has been consumed the SA "
          "must be deleted. \n"
          "\n"
          "Note that the actual lifetime of the preconfigured SA "
          "will be the lesser of the value of this "
          "LifetimeKilobytes property and the value of the "
          "MaxLifetimeKilobytes property of the associated "
          "SATransform. Also note that some SA negotiation "
          "protocols (such as IKE) can negotiate the lifetime as an "
          "arbitrary length field, it is assumed that a 64-bit "
          "integer will be sufficient." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PreconfiguredSAAction.LifetimeKilobytes" }, 
       ModelCorrespondence { 
          "CIM_SecurityAssociationEndpoint.LifetimeKilobytes" }, 
       PUnit ( "byte * 10^3" )]
   uint64 LifetimeKilobytes;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "PreconfiguredTransportAction is used to create transport-mode "
       "SAs using preconfigured, hard-wired algorithms and keys. Note "
       "that the SPI for a preconfigured SA action is contained in the "
       "association, TransformOfPreconfiguredAction." ), 
    MappingStrings { 
       "IPSP Policy Model.IETF|PreconfiguredTransportAction" }]
class CIM_PreconfiguredTransportAction : CIM_PreconfiguredSAAction {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "PreconfiguredTunnelAction is used to create tunnel-mode SAs "
       "using preconfigured, hard-wired algorithms and keys. Note that "
       "the SPI for a preconfigured SA action is contained in the "
       "association, TransformOfPreconfiguredAction." ), 
    MappingStrings { "IPSP Policy Model.IETF|PreconfiguredTunnelAction" }]
class CIM_PreconfiguredTunnelAction : CIM_PreconfiguredSAAction {

      [Description ( 
          "DFHandling controls how the Don\'t Fragment bit is "
          "managed by the tunnel." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Copy from Internal to External IP Header", 
          "Set DF Bit in External Header to 1", 
          "Set DF Bit in External Header to 0" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|PreconfiguredTunnelAction.DFHandling" }, 
       ModelCorrespondence { "CIM_IPsecSAEndpoint.DFHandling" }]
   uint16 DFHandling;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "SARule is a base class for defining IKE and IPsec Rules. "
       "Although concrete (because it subclasses from a concrete "
       "class), it is not intended to be instantiated. It defines a "
       "common connection point for associating conditions and actions "
       "for both types of rules. Note that each valid PolicyGroup "
       "containing SARules MUST use a unique priority number for the "
       "Rule in the aggregation, PolicySetComponent.Priority." ), 
    MappingStrings { "IPSP Policy Model.IETF|SARule" }]
class CIM_SARule : CIM_PolicyRule {

      [Description ( 
          "LimitNegotiation is used as part of processing either a "
          "key exchange or IPsec Rule. Before proceeding with "
          "either a phase 1 or a phase 2 negotiation, this property "
          "is checked to determine if the negotiation role of the "
          "Rule matches that defined for the negotiation being "
          "undertaken (e.g., Initiator, Responder, or Both). If "
          "this check fails, then the negotiation is stopped. Note "
          "that this only applies to new negotiations and has no "
          "effect on either renegotiation or refresh operations "
          "with peers for which an established Security Association "
          "already exists." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Initiator-Only", "Responder-Only", "Either" }, 
       MappingStrings { 
          "IPSP Policy Model.IETF|SARule.LimitNegotiation" }]
   uint16 LimitNegotiation;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "TransformOfPreconfiguredAction defines the transforms used by "
       "a preconfigured IPsec action. Two, four or six SATransforms "
       "can be associated to a PreconfiguredSAAction (applied to the "
       "inbound and outbound traffic, as indicated by the Direction "
       "property of this association). The order of application of the "
       "SATransforms is implicitly defined in RFC2401." ), 
    MappingStrings { 
       "IPSP Policy Model.IETF|TransformOfPreconfiguredAction" }]
class CIM_TransformOfPreconfiguredAction : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 2 ), 
       Max ( 6 ), 
       Description ( 
          "This defines the type of transform used by the "
          "referenced PreconfiguredSAAction. A minimum of 2 and "
          "maximum of 6 transforms can be defined, for the "
          "inbound/outbound directions, representing AH, ESP, "
          "and/or an IPCOMP transforms." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|TransformOfPreconfiguredAction.Antecedent" }]
   CIM_SATransform REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "This defines the PreconfiguredSAAction which uses the "
          "AH, ESP, and/or IPCOMP transforms." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|TransformOfPreconfiguredAction.Dependent" }]
   CIM_PreconfiguredSAAction REF Dependent;

      [Description ( 
          "The SPI property specifies the security parameter index "
          "to be used by the pre-configured action for the "
          "associated transform." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|TransformOfPreconfiguredAction.SPI" }, 
       ModelCorrespondence { "CIM_IPsecSAEndpoint.SPI" }]
   uint32 SPI;

      [Description ( 
          "InboundDirection specifies whether the SA applies to "
          "inbound (TRUE) or outbound (FALSE) traffic." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|TransformOfPreconfiguredAction.Direction" }, 
       ModelCorrespondence { "CIM_IPsecSAEndpoint.InboundDirection" }]
   boolean InboundDirection;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "This association links a LogicalElement to the UnitsOfWork "
       "that it can perform. For example, a Printer Device may have "
       "associated UnitOfWorkDefinitions representing PrintJobs. This "
       "is a Dependency relationship since the Definitions are given "
       "context by the LogicalElement." )]
class CIM_LogicalElementUnitOfWorkDef : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The LogicalElement that is providing the UnitOfWork." )]
   CIM_LogicalElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The UnitOfWorkDefinition associated with the LogicalElement."
           )]
   CIM_UnitOfWorkDefinition REF Dependent;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "This association links a UnitOfWork (which is a \'started\' "
       "transaction) to its Definition." )]
class CIM_StartedUoW : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Definition object for the UnitOfWork." )]
   CIM_UnitOfWorkDefinition REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "An instance of a UnitOfWork that has started executing." )]
   CIM_UnitOfWork REF Dependent;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Metrics::UnitOfWork" ), 
    Description ( 
       "This association defines the sub-UnitsOfWork (the sub- "
       "transactions) for a particular UnitOfWorkDefinition. For "
       "example, an \'AddOrder\' UnitOfWork could have sub-Units of "
       "\'ValidateCustomer\', \'ValidatePartNumber\', "
       "\'UpdateDatabase\', etc. This is a Dependency relationship "
       "since the sub-UnitsOf Work are put in context relative to the "
       "parent Unit. It is not an aggregation relationship - since "
       "(using another example) a \'DatabaseWrite\' transaction is "
       "likely to be dependent upon a \'DiskWrite\', but the two "
       "transactions are separate concepts and one is not \'contained\' "
       "by the other." )]
class CIM_SubUoWDef : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The parent UnitOfWorkDefinition." )]
   CIM_UnitOfWorkDefinition REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The sub-UnitOfWorkDefinition." )]
   CIM_UnitOfWorkDefinition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AHTransform 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "AHTransform defines the parameters used for a phase 2 AH "
       "(Authentication Header) Security Association." ), 
    MappingStrings { "IPSP Model.IETF|AHTransform" }]
class CIM_AHTransform : CIM_SATransform {

      [Description ( 
          "AHTransformId is an enumeration that specifies the hash "
          "algorithm to be used. The list of values was generated "
          "from RFC2407, Section 4.4.3." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "MD5", "SHA-1", "DES" }, 
       MappingStrings { "IPSP Model.IETF|AHTransform.AHTransformID", 
          "RFC2407.IETF|Section 4.4.3" }, 
       ModelCorrespondence { "CIM_AHTransform.OtherAHTransformId" }]
   uint16 AHTransformId;

      [Description ( 
          "Description of the hash algorithm when the value 1 "
          "(\"Other\") is specified for the property, "
          "AHTransformId." ), 
       ModelCorrespondence { "CIM_AHTransform.AHTransformId" }]
   string OtherAHTransformId;

      [Description ( 
          "UseReplayPrevention causes the local peer to enable "
          "replay prevention detection. This can be accomplished by "
          "using a sequence number when sending a packet or "
          "checking the sequence number upon receipt of a packet." ), 
       MappingStrings { 
          "IPSP Model.IETF|AHTransform.UseReplayPrevention" }]
   boolean UseReplayPrevention;

      [Description ( 
          "ReplayPreventionWindowsSize specifies, in bits, the "
          "length of the sliding window used by the replay "
          "prevention mechanism. The value of this property is "
          "meaningless if UseReplayPrevention is false. The window "
          "size MUST be a power of 2." ), 
       Units ( "Bits" ), 
       MappingStrings { 
          "IPSP Model.IETF|AHTransform.ReplayPreventionWindowSize" }]
   uint32 ReplayPreventionWindowSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPPeerUsesRouteMap 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This association defines the RouteMaps that are aggregated and "
       "used by a particular BGPPeerGroup object. Multiple instances "
       "of the same RouteMap may be aggregated into the same "
       "BGPPeerGroup. If this is desired, then the MapSequence "
       "attribute of the association can be used to disambiguate them." )]
class CIM_BGPPeerUsesRouteMap : CIM_CollectedMSEs {

      [Aggregate, Override ( "Collection" ), 
       Description ( 
          "The BGPPeerGroup that aggregates the RouteMaps." )]
   CIM_BGPPeerGroup REF Collection;

      [Override ( "Member" ), 
       Description ( 
          "The RouteMaps that are used by the BGPPeerGroup." )]
   CIM_BGPRouteMap REF Member;

      [Description ( 
          "This defines the position of this RouteMap instance "
          "relative to all other instances of the same RouteMap." )]
   uint16 MapSequence;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPRouteMapsInRoutingPolicy 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This aggregation defines the BGPRouteMaps that are used by a "
       "particular RoutingPolicy object. Multiple instances of the "
       "same RouteMap may be used in the same RoutingPolicy instance. "
       "If this is desired, then the Sequence attribute of this "
       "aggregation can be used to disambiguate them." )]
class CIM_BGPRouteMapsInRoutingPolicy : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The RoutingPolicy that aggregates the RouteMaps." )]
   CIM_RoutingPolicy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The RouteMaps that are used by the RoutingPolicy." )]
   CIM_BGPRouteMap REF PartComponent;

      [Description ( 
          "This defines the position of this RouteMap instance "
          "relative to all other instances of the same RouteMap." )]
   uint16 MapSequence;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BoundedPrioritySchedulingElement 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class is a subclass of the class PriorityScheduling "
       "Element, which is itself derived from the abstract class "
       "SchedulingElement. As is the case with all subclasses of "
       "SchedulingElement, the input associated with an instance of "
       "BoundedPrioritySchedulingElement is of one of two types: "
       "either a queue, or another scheduler. BoundedPriority "
       "SchedulingElement adds an upper bound (BandwidthBound in "
       "kilobits per second) on how much traffic can be handled from "
       "an input. This data is specific to that one input. It is "
       "needed when bounded strict priority scheduling is performed. "
       "Note that this class inherits from its superclass the "
       "restriction of the inherited boolean property WorkConserving "
       "to TRUE." )]
class CIM_BoundedPrioritySchedulingElement : CIM_PrioritySchedulingElement {

      [Override ( "WorkConserving" )]
   boolean WorkConserving = true;

      [Description ( 
          "A 32-bit unsigned integer that defines the upper limit "
          "on the amount of traffic that can be handled from the "
          "input (through this SchedulingElement). This is not a "
          "shaped upper bound, since bursts can occur. It is a "
          "strict bound, limiting the impact of the input. Units "
          "are kilobits per second." ), 
       Units ( "KiloBits per Second" )]
   uint32 BandwidthBound;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A subclass of ProtocolServiceCapabilities that defines the "
       "capabilities of a CLPService. An instance of CLPCapabilities "
       "is associated with a ProtocolService using "
       "ElementCapabilities." )]
class CIM_CLPCapabilities : CIM_ProtocolServiceCapabilities {

      [Description ( 
          "CLPVersion is an array of strings that specifies the "
          "versions of the SM CLP Specification, DMTF document "
          "DSP0214, that the CLP service supports. The format of "
          "the version string follows the conventions noted in DMTF "
          "document DSP4004 in current and historical versions of "
          "the document. Thus the version string format is \"m.n.ud "
          "s\" where m is the string value of the major version "
          "identifier in numeric form, n is the string value of the "
          "minor version identifier in numeric form , u is the "
          "optional string value of the update (errata or "
          "coordination changes) in numeric form, d is the optional "
          "draft in alphabetic form and s is one of the following "
          "string values in alphabetic form: \"Work In Progress\", "
          "\"Draft Standard\", \"DMTF Standard\", \"Preliminary "
          "Standard\" or \"Final Standard\"." )]
   string CLPVersions[];

      [Description ( 
          "SMMEAddressVersion is an array of strings that specify "
          "the versions of the Server Management Managed Element "
          "Address Specification, DMTF document DSP0215, that the "
          "CLP service supports. The format of the version string "
          "follows the conventions noted in DMTF document DSP4004 "
          "in current and historical versions of the document. Thus "
          "the version string format is \"m.n.ud s\" where m is the "
          "string value of the major version identifier in numeric "
          "form, n is the string value of the minor version "
          "identifier in numeric form , u is the optional string "
          "value of the update (errata or coordination changes) in "
          "numeric form, d is the optional draft in alphabetic form "
          "and s is one of the following string values in "
          "alphabetic form: \"Work In Progress\", \"Draft "
          "Standard\", \"Preliminary Standard\" or \"Final "
          "Standard\"." )]
   string SMMEAddressVersions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EntriesInFilterList 
// ==================================================================
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "This is a specialization of the CIM_Component aggregation "
       "which is used to define a set of filter entries (subclasses of "
       "FilterEntryBase) that are aggregated by a particular "
       "FilterList." )]
class CIM_EntriesInFilterList : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The FilterList, which aggregates the set of FilterEntries."
           )]
   CIM_FilterList REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "Any subclass of FilterEntryBase which is a part of the FilterList."
           )]
   CIM_FilterEntryBase REF PartComponent;

      [Description ( 
          "The order of the Entry relative to all others in the "
          "FilterList. The only permissible value is zero - "
          "indicating that all the Entries are ANDed together." ), 
       ValueMap { "0" }]
   uint16 EntrySequence = 0;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ESPTransform 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "ESPTransform defines the parameters used for a phase 2 ESP "
       "(Encapsulating Security Protocol) Security Association." ), 
    MappingStrings { "IPSP Model.IETF|ESPTransform" }]
class CIM_ESPTransform : CIM_SATransform {

      [Description ( 
          "IntegrityTransformId is an enumeration that specifies "
          "the ESP integrity algorithm to be used. The list of "
          "values is generated from the enumeration defined in "
          "RFC2407, Section 4.5. Note that the enumeration is "
          "different than the RFC list, since the values of Other "
          "and None are taken into account. Also, note that 2 "
          "(\"None\") is used when ESP is negotiated without "
          "authentication." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7..61439", 
          "61440..65535" }, 
       Values { "Other", "None", "MD5", "SHA-1", "DES", "KPDK", 
          "DMTF/IANA Reserved", "Vendor Reserved" }, 
       MappingStrings { 
          "IPSP Model.IETF|ESPTransform.IntegrityTransformId", 
          "RFC2407.IETF|Section 4.5" }, 
       ModelCorrespondence { 
          "CIM_ESPTransform.OtherIntegrityTransformId" }]
   uint16 IntegrityTransformId;

      [Description ( 
          "Description of the integrity algorithm when the value 1 "
          "(\"Other\") is specified for the property, "
          "IntegrityTransformId." ), 
       ModelCorrespondence { "CIM_ESPTransform.IntegrityTransformId" }]
   string OtherIntegrityTransformId;

      [Description ( 
          "CipherTransformId is an enumeration that specifies the "
          "ESP encrypion algorithm to be used. The list of values "
          "is defined in RFC2407, Section 4.4.4, where the RFC\'s "
          "NULL value maps to 2-\"None\". Note that the enumeration "
          "is different than the RFC list, since \'Other\' is added "
          "to the enumeration." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12" }, 
       Values { "Other", "None", "DES_IV64", "DES", "3DES", "RC5", 
          "IDEA", "CAST", "Blowfish", "3-IDEA", "DES_IV32", "RC4" }, 
       MappingStrings { 
          "IPSP Model.IETF|ESPTransform.CipherTransformId", 
          "RFC2407.IETF|Section 4.4.4" }, 
       ModelCorrespondence { 
          "CIM_ESPTransform.OtherCipherTransformId" }]
   uint16 CipherTransformId;

      [Description ( 
          "Description of the encryption algorithm when the value 1 "
          "(\"Other\") is specified for the property, "
          "CipherTransformId." ), 
       ModelCorrespondence { "CIM_ESPTransform.CipherTransformId" }]
   string OtherCipherTransformId;

      [Description ( 
          "CipherKeyLength specifies, in bits, the key length for "
          "the encryption algorithm. For algorithms with fixed key "
          "lengths, this value is ignored." ), 
       Units ( "Bits" ), 
       MappingStrings { 
          "IPSP Model.IETF|ESPTransform.CipherKeyLength" }]
   uint16 CipherKeyLength;

      [Description ( 
          "CipherKeyRounds specifies the key rounds for the "
          "encryption algorithm. For algorithms with a fixed number "
          "of key rounds, this value is ignored. Currently, key "
          "rounds are NOT defined for any ESP encryption "
          "algorithms." ), 
       MappingStrings { 
          "IPSP Model.IETF|ESPTransform.CipherKeyRounds" }]
   uint16 CipherKeyRounds;

      [Description ( 
          "UseReplayPrevention causes the local peer to enable "
          "replay prevention detection. This can be accomplished by "
          "using a sequence number when sending a packet or "
          "checking the sequence number upon receipt of a packet." ), 
       MappingStrings { 
          "IPSP Model.IETF|ESPTransform.UseReplayPrevention" }]
   boolean UseReplayPrevention;

      [Description ( 
          "ReplayPreventionWindowsSize specifies, in bits, the "
          "length of the sliding window used by the replay "
          "prevention mechanism. The value of this property is "
          "meaningless if UseReplayPrevention is false. The window "
          "size MUST be a power of 2." ), 
       Units ( "Bits" ), 
       MappingStrings { 
          "IPSP Model.IETF|ESPTransform.ReplayPreventionWindowSize" }]
   uint32 ReplayPreventionWindowSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilteredBGPAttributes 
// ==================================================================
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This is a specialization of the Component aggregation, which "
       "is used to define the set of BGP Attributes that are used by a "
       "particular Routing Policy." )]
class CIM_FilteredBGPAttributes : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The RoutingPolicy, which aggregates a set of BGP attributes."
           )]
   CIM_RoutingPolicy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A BGP attribute, which is part-of the RoutingPolicy." )]
   CIM_BGPAttributes REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterEntry 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "A FilterEntry is used by network devices to identify traffic "
       "and either forward it (with possibly further processing) to "
       "its destination, or to deny its forwarding. It is one of the "
       "building block of FilterLists. \n"
       "\n"
       "This class is oriented towards packet filtering. Other "
       "subclasses of FilterEntryBase can be defined to do other types "
       "of filtering. \n"
       "\n"
       "A FilterEntry is weak to the network device (i.e., the "
       "ComputerSystem) that contains it. Hence, the ComputerSystem "
       "keys are propagated to this class." )]
class CIM_FilterEntry : CIM_FilterEntryBase {

      [Description ( 
          "This defines the type of traffic that is being filtered. "
          "This will affect the filtering rules in the "
          "MatchCondition property of this class." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "IPv4", "IPX", "IPv6", "Any", "Other" }, 
       ModelCorrespondence { "CIM_FilterEntry.OtherTrafficType" }]
   uint16 TrafficType;

      [Description ( 
          "If the value of the TrafficType property in this class "
          "is 5 (i.e., \"Other\"), then the specific type of "
          "traffic is specified in this property." ), 
       ModelCorrespondence { "CIM_FilterEntry.TrafficType" }]
   string OtherTrafficType;

      [Description ( 
          "This specifies one of a set of ways to identify traffic. "
          "If the value is 1 (i.e., \"Other\"), then the specific "
          "type of filtering is specified in the "
          "OtherMatchConditionType property of this class." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13" }, 
       Values { "Other", "Source Address and Mask", 
          "Destination Address and Mask", "Source Port", 
          "Source Port Range", "Destination Port", 
          "Destination Port Range", "Protocol Type", 
          "Protocol Type and Option", "DSCP", "ToS Value", 
          "802.1P Priority Value", "Any" }, 
       ModelCorrespondence { 
          "CIM_FilterEntry.OtherMatchConditionType" }]
   uint16 MatchConditionType;

      [Description ( 
          "If the value of the MatchConditionType property in this "
          "class is 1 (i.e., \"Other\"), then the specific type of "
          "filtering is specified in this property." ), 
       ModelCorrespondence { "CIM_FilterEntry.MatchConditionType" }]
   string OtherMatchConditionType;

      [Description ( 
          "This is the value of the condition that filters the "
          "traffic. It corresponds to the condition specified in "
          "the MatchConditionType property. If, however, the value "
          "of the MatchConditionProperty is 1, then it corresponds "
          "to the condition specified in the "
          "OtherMatchConditionType property." )]
   string MatchConditionValue;

      [Description ( 
          "This defines whether the action should be to forward or "
          "deny traffic meeting the match condition specified in "
          "this filter." ), 
       ValueMap { "1", "2" }, 
       Values { "Permit", "Deny" }]
   uint16 Action;

      [Description ( 
          "This defines whether this FilterEntry is the default "
          "entry to use by its FilterList." )]
   boolean DefaultFilter;

      [Description ( 
          "This defines the traffic class that is being matched by "
          "this FilterEntry. Note that FilterEntries are aggregated "
          "into FilterLists by the EntriesInFilterList "
          "relationship. If the EntrySequence property of the "
          "aggregation is set to 0, this means that all the Filter "
          "Entries should be ANDed together. Consequently, the "
          "TrafficClass property of each of the aggregated Entries "
          "should be set to the same value." )]
   string TrafficClass;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPCOMPTransform 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "The IPCOMPTransform specifies the IP compression algorithm to "
       "use for payload of the Security Association." ), 
    MappingStrings { "IPSP Model.IETF|IPCOMPTransform" }]
class CIM_IPCOMPTransform : CIM_SATransform {

      [Description ( 
          "The Algorithm is an enumeration that designates the "
          "IPCOMP compression algorithm to use. Its values are "
          "generated from RFC2407, Section 4.4.5. Note that the "
          "values are modified from the RFC, since \'Other\' must "
          "be taken into account." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Vendor Algorithm/OUI", "DEFLATE", "LZS" }, 
       MappingStrings { "IPSP Model.IETF|IPCOMPTransform.Algorithm", 
          "RFC2407.IETF|Section 4.4.5" }, 
       ModelCorrespondence { "CIM_IPCOMPTransform.PrivateAlgorithm", 
          "CIM_IPCOMPTransform.OtherAlgorithm" }]
   uint16 Algorithm;

      [Description ( 
          "Description of the compression algorithm when the value "
          "1 (\"Other\") is specified for the property, Algorithm." ), 
       ModelCorrespondence { "CIM_IPCOMPTransform.Algorithm" }]
   string OtherAlgorithm;

      [Description ( 
          "A private compression algorithm, used when the Algorithm "
          "property is set to 2, \"Vendor Algorithm/OUI\"." ), 
       MappingStrings { 
          "IPSP Model.IETF|IPCOMPTransform.PrivateAlgorithm" }, 
       ModelCorrespondence { "CIM_IPCOMPTransform.Algorithm" }]
   uint32 PrivateAlgorithm;

      [Description ( 
          "DictionarySize is an optional field that specifies the "
          "log2 maximum size of the dictionary for the compression "
          "algorithm. For dictionaries that have a fixed size, this "
          "value is ignored." ), 
       MappingStrings { 
          "IPSP Model.IETF|IPCOMPTransform.DictionarySize" }]
   uint16 DictionarySize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPRoute 
// ==================================================================
   [Deprecated { "CIM_NextHopIPRoute" }, 
    Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "An IPRoute relates a destination address to the address or "
       "interface through which the remote address may be reached. The "
       "destination address may be a specific IP endpoint or a subnet, "
       "dependent on the mask. An instance of this class represents "
       "either static or dynamic routing. Static routes are "
       "distinguished by setting the IsStatic boolean property to "
       "TRUE. \n"
       "\n"
       "Since many routes between endpoints can be defined (using "
       "different route calculation algorithms), the CIM_IPRoute class "
       "is defined as Abstract. This forces subclassing (for example, "
       "see CIM_BGPIPRoute) and allows the instances of its subclasses "
       "to be distinguished based on their CreationClassName key "
       "property. \n"
       "\n"
       "IPRoute is deprecated in lieu of the more general, concrete "
       "NextHopIPRoute class. NextHopIPRoute allows the definition of "
       "BOTH a next hop address and an interface for transmission of "
       "the traffic. Also, it does not mandate the instantiation of a "
       "ForwardingService class." )]
class CIM_IPRoute : CIM_NextHopRouting {

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The scoping ForwardingService\'s SystemCreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ForwardingService.SystemCreationClassName" )]
   string SystemCreationClassName;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The scoping ForwardingService\'s SystemName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ForwardingService.SystemName" )]
   string SystemName;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The scoping ForwardingService\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ForwardingService.CreationClassName" )]
   string ServiceCreationClassName;

      [Deprecated { "No value" }, 
       Key, Description ( "The scoping ForwardingService\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ForwardingService.Name" )]
   string ServiceName;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Deprecated { "CIM_NextHopIPRoute.DestinationAddress" }, 
       Key, Description ( 
          "The IP address which serves as the destination of the "
          "traffic, formatted according to the appropriate "
          "convention as defined in the AddressType property of "
          "this class. \n"
          "\n"
          "This property has the same semantics as "
          "DestinationAddress inherited from the NextHopRouting "
          "superclass, but a different property name. This is "
          "because this property and class were defined before "
          "NextHopRouting and are Key properties. They cannot be "
          "removed. ModelCorrespondence indicates that they should "
          "be set to equivalent values for consistency and ease of "
          "query." ), 
       ModelCorrespondence { "CIM_IPRoute.DestinationAddress" }]
   string IPDestinationAddress;

      [Deprecated { "CIM_NextHopIPRoute.DestinationMask" }, 
       Key, Description ( 
          "The mask for the destination IP address, formatted "
          "according to the appropriate convention as defined in "
          "the AddressType property of this class. \n"
          "\n"
          "This property has the same semantics as DestinationMask "
          "inherited from the NextHopRouting superclass, but a "
          "different property name. This is because this property "
          "and class were defined before NextHopRouting and are Key "
          "properties. They cannot be removed. ModelCorrespondence "
          "indicates that they should be set to equivalent values "
          "for consistency and ease of query." ), 
       ModelCorrespondence { "CIM_IPRoute.DestinationMask" }]
   string IPDestinationMask;

      [Deprecated { "CIM_NextHopIPRoute.AddressType" }, 
       Key, Description ( 
          "An enumeration that describes the format of the address "
          "property. Addresses that can be formatted in IPv4 "
          "format, must be formatted that way to ensure mixed "
          "IPv4/IPv6 support. \n"
          "\n"
          "AddressType is part of the key so that an IPv4 and an "
          "IPv6 route to IP subnets with the same network number "
          "but different IP versions (v4/v6) can coexist." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 AddressType;

      [Deprecated { "No Value" }, 
       Override ( "DestinationAddress" ), 
       ModelCorrespondence { "CIM_IPRoute.IPDestinationAddress" }]
   string DestinationAddress;

      [Deprecated { "No Value" }, 
       Override ( "DestinationMask" ), 
       ModelCorrespondence { "CIM_IPRoute.IPDestinationMask" }]
   string DestinationMask;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPSubnet 
// ==================================================================
   [Deprecated { "CIM_IPConnectivitySubnet" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "An IPSubnet represents a group of related IPProtocolEndpoints "
       "that can communicate with each other directly using IP. It is "
       "used for describing the characteristics of the grouping. \n"
       "\n"
       "Since this class\' superclass (LogicalNetwork) has been "
       "deprecated (in order to define more consistent \'collection\' "
       "semantics), this class is also deprecated." )]
class CIM_IPSubnet : CIM_LogicalNetwork {

      [Deprecated { "CIM_IPConnectivitySubnet.SubnetNumber" }, 
       Description ( 
          "The IP address of the entire subnet, formatted according "
          "to the appropriate convention as defined in the "
          "AddressType property of this class." )]
   string SubnetNumber;

      [Deprecated { "CIM_IPConnectivitySubnet.SubnetMask" }, 
       Description ( 
          "The mask for the starting IPv4 address of the IPSubnet, "
          "if needed (i.e., if the AddressType property is 1, "
          "\"IPv4\")." )]
   string SubnetMask;

      [Deprecated { "CIM_IPConnectivitySubnet.PrefixLength" }, 
       Description ( 
          "The prefix length for IPv6 addresses in the IPSubnet, if "
          "needed (i.e., if the AddressType property is 2, \"IPv6\")."
           )]
   uint8 PrefixLength;

      [Deprecated { "CIM_IPConnectivitySubnet.AddressType" }, 
       Description ( 
          "An enumeration that describes the format of the address "
          "properties in IPSubnet." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 AddressType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPXNetwork 
// ==================================================================
   [Deprecated { "CIM_IPXConnectivityNetwork" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "A network or subnet that uses the IPX protocol. Since this "
       "class\' superclass (LogicalNetwork) has been deprecated (in "
       "order to define more consistent \'collection\' semantics), "
       "this class is also deprecated." )]
class CIM_IPXNetwork : CIM_LogicalNetwork {

      [Deprecated { "CIM_IPXConnectivityNetwork.NetworkNumber" }, 
       Description ( 
          "An IPX network number formatted as eight hexadecimal "
          "digits (e.g., \"00112233\")." )]
   string NetworkNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LANSegment 
// ==================================================================
   [Deprecated { "CIM_LANConnectivitySegment" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "A collection of LAN Endpoints of a particular type that are "
       "able to intercommunicate directly without the assistance of "
       "bridging or routing services. \n"
       "\n"
       "Since this class\' superclass (LogicalNetwork) has been "
       "deprecated (in order to define more consistent \'collection\' "
       "semantics), this class is also deprecated." )]
class CIM_LANSegment : CIM_LogicalNetwork {

      [Deprecated { "CIM_LANConnectivitySegment.LANID" }, 
       Description ( "A label or identifier for the LAN Segment." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_LANEndpoint.LANID" }]
   string LANID;

      [Deprecated { "CIM_LANConnectivitySegment.ConnectivityType" }, 
       Description ( 
          "An indication of the kind of technology used on the LAN." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Ethernet", "TokenRing", "FDDI" }, 
       ModelCorrespondence { "CIM_LANEndpoint.LANType" }]
   uint16 LANType;

      [Deprecated { "CIM_LANConnectivitySegment.OtherTypeDescription" }, 
       Description ( 
          "A string describing the type of technology used on the "
          "LAN when the value of the LANType property of this class "
          "(or any of its subclasses) is set to 1 (i.e., \"Other\"). "
          "The format of the string inserted in this property "
          "should be similar in format to the values defined for "
          "the LANType property. This property should be set to "
          "NULL when the LANType property is any value other than "
          "1." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_LANSegment.LANType" }]
   string OtherLANType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ListsInRoutingPolicy 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This is a specialization of the CIM_Component aggregation "
       "which is used to define a set of FilterLists that are "
       "aggregated by a particular RoutingPolicy." )]
class CIM_ListsInRoutingPolicy : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The RoutingPolicy, which aggregates the set of FilterLists."
           )]
   CIM_RoutingPolicy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A FilterList, which is part-of the RoutingPolicy." )]
   CIM_FilterList REF PartComponent;

      [Description ( 
          "The position of the FilterList relative to all other "
          "entries in the RoutingPolicy." )]
   uint16 ListSequence;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::MediaRedirection" ), 
    Description ( 
       "MediaRedirectionCapabilities describes the capabilities of the "
       "Media Redirection Service." )]
class CIM_MediaRedirectionCapabilities : CIM_RedirectionServiceCapabilities {

      [Description ( 
          "The connection mode used to configure the session. A "
          "value set to 2 = \"Listen\" shall indicate that the SAP "
          "will listen for a connection request from the remote "
          "Media redirection server. A CIM_BindsTo association to a "
          "CIM_ProtocolEndoint may be used to represent where the "
          "SAP is listening for the connection request. A value set "
          "to 3 = \"Connect\" shall indicate that the the SAP shall "
          "initiate the connection to the remote Media redirection "
          "server. A CIM_RemoteAccessAvailableToElement association "
          "to a CIM_RemoteServiceAccessPoint may be used to "
          "represent where the SAP shall connect to the remote "
          "Media redirection server." ), 
       ValueMap { "0", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Listen", "Connect", "DMTF Reserved", 
          "Vendor Specified" }, 
       ModelCorrespondence { "CIM_MediaRedirectionSAP.ConnectionMode" }]
   uint16 ConnectionModesSupported[];

      [Description ( 
          "An enumeration indicating the types of Media Devices "
          "which are supported by the Media Redirection Service. "
          "Note that each entry of this array is related to the "
          "entry in the MaxDevicesSupported array that is located "
          "at the same index." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "..", 
          "32768..65535" }, 
       Values { "Unknown", "CIM_CDROMDrive", "CIM_DiskDrive", 
          "CIM_DisketteDrive", "CIM_DVDDrive", 
          "CIM_MagnetoOpticalDrive", "CIM_TapDrive", 
          "CIM_WORMDrive", "DMTF_ Reserved", "Vendor_ Specified" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MediaRedirectionCapabilities.MaxDevicesSupported" }]
   uint16 DevicesSupported[];

      [Description ( 
          "An enumeration indicating the number of Media devices "
          "which are supported for the devices specified in the "
          "DevicesSupported array property. Note that each entry of "
          "this array is related to the entry in the "
          "DevicesSupported that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MediaRedirectionCapabilities.DevicesSupported" }]
   uint16 MaxDevicesSupported[];

      [Description ( 
          "An enumeration indicating the number of Media devices "
          "per MediaRedirection Session which are supported for the "
          "devices specified in the DevicesSupported array "
          "property. Note that each entry of this array is related "
          "to the engry in the DevicesSupported array that is "
          "located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MediaRedirectionCapabilities.DevicesSupported" }]
   uint16 MaxDevicesPerSAP[];

      [Description ( 
          "An enumeration indicating the whether instances of "
          "USBRedirectionSAPs already exist and whether whether "
          "SAPs can be created. A value set to 2 = \"Modify "
          "Timeouts\" shall indicate that the timeout parameters of "
          "instances of CIM_USBRedirectionSAP can be modified by "
          "applications using \'ModifyInstance\'" ), 
       ValueMap { "0", "2", "..", "32768..65535" }, 
       Values { "Unknown", "Modify SAP", "DMTF Reserved", 
          "Vendor Specified" }]
   uint16 SAPCapabilitiesSupported[];

      [Description ( 
          "An enumeration indicating which of the formats for "
          "CIM_RemoteServiceAccessPoint.InfoFormat are supported by "
          "the Media Redirection Service." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "10", "11", 
          "12", "13", "100", "101", "102", "200", "201", "202", 
          "203", "204", "205", "..", "32768..65535" }, 
       Values { "Other", "Host Name", "IPv4 Address", 
          "IPv6 Address", "IPX Address", "DECnet Address", 
          "SNA Address", "IPv4 Subnet Address", 
          "IPv6 Subnet Address", "IPv4 Address Range", 
          "IPv6 Address Range", "Dial String", "Ethernet Address", 
          "Token Ring Address", "URL", "FQDN", "User FQDN", 
          "DER ASN1 DN", "DER ASN1 GN", "Key ID", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.InfoFormat" }]
   uint16 InfoFormatsSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CardInSlot 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "Slots are special types of Connectors into which adapter Cards "
       "are inserted. This relationship of a Card in a Slot is made "
       "explicit using the CardInSlot association." ), 
    MappingStrings { "MIF.DMTF|System Slot|005.4" }]
class CIM_CardInSlot : CIM_PackageInSlot {

      [Override ( "Antecedent" ), 
       Description ( "The Slot into which the Card is inserted." )]
   CIM_Slot REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The Card in the Slot." )]
   CIM_Card REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CardOnCard 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "Cards may be plugged into Motherboards/baseboards, are "
       "daughtercards of an adapter, or support special Card-like "
       "modules. These relationships are described by the CardOnCard "
       "association." )]
class CIM_CardOnCard : CIM_Container {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Card that hosts another Card." )]
   CIM_Card REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The Card that is plugged into or otherwise mounted on "
          "another Card." )]
   CIM_Card REF PartComponent;

      [Description ( 
          "A string describing and identifying how the Card is "
          "mounted on or plugged into the \'other\' Card. Slot "
          "information could be included in this field and may be "
          "sufficient for certain management purposes. If so, this "
          "avoids creating instantiations of Connector/Slot objects "
          "just to model the relationship of Cards to HostingBoards "
          "or other adapters. On the other hand, if Slot and "
          "Connector information is available, this field could be "
          "used to provide more detailed mounting or slot insertion "
          "data." )]
   string MountOrSlotDescription;


};

// Copyright (c) 2006 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00863" type="change" Add ChassisPackageType
// value BladeEnclosure. </change>
// ==================================================================
//  CIM_Chassis 
// ==================================================================
   [Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "The Chassis class represents the PhysicalElements that enclose "
       "other Elements and provide definable functionality, such as a "
       "desktop, processing node, UPS, disk or tape storage, or a "
       "combination of these." )]
class CIM_Chassis : CIM_PhysicalFrame {

      [Description ( 
          "Integer indicating the number of power cords which must "
          "be connected to the Chassis, for all the componentry to "
          "operate." )]
   uint16 NumberOfPowerCords;

      [Description ( 
          "Current required by the Chassis at 120V. If power is "
          "provided by the Chassis (as in the case of a UPS), this "
          "property may indicate the amperage produced, as a "
          "negative number." ), 
       Units ( "Amps at 120 Volts" )]
   sint16 CurrentRequiredOrProduced;

      [Description ( 
          "Amount of heat generated by the Chassis in BTU/hour." ), 
       Units ( "BTU per Hour" )]
   uint16 HeatGeneration;

      [Deprecated { "CIM_Chassis.ChassisPackageType", 
          "CIM_Chassis.MultipleSystemSupport" }, 
       Description ( 
          "The use of this property is deprecated in lieu of "
          "ChassisPackageType. A physical package should not have "
          "multiple form factors. Therefore, this property is being "
          "deprecated in lieu of a single value property. \n"
          "An enumerated, integer-valued array indicating the type "
          "of Chassis." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25" }, 
       Values { "Other", "Unknown", "Desktop", 
          "Low Profile Desktop", "Pizza Box", "Mini Tower", "Tower", 
          "Portable", "LapTop", 
          // 10                
          "Notebook", "Hand Held", 
          "Docking Station", "All in One", "Sub Notebook", 
          "Space-Saving", "Lunch Box", "Main System Chassis", 
          "Expansion Chassis", "SubChassis", 
          // 20               
          "Bus Expansion Chassis", 
          "Peripheral Chassis", "Storage Chassis", 
          "Rack Mount Chassis", "Sealed-Case PC", 
          "Multi-system Chassis" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIF.DMTF|Physical Container Global Table|004.1" }, 
       ModelCorrespondence { "CIM_Chassis.TypeDescriptions" }]
   uint16 ChassisTypes[];

      [Deprecated { "CIM_Chassis.ChassisTypeDescription" }, 
       Description ( 
          "The use of this property is deprecated in lieu of a "
          "single value property, ChassisTypeDescription. \n"
          "An array of free-form strings providing more information "
          "on the ChassisTypes array entries. Note, each entry of "
          "this array is related to the entry in ChassisTypes that "
          "is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Chassis.ChassisTypes" }]
   string TypeDescriptions[];

      [Description ( 
          "ChassisPackageType indicates the physical form factor "
          "for the type of Chassis. This property may have a value "
          "when the PackageType property contains the value 3 "
          "\"Chassis Frame\".\n"
          "A value of 28 \"Blade Enclosure\" shall indicate the "
          "Chassis is designed to contain one or more "
          "PhysicalPackage(s) of PackageType 16 \"Blade\" or "
          "PackageType 17 \"Blade Expansion\"." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "SMBIOS Reserved", "Desktop", 
          "Low Profile Desktop", "Pizza Box", "Mini Tower", "Tower", 
          "Portable", "LapTop", 
          // 10                
          "Notebook", "Hand Held", 
          "Docking Station", "All in One", "Sub Notebook", 
          "Space-Saving", "Lunch Box", "Main System Chassis", 
          "Expansion Chassis", "SubChassis", 
          // 20               
          "Bus Expansion Chassis", 
          "Peripheral Chassis", "Storage Chassis", "SMBIOS Reseved", 
          "Sealed-Case PC", "SMBIOS Reserved", "CompactPCI", 
          "AdvancedTCA", "Blade Enclosure", "DMTF Reserved", 
          "Vendor Reserved" }, 
       MappingStrings { 
          "MIF.DMTF|Physical Container Global Table|004.1" }, 
       ModelCorrespondence { "CIM_Chassis.ChassisTypeDescription" }]
   uint16 ChassisPackageType;

      [Description ( 
          "A string providing more information on the ChassisPackageType."
           ), 
       ModelCorrespondence { "CIM_Chassis.ChassisPackageType" }]
   string ChassisTypeDescription;

      [Description ( 
          "MultipleSystemSupport indicates whether or not this "
          "chassis supports multiple systems, for example server "
          "blades." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "True", "False" }]
   uint16 MultipleSystemSupport;

      [Description ( 
          "RackMountable indicates whether or not the chassis is "
          "Rack Mountable." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "True", "False" }]
   uint16 RackMountable;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.21.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "Racks, as simple enclosures, contain Chassis that provide the "
       "physical componentry realizing processing nodes, storage "
       "devices, UPSs, etc. The ChassisInRack association makes "
       "explicit the \'containing\' relationship between the Rack and "
       "the Chassis." )]
class CIM_ChassisInRack : CIM_Container {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Rack that contains the Chassis." )]
   CIM_Rack REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The Chassis which is mounted in the Rack." )]
   CIM_Chassis REF PartComponent;

      [Description ( 
          "An integer indicating the lowest or \'bottom\' U in "
          "which the Chassis is mounted. A \'U\' is a standard unit "
          "of measure for the height of a Rack or rack-mountable "
          "component. It is equal to 1.75 inches or 4.445 cm." ), 
       Units ( "Us" ), 
       PUnit ( "rack unit" )]
   uint16 BottomU;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConnectorOnPackage 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Connector" ), 
    Description ( 
       "PhysicalPackages contain Connectors as well as other "
       "PhysicalElements. The ConnectorOnPackage association makes "
       "explicit the containment relationship between Connectors and "
       "Packages." )]
class CIM_ConnectorOnPackage : CIM_Container {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The PhysicalPackage that has a Connector." )]
   CIM_PhysicalPackage REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The PhysicalConnector." )]
   CIM_PhysicalConnector REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Docked 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "A laptop, a type of Chassis, may be docked in another type of "
       "Chassis, a Docking Station. This is the relationship "
       "represented by the Docked association. Because this is such a "
       "typical relationship, it is explicitly described." ), 
    MappingStrings { "MIF.DMTF|Dynamic States|001.2" }]
class CIM_Docked : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The Docking Station." )]
   CIM_Chassis REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The Laptop that is \'Docked\'." )]
   CIM_Chassis REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HomeForMedia 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::PhysicalMedia" ), 
    Description ( 
       "In a StorageLibrary or repository for PhysicalMedia, it is "
       "reasonable that a specific Media always be placed in a "
       "specific Location (rather than anywhere in the repository/ "
       "Library). The default location for a PhysicalMedia is called "
       "its \'home\'. This information is expressed by the "
       "HomeForMedia dependency association. (Note that a "
       "PhysicalMedia can have at most one \'home\', and a "
       "StorageMediaLocation can be \'home\' to at most one Media.)" )]
class CIM_HomeForMedia : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The Location that is \'home\' to a piece of PhysicalMedia."
           )]
   CIM_StorageMediaLocation REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalMedia whose \'home\' or default Location is defined."
           )]
   CIM_PhysicalMedia REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Magazine 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::StoragePackage" ), 
    Description ( 
       "StorageMediaLocations are typically slots or spaces where "
       "removable media are located. However, a specific kind of "
       "MediaLocation is a Magazine. This entity represents a single "
       "physical container with multiple StorageMediaLocations in it. "
       "All the MediaLocations within the Magazine are added/removed "
       "together. Often, this container has a Barcode or other label "
       "for identification. This is the unique data captured in the "
       "CIM_Magazine class. Magazine\'s label properties are defined "
       "exactly as are labels for PhysicalMedia." )]
class CIM_Magazine : CIM_StorageMediaLocation {

      [Description ( 
          "One or more strings on \'labels\' on the Magazine. The "
          "format of the labels and their state (readable, "
          "unreadable, upside-down) are indicated in the "
          "corresponding LabelFormats and LabelStates array "
          "properties." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Magazine.LabelStates", 
          "CIM_Magazine.LabelFormats" }]
   string PhysicalLabels[];

      [Description ( 
          "An array of enumerated integers describing the states of "
          "each of the labels on a Magazine. The Labels themselves "
          "are listed in the PhysicalLabels property. Note, each "
          "entry of this array is related to the entry in "
          "PhysicalLabels that is located at the same index." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "OK/Readable", "Unreadable", "Upside Down" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Magazine.PhysicalLabels" }]
   uint16 LabelStates[];

      [Description ( 
          "An array of enumerated integers describing the formats "
          "of each of the labels on a Magazine. The Labels "
          "themselves are listed in the PhysicalLabels property. "
          "Note, each entry of this array is related to the entry "
          "in PhysicalLabels that is located at the same index." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Barcode", "Radio Frequency Identification", 
          "OCR (Optical Character Recognition)", 
          "MICR (Magnetic Ink Character Recognition)", 
          "7 Character Barcode", "9 Character Barcode" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Magazine.PhysicalLabels" }]
   uint16 LabelFormats[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MemoryOnCard 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Component" ), 
    Description ( 
       "PhysicalMemory can be located on HostingBoards, adapter Cards, "
       "etc. This association explicitly defines this relationship of "
       "Memory to Cards." )]
class CIM_MemoryOnCard : CIM_PackagedComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Card that includes or \'contains\' Memory." )]
   CIM_Card REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The PhysicalMemory which is located on the Card." )]
   CIM_PhysicalMemory REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MemoryWithMedia 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::PhysicalMedia" ), 
    Description ( 
       "MemoryWithMedia indicates that Memory is associated with a "
       "PhysicalMedia and its cartridge. The Memory provides media "
       "identification and also stores user-specific data." )]
class CIM_MemoryWithMedia : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Memory associated with PhysicalMedia." )]
   CIM_PhysicalMemory REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PhysicalMedia." )]
   CIM_PhysicalMedia REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageInChassis 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Package" ), 
    Description ( 
       "A Chassis can contain other Packages, such as other Chassis "
       "and Cards. The PackageInChassis association makes explicit "
       "this relationship." )]
class CIM_PackageInChassis : CIM_Container {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The Chassis that contains other PhysicalPackages." )]
   CIM_Chassis REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The PhysicalPackage which is contained in the Chassis." )]
   CIM_PhysicalPackage REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ParticipatesInSet 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::Misc" ), 
    Description ( 
       "ParticipatesInSet indicates which PhysicalElements should be "
       "replaced together." )]
class CIM_ParticipatesInSet {

      [Key, Aggregate, Description ( "The ReplacementSet." )]
   CIM_ReplacementSet REF Set;

      [Key, Description ( 
          "The PhysicalElement which should be replaced with other "
          "Elements, as a Set." )]
   CIM_PhysicalElement REF Element;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PhysicalMediaInLocation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Physical::PhysicalMedia" ), 
    Description ( 
       "Within a StorageLibrary, all Media should be accounted for, "
       "and be present in some Storage Location. This relationship is "
       "made explicit by the PhysicalMediaInLocation association. In "
       "addition, one can determine if a Location is empty or full "
       "based on whether this association exists for the "
       "StorageMediaLocation." )]
class CIM_PhysicalMediaInLocation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The StorageMediaLocation which holds the PhysicalMedia." )]
   CIM_StorageMediaLocation REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Media in the Location." )]
   CIM_PhysicalMedia REF Dependent;

      [Description ( 
          "An enumeration expressing which \'Side\' of the Media is "
          "facing up. Since sides can be named by various schemes "
          "(0/1 or A/B), both schemes are expressed in the Values "
          "array of this property. Also, the value 5 (\"Not "
          "Applicable\" describes that orientation is not pertinent "
          "for this Media." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Side 0", "Side 1", "Side A", "Side B", 
          "Not Applicable" }]
   uint16 Orientation;

      [Description ( 
          "The date and time that the Media was last placed into "
          "the referenced Location." )]
   datetime TimeOfLastPlacement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class describing a company\'s and/or administrator\'s "
       "credential requirements that should be authenticated in order "
       "to establish/trust a CIM_Identity. This class defines a "
       "specific identity whose account credentials should be "
       "authenticated." )]
class CIM_AccountAuthentication : CIM_AuthenticationCondition {

      [Description ( 
          "String defining the account\'s ID which is authenticated." )]
   string AccountID;

      [Description ( 
          "String defining a hostname, URI or other information "
          "identifying the system where the Account resides." )]
   string AccountContext;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class representing a company\'s and/or administrator\'s "
       "authentication requirements for a CIM_Identity. The "
       "PolicyConditions collected by an instance of "
       "AuthenticationRule describe the various requirements under "
       "which a CIM_Identity\'s CurrentlyAuthenticated Boolean is set "
       "to TRUE. Note that the CIM_Identities which are authenticated "
       "are tied to the Rule by the association, PolicySet "
       "AppliesToElement. \n"
       "\n"
       "At this time, there are no actions associated with this "
       "PolicyRule. This is because the actions are implicit. When the "
       "conditions of the rule are met, then the "
       "CurrentlyAuthenticated Boolean properties of the associated "
       "instances of CIM_Identity are set to TRUE." )]
class CIM_AuthenticationRule : CIM_PolicyRule {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "An ElementInPolicyRoleCollection aggregates zero or more "
       "ManagedElement subclass instances into a PolicyRoleCollection "
       "object, representing a role played by these ManagedElements. "
       "This Collection indicates that the aggregated PolicySets "
       "(aggregated by CIM_PolicySetInRoleCollection) MAY BE applied "
       "to the referenced elements. To indicate that the PolicySets "
       "ARE being enforced for the element, use the "
       "PolicySetAppliesToElement association." )]
class CIM_ElementInPolicyRoleCollection : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Description ( "The PolicyRoleCollection." )]
   CIM_PolicyRoleCollection REF Collection;

      [Override ( "Member" ), 
       Description ( 
          "The ManagedElement that plays the role represented by "
          "the PolicyRoleCollection." )]
   CIM_ManagedElement REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "FilterOfPacketCondition associates a network traffic "
       "specification (i.e., a FilterList) with a PolicyRule\'s "
       "PacketFilterCondition." ), 
    MappingStrings { "IPSP Policy Model.IETF|FilterOfSACondition" }]
class CIM_FilterOfPacketCondition : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "A FilterList describes the traffic selected by the "
          "PacketFilterCondition. A PacketFilterCondition is "
          "associated with one and only one FilterList, but that "
          "filter list may aggregate many filter entries." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|FilterOfSACondition.Antecedent" }]
   CIM_FilterList REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PacketFilterCondition that uses the FilterList as "
          "part of a PolicyRule." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|FilterOfSACondition.Dependent" }]
   CIM_PacketFilterCondition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicyActions may be aggregated into rules and into compound "
       "actions. PolicyActionStructure is the abstract aggregation "
       "class for the structuring of policy actions." )]
class CIM_PolicyActionStructure : CIM_PolicyComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "PolicyAction instances may be aggregated into either "
          "PolicyRule instances or CompoundPolicyAction instances." )]
   CIM_Policy REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A PolicyAction aggregated by a PolicyRule or CompoundPolicyAction."
           )]
   CIM_PolicyAction REF PartComponent;

      [Description ( 
          "ActionOrder is an unsigned integer \'n\' that indicates "
          "the relative position of a PolicyAction in the sequence "
          "of actions associated with a PolicyRule or "
          "CompoundPolicyAction. When \'n\' is a positive integer, "
          "it indicates a place in the sequence of actions to be "
          "performed, with smaller integers indicating earlier "
          "positions in the sequence. The special value \'0\' "
          "indicates \'don\'t care\'. If two or more PolicyActions "
          "have the same non-zero sequence number, they may be "
          "performed in any order, but they must all be performed "
          "at the appropriate place in the overall action sequence. \n"
          "\n"
          "A series of examples will make ordering of PolicyActions "
          "clearer: \n"
          "o If all actions have the same sequence number, "
          "regardless of whether it is \'0\' or non-zero, any order "
          "is acceptable. \n"
          "o The values: \n"
          "1:ACTION A \n"
          "2:ACTION B \n"
          "1:ACTION C \n"
          "3:ACTION D \n"
          "indicate two acceptable orders: A,C,B,D or C,A,B,D, \n"
          "since A and C can be performed in either order, but only "
          "at the \'1\' position. \n"
          "o The values: \n"
          "0:ACTION A \n"
          "2:ACTION B \n"
          "3:ACTION C \n"
          "3:ACTION D \n"
          "require that B,C, and D occur either as B,C,D or as "
          "B,D,C. Action A may appear at any point relative to B, "
          "C, and D. Thus the complete set of acceptable orders is: "
          "A,B,C,D; B,A,C,D; B,C,A,D; B,C,D,A; A,B,D,C; B,A,D,C; "
          "B,D,A,C; B,D,C,A. \n"
          "\n"
          "Note that the non-zero sequence numbers need not start "
          "with \'1\', and they need not be consecutive. All that "
          "matters is their relative magnitude." )]
   uint16 ActionOrder;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A CompoundPolicyCondition aggregates zero or more instances of "
       "the PolicyCondition class, via the "
       "PolicyConditionInPolicyCondition association. A "
       "CompoundPolicyCondition that aggregates zero Conditions is not "
       "valid; it may, however, be in the process of being defined. "
       "Note that a CompoundPolicyCondition should have no effect "
       "until it is valid." )]
class CIM_PolicyConditionInPolicyCondition : CIM_PolicyConditionStructure {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property represents the CompoundPolicyCondition "
          "that contains one or more PolicyConditions." )]
   CIM_CompoundPolicyCondition REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property holds the name of a PolicyCondition "
          "contained by one or more PolicyRules." )]
   CIM_PolicyCondition REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A PolicyRule aggregates zero or more instances of the "
       "PolicyCondition class, via the PolicyConditionInPolicyRule "
       "association. A Rule that aggregates zero Conditions is not "
       "valid; it may, however, be in the process of being defined. "
       "Note that a PolicyRule should have no effect until it is "
       "valid." )]
class CIM_PolicyConditionInPolicyRule : CIM_PolicyConditionStructure {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property represents the PolicyRule that contains "
          "one or more PolicyConditions." )]
   CIM_PolicyRule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property holds the name of a PolicyCondition "
          "contained by one or more PolicyRules." )]
   CIM_PolicyCondition REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ActivityContact 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Activity with PRS_Contact." )]
class PRS_ActivityContact : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_Activity." )]
   PRS_Activity REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_AdminAssociation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Associates PRS_Administrative data with any object derived "
       "from PRS_ExchangeElement." )]
class PRS_AdminAssociation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_ExchangeElement." )]
   PRS_ExchangeElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PRS_Administrative object." )]
   PRS_Administrative REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_AdministrativeContact 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Administrative and PRS_Contact." )]
class PRS_AdministrativeContact : CIM_Dependency {

      [Aggregate, Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Administrative instance." )]
   PRS_Administrative REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Attached 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Attachment with PRS_ExchangeElement." )]
class PRS_Attached : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_Attachment." )]
   PRS_Attachment REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The PRS_ExchangeElement." )]
   PRS_ExchangeElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_Categorization 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "PRS_Categorization associates PRS_Reference, PRS_Problem or "
       "PRS_Resolution with a PRS_Category for classification "
       "purposes. For example, a Category named \'Printing Issues\' "
       "can be defined for a Problem using the Categorization "
       "association between a PRS_Problem and a PRS_Category." )]
class PRS_Categorization : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PRS_Category used for classification." )]
   PRS_Category REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The specific PRS_Reference, PRS_Problem or "
          "PRS_Resolution classified by this association." )]
   PRS_SolutionElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ContactContactItem 
// ==================================================================
   [Association, Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "Abstract root class to associate PRS_Person or "
       "PRS_Organization and PRS_Contact." )]
class PRS_ContactContactItem : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The PRS_ContactItem, either PRS_Person or "
          "PRS_Organization. There is always at least one "
          "PRS_ContactItem, however it may be either a PRS_Person "
          "or PRS_Organization. For that reason, there is a minimum "
          "cardinality of one for this property, but a minimum "
          "cardinality of zero in the classes derived from this "
          "class." )]
   PRS_ContactItem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ContactOrganization 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Contact and PRS_Organization." )]
class PRS_ContactOrganization : PRS_ContactContactItem {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Organization." )]
   PRS_Organization REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_ContactPerson 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( "Associates PRS_Contact and PRS_Person." )]
class PRS_ContactPerson : PRS_ContactContactItem {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Contact." )]
   PRS_Contact REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The PRS_Person." )]
   PRS_Person REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="SVPCCR00026" type ="add">Add enumeration
// "Create" to ElementEffects.</change>
// ==================================================================
//  CIM_AffectedJobElement 
// ==================================================================
   [Association, Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "AffectedJobElement represents an association between a Job and "
       "the ManagedElement(s) that may be affected by its execution. "
       "It may not be feasible for the Job to describe all of the "
       "affected elements. The main purpose of this association is to "
       "provide information when a Job requires exclusive use of the "
       "\'affected\' ManagedElment(s) or when describing that side "
       "effects may result." )]
class CIM_AffectedJobElement {

      [Key, Description ( 
          "The ManagedElement affected by the execution of the Job." )]
   CIM_ManagedElement REF AffectedElement;

      [Key, Description ( 
          "The Job that is affecting the ManagedElement." )]
   CIM_Job REF AffectingElement;

      [Description ( 
          "An enumeration describing the \'effect\' on the "
          "ManagedElement. This array corresponds to the "
          "OtherElementEffectsDescriptions array, where the latter "
          "provides details related to the high-level \'effects\' "
          "enumerated by this property. Additional detail is "
          "required if the ElementEffects array contains the value "
          "1, \"Other\"." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Exclusive Use", 
          "Performance Impact", "Element Integrity", "Create" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AffectedJobElement.OtherElementEffectsDescriptions" }]
   uint16 ElementEffects[];

      [Description ( 
          "Provides details for the \'effect\' at the corresponding "
          "array position in ElementEffects. This information is "
          "required whenever ElementEffects contains the value 1 "
          "(\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_AffectedJobElement.ElementEffects" }]
   string OtherElementEffectsDescriptions[];


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "CorrespondingSettingDataRecord is used to tie a log record to "
       "its corresponding setting data record." )]
class CIM_CorrespondingSettingDataRecord {

      [Key, Description ( "The record containing the result data." )]
   CIM_DiagnosticRecord REF DataRecord;

      [Key, Description ( 
          "The record containing the DiagnosticSettingData that "
          "were used when the result was created." )]
   CIM_DiagnosticSettingDataRecord REF SettingsRecord;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CorrespondingSettingsRecord 
// ==================================================================
   [Association, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "CorrespondingSettingsRecord is used to tie a log record to its "
       "corresponding setting data record." )]
class CIM_CorrespondingSettingsRecord {

      [Key, Description ( "The record containing the result data." )]
   CIM_DiagnosticRecord REF DataRecord;

      [Key, Description ( 
          "The record containing the DiagnosticSetting data that "
          "were used when the result was created." )]
   CIM_DiagnosticSettingRecord REF SettingsRecord;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DataFile 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "DataFile is a type of LogicalFile that is a named collection "
       "of data or executable code." )]
class CIM_DataFile : CIM_LogicalFile {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceFile 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "DeviceFile is a special type of LogicalFile that represents a "
       "Device. This convention is useful for some operating systems "
       "that manage devices using a byte stream I/O model. The Logical "
       "Device that is associated with this file is specified using "
       "the DeviceAccessedByFile relationship." )]
class CIM_DeviceFile : CIM_LogicalFile {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "When a DiagnosticService has completed, results generated by "
       "the service will be recorded in a DiagnosticCompletionRecord "
       "object. This class is used when a DiagnosticRecord.RecordType "
       "value = \"Results\", to contain completion information." )]
class CIM_DiagnosticCompletionRecord : CIM_DiagnosticServiceRecord {

      [Description ( 
          "This property is used when a DiagnosticRecord.RecordType "
          "value = \"Results\", to record how the test has "
          "completed. It is expected that additional "
          "DiagnosticServiceRecords of RecordType \"Service "
          "Errors\", \"Warning\" or \"Device Errors\" would be "
          "created by the test to describe the details of a "
          "\"Warning\", \"Incomplete\" or \"Failed\" "
          "CompletionState, respectively. \n"
          "\" Stopped\" and \"Aborted\" are similar, although the "
          "former implies a clean and orderly stop, while the "
          "latter implies an abrupt stop where the element\'s state "
          "and configuration may need to be updated. \n"
          "\"Warning\" means the element had a problem but did not "
          "fail the test. \n"
          "\"Failed\" and \"Incomplete\" are similar, although the "
          "former means the test on the element failed, while the "
          "latter means the test itself had a problem and could not "
          "complete execution." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "OK", "Warning", "Incomplete", 
          "Failed", "Aborted", "Stopped" }, 
       ModelCorrespondence { 
          "CIM_DiagnosticCompletionRecord.OtherCompletionStateDescription" }]
   uint16 CompletionState;

      [Description ( 
          "When \"Other\" (value=1) is entered in the "
          "CompletionState property, "
          "OtherCompletionStateDescription can be used to describe "
          "the test\'s state." ), 
       ModelCorrespondence { 
          "CIM_DiagnosticCompletionRecord.CompletionState" }]
   string OtherCompletionStateDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Directory 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "Directory is a type of File that logically groups Files "
       "\'contained\' in it, and provides path information for the "
       "grouped Files." )]
class CIM_Directory : CIM_LogicalFile {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DirectoryContainsFile 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "Specifies the hierarchical arrangement of LogicalFiles in a "
       "Directory." )]
class CIM_DirectoryContainsFile : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Directory." )]
   CIM_Directory REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The LogicalFile \'contained within\' the Directory." )]
   CIM_LogicalFile REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FIFOPipeFile 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "FIFOPipeFile is a special type of LogicalFile that represents "
       "an interprocess FIFO (sometimes referred to as a \"named "
       "pipe\"). Operating systems use this convention to manage "
       "interprocess communication through processes reading and "
       "writing the FIFO. The FIFO can be accessed by unrelated "
       "processes, in contrast to the more well-known command line "
       "redirection mechanism (e.g. UNIX\'s \'ps -eaf | grep foo\', "
       "also known as an \"unnamed pipe\"). An exemplary operating "
       "system implementation (using the FIFO concept) is the UNIX "
       "S_IFIFO file type." )]
class CIM_FIFOPipeFile : CIM_LogicalFile {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileIdentity 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "CIM_FileIdentity indicates that a UnixFile describes Unix- "
       "specific aspects of the various subclasses of LogicalFile. The "
       "association exists since it forces UnixFile to be weak to "
       "(scoped by) the LogicalFile. This is not true in the "
       "association\'s superclass, LogicalIdentity." )]
class CIM_FileIdentity : CIM_LogicalIdentity {

      [Override ( "SystemElement" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Logical File." )]
   CIM_LogicalFile REF SystemElement;

      [Override ( "SameElement" ), 
       Weak, Max ( 1 ), 
       Description ( 
          "SameElement represents the additional aspects of the "
          "Unix/Linux Logical file." )]
   CIM_UnixFile REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OwningJobElement 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "OwningJobElement represents an association between a Job and "
       "the ManagedElement responsible for the creation of the Job. "
       "This association may not be possible, given that the execution "
       "of jobs can move between systems and that the lifecycle of the "
       "creating entity may not persist for the total duration of the "
       "job. However, this can be very useful information when "
       "available. This association defines a more specific \'owner\' "
       "than is provided by the CIM_Job.Owner string." ), 
    ModelCorrespondence { "CIM_Job.Owner" }]
class CIM_OwningJobElement {

      [Key, Max ( 1 ), 
       Description ( 
          "The ManagedElement responsible for the creation of the Job."
           )]
   CIM_ManagedElement REF OwningElement;

      [Key, Description ( "The Job created by the ManagedElement." )]
   CIM_Job REF OwnedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixDeviceFile 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "DeviceFile is a special type of LogicalFile that represents a "
       "Device. This class is a specialization of DeviceFile for a "
       "Unix environment." )]
class CIM_UnixDeviceFile : CIM_DeviceFile {

      [Description ( "The type of device file." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Block", "Character" }, 
       ModelCorrespondence { 
          "CIM_UnixDeviceFile.OtherTypeDescription" }]
   uint16 DeviceFileType;

      [Description ( 
          "Additional information when the DeviceFileType property "
          "is set to \"Other\"." ), 
       ModelCorrespondence { "CIM_UnixDeviceFile.DeviceFileType" }]
   string OtherTypeDescription;

      [Required, Description ( 
          "The device Identifier: this is the st_rdev field in the "
          "stat structure." )]
   string DeviceId;

      [Description ( 
          "Additional information provided by the driver. This "
          "property may be null if no information is available, or "
          "a general description of the device when available, e.g. "
          "\"Non-rewind tape streamer\"." )]
   string DeviceDescription;

      [Required, Description ( "The Device\'s Major Id." )]
   string DeviceMajor;

      [Required, Description ( "The Device\'s Minor Id." )]
   string DeviceMinor;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixDirectory 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "UnixDirectory is a type of File that logically groups "
       "UnixFiles \'contained\' in it." )]
class CIM_UnixDirectory : CIM_Directory {

      [Description ( 
          "Minimum number of bits needed to represent the maximum "
          "size of a Unix file allowed in the specified directory, "
          "as a signed integer value. Thus, a value of 32 indicates "
          "a maximum size of 2**31 bytes." ), 
       Units ( "Bits" ), 
       MinValue ( 32 ), 
       MappingStrings { "POSIX.TOG|pathconf|_PC_FILESIZEBITS" }]
   uint64 FileSizeBits;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_CertificateManagementCapabilities describes the "
       "capabilities of the associated "
       "CIM_CertificateManagementService instance(s)." )]
class CIM_CertificateManagementCapabilities : CIM_CredentialManagementCapabilities {

      [Override ( "SupportedMethods" ), 
       Description ( 
          "Each enumeration corresponds to support for the "
          "like-named method of the associated "
          "CIM_CertificateManagementService instance(s) for the "
          "exception of \"DeleteCredentialInstance\" that refers to "
          "the capability of executing delete operation on the "
          "instances of the CIM_Credential subclasses." ), 
       ValueMap { "2", "3", "4", "101", "102", "103", "104", "105", 
          "106", "107", "..", "0x8000.." }, 
       Values { "ImportPublicPrivateKeyPair", "CreateKeystore", 
          "DeleteCredentialInstance", 
          "CreatCertificateSigningRequest", 
          "CreateSelfSignedCertificate", 
          "ImportEncodedCertificates", "ImportCertificates", 
          "ExportEncodedCertificate", "ApplyCRL", "ApplyDecodedCRL", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 SupportedMethods[];

      [Description ( 
          "If the AsymmetricKeyGeneration is TRUE, this property "
          "specifies the possible key algorithms that are supported "
          "by the methods that generate public/private key pairs in "
          "the associated CIM_CertificateManagementService "
          "instance(s)." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "RSA", "DSA", "ECDSA", "DMTF Rserved", 
          "Vendor Reserved" }]
   uint16 KeyAlgorithmSupported[];

      [Description ( 
          "The InputFormatsSupported represents the supported input "
          "formats for the certificate(s) and Certificate "
          "Revocation List by the methods in the associated "
          "CIM_CertificateManagementService instance(s)." ), 
       ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "DER", "PEM", "PKCS7", "PKCS12", "DMTF Rserved", 
          "Vendor Reserved" }]
   uint16 InputFormatsSupported[];

      [Description ( 
          "The OutputFormatsSupported represents the supported "
          "output formats for the certificate(s) and Certificate "
          "Revocation List by the methods in the associated "
          "CIM_CertificateManagementService instance(s)." ), 
       ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "DER", "PEM", "PKCS7", "PKCS12", "DMTF Rserved", 
          "Vendor Reserved" }]
   uint16 OutputFormatsSupported[];

      [Description ( 
          "AsymmetricKeyGeneration property represents the "
          "capability of the instrumentation to generate asymmetric "
          "public/private key pair." )]
   boolean AsymmetricKeyGeneration;

      [Description ( 
          "The SupportedSignatureAlgorithms represents the "
          "supported signature algorithms for the certificate(s) "
          "and Certificate Revocation List by the methods in the "
          "associated CIM_CertificateManagementService instance(s). "
          "This property covers the algorithms specified in the "
          "RFC3279." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "1920..32767", "32768..65535" }, 
       Values { "Other", "SHA1withDSA", "SHA1withECDSA", 
          "SHA224withECDSA", "SHA256withECDSA", "SHA384withECDSA", 
          "SHA512withECDSA", "GOST3411withGOST3410", 
          "GOST3411withECGOST3410", "MD2withRSA", "MD5withRSA", 
          "SHA1withRSA", "SHA224withRSA", "SHA256withRSA", 
          "SHA384withRSA", "SHA512withRSA", "RIPEMD160withRSA", 
          "RIPEMD128withRSA", "RIPEMD256withRSA", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 SupportedSignatureAlgorithms[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MoreOrganizationInfo 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_MoreOrganizationInfo is an association used to extend the "
       "information in a CIM_Organization class instance." )]
class CIM_MoreOrganizationInfo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Organization which has more information." )]
   CIM_Organization REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "Additional data concerning the Organization." )]
   CIM_OtherOrganizationInformation REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MoreRoleInfo 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::User::Role" ), 
    Description ( 
       "CIM_MoreRoleInfo is an association used to extend the "
       "information in a CIM_Role class instance." )]
class CIM_MoreRoleInfo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Role which has more information." )]
   CIM_Role REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "Additional data concerning the Role." )]
   CIM_OtherRoleInformation REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Person 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "The Person class is used to represent people, and holds their "
       "white and yellow pages data. The class is defined so as to "
       "incorporate commonly-used LDAP attributes to permit "
       "implementations to easily derive this information from "
       "LDAP-accessible directories. This class\'s properties are a "
       "subset of a related class, OtherPersonInformation, which "
       "defines all the group properties and in array form for "
       "directory compatibility." )]
class CIM_Person : CIM_UserContact {

      [Description ( 
          "This property describes the kind of business performed "
          "by an organization." ), 
       MaxLen ( 128 )]
   string BusinessCategory;

      [Required, Description ( 
          "A CommonName is a (possibly ambiguous) name by which the "
          "Person is commonly known in some limited scope (such as "
          "an organization) and conforms to the naming conventions "
          "of the country or culture with which it is associated." )]
   string CommonName;

      [Description ( 
          "Based on inetOrgPerson, the EmployeeNumber property "
          "specifies a numeric or an alphanumeric identifier "
          "assigned to a person." )]
   string EmployeeNumber;

      [Description ( 
          "Based on inetOrgPerson, the EmployeeType property is "
          "used to identify the employer to employee relationship. "
          "Typical values used may include \'Contractor\', "
          "\'Employee\', \'Intern\', \'Temp\', \'External\', and "
          "\'Unknown\' but any value may be used." )]
   string EmployeeType;

      [Description ( "The person\'s facsimile telephone number." )]
   string FacsimileTelephoneNumber;

      [Description ( 
          "Based on RFC1274, the HomePhone property specifies a "
          "home telephone number for the person, e.g. + 44 582 "
          "10101)." ), 
       MaxLen ( 32 )]
   string HomePhone;

      [Description ( 
          "The HomePostalAddress property values specify the home "
          "address information required for the physical delivery "
          "of postal messages by the postal authority." )]
   string HomePostalAddress[];

      [Description ( 
          "From inetOrgPerson, the JPEGPhoto property values may be "
          "used for one or more images of a person using the JPEG "
          "File Interchange Format." )]
   string JPEGPhoto;

      [Description ( 
          "The person\'s manager within the organization. In the "
          "case of an LDAP-derived instance, the Manager property "
          "value may contain the distinguished name of the Manager." )]
   string Manager;

      [Description ( 
          "Based on RFC1274, the Mobile phone property specifies a "
          "mobile telephone number for the person, e.g. + 44 582 "
          "10101)." ), 
       MaxLen ( 32 )]
   string Mobile;

      [Description ( 
          "The name of an organizational unit related to the person." )]
   string OU;

      [Description ( 
          "Based on RFC1274, the Pager property specifies a pager "
          "telephone number for the person, e.g. + 44 582 10101)." ), 
       MaxLen ( 32 )]
   string Pager;

      [Description ( 
          "Based on inetOrgPerson, the person\'s preferred written "
          "or spoken language." )]
   string PreferredLanguage;

      [Description ( 
          "Based on RFC1274, the Secretary property may be used to "
          "specify a secretary for the person. In the case of an "
          "LDAP-derived object instance, the value may be a "
          "distinguished name." )]
   string Secretary;

      [Description ( 
          "The Title property may be used to specify the person\'s "
          "designated position or function of the object within an "
          "organization, e.g., Manager, Vice-President, etc." )]
   string Title;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PublicPrivateKeyPair 
// ==================================================================
   [Association, Deprecated { "CIM_AuthenticationCondition" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "This relationship associates a PublicKeyCertificate with the "
       "Principal who has the PrivateKey used with the PublicKey. The "
       "PrivateKey is not modeled, since it is not a data element that "
       "ever SHOULD be accessible via management applications, other "
       "than key recovery services, which are outside our scope. \n"
       "\n"
       "Since the UsersAccess class and this association\'s superclass "
       "are deprecated, this association is also deprecated. There is "
       "no need to have a special subclass for public-private "
       "credentials. This is especially true since the properties of "
       "the association describe aspects of the certificate and its "
       "handling. The latter is currently out of scope for the model." )]
class CIM_PublicPrivateKeyPair : CIM_UsersCredential {

      [Deprecated { "CIM_AuthenticationCondition" }, 
       Override ( "Antecedent" ), 
       Description ( "The public key certificate." )]
   CIM_PublicKeyCertificate REF Antecedent;

      [Deprecated { "CIM_Identity" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The Principal holding the private key (that corresponds "
          "to the public key." )]
   CIM_UsersAccess REF Dependent;

      [Deprecated { "No value" }, 
       Description ( 
          "The Certificate may be used for signature only or for "
          "confidentiality as well as signature." ), 
       ValueMap { "0", "1" }, 
       Values { "SignOnly", "ConfidentialityOrSignature" }]
   uint16 Use;

      [Deprecated { "No value" }, 
       Description ( 
          "Indicates if the certificate canNOT be repudiated." )]
   boolean NonRepudiation;

      [Deprecated { "No value" }, 
       Description ( 
          "Indicates if the certificate can be backed up." )]
   boolean BackedUp;

      [Deprecated { "No value" }, 
       Description ( 
          "The repository in which the certificate is backed up." )]
   string Repository;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AGPSoftwareFeature 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "AGPSoftwareFeature adds two attributes to SoftwareFeature to "
       "represent the capabilities of an AGP device driver. An "
       "instance of this class would be associated with the Driver\'s "
       "SoftwareElement using the SoftwareFeatureSoftware Elements "
       "relationship. The driver\'s SoftwareElement is associated with "
       "the AGPVideoController via the Device Software relationship." )]
class CIM_AGPSoftwareFeature : CIM_SoftwareFeature {

      [Description ( 
          "An array of integers indicating various capabilities and "
          "characteristics of the AGPVideoController." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "OS support", 
          "Hardware Acceleration", "Hardware Blit", 
          "OpenGL Support", "Cache Coherency" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AGPSoftwareFeature.CharacteristicDescriptions" }]
   uint16 Characteristics[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the features indicated in the "
          "Characteristics array. Each entry in this array is "
          "related to the Characteristics array entry located at "
          "the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_AGPSoftwareFeature.Characteristics" }]
   string CharacteristicDescriptions[];


};

// Copyright (c) 2007 DMTF.  All Rights Reserved.
   [Version ( "2.17.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "BIOSElement represents the low-level software that is loaded "
       "into non-volatile storage and used to bring up and configure a "
       "ComputerSystem." )]
class CIM_BIOSElement : CIM_SoftwareElement {

      [Override ( "Version" ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.3" }]
   string Version;

      [Override ( "Manufacturer" ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.2" }]
   string Manufacturer;

      [Description ( 
          "If true, this is the primary BIOS of the ComputerSystem." ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.9" }]
   boolean PrimaryBIOS;

      [Description ( 
          "A list of installable languages for the BIOS. This "
          "information can be obtained from SMBIOS, from the string "
          "list that follows the Type 13 structure. An ISO 639 "
          "Language Name should be used to specify the BIOS\' "
          "installable languages. The ISO 3166 Territory Name and "
          "the encoding method may also be specified, following the "
          "Language Name." )]
   string ListOfLanguages[];

      [Description ( 
          "The currently selected language for the BIOS. This "
          "information can be obtained from SMBIOS, using the "
          "Current Language attribute of the Type 13 structure, to "
          "index into the string list following the structure. The "
          "property is formatted using the ISO 639 Language Name, "
          "and may be followed by the ISO 3166 Territory Name and "
          "the encoding method." ), 
       ModelCorrespondence { "CIM_BIOSElement.ListOfLanguages" }]
   string CurrentLanguage;

      [Description ( 
          "The starting address of the memory which this BIOS occupies."
           ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.5" }]
   uint64 LoadedStartingAddress;

      [Description ( 
          "The ending address of the memory which this BIOS occupies."
           ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.6" }]
   uint64 LoadedEndingAddress;

      [Description ( 
          "A free form string describing the BIOS flash/load "
          "utility that is required to update the BIOSElement. "
          "Version and other information may be indicated in this "
          "property." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.7" }]
   string LoadUtilityInformation;

      [Description ( "Date that this BIOS was released." ), 
       MappingStrings { "MIF.DMTF|System BIOS|001.8" }]
   datetime ReleaseDate;

      [Description ( 
          "A string representing the publication location of the "
          "BIOS Attribute registry or registries the implementation "
          "complies to." )]
   string RegistryURIs[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BIOSFeature 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "BIOSFeature represents the capabilities of the low-level "
       "software that is used to bring up and configure a Computer "
       "System." )]
class CIM_BIOSFeature : CIM_SoftwareFeature {

      [Description ( 
          "An array of integers that specify the features supported "
          "by the BIOS. For example, one can specify that PnP "
          "capabilities are provided (value=9) or that infrared "
          "devices are supported (21). Values specified in the "
          "enumeration are taken from both DMI and SMBIOS (the Type "
          "0 structure, the BIOS Characteristics and BIOS "
          "Characteristics Extension Bytes attributes." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "160" }, 
       Values { "Other", "Unknown", "Undefined", "ISA Support", 
          "MCA Support", "EISA Support", "PCI Support", 
          "PCMCIA Support", "PnP Support", "APM Support", 
          "Upgradeable BIOS", "BIOS Shadowing Allowed", 
          "VL VESA Support", "ESCD Support", "LS-120 Boot Support", 
          "ACPI Support", "I2O Boot Support", "USB Legacy Support", 
          "AGP Support", "PC Card", "IR", "1394", "I2C", 
          "Smart Battery", "ATAPI ZIP Drive Boot Support", 
          "1394 Boot Support", "Boot from CD", "Selectable Boot", 
          "BIOS ROM is Socketed", "Boot from PCMCIA", 
          "EDD Specification Support", "PC-98" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|BIOS Characteristic|004.3" }, 
       ModelCorrespondence { 
          "CIM_BIOSFeature.CharacteristicDescriptions" }]
   uint16 Characteristics[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the BIOS features indicated in "
          "the Characteristics array. Note, each entry of this "
          "array is related to the entry in the Characteristics "
          "array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|BIOS Characteristic|004.4" }, 
       ModelCorrespondence { "CIM_BIOSFeature.Characteristics" }]
   string CharacteristicDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BIOSFeatureBIOSElements 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "A link between BIOSFeature and its aggregated BIOSElements." )]
class CIM_BIOSFeatureBIOSElements : CIM_SoftwareFeatureSoftwareElements {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The BIOSFeature." )]
   CIM_BIOSFeature REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The BIOSElement that implements the capabilities "
          "described by BIOSFeature." )]
   CIM_BIOSElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectedSoftwareElements 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::InstalledProduct" ), 
    Description ( 
       "CollectedSoftwareElements defines the SoftwareElements that "
       "are collected by InstalledProduct (ie, the installed image of "
       "a Product)." )]
class CIM_CollectedSoftwareElements : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Description ( 
          "The collection representing the installed image of a Product."
           )]
   CIM_InstalledProduct REF Collection;

      [Override ( "Member" ), 
       Description ( 
          "A SoftwareElement that is a member of the "
          "InstalledProduct collection." )]
   CIM_SoftwareElement REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectedSoftwareFeatures 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::InstalledProduct" ), 
    Description ( 
       "CollectedSoftwareFeatures defines the SoftwareFeatures that "
       "are collected by InstalledProduct (ie, the installed image of "
       "a Product)." )]
class CIM_CollectedSoftwareFeatures : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Description ( 
          "The collection representing the installed image of a Product."
           )]
   CIM_InstalledProduct REF Collection;

      [Override ( "Member" ), 
       Description ( 
          "The SoftwareFeature that is a member of the "
          "InstalledProduct collection." )]
   CIM_SoftwareFeature REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FRUIncludesSoftwareFeature 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The FRUIncludesSoftwareFeature association identifies the "
       "SoftwareFeature(s) packaged with a particular FRU. A common "
       "usage is to determine whether the FRU is compatible with a "
       "hardware/software platform. In order to determine this, the "
       "following conditions need to be verified: \n"
       "(1) Is the physical package of the FRU compatible with the "
       "slots or equivalent packaging of the hardware? \n"
       "(2) Are there any physical constraints (such as power "
       "consumption) that prevent the FRU from being installed? \n"
       "(3) Are the SoftwareFeatures packaged with the FRU compatiable "
       "with the underlying operating system and other software "
       "already installed/to be installed on the platform? \n"
       "This latter question can be answered by first checking if an "
       "instance of FRUIncludesSoftwareFeature exists. If it does, "
       "then the compatibility of each SoftwareFeature can be "
       "determined by evaluating the Check classes for the Software "
       "Elements that are part of the Feature (found by traversing the "
       "association, SoftwareFeatureSoftwareElements). For example, "
       "there might be a SoftwareElementVersionCheck that declares "
       "that a SoftwareElement (of the FRU\'s Software Feature) is not "
       "compatible with current software." )]
class CIM_FRUIncludesSoftwareFeature {

      [Key, Aggregate, Max ( 1 ), 
       Description ( "The field replaceable unit." )]
   CIM_FRU REF FRU;

      [Key, Description ( 
          "The SoftwareFeature which is included in the FRU and "
          "whose SoftwareElements should be evaluated." )]
   CIM_SoftwareFeature REF Component;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeConnectionPoolStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The J2eeConnectionPoolStats class defines the performance "
       "statistics that are provided by a connection pool. JCA and "
       "JDBC connection pool statistics are represented by this class. "
       "The semantics are determined by the class to which the "
       "ConnectionStats instance is associated via the "
       "CIM_ElementStatisticalData association." )]
class CIM_J2eeConnectionPoolStats : CIM_J2eeConnectionStats {

      [Description ( "The number of connections closed." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.20.1.1 getCloseCount|V1.0" }]
   uint64 CloseCount;

      [Description ( "The number of connections created." ), 
       Counter, MappingStrings { 
          "JSR77.JCP|JSR77.6.20.1.2 getCreateCount|V1.0" }]
   uint64 CreateCount;

      [Description ( "The number of free connections in the pool." ), 
       Gauge, MappingStrings { 
          "JSR77.JCP|JSR77.6.20.1.3 getFreePoolSize|V1.0" }]
   uint64 FreePoolSize;

      [Description ( 
          "The upper limit for the number of free connections in the pool."
           ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.1 getUpperBound|V1.0" }]
   uint64 FreePoolSizeUpperBound;

      [Description ( 
          "The lower limit for the number of free connections in the pool."
           ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.2 getLowerBound|V1.0" }]
   uint64 FreePoolSizeLowerBound;

      [Description ( 
          "The lowest number of free connections in the pool since "
          "the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 FreePoolSizeLowWaterMark;

      [Description ( 
          "The highest number of free connections in the pool since "
          "the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 FreePoolSizeHighWaterMark;

      [Description ( "The size of the connection pool." ), 
       Gauge, MappingStrings { 
          "JSR77.JCP|JSR77.6.20.1.4 getPoolSize|V1.0" }]
   uint64 PoolSize;

      [Description ( 
          "The upper limit for the size of the connection pool." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.1 getUpperBound|V1.0" }]
   uint64 PoolSizeUpperBound;

      [Description ( 
          "The lower limit for the size of the connection pool." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.2 getLowerBound|V1.0" }]
   uint64 PoolSizeLowerBound;

      [Description ( 
          "The lowest size of the connection pool since the "
          "beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 PoolSizeLowWaterMark;

      [Description ( 
          "The largest size of the connection pool since the "
          "beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 PoolSizeHighWaterMark;

      [Description ( 
          "The number of threads waiting for a connection." ), 
       Gauge, MappingStrings { 
          "JSR77.JCP|JSR77.6.20.1.5 getWaitingThreadCount|V1.0" }]
   uint64 WaitingThreadCount;

      [Description ( 
          "The upper limit for the number of threads waiting for a "
          "connection." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.1 getUpperBound|V1.0" }]
   uint64 WaitingThreadCountUpperBound;

      [Description ( 
          "The lower limit for the number of threads waiting for a "
          "connection." ), 
       MappingStrings { "JSR77.JCP|JSR77.6.8.1.2 getLowerBound|V1.0" }]
   uint64 WaitingThreadCountLowerBound;

      [Description ( 
          "The lowest number of threads waiting for a connection "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.2 getLowWaterMark|V1.0" }]
   uint64 WaitingThreadCountLowWaterMark;

      [Description ( 
          "The highest number of threads waiting for a connection "
          "since the beginning of the measurement." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.6.7.1.1 getHighWaterMark|V1.0" }]
   uint64 WaitingThreadCountHighWaterMark;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJCAConnectionPools 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJCAConnectionPools provides the list of statistics "
       "about the connections pools that are associated with the "
       "referencing JCA resource statistics." )]
class CIM_J2eeJCAConnectionPools : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Description ( "The JCA resource statistic." )]
   CIM_J2eeJCAStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JCA connection pool statistics." )]
   CIM_J2eeConnectionPoolStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJCANonpooledConnections 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJCANonpooledConnections provides the list of "
       "statistics for the non-connections pools that are associated "
       "with the referencing JCA resource statistics." )]
class CIM_J2eeJCANonpooledConnections : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Description ( "The JCA resource statistic." )]
   CIM_J2eeJCAStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JCA connection statistics." )]
   CIM_J2eeConnectionStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJDBCConnectionPools 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJDBCConnectionPools provides the list of statistics "
       "about the connections pools that are associated with the "
       "referencing JDBC resource statistics." )]
class CIM_J2eeJDBCConnectionPools : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Description ( "The JDBC resource statistic." )]
   CIM_J2eeJDBCStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JDBC connection pool statistics." )]
   CIM_J2eeConnectionPoolStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJDBCNonpooledConnections 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJDBCNonpooledConnections provides the list of "
       "statistics for the non-connections pools that are associated "
       "with the referencing JDBC resource statistics." )]
class CIM_J2eeJDBCNonpooledConnections : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Description ( "The JDBC resource statistic." )]
   CIM_J2eeJDBCStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JDBC connection statistics." )]
   CIM_J2eeConnectionStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSConnectionSessions 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJMSConnectionSessions identifies the JMS session "
       "statistics that are associated with the referencing JMS "
       "connection statistics." )]
class CIM_J2eeJMSConnectionSessions : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Min ( 1 ), 
       Description ( "The JMS connection statistic." )]
   CIM_J2eeJMSConnectionStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JMS session statistics." )]
   CIM_J2eeJMSSessionStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSConsumerStats 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "The CIM_J2eeJMSConsumerStats class defines the performance "
       "statistics that are provided by a JMS message consumer." )]
class CIM_J2eeJMSConsumerStats : CIM_J2eeJMSEndpointStats {

      [Description ( 
          "A string that encapsulates the identity of the message origin."
           ), 
       MappingStrings { "JSR77.JCP|JSR77.6.29.1.1 getOrigin|V1.0" }]
   string Origin;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSSessionConsumers 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJMSSessionConsumers identifies the JMS consumer "
       "statistics that are associated with the referencing JMS "
       "session statistics." )]
class CIM_J2eeJMSSessionConsumers : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Min ( 1 ), 
       Description ( "The JMS session statistic." )]
   CIM_J2eeJMSSessionStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JMS consumer statistics." )]
   CIM_J2eeJMSConsumerStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSSessionProducers 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJMSSessionProducers identifies the JMS producer "
       "statistics that are associated with the referencing JMS "
       "session statistics." )]
class CIM_J2eeJMSSessionProducers : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Min ( 1 ), 
       Description ( "The JMS session statistic." )]
   CIM_J2eeJMSSessionStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JMS producer statistics." )]
   CIM_J2eeJMSProducerStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSStatConnections 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServerStats" ), 
    Description ( 
       "CIM_J2eeJMSStatConnections provides the list of JMS connection "
       "statistics that are associated with the referencing JMS "
       "resource statistics." )]
class CIM_J2eeJMSStatConnections : CIM_RelatedStatisticalData {

      [Override ( "Stats" ), 
       Min ( 1 ), 
       Description ( "The JMS resource statistic." )]
   CIM_J2eeJMSStats REF Stats;

      [Override ( "RelatedStats" ), 
       Description ( "The related JMS connection statistics." )]
   CIM_J2eeJMSConnectionStats REF RelatedStats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductSoftwareFeatures 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The ProductSoftwareFeatures association identifies the "
       "SoftwareFeatures for a particular Product." )]
class CIM_ProductSoftwareFeatures {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Product that scopes the SoftwareFeatures." )]
   CIM_Product REF Product;

      [Key, Weak, Description ( "The SoftwareFeature in a Product." )]
   CIM_SoftwareFeature REF Component;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "A concrete version of Job. This class represents a generic and "
       "instantiable unit of work, such as a batch or a print job." )]
class CIM_ConcreteJob : CIM_Job {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> must include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "InstanceID, or that is a registered ID that is assigned "
          "to the business entity by a recognized global authority. "
          "(This requirement is similar to the <Schema Name>_<Class "
          "Name> structure of Schema class names.) In addition, to "
          "ensure uniqueness <OrgID> must not contain a colon "
          "(\':\'). When using this algorithm, the first colon to "
          "appear in InstanceID must appear between <OrgID> and "
          "<LocalID>. \n"
          "<LocalID> is chosen by the business entity and should "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity must assure "
          "that the resulting InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for the "
          "NameSpace of this instance. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "must be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Override ( "Name" ), 
       Description ( 
          "The user-friendly name for this instance of a Job. In "
          "addition, the user-friendly name can be used as a "
          "property for a search or query. (Note: Name does not "
          "have to be unique within a namespace.)" )]
   string Name;

      [Description ( 
          "JobState is an integer enumeration that indicates the "
          "operational state of a Job. It can also indicate "
          "transitions between these states, for example, \'Shutting "
          "Down\' and \'Starting\'. Following is a brief "
          "description of the states: \n"
          "New (2) indicates that the job has never been started. \n"
          "Starting (3) indicates that the job is moving from the "
          "\'New\', \'Suspended\', or \'Service\' states into the "
          "\'Running\' state. \n"
          "Running (4) indicates that the Job is running. \n"
          "Suspended (5) indicates that the Job is stopped, but can "
          "be restarted in a seamless manner. \n"
          "Shutting Down (6) indicates that the job is moving to a "
          "\'Completed\', \'Terminated\', or \'Killed\' state. \n"
          "Completed (7) indicates that the job has completed "
          "normally. \n"
          "Terminated (8) indicates that the job has been stopped "
          "by a \'Terminate\' state change request. The job and all "
          "its underlying processes are ended and can be restarted "
          "(this is job-specific) only as a new job. \n"
          "Killed (9) indicates that the job has been stopped by a "
          "\'Kill\' state change request. Underlying processes "
          "might have been left running, and cleanup might be "
          "required to free up resources. \n"
          "Exception (10) indicates that the Job is in an abnormal "
          "state that might be indicative of an error condition. "
          "Actual status might be displayed though job-specific "
          "objects. \n"
          "Service (11) indicates that the Job is in a "
          "vendor-specific state that supports problem discovery, "
          "or resolution, or both.\n"
          "Query pending (12) waiting for a client to resolve a "
          "query" ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13..32767", "32768..65535" }, 
       Values { "New", "Starting", "Running", "Suspended", 
          "Shutting Down", "Completed", "Terminated", "Killed", 
          "Exception", "Service", "Query Pending", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 JobState;

      [Description ( 
          "The date or time when the state of the Job last changed. "
          "If the state of the Job has not changed and this "
          "property is populated, then it must be set to a 0 "
          "interval value. If a state change was requested, but "
          "rejected or not yet processed, the property must not be "
          "updated." )]
   datetime TimeOfLastStateChange;

      [Required, Write, SubType("interval"), Description ( 
          "The amount of time that the Job is retained after it has "
          "finished executing, either succeeding or failing in that "
          "execution. The job must remain in existence for some "
          "period of time regardless of the value of the "
          "DeleteOnCompletion property. \n"
          "The default is five minutes." )]
   datetime TimeBeforeRemoval = "00000000000500.000000:000";


      [Description ( 
          "Requests that the state of the job be changed to the "
          "value specified in the RequestedState parameter. "
          "Invoking the RequestStateChange method multiple times "
          "could result in earlier requests being overwritten or "
          "lost. \n"
          "If 0 is returned, then the task completed successfully. "
          "Any other return code indicates an error condition." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", 
          "Can NOT complete within Timeout Period", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Transition Started", 
          "Invalid State Transition", 
          "Use of Timeout Parameter Not Supported", "Busy", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RequestStateChange(
         [IN, Description ( 
             "RequestStateChange changes the state of a job. The "
             "possible values are as follows: \n"
             "Start (2) changes the state to \'Running\'. \n"
             "Suspend (3) stops the job temporarily. The "
             "intention is to subsequently restart the job with "
             "\'Start\'. It might be possible to enter the "
             "\'Service\' state while suspended. (This is "
             "job-specific.) \n"
             "Terminate (4) stops the job cleanly, saving data, "
             "preserving the state, and shutting down all "
             "underlying processes in an orderly manner. \n"
             "Kill (5) terminates the job immediately with no "
             "requirement to save data or preserve the state. \n"
             "Service (6) puts the job into a vendor-specific "
             "service state. It might be possible to restart the "
             "job." ), 
          ValueMap { "2", "3", "4", "5", "6", "7..32767", 
             "32768..65535" }, 
          Values { "Start", "Suspend", "Terminate", "Kill", 
             "Service", "DMTF Reserved", "Vendor Reserved" }]
      uint16 RequestedState, 
         [IN, Description ( 
             "A timeout period that specifies the maximum amount "
             "of time that the client expects the transition to "
             "the new state to take. The interval format must be "
             "used to specify the TimeoutPeriod. A value of 0 or "
             "a null parameter indicates that the client has no "
             "time requirements for the transition. \n"
             "If this property does not contain 0 or null and "
             "the implementation does not support this "
             "parameter, a return code of \'Use Of Timeout "
             "Parameter Not Supported\' must be returned." )]
      datetime TimeoutPeriod);

      [Description ( 
          "When the job is executing or has terminated without "
          "error, then this method returns no CIM_Error instance. "
          "However, if the job has failed because of some internal "
          "problem or because the job has been terminated by a "
          "client, then a CIM_Error instance is returned." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access Denied", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 GetError(
         [OUT, Description ( 
             "If the OperationalStatus on the Job is not \"OK\", "
             "then this method will return a CIM Error instance. "
             "Otherwise, when the Job is \"OK\", null is "
             "returned." ), 
          EmbeddedInstance ( "CIM_Error" )]
      string Error);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DefaultSetting
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "DefaultSetting represents the association between a "
       "ManagedSystemElement and the single Setting class that is "
       "defined to be the default setting for this Element." )]
class CIM_DefaultSetting : CIM_ElementSetting {

      [Override ( "Setting" ), 
       Max ( 1 ), 
       Description ( "The Setting object that is the default." )]
   CIM_Setting REF Setting;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Abstract, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "This class extends LogicalElement to abstract the concept of "
       "an element that is enabled and disabled, such as a "
       "LogicalDevice or a ServiceAccessPoint." )]
class CIM_EnabledLogicalElement : CIM_LogicalElement {

      [Description ( 
          "EnabledState is an integer enumeration that indicates "
          "the enabled and disabled states of an element. It can "
          "also indicate the transitions between these requested "
          "states. For example, shutting down (value=4) and "
          "starting (value=10) are transient states between enabled "
          "and disabled. The following text briefly summarizes the "
          "various enabled and disabled states: \n"
          "Enabled (2) indicates that the element is or could be "
          "executing commands, will process any queued commands, "
          "and queues new requests. \n"
          "Disabled (3) indicates that the element will not execute "
          "commands and will drop any new requests. \n"
          "Shutting Down (4) indicates that the element is in the "
          "process of going to a Disabled state. \n"
          "Not Applicable (5) indicates the element does not "
          "support being enabled or disabled. \n"
          "Enabled but Offline (6) indicates that the element might "
          "be completing commands, and will drop any new requests. \n"
          "Test (7) indicates that the element is in a test state. \n"
          "Deferred (8) indicates that the element might be "
          "completing commands, but will queue any new requests. \n"
          "Quiesce (9) indicates that the element is enabled but in "
          "a restricted mode.\n"
          "Starting (10) indicates that the element is in the "
          "process of going to an Enabled state. New requests are "
          "queued." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Enabled", "Disabled", 
          "Shutting Down", "Not Applicable", "Enabled but Offline", 
          "In Test", "Deferred", "Quiesce", "Starting", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.OtherEnabledState" }]
   uint16 EnabledState = 5;

      [Description ( 
          "A string that describes the enabled or disabled state of "
          "the element when the EnabledState property is set to 1 "
          "(\"Other\"). This property must be set to null when "
          "EnabledState is any value other than 1." ), 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   string OtherEnabledState;

      [Description ( 
          "RequestedState is an integer enumeration that indicates "
          "the last requested or desired state for the element, "
          "irrespective of the mechanism through which it was "
          "requested. The actual state of the element is "
          "represented by EnabledState. This property is provided "
          "to compare the last requested and current enabled or "
          "disabled states. Note that when EnabledState is set to 5 "
          "(\"Not Applicable\"), then this property has no meaning. "
          "Refer to the EnabledState property description for "
          "explanations of the values in the RequestedState "
          "enumeration. \n"
          "\"Unknown\" (0) indicates the last requested state for "
          "the element is unknown.\n"
          "Note that the value \"No Change\" (5) has been "
          "deprecated in lieu of indicating the last requested "
          "state is \"Unknown\" (0). If the last requested or "
          "desired state is unknown, RequestedState should have the "
          "value \"Unknown\" (0), but may have the value \"No "
          "Change\" (5).Offline (6) indicates that the element has "
          "been requested to transition to the Enabled but Offline "
          "EnabledState. \n"
          "It should be noted that there are two new values in "
          "RequestedState that build on the statuses of "
          "EnabledState. These are \"Reboot\" (10) and \"Reset\" "
          "(11). Reboot refers to doing a \"Shut Down\" and then "
          "moving to an \"Enabled\" state. Reset indicates that the "
          "element is first \"Disabled\" and then \"Enabled\". The "
          "distinction between requesting \"Shut Down\" and "
          "\"Disabled\" should also be noted. Shut Down requests an "
          "orderly transition to the Disabled state, and might "
          "involve removing power, to completely erase any existing "
          "state. The Disabled state requests an immediate "
          "disabling of the element, such that it will not execute "
          "or accept any commands or processing requests. \n"
          "\n"
          "This property is set as the result of a method "
          "invocation (such as Start or StopService on "
          "CIM_Service), or can be overridden and defined as "
          "WRITEable in a subclass. The method approach is "
          "considered superior to a WRITEable property, because it "
          "allows an explicit invocation of the operation and the "
          "return of a result code. \n"
          "\n"
          "If knowledge of the last RequestedState is not supported "
          "for the EnabledLogicalElement, the property shall be "
          "NULL or have the value 12 \"Not Applicable\"." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "..", "32768..65535" }, 
       Values { "Unknown", "Enabled", "Disabled", "Shut Down", 
          "No Change", "Offline", "Test", "Deferred", "Quiesce", 
          "Reboot", "Reset", "Not Applicable", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 RequestedState = 12;

      [Write, Description ( 
          "An enumerated value indicating an administrator\'s "
          "default or startup configuration for the Enabled State "
          "of an element. By default, the element is \"Enabled\" "
          "(value=2)." ), 
       ValueMap { "2", "3", "5", "6", "7", "9", "..", "32768..65535" }, 
       Values { "Enabled", "Disabled", "Not Applicable", 
          "Enabled but Offline", "No Default", "Quiesce", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 EnabledDefault = 2;

      [Description ( 
          "The date or time when the EnabledState of the element "
          "last changed. If the state of the element has not "
          "changed and this property is populated, then it must be "
          "set to a 0 interval value. If a state change was "
          "requested, but rejected or not yet processed, the "
          "property must not be updated." )]
   datetime TimeOfLastStateChange;

      [Description ( 
          "AvailableRequestedStates indicates the possible values "
          "for the RequestedState parameter of the method "
          "RequestStateChange, used to initiate a state change. The "
          "values listed shall be a subset of the values contained "
          "in the RequestedStatesSupported property of the "
          "associated instance of "
          "CIM_EnabledLogicalElementCapabilities where the values "
          "selected are a function of the current state of the "
          "CIM_EnabledLogicalElement. This property may be non-null "
          "if an implementation is able to advertise the set of "
          "possible values as a function of the current state. This "
          "property shall be null if an implementation is unable to "
          "determine the set of possible values as a function of "
          "the current state." ), 
       ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", "11", ".." }, 
       Values { "Enabled", "Disabled", "Shut Down", "Offline", 
          "Test", "Defer", "Quiesce", "Reboot", "Reset", 
          "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange", 
          "CIM_EnabledLogicalElementCapabilities.RequestedStatesSupported" }]
   uint16 AvailableRequestedStates[];

      [Description ( 
          "TransitioningToState indicates the target state to which "
          "the instance is transitioning. \n"
          "A value of 5 \"No Change\" shall indicate that no "
          "transition is in progress.A value of 12 \"Not "
          "Applicable\" shall indicate the implementation does not "
          "support representing ongoing transitions. \n"
          "A value other than 5 or 12 shall identify the state to "
          "which the element is in the process of transitioning." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", ".." }, 
       Values { "Unknown", "Enabled", "Disabled", "Shut Down", 
          "No Change", "Offline", "Test", "Defer", "Quiesce", 
          "Reboot", "Reset", "Not Applicable", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestStateChange", 
          "CIM_EnabledLogicalElement.RequestedState", 
          "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 TransitioningToState = 12;


      [Description ( 
          "Requests that the state of the element be changed to the "
          "value specified in the RequestedState parameter. When "
          "the requested state change takes place, the EnabledState "
          "and RequestedState of the element will be the same. "
          "Invoking the RequestStateChange method multiple times "
          "could result in earlier requests being overwritten or "
          "lost. \n"
          "A return code of 0 shall indicate the state change was "
          "successfully initiated. \n"
          "A return code of 3 shall indicate that the state "
          "transition cannot complete within the interval specified "
          "by the TimeoutPeriod parameter. \n"
          "A return code of 4096 (0x1000) shall indicate the state "
          "change was successfully initiated, a ConcreteJob has "
          "been created, and its reference returned in the output "
          "parameter Job. Any other return code indicates an error "
          "condition." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", 
          "Cannot complete within Timeout Period", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Invalid State Transition", 
          "Use of Timeout Parameter Not Supported", "Busy", 
          "Method Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_EnabledLogicalElement.RequestedState" }]
   uint32 RequestStateChange(
         [IN, Description ( 
             "The state requested for the element. This "
             "information will be placed into the RequestedState "
             "property of the instance if the return code of the "
             "RequestStateChange method is 0 (\'Completed with "
             "No Error\'), or 4096 (0x1000) (\'Job Started\'). "
             "Refer to the description of the EnabledState and "
             "RequestedState properties for the detailed "
             "explanations of the RequestedState values." ), 
          ValueMap { "2", "3", "4", "6", "7", "8", "9", "10", 
             "11", "..", "32768..65535" }, 
          Values { "Enabled", "Disabled", "Shut Down", "Offline", 
             "Test", "Defer", "Quiesce", "Reboot", "Reset", 
             "DMTF Reserved", "Vendor Reserved" }, 
          ModelCorrespondence { 
             "CIM_EnabledLogicalElement.RequestedState" }]
      uint16 RequestedState, 
         [IN ( false ), OUT, Description ( 
             "May contain a reference to the ConcreteJob created "
             "to track the state transition initiated by the "
             "method invocation." )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "A timeout period that specifies the maximum amount "
             "of time that the client expects the transition to "
             "the new state to take. The interval format must be "
             "used to specify the TimeoutPeriod. A value of 0 or "
             "a null parameter indicates that the client has no "
             "time requirements for the transition. \n"
             "If this property does not contain 0 or null and "
             "the implementation does not support this "
             "parameter, a return code of \'Use Of Timeout "
             "Parameter Not Supported\' shall be returned." )]
      datetime TimeoutPeriod);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "The IsSpare association indicates an element that can spare or "
       "replace any of the elements in the referenced RedundancySet. "
       "If the \'spare\' is itself a Collection, this indicates that "
       "each of the \'spare\' members can replace any of the elements "
       "in the RedundancySet. In the case of a collection all of the "
       "values in the properties of this association MUST apply to all "
       "members of the Collection. \n"
       "If this is not true, then the Collection SHOULD be broken down "
       "into smaller sets (and the IsSpare association defined for "
       "each of these smaller sets), such that the properties of this "
       "association apply to all collected members." )]
class CIM_IsSpare : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "A ManagedElement or Collection of elements acting as a spare."
           )]
   CIM_ManagedElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The set of elements that ARE spared." )]
   CIM_RedundancySet REF Dependent;

      [Description ( 
          "Indicates the state of the \'spare\'. \n"
          "- Hot Standby. The element is available \'immediately\' "
          "to become a functioning member of the set. Such an "
          "element is powered on and has been initialized for it\'s "
          "role as a spare. \n"
          "- Cold Standby. The element is not available to join the "
          "set without action to prepare it." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Hot Standby", "Cold Standby" }]
   uint16 SpareStatus;

      [Description ( 
          "Indicates whether or not the failover to the spare is a "
          "manual or automatic action." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Automatic", "Manual", 
          "Both Manual and Automatic" }]
   uint16 FailoverSupported;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalDevice 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Core::Device" ), 
    Description ( 
       "An abstraction or emulation of a hardware entity, that may or "
       "may not be Realized in physical hardware. Any characteristics "
       "of a LogicalDevice that are used to manage its operation or "
       "configuration are contained in, or associated with, the "
       "LogicalDevice object. Examples of the operational properties "
       "of a Printer would be paper sizes supported, or detected "
       "errors. Examples of the configuration properties of a Sensor "
       "Device would be threshold settings. Various configurations "
       "could exist for a LogicalDevice. These configurations could be "
       "contained in Setting objects and associated with the "
       "LogicalDevice." )]
class CIM_LogicalDevice : CIM_EnabledLogicalElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "An address or other identifying information to uniquely "
          "name the LogicalDevice." ), 
       MaxLen ( 64 )]
   string DeviceID;

      [Deprecated { "CIM_PowerManagementCapabilities" }, 
       Description ( 
          "Boolean indicating that the Device can be power managed. "
          "The use of this property has been deprecated. Instead, "
          "the existence of an associated "
          "PowerManagementCapabilities class (associated using the "
          "ElementCapabilities relationhip) indicates that power "
          "management is supported." )]
   boolean PowerManagementSupported;

      [Deprecated { 
          "CIM_PowerManagementCapabilities.PowerCapabilities" }, 
       Description ( 
          "An enumerated array describing the power management "
          "capabilities of the Device. The use of this property has "
          "been deprecated. Instead, the PowerCapabilites property "
          "in an associated PowerManagementCapabilities class "
          "should be used." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Not Supported", "Disabled", "Enabled", 
          "Power Saving Modes Entered Automatically", 
          "Power State Settable", "Power Cycling Supported", 
          "Timed Power On Supported" }]
   uint16 PowerManagementCapabilities[];

      [Description ( 
          "The primary availability and status of the Device. "
          "(Additional status information can be specified using "
          "the Additional Availability array property.) For "
          "example, the Availability property indicates that the "
          "Device is running and has full power (value=3), or is in "
          "a warning (4), test (5), degraded (10) or power save "
          "state (values 13-15 and 17). Regarding the Power Save "
          "states, these are defined as follows: Value 13 (\"Power "
          "Save - Unknown\") indicates that the Device is known to "
          "be in a power save mode, but its exact status in this "
          "mode is unknown; 14 (\"Power Save - Low Power Mode\") "
          "indicates that the Device is in a power save state but "
          "still functioning, and may exhibit degraded performance; "
          "15 (\"Power Save - Standby\") describes that the Device "
          "is not functioning but could be brought to full power "
          "\'quickly\'; and value 17 (\"Power Save - Warning\") "
          "indicates that the Device is in a warning state, though "
          "also in a power save mode." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21" }, 
       Values { "Other", "Unknown", "Running/Full Power", "Warning", 
          "In Test", "Not Applicable", "Power Off", "Off Line", 
          "Off Duty", "Degraded", "Not Installed", "Install Error", 
          "Power Save - Unknown", "Power Save - Low Power Mode", 
          "Power Save - Standby", "Power Cycle", 
          "Power Save - Warning", "Paused", "Not Ready", 
          "Not Configured", "Quiesced" }, 
       MappingStrings { "MIF.DMTF|Operational State|006.5", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrDeviceStatus", 
          "MIF.DMTF|Host Device|001.5" }, 
       ModelCorrespondence { 
          "CIM_LogicalDevice.AdditionalAvailability" }]
   uint16 Availability;

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "The StatusInfo property indicates whether the Logical "
          "Device is in an enabled (value = 3), disabled (value = "
          "4) or some other (1) or unknown (2) state. If this "
          "property does not apply to the LogicalDevice, the value, "
          "5 (\"Not Applicable\"), should be used. StatusInfo has "
          "been deprecated in lieu of a more clearly named property "
          "with additional enumerated values (EnabledState), that "
          "is inherited from ManagedSystemElement. \n"
          "If a Device is (\"Enabled\")(value=3), it has been "
          "powered up, and is configured and operational. The "
          "Device may or may not be functionally active, depending "
          "on whether its Availability (or AdditionalAvailability) "
          "indicate that it is (\"Running/Full Power\")(value=3) or "
          "(\"Off line\") (value=8). In an enabled but offline "
          "mode, a Device may be performing out-of-band requests, "
          "such as running Diagnostics. If (\"Disabled\") "
          "StatusInfo value=4), a Device can only be \"enabled\" or "
          "powered off. In a personal computer environment, "
          "(\"Disabled\") means that the Device\'s driver is not "
          "available in the stack. In other environments, a Device "
          "can be disabled by removing its configuration file. A "
          "disabled device is physically present in a System and "
          "consuming resources, but can not be communicated with "
          "until a load of a driver, a load of a configuration file "
          "or some other \"enabling\" activity has occurred." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Enabled", "Disabled", 
          "Not Applicable" }, 
       MappingStrings { "MIF.DMTF|Operational State|006.4" }]
   uint16 StatusInfo;

      [Deprecated { "CIM_DeviceErrorData.LastErrorCode" }, 
       Description ( 
          "LastErrorCode captures the last error code reported by "
          "the LogicalDevice." )]
   uint32 LastErrorCode;

      [Deprecated { "CIM_DeviceErrorData.ErrorDescription" }, 
       Description ( 
          "ErrorDescription is a free-form string supplying more "
          "information about the error recorded in LastErrorCode, "
          "and information on any corrective actions that may be "
          "taken." )]
   string ErrorDescription;

      [Deprecated { "CIM_ManagedSystemElement.OperationalStatus" }, 
       Description ( 
          "ErrorCleared is a boolean property indicating that the "
          "error reported in LastErrorCode is now cleared." )]
   boolean ErrorCleared;

      [Description ( 
          "OtherIdentifyingInfo captures additional data, beyond "
          "DeviceID information, that could be used to identify a "
          "LogicalDevice. One example would be to hold the "
          "Operating System\'s user friendly name for the Device in "
          "this property." ), 
       ArrayType ( "Indexed" ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_LogicalDevice.IdentifyingDescriptions" }]
   string OtherIdentifyingInfo[];

      [Description ( 
          "The number of consecutive hours that this Device has "
          "been powered, since its last power cycle." ), 
       Units ( "Hours" ), 
       Counter]
   uint64 PowerOnHours;

      [Description ( 
          "The total number of hours that this Device has been powered."
           ), 
       Units ( "Hours" ), 
       Counter]
   uint64 TotalPowerOnHours;

      [Description ( 
          "An array of free-form strings providing explanations and "
          "details behind the entries in the OtherIdentifyingInfo "
          "array. Note, each entry of this array is related to the "
          "entry in OtherIdentifyingInfo that is located at the "
          "same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_LogicalDevice.OtherIdentifyingInfo" }]
   string IdentifyingDescriptions[];

      [Description ( 
          "Additional availability and status of the Device, beyond "
          "that specified in the Availability property. The "
          "Availability property denotes the primary status and "
          "availability of the Device. In some cases, this will not "
          "be sufficient to denote the complete status of the "
          "Device. In those cases, the AdditionalAvailability "
          "property can be used to provide further information. For "
          "example, a Device\'s primary Availability may be \"Off "
          "line\" (value=8), but it may also be in a low power "
          "state (AdditonalAvailability value=14), or the Device "
          "could be running Diagnostics (AdditionalAvailability "
          "value=5, \"In Test\")." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21" }, 
       Values { "Other", "Unknown", "Running/Full Power", "Warning", 
          "In Test", "Not Applicable", "Power Off", "Off Line", 
          "Off Duty", "Degraded", "Not Installed", "Install Error", 
          "Power Save - Unknown", "Power Save - Low Power Mode", 
          "Power Save - Standby", "Power Cycle", 
          "Power Save - Warning", "Paused", "Not Ready", 
          "Not Configured", "Quiesced" }, 
       ModelCorrespondence { "CIM_LogicalDevice.Availability" }]
   uint16 AdditionalAvailability[];

      [Deprecated { "No value" }, 
       Description ( 
          "The MaxQuiesceTime property has been deprecated. When "
          "evaluating the use of Quiesce, it was determine that "
          "this single property is not adequate for describing when "
          "a device will automatically exit a quiescent state. In "
          "fact, the most likely scenario for a device to exit a "
          "quiescent state was determined to be based on the number "
          "of outstanding requests queued rather than on a maximum "
          "time. This will be re-evaluated and repositioned later. \n"
          "Maximum time in milliseconds, that a Device can run in a "
          "\"Quiesced\" state. A Device\'s state is defined in its "
          "Availability and AdditionalAvailability properties, "
          "where \"Quiesced\" is conveyed by the value 21. What "
          "occurs at the end of the time limit is device-specific. "
          "The Device may unquiesce, may offline or take other "
          "action. A value of 0 indicates that a Device can remain "
          "quiesced indefinitely." ), 
       Units ( "MilliSeconds" )]
   uint64 MaxQuiesceTime;


      [Deprecated { "CIM_PowerManagementService.SetPowerState" }, 
       Description ( 
          "Sets the power state of the Device. The use of this "
          "method has been deprecated. Instead, use the "
          "SetPowerState method in the associated "
          "PowerManagementService class." )]
   uint32 SetPowerState(
         [IN, Description ( "The power state to set." ), 
          ValueMap { "1", "2", "3", "4", "5", "6" }, 
          Values { "Full Power", "Power Save - Low Power Mode", 
             "Power Save - Standby", "Power Save - Other", 
             "Power Cycle", "Power Off" }]
      uint16 PowerState, 
         [IN, Description ( 
             "Time indicates when the power state should be set, "
             "either as a regular date-time value or as an "
             "interval value (where the interval begins when the "
             "method invocation is received." )]
      datetime Time);

      [Description ( 
          "Requests a reset of the LogicalDevice. The return value "
          "should be 0 if the request was successfully executed, 1 "
          "if the request is not supported and some other value if "
          "an error occurred. In a subclass, the set of possible "
          "return codes could be specified, using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 Reset(
);

      [Deprecated { "CIM_EnabledLogicalElement.RequestStateChange" }, 
       Description ( 
          "The EnableDevice method has been deprecated in lieu of "
          "the more general RequestStateChange method that directly "
          "overlaps with the functionality provided by this method. \n"
          "Requests that the LogicalDevice be enabled (\"Enabled\" "
          "input parameter = TRUE) or disabled (= FALSE). If "
          "successful, the Device\'s StatusInfo/EnabledState "
          "properties should reflect the desired state "
          "(enabled/disabled). Note that this method\'s function "
          "overlaps with the RequestedState property. "
          "RequestedState was added to the model to maintain a "
          "record (i.e., a persisted value) of the last state "
          "request. Invoking the EnableDevice method should set the "
          "RequestedState property appropriately. \n"
          "The return code should be 0 if the request was "
          "successfully executed, 1 if the request is not supported "
          "and some other value if an error occurred. In a "
          "subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 EnableDevice(
         [IN, Description ( 
             "If TRUE enable the device, if FALSE disable the device."
              )]
      boolean Enabled);

      [Deprecated { "CIM_EnabledLogicalElement.RequestStateChange" }, 
       Description ( 
          "The OnlineDevice method has been deprecated in lieu of "
          "the more general RequestStateChange method that directly "
          "overlaps with the functionality provided by this method. \n"
          "Requests that the LogicalDevice be brought online "
          "(\"Online\" input parameter = TRUE) or taken offline (= "
          "FALSE). \"Online\" indicates that the Device is ready to "
          "accept requests, and is operational and fully "
          "functioning. In this case, the Device\'s Availability "
          "property would be set to a value of 3 (\"Running/Full "
          "Power\"). \"Offline\" indicates that a Device is powered "
          "up and operational, but not processing functional "
          "requests. In an offline state, a Device may be capable "
          "of running diagnostics or generating operational alerts. "
          "For example, when the \"Offline\" button is pushed on a "
          "Printer, the Device is no longer available to process "
          "print jobs, but could be available for diagnostics or "
          "maintenance. \n"
          "If this method is successful, the Device\'s Availability "
          "and AdditionalAvailability properties should reflect the "
          "updated status. If a failure occurs trying to bring the "
          "Device online or offline, it should remain in its "
          "current state. IE, the request, if unsuccessful, should "
          "not leave the Device in an indeterminate state. When "
          "bringing a Device back \"Online\", from an \"Offline\" "
          "mode, the Device should be restored to its last \"Online\" "
          "state, if at all possible. Only a Device that has an "
          "EnabledState/StatusInfo of \"Enabled\" and has been "
          "configured can be brought online or taken offline. \n"
          "OnlineDevice should return 0 if successful, 1 if the "
          "request is not supported at all, 2 if the request is not "
          "supported due to the current state of the Device, and "
          "some other value if any other error occurred. In a "
          "subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier. \n"
          "Note that this method\'s function overlaps with the "
          "RequestedState property. RequestedState was added to the "
          "model to maintain a record (i.e., a persisted value) of "
          "the last state request. Invoking the OnlineDevice method "
          "should set the RequestedState property appropriately." )]
   uint32 OnlineDevice(
         [IN, Description ( 
             "If TRUE, take the device online, if FALSE, take "
             "the device OFFLINE." )]
      boolean Online);

      [Deprecated { "CIM_EnabledLogicalElement.RequestStateChange" }, 
       Description ( 
          "The QuiesceDevice method has been deprecated in lieu of "
          "the more general RequestStateChange method that directly "
          "overlaps with the functionality provided by this method. \n"
          "Requests that the LogicalDevice cleanly cease all "
          "current activity (\"Quiesce\" input parameter = TRUE) or "
          "resume activity (= FALSE). For this method to quiesce a "
          "Device, that Device should have an Availability (or "
          "Additional Availability) of \"Running/Full Power\" "
          "(value=3) and an EnabledStatus/StatusInfo of \"Enabled\". "
          "For example, if quiesced, a Device may then be offlined "
          "for diagnostics, or disabled for power off and hot swap. "
          "For the method to \"unquiesce\" a Device, that Device "
          "should have an Availability (or AdditionalAvailability) "
          "of \"Quiesced\" (value=21) and an "
          "EnabledStatus/StatusInfo of \"Enabled\". In this case, "
          "the Device would be returned to an \"Enabled\" and "
          "\"Running/Full Power\" status. \n"
          "The method\'s return code should indicate the success or "
          "failure of the quiesce. It should return 0 if "
          "successful, 1 if the request is not supported at all, 2 "
          "if the request is not supported due to the current state "
          "of the Device, and some other value if any other error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' may also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 QuiesceDevice(
         [IN, Description ( 
             "If set to TRUE then cleanly cease all activity, if "
             "FALSE resume activity." )]
      boolean Quiesce);

      [Description ( 
          "Requests that the Device capture its current "
          "configuration, setup and/or state information in a "
          "backing store. The goal would be to use this information "
          "at a later time (via the RestoreProperties method), to "
          "return a Device to its present \"condition\". This "
          "method may not be supported by all Devices. The method "
          "should return 0 if successful, 1 if the request is not "
          "supported, and some other value if any other error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' may also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 SaveProperties(
);

      [Description ( 
          "Requests that the Device re-establish its configuration, "
          "setup and/or state information from a backing store. The "
          "intent is to capture this information at an earlier time "
          "(via the SaveProperties method), and use it to return a "
          "Device to this earlier \"condition\". This method may "
          "not be supported by all Devices. The method should "
          "return 0 if successful, 1 if the request is not "
          "supported, and some other value if any other error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' may also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 RestoreProperties(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Realizes 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Device" ), 
    Description ( 
       "CIM_Realizes is the association that defines the mapping "
       "between LogicalDevices and the PhysicalElements that implement "
       "them." )]
class CIM_Realizes : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The physical component that implements the Device." )]
   CIM_PhysicalElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The LogicalDevice." )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00867" type="add">Update class
// description.</change>
// ==================================================================
//  CIM_Service
// ==================================================================
   [Abstract, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "A Service is a LogicalElement that represents the availability "
       "of functionality that can be managed. This functionality may "
       "be provided by a seperately modeled entity such as a "
       "LogicalDevice or a SoftwareFeature, or both. The modeled "
       "Service typically provides only functionality required for "
       "management of itself or the elements it affects." )]
class CIM_Service : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The CreationClassName of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The Name of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass that is used in the creation of an instance. "
          "When used with the other key properties of this class, "
          "this property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property uniquely identifies the Service and "
          "provides an indication of the functionality that is "
          "managed. This functionality is described in more detail "
          "in the Description property of the object." ), 
       MaxLen ( 256 )]
   string Name;

      [Write, Description ( 
          "The name of the primary owner for the service, if one is "
          "defined. The primary owner is the initial support "
          "contact for the Service." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|General Information|001.3" }]
   string PrimaryOwnerName;

      [Write, Description ( 
          "A string that provides information on how the primary "
          "owner of the Service can be reached (for example, phone "
          "number, e-mail address, and so on)." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|General Information|001.4" }]
   string PrimaryOwnerContact;

      [Deprecated { "CIM_Service.EnabledDefault" }, 
       Description ( 
          "Note: The use of this element is deprecated in lieu of "
          "the EnabledDefault property that is inherited from "
          "EnabledLogicalElement. The EnabledLogicalElement "
          "addresses the same semantics. The change to a uint16 "
          "data type was discussed when CIM V2.0 was defined. "
          "However, existing V1.0 implementations used the string "
          "property. To remain compatible with those "
          "implementations, StartMode was grandfathered into the "
          "schema. Use of the deprecated qualifier allows the "
          "maintenance of the existing property but also permits an "
          "improved, clarified definition using EnabledDefault. \n"
          "Deprecated description: StartMode is a string value that "
          "indicates whether the Service is automatically started "
          "by a System, an Operating System, and so on, or is "
          "started only upon request." ), 
       ValueMap { "Automatic", "Manual" }, 
       MaxLen ( 10 )]
   string StartMode;

      [Description ( 
          "Started is a Boolean that indicates whether the Service "
          "has been started (TRUE), or stopped (FALSE)." )]
   boolean Started;


      [Description ( 
          "The StartService method places the Service in the "
          "started state. Note that the function of this method "
          "overlaps with the RequestedState property. "
          "RequestedState was added to the model to maintain a "
          "record (such as a persisted value) of the last state "
          "request. Invoking the StartService method should set the "
          "RequestedState property appropriately. The method "
          "returns an integer value of 0 if the Service was "
          "successfully started, 1 if the request is not supported, "
          "and any other number to indicate an error. In a "
          "subclass, the set of possible return codes could be "
          "specified using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are translated "
          "can also be specified in the subclass as a Values array "
          "qualifier. \n"
          "\n"
          "Note: The semantics of this method overlap with the "
          "RequestStateChange method that is inherited from "
          "EnabledLogicalElement. This method is maintained because "
          "it has been widely implemented, and its simple \"start\" "
          "semantics are convenient to use." )]
   uint32 StartService(
);

      [Description ( 
          "The StopService method places the Service in the stopped "
          "state. Note that the function of this method overlaps "
          "with the RequestedState property. RequestedState was "
          "added to the model to maintain a record (such as a "
          "persisted value) of the last state request. Invoking the "
          "StopService method should set the RequestedState "
          "property appropriately. The method returns an integer "
          "value of 0 if the Service was successfully stopped, 1 if "
          "the request is not supported, and any other number to "
          "indicate an error. In a subclass, the set of possible "
          "return codes could be specified using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are translated can also be specified "
          "in the subclass as a Values array qualifier. \n"
          "\n"
          "Note: The semantics of this method overlap with the "
          "RequestStateChange method that is inherited from "
          "EnabledLogicalElement. This method is maintained because "
          "it has been widely implemented, and its simple \"stop\" "
          "semantics are convenient to use." )]
   uint32 StopService(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceAccessPoint
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceAccessPoint represents the ability to utilize or "
       "invoke a Service. Access points represent that a Service is "
       "made available for other entities to use." )]
class CIM_ServiceAccessPoint : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The CreationClassName of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The Name of the scoping System." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property uniquely identifies the "
          "ServiceAccessPoint and provides an indication of the "
          "functionality that is managed. This functionality is "
          "described in more detail in the Description property of "
          "the object." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceAccessURI
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceAccessURI represents the ability to utilize or "
       "invoke a Service using a uniform resource identifier (URI). "
       "RFC 1738 describes the Uniform Resource Locator, which is a "
       "more specific form of a URI, and RFC 2396 describes the "
       "broader, inclusive URI. The following explanation is from the "
       "RFC: \"A Uniform Resource Identifier (URI) is a compact string "
       "of characters for identifying an abstract or physical "
       "resource.\" In the context of a ServiceAccessPoint, a URI "
       "contains the information necessary to access an associated "
       "service (associated through ServiceAccessBySAP), using a "
       "syntax that is specific to that service." )]
class CIM_ServiceAccessURI : CIM_ServiceAccessPoint {

      [Required, Description ( 
          "The LabeledURI property is based on RFC 2079 and its "
          "value and syntax are service-specific." ), 
       MaxLen ( 256 )]
   string LabeledURI;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="SysDevCR00726.001" type ="add">Clarify ElementEffects
// description</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00864" type="add">Update description of 
// "Manages" value of property ElementAffects .</change>
// ==================================================================
//  CIM_ServiceAffectsElement
// ==================================================================
   [Association, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "ServiceAffectsElement represents an association between a "
       "Service and the ManagedElements that might be affected by its "
       "execution. Instantiating this association indicates that "
       "running the service may change, manage, provide functionality "
       "for,or pose some burden on the ManagedElement. This burden "
       "might affect performance, throughput, availability, and so on." )]
class CIM_ServiceAffectsElement {

      [Key, Description ( 
          "The Managed Element that is affected by the Service." )]
   CIM_ManagedElement REF AffectedElement;

      [Key, Description ( 
          "The Service that is affecting the ManagedElement." )]
   CIM_Service REF AffectingElement;

      [Description ( 
          "An enumeration that describes the effect on the "
          "ManagedElement. This array corresponds to the "
          "OtherElementEffectsDescriptions array, where the latter "
          "provides details that are related to the high-level "
          "effects enumerated by this property. Additional detail "
          "is required if the ElementEffects array contains the "
          "value 1 (Other). The values are defined as follows: \n"
          "- Exclusive Use (2): No other Service may have this "
          "association to the element. \n"
          "- Performance Impact (3): Deprecated in favor of "
          "\"Consumes\", \"Enhances Performance\", or \"Degrades "
          "Performance\". Execution of the Service may enhance or "
          "degrade the performance of the element. This may be as a "
          "side-effect of execution or as an intended consequence "
          "of methods provided by the Service. \n"
          "- Element Integrity (4): Deprecated in favor of "
          "\"Consumes\", \"Enhances Integrity\", or \"Degrades "
          "Integrity\". Execution of the Service may enhance or "
          "degrade the integrity of the element. This may be as a "
          "side-effect of execution or as an intended consequence "
          "of methods provided by the Service. \n"
          "- Manages (5): The Service manages the element. \n"
          "- Consumes (6): Execution of the Service consumes some "
          "or all of the associated element as a consequence of "
          "running the Service. For example, the Service may "
          "consume CPU cycles, which may affect performance, or "
          "Storage which may affect both performance and integrity. "
          "(For instance, the lack of free storage can degrade "
          "integrity by reducing the ability to save state. ) "
          "\"Consumes\" may be used alone or in conjunction with "
          "other values, in particular, \"Degrades Performance\" "
          "and \"Degrades Integrity\". \n"
          "\"Manages\" and not \"Consumes\" should be used to "
          "reflect allocation services that may be provided by a "
          "Service. \n"
          "- Enhances Integrity (7): The Service may enhance "
          "integrity of the associated element. \n"
          "- Degrades Integrity (8): The Service may degrade "
          "integrity of the associated element. \n"
          "- Enhances Performance (9): The Service may enhance "
          "performance of the associated element. \n"
          "- Degrades Performance (10): The Service may degrade "
          "performance of the associated element." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "Exclusive Use", 
          "Performance Impact", "Element Integrity", "Manages", 
          "Consumes", "Enhances Integrity", "Degrades Integrity", 
          "Enhances Performance", "Degrades Performance", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ServiceAffectsElement.OtherElementEffectsDescriptions" }]
   uint16 ElementEffects[];

      [Description ( 
          "Provides details for the effect at the corresponding "
          "array position in ElementEffects. This information is "
          "required if ElementEffects contains the value 1 (Other)." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ServiceAffectsElement.ElementEffects" }]
   string OtherElementEffectsDescriptions[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "ServiceAffectsElementWithQuota represents an extension of "
       "ServiceAffectsElement to include a quota imposed on the "
       "AffectedElement by the Service. The quota governs the amount "
       "of a resource controlled by the Service that can be allocated "
       "by the AffectedElement in one or more allocations." )]
class CIM_ServiceAffectsElementWithQuota : CIM_ServiceAffectsElement {

      [Description ( 
          "Quota is the maximum number of resource units that may "
          "be allocated to the AffectedElement." )]
   uint64 Quota;

      [Description ( 
          "Quota is the number of resource units currently "
          "allocated to the AffectedElement." )]
   uint64 QuotaUsed;

      [Description ( 
          "QuotaUnits specifies the type of unit used in the Quota "
          "and QuotaUsed properties. The value shall be formatted "
          "according to DSP0004 Appendix C1, where the base-unit is "
          "\"byte\"), and there are no occurrences of "
          "multiplied-base-unit and divided-base-unit." ), 
       IsPUnit]
   string QuotaUnits = "byte";


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceAvailableToElement
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceAvailableToElement conveys the semantics of a "
       "Service that is available for the use of a ManagedElement. An "
       "example of an available Service is that a Processor and an "
       "enclosure (a PhysicalElement) can use AlertOnLAN Services to "
       "signal an incomplete or erroneous boot. In reality, AlertOnLAN "
       "is simply a HostedService on a computer system that is "
       "generally available for use and is not a dependency of the "
       "processor or enclosure. To describe that the use of this "
       "service might be restricted or have limited availability or "
       "applicability, the CIM_ServiceAvailableToElement association "
       "would be instantiated between the Service and specific "
       "CIM_Processors and CIM_Chassis." )]
class CIM_ServiceAvailableToElement {

      [Key, Description ( "The Service that is available." )]
   CIM_Service REF ServiceProvided;

      [Key, Description ( 
          "The ManagedElement that can use the Service." )]
   CIM_ManagedElement REF UserOfService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceComponent 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "The ServiceComponent aggregation models a set of subordinate "
       "Services that are aggregated together to form a higher-level "
       "service." )]
class CIM_ServiceComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent Service." )]
   CIM_Service REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The component Service." )]
   CIM_Service REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceSAPDependency
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceSAPDependency is an association between a Service "
       "and a ServiceAccessPoint that indicates that the referenced "
       "SAP is utilized by the Service to provide its functionality. "
       "For example, Boot Services can invoke BIOS Disk Services "
       "(interrupts) in order to function." )]
class CIM_ServiceSAPDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The required ServiceAccessPoint." )]
   CIM_ServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Service that is dependent on an underlying SAP." )]
   CIM_Service REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "ServiceStatistics relates the ServiceStatisticalInformation "
       "class to the Service to which it applies." )]
class CIM_ServiceStatistics : CIM_Statistics {

      [Override ( "Stats" ), 
       Weak, Description ( "The statistical object." )]
   CIM_ServiceStatisticalInformation REF Stats;

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Service to which the statistics apply." )]
   CIM_Service REF Element;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Software" ), 
    Description ( 
       "A subclass of service which provides methods to install (or "
       "update) Software Identities in ManagedElements." )]
class CIM_SoftwareInstallationService : CIM_Service {


      [Description ( 
          "This method allows a client application to determine "
          "whether a specific SoftwareIdentity can be installed (or "
          "updated) on a ManagedElement. It also allows other "
          "characteristics to be determined such as whether install "
          "will require a reboot. In addition a client can check "
          "whether the SoftwareIdentity can be added "
          "simulataneously to a specified "
          "SofwareIndentityCollection. A client MAY specify either "
          "or both of the Collection and Target parameters. The "
          "Collection parameter is only supported if "
          "SoftwareInstallationServiceCapabilities.CanAddToCollection "
          "is TRUE." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100", "4101", "4102", "4103", 
          "4104", "4105", "4106", "4107", "4108", "4109", 
          "4110..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "Target In Use", "DMTF Reserved", 
          "Method Reserved", "Unsupported TargetType", 
          "Unattended/silent installation not supported", 
          "Downgrade/reinstall not supported", "Not enough memory", 
          "Not enough swap-space", "Unsupported version transition", 
          "Not enough disk space", 
          "Software and target operating system mismatch", 
          "Missing dependencies", "Not applicable to target", 
          "No supported path to image", "Cannot add to Collection", 
          "Asynchronous Job already in progress", "Method Reserved", 
          "Vendor Specific" }]
   uint32 CheckSoftwareIdentity(
         [IN, Description ( 
             "Reference to the SoftwareIdentity to be checked." )]
      CIM_SoftwareIdentity REF Source, 
         [IN, Description ( 
             "Reference to the ManagedElement that the Software "
             "Identity is going to be installed in (or updated)." )]
      CIM_ManagedElement REF Target, 
         [IN, Description ( 
             "Reference to the Collection to which the Software "
             "Identity will be added." )]
      CIM_Collection REF Collection, 
         [IN ( false ), OUT, Description ( 
             "The parameter describes the characteristics of the "
             "installation/update that will take place if the "
             "Source Software Identity is installed: \n"
             "Target automatic reset: The target element will "
             "automatically reset once the installation is "
             "complete. \n"
             "System automatic reset: The containing system of "
             "the target ManagedElement (normally a logical "
             "device or the system itself) will automatically "
             "reset/reboot once the installation is complete. \n"
             "Separate target reset required: "
             "EnabledLogicalElement.RequestStateChange MUST be "
             "used to reset the target element after the "
             "SoftwareIdentity is installed. \n"
             "Separate system reset required: "
             "EnabledLogicalElement.RequestStateChange MUST be "
             "used to reset/reboot the containing system of the "
             "target ManagedElement after the SoftwareIdentity "
             "is installed. \n"
             "Manual Reboot Required: The system MUST be "
             "manually rebooted by the user. \n"
             "No reboot required : No reboot is required after "
             "installation. \n"
             "User Intervention Recomended : It is recommended "
             "that a user confirm installation of this "
             "SoftwareIdentity. Inappropriate application MAY "
             "have serious consequences. \n"
             "MAY be added to specified collection : The "
             "SoftwareIndentity MAY be added to specified "
             "Collection." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "..", "0x7FFF..0xFFFF" }, 
          Values { "Target automatic reset", 
             "System automatic reset", 
             "Separate target reset Required", 
             "Separate system reset Required", 
             "Manual Reboot Required", "No Reboot Required", 
             "User Intervention recommended", 
             "MAY be added to specified Collection", 
             "DMTF Reserved", "Vendor Specific" }]
      uint16 InstallCharacteristics[]);

      [Description ( 
          "Start a job to install or update a SoftwareIdentity "
          "(Source) on a ManagedElement (Target). \n"
          "In addition the method can be used to add the "
          "SoftwareIdentity simulataneously to a specified "
          "SofwareIndentityCollection. A client MAY specify either "
          "or both of the Collection and Target parameters. The "
          "Collection parameter is only supported if "
          "SoftwareInstallationServiceCapabilities.CanAddToCollection "
          "is TRUE. \n"
          "If 0 is returned, the function completed successfully "
          "and no ConcreteJob instance was required. If 4096/0x1000 "
          "is returned, a ConcreteJob will be started to perform "
          "the install. The Job\'s reference will be returned in "
          "the output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100", "4101", "4102", "4103", 
          "4104", "4105", "4106", "4107", "4108", "4109..32767", 
          "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "Target In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Unsupported TargetType", 
          "Unattended/silent installation not supported", 
          "Downgrade/reinstall not supported", "Not enough memory", 
          "Not enough swap-space", "Unsupported version transition", 
          "Not enough disk space", 
          "Software and target operating system mismatch", 
          "Missing dependencies", "Not applicable to target", 
          "No supported path to image", "Cannot add to Collection", 
          "Method Reserved", "Vendor Specific" }]
   uint32 InstallFromSoftwareIdentity(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "Options to control the install process.\n"
             "Defer target/system reset : do not automatically "
             "reset the target/system.\n"
             "Force installation : Force the installation of the "
             "same or an older SoftwareIdentity. Install: "
             "Perform an installation of this software on the "
             "managed element.\n"
             "Update: Perform an update of this software on the "
             "managed element.\n"
             "Repair: Perform a repair of the installation of "
             "this software on the managed element by forcing "
             "all the files required for installing the software "
             "to be reinstalled.\n"
             "Reboot: Reboot or reset the system immediately "
             "after the install or update of this software, if "
             "the install or the update requires a reboot or reset.\n"
             "Password: Password will be specified as clear text "
             "without any encryption for performing the install "
             "or update.\n"
             "Uninstall: Uninstall the software on the managed element.\n"
             "Log: Create a log for the install or update of the software.\n"
             "SilentMode: Perform the install or update without "
             "displaying any user interface.\n"
             "AdministrativeMode: Perform the install or update "
             "of the software in the administrative mode. "
             "ScheduleInstallAt: Indicates the time at which "
             "theinstall or update of the software will occur." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "13", "..", "32768..65535" }, 
          Values { "Defer target/system reset", 
             "Force installation", "Install", "Update", "Repair", 
             "Reboot", "Password", "Uninstall", "Log", 
             "SilentMode", "AdministrativeMode", 
             "ScheduleInstallAt", "DMTF Reserved", 
             "Vendor Specific" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_SoftwareInstallationService.InstallOptionsValues[]", 
             "CIM_SoftwareInstallationServiceCapabilities.SupportedInstallOptions[]" }]
      uint16 InstallOptions[], 
         [IN, Description ( 
             "InstallOptionsValues is an array of strings "
             "providing additional information to InstallOptions "
             "for the method to install the software. Each entry "
             "of this array is related to the entry in "
             "InstallOptions that is located at the same index "
             "providing additional information for "
             "InstallOptions. \n"
             "If the index in InstallOptions has the value "
             "\"Password \" then a value at the corresponding "
             "index of InstallOptionValues shall not be NULL. \n"
             "If the index in InstallOptions has the value "
             "\"ScheduleInstallAt\" then the value at the "
             "corresponding index of InstallOptionValues shall "
             "not be NULL and shall be in the datetime type "
             "format. \n"
             "If the index in InstallOptions has the value \"Log "
             "\" then a value at the corresponding index of "
             "InstallOptionValues may be NULL. \n"
             "If the index in InstallOptions has the value "
             "\"Defer target/system reset\", \"Force "
             "installation\",\"Install\", \"Update\", \"Repair\" "
             "or \"Reboot\" then a value at the corresponding "
             "index of InstallOptionValues shall be NULL." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_SoftwareInstallationService.InstallOptions[]" }]
      string InstallOptionsValues[], 
         [IN, Description ( 
             "Reference to the source of the install." )]
      CIM_SoftwareIdentity REF Source, 
         [IN, Description ( 
             "The installation target. If NULL then the "
             "SOftwareIdentity will be added to Collection only. "
             "The underlying implementation is expected to be "
             "able to obtain any necessary metadata from the "
             "Software Identity." )]
      CIM_ManagedElement REF Target, 
         [IN, Description ( 
             "Reference to the Collection to which the Software "
             "Identity SHALL be added. If NULL then the SOftware "
             "Identity will not be added to a Collection." )]
      CIM_Collection REF Collection);

      [Description ( 
          "Start a job to install software from a specific URI in a "
          "ManagedElement. \n"
          "Note that this method is provided to support existing, "
          "alternative download mechanisms (such as used for "
          "firmware download). The \'normal\' mechanism will be to "
          "use the InstallFromSoftwareIdentity method.\n"
          "If 0 is returned, the function completed successfully "
          "and no ConcreteJob instance was required. If 4096/0x1000 "
          "is returned, a ConcreteJob will be started to to perform "
          "the install. The Job\'s reference will be returned in "
          "the output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100", "4101", "4102", "4103", 
          "4104", "4105", "4106", "4107", "4108..32767", 
          "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "Target In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Unsupported TargetType", 
          "Unattended/silent installation not supported", 
          "Downgrade/reinstall not supported", "Not enough memory", 
          "Not enough swap-space", "Unsupported version transition", 
          "Not enough disk space", 
          "Software and target operating system mismatch", 
          "Missing dependencies", "Not applicable to target", 
          "URI not accessible", "Method Reserved", "Vendor Specific" }]
   uint32 InstallFromURI(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "A URI for the software based on RFC 2079." )]
      string URI, 
         [IN, Description ( "The installation target." )]
      CIM_ManagedElement REF Target, 
         [IN, Description ( 
             "Options to control the install process. \n"
             "See the InstallOptions parameter of the "
             "SoftwareInstallationService.InstallFromSoftwareIdentity "
             "method for the description of these values." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "13", "..", "32768..65535" }, 
          Values { "Defer target/system reset", 
             "Force installation", "Install", "Update", "Repair", 
             "Reboot", "Password", "Uninstall", "Log", 
             "SilentMode", "AdministrativeMode", 
             "ScheduleInstallAt", "DMTF Reserved", 
             "Vendor Specific" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_SoftwareInstallationService.InstallFromURI.InstallOptionsValues[]", 
             "CIM_SoftwareInstallationServiceCapabilities.SupportedInstallOptions[]" }]
      uint16 InstallOptions[], 
         [IN, Description ( 
             "InstallOptionsValues is an array of strings "
             "providing additionalinformation to InstallOptions "
             "for the method to install the software. Each entry "
             "of this array is related to the entry in "
             "InstallOptions that is located at the same index "
             "providing additional information for "
             "InstallOptions. \n"
             "For further information on the use of "
             "InstallOptionsValues parameter, see the "
             "description of the InstallOptionsValues parameter "
             "of the "
             "SoftwareInstallationService.InstallFromSoftwareIdentity "
             "method." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_SoftwareInstallationService.InstallFromByteStream.InstallOptions[]" }]
      string InstallOptionsValues[]);

};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Core::StorageExtent" ), 
    Description ( 
       "StorageExtent describes the capabilities and management of the "
       "various media that exist to store data and allow data "
       "retrieval. This superclass could be used to represent the "
       "various components of RAID (Hardware or Software) or as a raw "
       "logical extent on top of physical media." )]
class CIM_StorageExtent : CIM_LogicalDevice {

      [Description ( "Type of data organization used." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", "Fixed Block", "Variable Block", 
          "Count Key Data" }]
   uint16 DataOrganization;

      [Description ( 
          "A free form string describing the media and/or its use." ), 
       MappingStrings { "MIB.IETF|HOST-RESOURCES-MIB.hrStorageDescr" }]
   string Purpose;

      [Description ( 
          "Access describes whether the media is readable "
          "(value=1), writeable (value=2), or both (value=3). "
          "\"Unknown\" (0) and \"Write Once\" (4) can also be "
          "defined." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Readable", "Writeable", 
          "Read/Write Supported", "Write Once" }]
   uint16 Access;

      [Description ( 
          "ErrorMethodology is a free-form string describing the "
          "type of error detection and correction supported by this "
          "StorageExtent." )]
   string ErrorMethodology;

      [Description ( 
          "Size in bytes of the blocks which form this "
          "StorageExtent. If variable block size, then the maximum "
          "block size in bytes should be specified. If the block "
          "size is unknown or if a block concept is not valid (for "
          "example, for AggregateExtents, Memory or LogicalDisks), "
          "enter a 1." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Host Storage|001.4", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrStorageAllocationUnits", 
          "MIF.DMTF|Storage Devices|001.5" }]
   uint64 BlockSize;

      [Description ( 
          "Total number of logically contiguous blocks, of size "
          "Block Size, which form this Extent. The total size of "
          "the Extent can be calculated by multiplying BlockSize by "
          "NumberOfBlocks. If the BlockSize is 1, this property is "
          "the total size of the Extent." ), 
       MappingStrings { "MIF.DMTF|Host Storage|001.5", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrStorageSize" }]
   uint64 NumberOfBlocks;

      [Description ( 
          "The maximum number of blocks, of size BlockSize, which "
          "are available for consumption when layering "
          "StorageExtents using the BasedOn association. This "
          "property only has meaning when this StorageExtent is an "
          "Antecedent reference in a BasedOn relationship. For "
          "example, a StorageExtent could be composed of 120 "
          "blocks. However, the Extent itself may use 20 blocks for "
          "redundancy data. If another StorageExtent is BasedOn "
          "this Extent, only 100 blocks would be available to it. "
          "This information (\'100 blocks is available for "
          "consumption\') is indicated in the ConsumableBlocks "
          "property." )]
   uint64 ConsumableBlocks;

      [Description ( 
          "True indicates that the underlying StorageExtent(s) "
          "participate in a StorageRedundancyGroup." )]
   boolean IsBasedOnUnderlyingRedundancy;

      [Description ( 
          "Boolean set to TRUE if the Storage is sequentially "
          "accessed by a MediaAccessDevice. A TapePartition is an "
          "example of a sequentially accessed StorageExtent. "
          "StorageVolumes, Disk Partitions and LogicalDisks "
          "represent randomly accessed Extents." )]
   boolean SequentialAccess;

      [Description ( 
          "StorageExtents have additional status information beyond "
          "that captured in the OperationalStatus and other "
          "properties, inherited from ManagedSystemElement. This "
          "additional information (for example, \"Protection "
          "Disabled\", value=9) is captured in the ExtentStatus "
          "property. \n"
          "\'In-Band Access Granted\' says that access to data on "
          "an extent is granted to some consumer and is only valid "
          "when \'Exported\' is also set. It is set as a side "
          "effect of PrivilegeManagementService.ChangeAccess or "
          "equivalent interfaces. \n"
          "\'Imported\' indicates that the extent is used in the "
          "current system, but known to be managed by some other "
          "system. For example, a server imports volumes from a "
          "disk array. \n"
          "\'Exported\' indicates the extent is meant to be used by "
          "some comsumer. A disk array\'s logical units are "
          "exported. \n"
          "Intermediate composite extents may be neither imported "
          "nor exported.\n"
          "\'Relocating\' indicates the extent is being relocated." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "..", "32768..65535" }, 
       Values { "Other", "Unknown", "None/Not Applicable", "Broken", 
          "Data Lost", "Dynamic Reconfig", "Exposed", 
          "Fractionally Exposed", "Partially Exposed", 
          "Protection Disabled", "Readying", "Rebuild", 
          "Recalculate", "Spare in Use", "Verify In Progress", 
          "In-Band Access Granted", "Imported", "Exported", 
          "Relocating", "DMTF Reserved", "Vendor Reserved" }]
   uint16 ExtentStatus[];

      [Description ( 
          "Indicates whether or not there exists no single point of failure."
           ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.NoSinglePointOfFailure" }]
   boolean NoSinglePointOfFailure;

      [Description ( 
          "Number of complete copies of data currently maintained." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.DataRedundancyGoal", 
          "CIM_StorageSetting.DataRedundancyMax", 
          "CIM_StorageSetting.DataRedundancyMin" }]
   uint16 DataRedundancy;

      [Description ( 
          "How many physical packages can currently fail without "
          "data loss. For example, in the storage domain, this "
          "might be disk spindles." ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.PackageRedundancyGoal", 
          "CIM_StorageSetting.PackageRedundancyMax", 
          "CIM_StorageSetting.PackageRedundancyMin" }]
   uint16 PackageRedundancy;

      [Description ( 
          "Current value for Delta reservation. This is a "
          "percentage that specifies the amount of space that "
          "should be reserved in a replica for caching changes." ), 
       Units ( "Percentage" ), 
       MinValue ( 1 ), 
       MaxValue ( 100 ), 
       ModelCorrespondence { 
          "CIM_StorageSetting.DeltaReservationGoal", 
          "CIM_StorageSetting.DeltaReservationMax", 
          "CIM_StorageSetting.DeltaReservationMin" }]
   uint8 DeltaReservation;

      [Description ( 
          "If true, \"Primordial\" indicates that the containing "
          "System does not have the ability to create or delete "
          "this operational element. This is important because "
          "StorageExtents are assembled into higher-level "
          "abstractions using the BasedOn association. Although the "
          "higher-level abstractions can be created and deleted, "
          "the most basic, (i.e. primordial), hardware-based "
          "storage entities cannot. They are physically realized as "
          "part of the System, or are actually managed by some "
          "other System and imported as if they were physically "
          "realized. In other words, a Primordial StorageExtent "
          "exists in, but is not created by its System and "
          "conversely a non-Primordial StorageExtent is created in "
          "the context of its System. For StorageVolumes, this "
          "property will generally be false. One use of this "
          "property is to enable algorithms that aggregate "
          "StorageExtent.ConsumableSpace across all, StorageExtents "
          "but that also want to distinquish the space that "
          "underlies Primordial StoragePools. Since implementations "
          "are not required to surface all Component StorageExtents "
          "of a StoragePool, this information is not accessible in "
          "any other way." )]
   boolean Primordial = false;

      [Override ( "Name" ), 
       Description ( "A unique identifier for the Extent." ), 
       MappingStrings { 
          "SPC.INCITS-T10| VPD 83, Association 0 | Identifier" }, 
       ModelCorrespondence { "CIM_StorageExtent.NameFormat", 
          "CIM_StorageExtent.NameNamespace" }]
   string Name;

      [Description ( 
          "The list here applies to all StorageExtent subclasses. "
          "Please look at the Description in each subclass for "
          "guidelines on the approriate values for that subclass. "
          "Note that any of these formats could apply to a "
          "CompositeExtent. \n"
          "\n"
          "Note - this property originally touched on two concepts "
          "that are now separated into this property and "
          "NameNamespace. Values 2,3,4,5,6, and 8 are retained for "
          "backwards compatibility but are deprecated in lieu of "
          "the corresponding values in "
          "CIM_StorageExtent.NameNamespace. \n"
          "\n"
          "For example, the preferred source for SCSI virtual "
          "(RAID) disk names is from Inquiry VPD page 83 response, "
          "type 3 identifiers. These will have NameFormat set to "
          "\'NAA\' and NameNamespace to \'VPD83Type3\'. \n"
          "\n"
          "Format of the Name property. Values for extents "
          "representing SCSI volumes are (per SCSI SPC-3): \n"
          "2 = VPD Page 83, NAA IEEE Registered Extended "
          "(VPD83NAA6) \n"
          "(DEPRECATED) \n"
          "3 = VPD Page 83, NAA IEEE Registered (VPD83NAA5) \n"
          "(DEPRECATED) \n"
          "4 = VPD Page 83, (VPD83Type2) (DEPRECATED) \n"
          "5 = VPD Page 83, \n"
          "T10 Vendor Identification (VPD83Type1) (DEPRECATED) \n"
          "6 = VPD Page 83, Vendor Specific (VPD83Type0) "
          "(DEPRECATED) \n"
          "7 = Serial Number/Vendor/Model (SNVM) SNVM is 3 strings "
          "representing the vendor name, product name within the "
          "vendor namespace, and the serial number within the model "
          "namespace. Strings are delimited with a \'+\'. Spaces "
          "may be included and are significant. The serial number "
          "is the text representation of the serial number in "
          "hexadecimal upper case. This represents the vendor and "
          "model ID from SCSI Inquiry data; the vendor field MUST "
          "be 8 characters wide and the product field MUST be 16 "
          "characters wide. For example, \n"
          "\'ACME____+SUPER DISK______+124437458\' (_ is a space "
          "character) \n"
          "8 = Node WWN (for single LUN/controller) (NodeWWN) \n"
          "(DEPRECATED) \n"
          "9 = NAA as a generic format. See \n"
          "http://standards.ieee.org/regauth/oui/tutorials/fibrecomp_id.html. "
          "Formatted as 16 or 32 unseparated uppercase hex "
          "characters (2 per binary byte). For example "
          "\'21000020372D3C73\' \n"
          "10 = EUI as a generic format (EUI64) See \n"
          "http://standards.ieee.org/regauth/oui/tutorials/EUI64.html. \n"
          "Formatted as 16 unseparated uppercase hex characters (2 "
          "per binary byte) \n"
          "11 = T10 vendor identifier format as returned by SCSI "
          "Inquiry VPD page 83, identifier type 1. See T10 SPC-3 "
          "specification. This is the 8-byte ASCII vendor ID from "
          "the T10 registry followed by a vendor specific ASCII "
          "identifier; spaces are permitted. For non SCSI volumes, "
          "\'SNVM\' may be the most appropriate choice. 12 = OS "
          "Device Name (for LogicalDisks). See LogicalDisk Name "
          "description for details." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12" }, 
       Values { "Unknown", "Other", "VPD83NAA6", "VPD83NAA5", 
          "VPD83Type2", "VPD83Type1", "VPD83Type0", "SNVM", 
          "NodeWWN", "NAA", "EUI64", "T10VID", "OS Device Name" }, 
       ModelCorrespondence { "CIM_StorageExtent.Name", 
          "CIM_StorageExtent.NameNamespace", 
          "CIM_StorageExtent.OtherNameFormat" }]
   uint16 NameFormat;

      [Description ( 
          "The preferred source SCSI for volume names is SCSI VPD "
          "Page 83 responses. Page 83 returns a list of identifiers "
          "for various device elements. The metadata for each "
          "identifier includes an Association field, identifiers "
          "with association of 0 apply to volumes. Page 83 supports "
          "several namespaces specified in the Type field in the "
          "identifier metadata. See SCSI SPC-3 specification. \n"
          "2 = VPD Page 83, Type 3 NAA (NameFormat SHOULD be NAA) \n"
          "3 = VPD Page 83, Type 2 EUI64 (NameFormat EUI) \n"
          "4 = VPD Page 83, Type 1 T10 Vendor Identification \n"
          "(NameFormat T10) \n"
          "Less preferred volume namespaces from other interfaces: \n"
          "5 = VPD page 80, Serial number (NameFormat SHOULD be "
          "Other) \n"
          "6 = FC NodeWWN (NameFormat SHOULD be NAA or EUI) \n"
          "7 = Serial Number/Vendor/Model (NameFormat SHOULD be "
          "SNVM) \n"
          "The preferred namespace for LogigicalDisk names is "
          "platform specific device namespace; see LogigicalDIsk "
          "Description. \n"
          "8 = OS Device Namespace." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "VPD83Type3", "VPD83Type2", 
          "VPD83Type1", "VPD80", "NodeWWN", "SNVM", 
          "OS Device Namespace" }, 
       MappingStrings { 
          "SPC.INCITS-T10| VPD 83, Association 0 | Identifier" }, 
       ModelCorrespondence { "CIM_StorageExtent.Name", 
          "CIM_StorageExtent.OtherNameNamespace", 
          "CIM_StorageExtent.NameFormat" }]
   uint16 NameNamespace;

      [Description ( 
          "A string describing the namespace of the Name property "
          "when NameNamespace includes the value 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_StorageExtent.NameNamespace" }]
   string OtherNameNamespace;

      [Description ( 
          "A string describing the format of the Name property when "
          "NameFormat includes the value 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_StorageExtent.NameFormat" }]
   string OtherNameFormat;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00902" type="add">Promoted OtherIdentifyingInfo
// and IdentifyingDescription from ComputerSystem to System.</change>
// ==================================================================
//  CIM_System
// ==================================================================
   [Abstract, Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_System represents an entity made up of component parts "
       "(defined by the SystemComponent relationship), that operates "
       "as a \'functional whole\'. Systems are top-level objects in "
       "the CIM hierarchy, requiring no scoping or weak relationships "
       "in order to exist and have context. It should be reasonable to "
       "uniquely name and manage a System at an enterprise level. For "
       "example, a ComputerSystem is a kind of System that can be "
       "uniquely named and independently managed in an enterprise. "
       "However, these qualities are not true for the power supply (or "
       "the power supply sub-\'system\') within the computer. \n"
       "\n"
       "Although a System can be viewed as a Collection, this view is "
       "not the correct model. A Collection is simply a \'bag\' that "
       "\'holds\' its members. A System is a higher-level abstraction, "
       "built out of its individual components. It is more than the "
       "sum of its parts. Note that System is a subclass of "
       "EnabledLogicalElement which allows the entire abstraction to "
       "be functionally enabled or disabled at a higher level than "
       "enabling or disabling its component parts." )]
class CIM_System : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as the key of a System "
          "instance in an enterprise environment." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "The System object and its derivatives are top-level "
          "objects of CIM. They provide the scope for numerous "
          "components. Having unique System keys is required. A "
          "heuristic can be defined in individual System subclasses "
          "to attempt to always generate the same System Name Key. "
          "The NameFormat property identifies how the System name "
          "was generated, using the heuristic of the subclass." ), 
       MaxLen ( 64 )]
   string NameFormat;

      [Write, Description ( 
          "The name of the primary system owner. The system owner "
          "is the primary user of the system." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|General Information|001.3" }]
   string PrimaryOwnerName;

      [Write, Description ( 
          "A string that provides information on how the primary "
          "system owner can be reached (for example, phone number, "
          "e-mail address, and so on)." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|General Information|001.4" }]
   string PrimaryOwnerContact;

      [Write, Description ( 
          "An array (bag) of strings that specifies the "
          "administrator -defined roles this System plays in the "
          "managed environment. Examples might be \'Building 8 "
          "print server\' or \'Boise user directories\'. A single "
          "system may perform multiple roles. \n"
          "Note that the instrumentation view of the \'roles\' of a "
          "System is defined by instantiating a specific subclass "
          "of System, or by properties in a subclass, or both. For "
          "example, the purpose of a ComputerSystem is defined "
          "using the Dedicated and OtherDedicatedDescription "
          "properties." )]
   string Roles[];

      [Description ( 
          "OtherIdentifyingInfo captures additional data, beyond "
          "System Name information, that could be used to identify "
          "a ComputerSystem. One example would be to hold the Fibre "
          "Channel World-Wide Name (WWN) of a node. Note that if "
          "only the Fibre Channel name is available and is unique "
          "(able to be used as the System key), then this property "
          "would be NULL and the WWN would become the System key, "
          "its data placed in the Name property." ), 
       ArrayType ( "Indexed" ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_System.IdentifyingDescriptions" }]
   string OtherIdentifyingInfo[];

      [Description ( 
          "An array of free-form strings providing explanations and "
          "details behind the entries in the OtherIdentifying Info "
          "array. Note, each entry of this array is related to the "
          "entry in OtherIdentifyingInfo that is located at the "
          "same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_System.OtherIdentifyingInfo" }]
   string IdentifyingDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemComponent
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_SystemComponent is a specialization of the CIM_Component "
       "association that establishes \'part of\' relationships between "
       "a System and any ManagedSystemElements of which it is "
       "composed. \n"
       "Use this association with caution when using it instead of a "
       "subclass such as SystemDevice or a peer association such as "
       "HostedService. This class is very broadly defined, which can "
       "lead to erroneous use. For example, Access Points that are "
       "dependent on (and hosted on) a System are NOT Components of "
       "the System. The System is not made up of any AccessPoint "
       "\'parts\', which is why a Dependency association, "
       "HostedAccessPoint, was defined. Similarly, a PhysicalPackage "
       "is not a \'part\' of a System, because the physical element "
       "exists independently of any internal components, software, and "
       "so on. In fact, again, a Dependency relationship is true where "
       "a ComputerSystem is Dependent on its packaging, as described "
       "by the ComputerSystemPackage association." )]
class CIM_SystemComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent System in the Association." )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The child element that is a component of a System." )]
   CIM_ManagedSystemElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00709.002" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemDevice
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Device" ), 
    Description ( 
       "LogicalDevices can be aggregated by a System. This "
       "relationship is made explicit by the SystemDevice association." )]
class CIM_SystemDevice : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The parent system in the Association." )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "The LogicalDevice that is a component of a System." )]
   CIM_LogicalDevice REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00714.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemPackaging
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Physical" ), 
    Description ( 
       "Similar to the way that LogicalDevices are \'Realized\' by "
       "PhysicalElements, Systems can be associated with specific "
       "packaging or PhysicalElements. This association explicitly "
       "defines the relationship between a System and its packaging." )]
class CIM_SystemPackaging : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The PhysicalElements that provide the packaging of a System."
           )]
   CIM_PhysicalElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The System whose packaging is described." )]
   CIM_System REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "SystemStatistics relates the SystemStatisticalInformation "
       "class to the System to which it applies." )]
class CIM_SystemStatistics : CIM_Statistics {

      [Override ( "Stats" ), 
       Weak, Description ( "The statistical object." )]
   CIM_SystemStatisticalInformation REF Stats;

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The System to which the statistics apply." )]
   CIM_System REF Element;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "The TimeService manages time (retrieves or sets time) for one "
       "or more elements in a system. All elements to which the "
       "Service applies are associated using ServiceAffectsElement." )]
class CIM_TimeService : CIM_Service {


      [Description ( 
          "This method gets or sets the time for the specified element."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..32767", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 ManageTime(
         [IN, Description ( 
             "Indicates whether the request is to get (TRUE) or "
             "set (FALSE) the time for the specified element." )]
      boolean GetRequest, 
         [IN, OUT, Description ( 
             "The current date and time. On input, this value is "
             "the time that is set on the specified element, if "
             "the GetRequest input parameter is TRUE. Otherwise, "
             "the input time is ignored. On output, this value "
             "is the time as it is known by the element." )]
      datetime TimeData, 
         [Required, IN, Description ( 
             "A reference to the ManagedElement whose time is "
             "retrieved or set. This reference is necessary "
             "because the TimeService might apply to multiple "
             "elements simultaneously. The referenced element "
             "must be associated with the Service using the "
             "ServiceAffectsElement relationship." )]
      CIM_ManagedElement REF ManagedElement);

};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "A database is a collection of interrelated data, treated as a "
       "unit, which is organized into one or more schemas. The "
       "CIM_CommonDatabase class defines the properties that are "
       "common across database model and vendor implementations for "
       "the database entity that is represented by the unit of "
       "interrelated data. \n"
       "Databases are manipulated through one or more database "
       "services. More detailed information on database services is "
       "provided in the description of the CIM_DatabaseService class." )]
class CIM_CommonDatabase : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "The version number for the database. If the version is "
          "not relevant, the value for this property must be set to "
          "NULL." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoVersion" }]
   string DatabaseVersion;

      [Description ( 
          "The date and time when the latest complete or partial "
          "backup of the database was performed. If the database "
          "has never been backed up, then this property has no "
          "meaning. The value of this property should be set to all "
          "zeros if the database has never been backed up." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoLastBackup" }]
   datetime LastBackup;

      [Description ( 
          "The estimated amount of disk space (in units) that has "
          "been reserved for database use." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoSizeAllocated" }]
   uint32 SizeAllocated;

      [Description ( 
          "The units for the SizeAllocated property and the "
          "SizeUsed property that is defined in the "
          "CIM_CommonDatabaseStatistics class. Mapping is 1 - "
          "Bytes, 2 - Kilobytes, 3 - Megabytes, 4 - Gigabytes and 5 "
          "- Terabytes." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Bytes", "Kilobyes", "Megabytes", "Gigabytes", 
          "Terabytes" }, 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsDbInfoSizeUnits" }]
   uint16 SizeUnits;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "The DatabaseAdministrator association identifies a UserEntity "
       "as a database administrator of a CommonDatabase. \n"
       "The current version of CIM includes a UserContact class that "
       "is concrete and extends from UserEntity. UserContact contains "
       "the information that is needed to contact a database "
       "administrator. The DatabaseAdministrator association should be "
       "implemented through the UserContact class in favor of creating "
       "a vendor-specific concrete class to define database "
       "administrator contact information for the database "
       "administrator." )]
class CIM_DatabaseAdministrator : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The database that is being administered." )]
   CIM_CommonDatabase REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The user entity that is responsible for the "
          "administration of the database." )]
   CIM_UserEntity REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "CIM_DatabaseControlFile is a specialization of the "
       "CIM_Dependency association that identifies the LogicalFiles "
       "that provide control information for a Database. As an "
       "example, some implementations of CommonDatabase assign "
       "particular significance to a small number of files that "
       "contain database state and configuration information. This "
       "association is intended to provide an efficient means of "
       "identifying these files." )]
class CIM_DatabaseControlFile : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( 
          "The parent CommonDatabase for the associated control file."
           )]
   CIM_CommonDatabase REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalFile that contains control information for "
          "the associated CommonDatabase." )]
   CIM_LogicalFile REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "DatabaseFile captures the relationship between a database and "
       "the supporting files that make up the database as well as the "
       "purpose served by the files within the context of the "
       "database." )]
class CIM_DatabaseFile : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The single CommonDatabase instance that uses the "
          "referenced LogicalFile." )]
   CIM_CommonDatabase REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "One of any number of LogicalFile instances that are "
          "utilized by the referenced CommonDatabase." )]
   CIM_LogicalFile REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "A database segment is a logical storage entity that is "
       "composed of one or more storage extents, each of which can "
       "have one or more database blocks. Database segments have "
       "various types depending on their purpose. Note that the order "
       "of extents within a DatabaseSegment should be represented in "
       "the BasedOn dependency of CIM_StorageExtent using the "
       "BasedOn.OrderIndex attribute." )]
class CIM_DatabaseSegment : CIM_StorageExtent {

      [Override ( "Purpose" ), 
       Description ( 
          "The purpose of this segment within the context of the "
          "database. A value of \"Data\" indicates that this "
          "segment contains data for database area. A value of "
          "\"Data Partition\" indicates that this segment contains "
          "a portion of a partitioned data area. A value of \"Data "
          "Cluster\" indicates that this segment contains a portion "
          "of a clustered database area. A value of \"Index\" "
          "indicates that this segment contains index information. "
          "A value of \"Index Partition\" indicates that this "
          "segment contains a portion of a partitioned index. A "
          "value of \"LOB\" indicates that this segment is used to "
          "hold large objects such as Binary Large Object (BLOB) or "
          "Character Large Object (CLOB) entities. A value of \"LOB "
          "Index\" indicates that this segment is used to hold "
          "index information relevant to a \"LOB\" segment. A value "
          "of \"Undo\" indicates that this segment contains undo or "
          "rollback information that might be used to reverse "
          "operations that are applied to a database. A value of "
          "\"Snapshot\" indicates that this segment is used to "
          "represent a portion of the database at a previous "
          "point-in-time. A value of \"Temp\" indicates that this "
          "segment is used as temporary space for database "
          "operations. A value of \"Other\" indicates that the "
          "segment is used for something other than any of the "
          "listed purposes and requires further description in the "
          "OtherPurpose attribute. Using a value of \"Other\" would "
          "generally indicate a need to extend the model to include "
          "an additional purpose." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11" }, 
       Values { "Other", "Data", "Data Partition", "Data Cluster", 
          "Index", "Index Partition", "LOB", "LOB Index", "Undo", 
          "Snapshot", "Temp" }, 
       ModelCorrespondence { "CIM_DatabaseSegment.OtherPurpose" }]
   string Purpose;

      [Description ( 
          "The purpose of this segment when the Purpose attribute "
          "has a value of \"Other\". This attribute should be null "
          "in all other cases." ), 
       ModelCorrespondence { "CIM_DatabaseSegment.Purpose" }]
   string OtherPurpose;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "Database services perform tasks for a database. Examples of "
       "tasks that are performed by a database service include "
       "providing user access to the database, performing data and "
       "metadata manipulation, database administration, and "
       "maintenance operations. \n"
       "One or more database services can perform tasks for a "
       "database. The database services can be located on the same "
       "computer system as the database or on different computer "
       "systems. Database services can be implemented as one or more "
       "processes." )]
class CIM_DatabaseService : CIM_Service {

      [Description ( 
          "The date and time when the database service was last "
          "started. If the database service has an "
          "OperationalStatus of Stopped or Starting, then this "
          "value is not meaningful and the contents must be set to "
          "zeros." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoStartupTime" }]
   datetime StartupTime;

      [Override ( "OperationalStatus" ), 
       Description ( 
          "This property contains the operational status of the "
          "database service. \n"
          "OK means that the database service is operational and "
          "available for general use. \n"
          "Stopped means that the service is unavailable and cannot "
          "be used. \n"
          "Service implies an administrative state of "
          "unavailability. \n"
          "Degraded means that the database service is operating at "
          "a less than optimal level. \n"
          "Starting means that the database service is in the "
          "process of becoming operational. \n"
          "These status values map to the RFC1697 OperStatus values "
          "as follows: OK - UP, Stopped - DOWN, In Service - "
          "HALTED, Stressed - CONGESTED, and Starting - RESTARTING. "
          "Any additional status variables that are defined are "
          "CIM-specific." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoOperStatus" }]
   uint16 OperationalStatus[];

      [Deprecated { "CIM_EnabledLogicalElement.TimeOfLastStateChange" }, 
       Description ( 
          "Note: The LastStatusChangeTime property is deprecated in "
          "lieu of the TimeOfLastStateChange property that is "
          "inherited from CIM_EnabledLogicalElement. \n"
          "Deprecated description: The date and time when the "
          "status of the database service last changed." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoLastChange" }]
   datetime LastStatusChangeTime;

      [Override ( "TimeOfLastStateChange" ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoLastChange" }]
   datetime TimeOfLastStateChange;

      [Description ( 
          "The maximum number of active inbound connections that "
          "can be concurrently opened on the service." ), 
       MappingStrings { 
          "MIB.IETF|RDBMS-MIB.rdbmsSrvInfoMaxInboundAssociations" }]
   uint32 ConnectionLimit;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "The CIM_ServiceAvailableToDatabase association relates "
       "databases to the database services that are available for "
       "database use." )]
class CIM_ServiceAvailableToDatabase : CIM_ServiceAvailableToElement {

      [Override ( "ServiceProvided" ), 
       Description ( 
          "The database service that is providing service." )]
   CIM_DatabaseService REF ServiceProvided;

      [Override ( "UserOfService" ), 
       Description ( "The database that is being served." )]
   CIM_CommonDatabase REF UserOfService;

      [Description ( 
          "The AvailableState property indicates the current state "
          "of a database service regarding its ability to access a "
          "specific database. A service can be actively using a "
          "database (ACTIVE), or it can be waiting for a task to "
          "perform (AVAILABLE), or the service can be less than "
          "completely available for use by the database "
          "(RESTRICTED), or the database is not accessible from "
          "this service (UNAVAILABLE). Any service states that do "
          "not match one of these values should specify (OTHER)." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Active", "Available", "Restricted", 
          "Unavailable" }, 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsRelState" }, 
       ModelCorrespondence { 
          "CIM_ServiceAvailableToDatabase.OtherAvailableState" }]
   uint16 AvailableState;

      [Description ( 
          "A string that describes the available state of the "
          "service when the AvailableState property is set to 1 "
          "(\"Other\"). This property must be set to NULL when "
          "AvailableState is any value other than 1." ), 
       ModelCorrespondence { 
          "CIM_ServiceAvailableToDatabase.AvailableState" }]
   string OtherAvailableState;

      [Description ( 
          "The time that the database was made active by this "
          "service. \n"
          "If the AvailableState property is not active, then the "
          "value of this property must be set to 0." ), 
       MappingStrings { "MIB.IETF|RDBMS-MIB.rdbmsRelActiveTime" }]
   datetime ActiveTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AggregatePExtent 
// ==================================================================
   [Deprecated { "CIM_StorageExtent", "CIM_CompositeExtentBasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "This class is deprecated in lieu of the generic StorageExtent "
       "object and the ProtectedExtentBasedOn association. An "
       "AggregatePExtent is used to model an SCC RAID implementation. "
       "AggregatePExtents provide summary information about the "
       "addressable logical blocks which are in the same "
       "StorageRedundancyGroup and reside on the same storage device. "
       "This is an alternative grouping for PhysicalExtents, when only "
       "summary information is needed or when automatic configuration "
       "is used." )]
class CIM_AggregatePExtent : CIM_StorageExtent {

      [Deprecated { "CIM_CompositeExtentBasedOn.NumberOfBlocks", 
          "CIM_StorageExtent.NumberOfBlocks" }, 
       Override ( "NumberOfBlocks" ), 
       Description ( 
          "Total number of blocks (including the check data blocks) "
          "contained in this AggregatePExtent. The block size (an "
          "inherited property) should be set to the same value as "
          "for the MediaAccessDevice associated with this Extent." ), 
       MappingStrings { "MIF.DMTF|Aggregate Physical Extent|001.2" }]
   uint64 NumberOfBlocks;

      [Deprecated { "CIM_CompositeExtentBasedOn.UnitsOfCheckData" }, 
       Description ( 
          "The number of blocks contained in this AggregatePExtent "
          "to be used as check data. If this AggregatePExtent is "
          "available, then this value shall be zero." ), 
       MappingStrings { "MIF.DMTF|Aggregate Physical Extent|001.3" }]
   uint64 BlocksOfCheckData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AggregatePSExtent 
// ==================================================================
   [Deprecated { "CIM_StorageExtent", "CIM_CompositeExtentBasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Similar to AggregatePExtent, this class is deprecated in lieu "
       "of the generic StorageExtent object and the "
       "ProtectedExtentBasedOn association. An AggregatePSExtent is "
       "used to model an SCC RAID implementation. AggregatePSExtents "
       "define the number of addressable logical blocks on a single "
       "storage device, excluding any logical blocks mapped as check "
       "data. This is an alternative grouping for ProtectedSpace "
       "Extents, when only summary information is needed or when "
       "automatic configuration is used." )]
class CIM_AggregatePSExtent : CIM_StorageExtent {

      [Deprecated { "CIM_CompositeExtentBasedOn.NumberOfBlocks", 
          "CIM_StorageExtent.NumberOfBlocks" }, 
       Override ( "NumberOfBlocks" ), 
       Description ( 
          "Total number of user data blocks that are contained in "
          "this Extent." ), 
       MappingStrings { 
          "MIF.DMTF|Aggregate Protected Space Extent|001.2" }]
   uint64 NumberOfBlocks;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AlarmDevice 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "An AlarmDevice is a type of Device that emits audible or "
       "visible indications related to a problem situation." )]
class CIM_AlarmDevice : CIM_LogicalDevice {

      [Description ( "Boolean indicating that the Alarm is audible." )]
   boolean AudibleAlarm;

      [Description ( "Boolean indicating that the Alarm is visible." )]
   boolean VisibleAlarm;

      [Description ( 
          "Boolean indicating that the Alarm causes motion of the Device."
           )]
   boolean MotionAlarm;

      [Description ( 
          "Urgency is an enumerated value that indicates the "
          "relative frequency at which the Alarm flashes, vibrates "
          "and/or emits audible tones." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "Not Supported", 
          "Informational", "Non-Critical", "Critical", 
          "Unrecoverable" }]
   uint16 Urgency;

      [Description ( "The current state of the alarm." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Off", "Steady", "Alternating" }]
   uint16 AlarmState;

      [Description ( 
          "True indicates that the audio of an AlarmState indicator "
          "has been disabled (i.e. muted). A disabled state here "
          "does not imply that the AlarmState is off." )]
   boolean AudioIndicatorIsDisabled;

      [Description ( 
          "True indicates that the visual of an AlarmState "
          "indicator has been disabled (i.e. dimmed). A disabled "
          "state here does not imply that the AlarmState is off." )]
   boolean VisualIndicatorIsDisabled;

      [Description ( 
          "True indicates that the motion of an AlarmState "
          "indicator has been disabled (i.e. stopped). A disabled "
          "state here does not imply that the AlarmState is off." )]
   boolean MotionIndicatorIsDisabled;


      [Description ( 
          "SetAlarmState is a method for defining the current state "
          "of the Alarm. Its input parameter, RequestedAlarmState, "
          "is specified using the Values list of AlarmDevice\'s "
          "AlarmState property. SetAlarmState returns 0 if the "
          "request is successfully implemented, 1 if the specified "
          "RequestedAlarm State is not supported, and some other "
          "value if any other error occurred. In a subclass, the "
          "set of possible return codes should be specified using a "
          "ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are \'translated\' should be "
          "specified as a Values array qualifier." )]
   uint32 SetAlarmState(
         [IN, Description ( "The desired state for the alarm." ), 
          ValueMap { "0", "1", "2", "3" }, 
          Values { "Unknown", "Off", "Steady", "Alternating" }]
      uint16 RequestedAlarmState);

      [Description ( 
          "SetAlarmIndicator is a method for enabling or disabling "
          "the indicator of the AlarmState function, without "
          "changing the current AlarmState. It has 3 input "
          "parameters, Audio Indicator, VisualIndicator and "
          "MotionIndicator. For all of the input parameters, a "
          "value of 0 indicates no change to the AlarmState "
          "indicator, 1 indicates Disable, and 2 indicates Enable. "
          "The method returns 0 if the request is successfully "
          "implemented, 1 if the specified request is not "
          "supported, and some other value if any other error "
          "occurred. In a subclass, the set of possible return "
          "codes should be specified using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' should be specified as a Values array "
          "qualifier." )]
   uint32 SetAlarmIndicator(
         [IN, Description ( "The state for the audio indicator." ), 
          ValueMap { "0", "1", "2" }, 
          Values { "No Change", "Disable", "Enable" }]
      uint16 AudioIndicator, 
         [IN, Description ( "The state for the visual indicator." ), 
          ValueMap { "0", "1", "2" }, 
          Values { "No Change", "Disable", "Enable" }]
      uint16 VisualIndicator, 
         [IN, Description ( "The state for the motion indicator." ), 
          ValueMap { "0", "1", "2" }, 
          Values { "No Change", "Disable", "Enable" }]
      uint16 MotionIndicator);

      [Description ( 
          "SetUrgency is a method for defining the desired urgency "
          "level for the Alarm. Its input parameter, "
          "RequestedUrgency, is specified using the Values list of "
          "AlarmDevice\'s Urgency property. SetUrgency returns 0 if "
          "the request is successfully implemented, 1 if the "
          "specified Urgency level is not supported, and some other "
          "value if any other error occurred. In a subclass, the "
          "set of possible return codes should be specified using a "
          "ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are \'translated\' should be "
          "specified as a Values array qualifier." )]
   uint32 SetUrgency(
         [IN, Description ( "Desired urgency for the alarm." ), 
          ValueMap { "1", "3", "4", "5", "6" }, 
          Values { "Other", "Informational", "Non-Critical", 
             "Critical", "Unrecoverable" }]
      uint16 RequestedUrgency);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedAlarm 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "LogicalDevices may have one or more AlarmDevices associated "
       "with them, in order to indicate problem situations. This "
       "relationship is indicated by the AssociatedAlarm dependency." )]
class CIM_AssociatedAlarm : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The AlarmDevice." )]
   CIM_AlarmDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The LogicalDevice that is alarmed." )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.26.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Capabilities and management of the Battery. This class applies "
       "to both batteries in Laptop Systems and other internal or "
       "external batteries, such as an uninterruptible power supply "
       "(UPS)." )]
class CIM_Battery : CIM_LogicalDevice {

      [Description ( 
          "Description of the charge status of the Battery. Values "
          "such as \"Fully Charged\" (value=3) or \"Partially "
          "Charged\" (value=11) can be specified. The value, 10, is "
          "not valid in the CIM Schema because in DMI it represents "
          "that no battery is installed. In this case, this object "
          "should not be instantiated. The valuemaps: 6(Charging), "
          "7(Charging and High), 8(Charging and Low), and 9(Charing "
          "and Critical) has been deprecated in lieu of the "
          "ChargingStatus property. 10(Undefined) has been "
          "deprecated in lieu of 2(Unknown)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "..", "32768..65535" }, 
       Values { "Other", "Unknown", "Fully Charged", "Low", 
          "Critical", "Charging", "Charging and High", 
          "Charging and Low", "Charging and Critical", "Undefined", 
          "Partially Charged", "Learning", "Overcharged", 
          "DMTF Reserved", "Vendor Specific" }, 
       MappingStrings { "MIF.DMTF|Portable Battery|003.14" }]
   uint16 BatteryStatus;

      [Description ( 
          "TimeOnBattery indicates the elapsed time in seconds "
          "since the ComputerSystem, UPS, or so on, last switched "
          "to battery power, or the time since the System or UPS "
          "was last restarted, whichever is less. Zero is returned "
          "if the Battery is \'on line\'." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 TimeOnBattery;

      [Description ( 
          "EstimatedRunTime is an estimate in minutes of the time "
          "that battery charge depletion will occur under the "
          "present load conditions if the utility power is off, or "
          "is lost and remains off, or a Laptop is disconnected "
          "from a power source." ), 
       Units ( "Minutes" ), 
       MappingStrings { "MIF.DMTF|Portable Battery|003.15" }, 
       PUnit ( "minute" )]
   uint32 EstimatedRunTime;

      [Description ( 
          "An estimate of the percentage of full charge remaining." ), 
       Units ( "Percent" ), 
       Gauge, PUnit ( "percent" )]
   uint16 EstimatedChargeRemaining;

      [Description ( 
          "An enumeration that describes the chemistry of the Battery."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "32768..65535" }, 
       Values { "Other", "Unknown", "Lead Acid", "Nickel Cadmium", 
          "Nickel Metal Hydride", "Lithium-ion", "Zinc air", 
          "Lithium Polymer", "DMTF Reserved", "Vendor Specified" }, 
       MappingStrings { "MIF.DMTF|Portable Battery|003.7" }]
   uint16 Chemistry;

      [Description ( 
          "The design capacity of the battery in mWatt-hours. If "
          "this property is not supported, enter 0." ), 
       Units ( "MilliWattHours" ), 
       MappingStrings { "MIF.DMTF|Portable Battery|003.8" }, 
       PUnit ( "watt * hour * 10^-3" )]
   uint32 DesignCapacity;

      [Description ( 
          "The full charge capacity of the battery in mWatt-hours. "
          "Comparison of this value to the Battery DesignCapacity "
          "determines when the Battery requires replacement. The "
          "end of life of a Battery is typically when the "
          "FullCharge Capacity falls below 80% of the "
          "DesignCapacity. If this property is not supported, enter "
          "0." ), 
       Units ( "MilliWattHours" ), 
       MappingStrings { "MIF.DMTF|Portable Battery|003.11" }, 
       PUnit ( "watt * hour * 10^-3" )]
   uint32 FullChargeCapacity;

      [Description ( 
          "The design voltage of the battery in mVolts. If this "
          "attribute is not supported, enter 0." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Portable Battery|003.9" }, 
       PUnit ( "volt * 10^-3" )]
   uint64 DesignVoltage;

      [Description ( 
          "The Smart Battery Data Specification version number that "
          "is supported by this Battery. If the Battery does not "
          "support this function, the value should be left blank." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Portable Battery|003.10" }]
   string SmartBatteryVersion;

      [Description ( 
          "The remaining time in minutes to charge the battery "
          "fully at the current charging rate and usage." ), 
       Units ( "Minutes" ), 
       MappingStrings { "MIF.DMTF|Portable Battery|003.16" }, 
       PUnit ( "minute" )]
   uint32 TimeToFullCharge;

      [Description ( 
          "Indicates the expected lifetime of the Battery in "
          "minutes, assuming that the Battery is fully charged. "
          "This property represents the total expected life of the "
          "Battery, not its current remaining life, which is "
          "indicated by the EstimatedRunTime property." ), 
       Units ( "Minutes" ), 
       PUnit ( "minute" )]
   uint32 ExpectedLife;

      [Description ( 
          "MaxRechargeTime indicates the maximum time, in minutes, "
          "to fully charge the Battery. This property represents "
          "the time to recharge a fully depleted Battery, not the "
          "current remaining charging time, which is indicated in "
          "the TimeToFullCharge property." ), 
       Units ( "Minutes" ), 
       PUnit ( "minute" )]
   uint32 MaxRechargeTime;

      [Description ( 
          "The number of times the Battery has been recharged." )]
   uint32 RechargeCount;

      [Description ( 
          "The maximum number of times the Battery can be recharged." )]
   uint32 MaxRechargeCount;

      [Description ( 
          "The Battery\'s remaining charge capacity in mWatt-hours." ), 
       Units ( "MilliWattHours" ), 
       PUnit ( "watt * hour * 10^-3" )]
   uint32 RemainingCapacity;

      [Description ( 
          "The maximum error (as a percentage) in the mWatt-hour "
          "data reported by RemainingCapacity property." ), 
       Units ( "Percentage" ), 
       PUnit ( "percent" )]
   uint8 RemainingCapacityMaxError;

      [Description ( 
          "The description of the battery chemistry when the "
          "Chemistry property has value 1 (Other). The property "
          "shall be implemented if the Chemistry property has value "
          "1(Other)." )]
   string OtherChemistryDescription;

      [Description ( 
          "ChargingStatus indicates whether the battery is "
          "charging. Charging - the battery is charging. "
          "Discharging - the battery is discharging. Idle - the "
          "batter is neither charging nor discharging." ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Charging", "Discharging", "Idle", 
          "DMTF Reserved", "Vendor Specified" }]
   uint16 ChargingStatus;

      [Description ( 
          "An estimate of the percentage of the overall battery "
          "health. It indicates how much the battery has "
          "deteriorated over time. It can take values 0 to 100; 255 "
          "if it is unknown." ), 
       Units ( "Percentage" ), 
       PUnit ( "percent" )]
   uint8 HealthPercent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CompositeExtent 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A CompositeExtent is used to model the distribution of user "
       "data across one or more underlying StorageExtents, which may "
       "or not be protected by some redundancy mechanism. "
       "CompositeExtents represent a contiguous range of logical "
       "blocks. CompositeExtents may overlap, however, the underlying "
       "StorageExtents within the overlap shall not contain any check "
       "data. Distribution of check data may be specified using the "
       "CompositeExtentBasedOn association." )]
class CIM_CompositeExtent : CIM_StorageExtent {

      [Override ( "NumberOfBlocks" ), 
       MappingStrings { "MIF.DMTF|Volume Set|001.3" }]
   uint64 NumberOfBlocks;

      [Description ( 
          "Number of contiguous underlying StorageExtents counted "
          "before looping back to the first underlying "
          "StorageExtent of the current stripe. It is the number of "
          "StorageExtents forming the user data stripe." ), 
       MappingStrings { "MIF.DMTF|Volume Set|001.4" }]
   uint64 ExtentStripeLength;

      [Description ( 
          "Number of StorageExtents to stripe as a collective set. "
          "In SCC, this value is defined as the number of stripes "
          "to count before continuing to map into the next "
          "contiguous set of Extents, beyond the current stripe." ), 
       MappingStrings { "MIF.DMTF|Volume Set|001.5" }]
   uint64 ExtentInterleaveDepth;

      [Description ( 
          "True indicates that the data is concatenated across the "
          "various StorageExtents in the Group." )]
   boolean IsConcatenated;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConfigurationReportingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "Service to provide reports on current configuration and "
       "potential for growth. The service may be used in several "
       "circumstances: \n"
       "- To report growth potential (how many can I have) \n"
       "- To report information on objects not directly modeled for "
       "performance or other reasons. \n"
       "It can also report counts of \'things\' or counts of \'units\'. "
       "For example, the number of disk drives could be reported or "
       "the capacity that they would provide." )]
class CIM_ConfigurationReportingService : CIM_Service {


      [Description ( 
          "Returns a list of classes that the given Managed Element "
          "supports or has installed." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "DMTF Reserved", "Vendor Specific" }]
   uint32 GetClassTypes(
         [IN, Description ( 
             "The type of inquiry to be performed." ), 
          ValueMap { "2", "3" }, 
          Values { "Supports", "Installed" }]
      uint16 InquiryType, 
         [IN, Description ( 
             "False : Only report on elements directly contained "
             "in/attached to the given ManagedElement. \n"
             "True : Report on all objects contained in/attached "
             "to the given ManagedElement." )]
      boolean Recursive, 
         [IN, Description ( 
             "The target of query, for example a rack or a chassis."
              )]
      CIM_ManagedElement REF Target, 
         [IN ( false ), OUT, Description ( 
             "Array containing the class names (typically the "
             "leaf classes) that the given ManagedElement can "
             "support or has installed." )]
      string ClassTypes[]);

      [Description ( 
          "Returns a list of UnitTypes that are installed for a "
          "given ClassType on a given ManagedElement." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "DMTF Reserved", "Vendor Specific" }]
   uint32 GetUnitTypes(
         [IN, Description ( 
             "The type of inquiry to be performed." ), 
          ValueMap { "2", "3" }, 
          Values { "Supported", "Installed" }]
      uint16 InquiryType, 
         [IN, Description ( 
             "False : Only report on elements directly contained "
             "in/attached to the given ManagedElement. \n"
             "True : Report on all objects contained in/attached "
             "to the given ManagedElement." )]
      boolean Recursive, 
         [IN, Description ( 
             "The target of query, for example a rack or a chassis."
              )]
      CIM_ManagedElement REF Target, 
         [IN, Description ( 
             "The ClassType for the query. This should be a "
             "entry returned in the GetClassTypes.ClassTypes "
             "property." )]
      string ClassType, 
         [IN ( false ), OUT, Description ( 
             "A list of supported UnitTypes." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "..", "32768..65535" }, 
          Values { "None", "Front Side", "Back Side", 
             "Contained", "Connected", "I/O", "Memory", 
             "StorageMediaLocation", "Megabytes", 
             "DMTF Reserved", "Vendor Specific" }, 
          ModelCorrespondence { 
             "CIM_ConfigurationReportingService.ReportCapacity(UnitType)" }]
      uint16 UnitTypes[]);

      [Description ( 
          "Returns the maximum number supported or the number of "
          "currently installed units for the given UnitType, for a "
          "given ClassType on a given ManagedElement." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "DMTF Reserved", "Vendor Specific" }]
   uint32 ReportCapacity(
         [IN, Description ( 
             "The type of inquiry to be performed." ), 
          ValueMap { "2", "3" }, 
          Values { "Supported", "Installed" }]
      uint16 InquiryType, 
         [IN, Description ( 
             "False : Only report on elements directly contained "
             "in/attached to the given ManagedElement. \n"
             "True : Report on all objects contained in/attached "
             "to the given ManagedElement." )]
      boolean Recursive, 
         [IN, Description ( 
             "The target of query, for example a rack or a chassis."
              )]
      CIM_ManagedElement REF Target, 
         [IN, Description ( 
             "The ClassType for the query. This should be a "
             "entry returned in the GetClassTypes.ClassTypes "
             "property." )]
      string ClassType, 
         [IN, Description ( "The UnitType for the query." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "..", "32768..65535" }, 
          Values { "None", "Front Side", "Back Side", 
             "Contained", "Connected", "I/O", "Memory", 
             "StorageMediaLocation", "Megabytes", 
             "DMTF Reserved", "Vendor Specific" }, 
          ModelCorrespondence { 
             "CIM_ConfigurationReportingService.GetUnitTypes(UnitTypes)" }]
      uint16 UnitType, 
         [IN ( false ), OUT, Description ( 
             "The maximum number of supported or the number of "
             "currently installed units." )]
      uint64 NumberOfUnits);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ===================================================================
// CIM_Controller
// ===================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Controller is a superclass for grouping the miscellaneous "
       "control-related Devices that provide a classic bus master "
       "interface. Examples of Controllers are USBControllers, "
       "SerialControllers, and so on. The Controller class is an "
       "abstraction for Devices with a single protocol stack, which "
       "exist to control communications (data, control, and reset) to "
       "downstream devices. Note that a new abstract class "
       "(ProtocolController) has been created to model more complex "
       "interface controllers such as SCSI." )]
class CIM_Controller : CIM_LogicalDevice {

      [Description ( "Time of last reset of the Controller." )]
   datetime TimeOfLastReset;

      [Description ( 
          "The protocol used by the Controller to access controlled Devices."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48" }, 
       Values { "Other", "Unknown", "EISA", "ISA", "PCI", 
          "ATA/ATAPI", "Flexible Diskette", "1496", 
          "SCSI Parallel Interface", 
          // 10               
          "SCSI Fibre Channel Protocol", 
          "SCSI Serial Bus Protocol", 
          "SCSI Serial Bus Protocol-2 (1394)", 
          "SCSI Serial Storage Architecture", "VESA", "PCMCIA", 
          "Universal Serial Bus", "Parallel Protocol", "ESCON", 
          "Diagnostic", // 20               
          "I2C", 
          "Power", "HIPPI", "MultiBus", "VME", "IPI", "IEEE-488", 
          "RS232", "IEEE 802.3 10BASE5", "IEEE 802.3 10BASE2", 
          // 30               
          "IEEE 802.3 1BASE5", 
          "IEEE 802.3 10BROAD36", "IEEE 802.3 100BASEVG", 
          "IEEE 802.5 Token-Ring", "ANSI X3T9.5 FDDI", "MCA", 
          "ESDI", "IDE", "CMD", "ST506", 
          // 40               
          "DSSI", "QIC2", 
          "Enhanced ATA/IDE", "AGP", "TWIRP (two-way infrared)", 
          "FIR (fast infrared)", "SIR (serial infrared)", "IrBus", 
          "Serial ATA" }, 
       MappingStrings { "MIF.DMTF|Bus Port|004.2", 
          "MIF.DMTF|Disks|003.3" }, 
       ModelCorrespondence { "CIM_Controller.ProtocolDescription" }]
   uint16 ProtocolSupported;

      [Description ( 
          "Maximum number of directly addressable entities that are "
          "supported by this Controller. A value of 0 should be "
          "used if the number is unknown or unlimited." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.9" }]
   uint32 MaxNumberControlled;

      [Description ( 
          "A free-form string that provides more information that "
          "is related to the ProtocolSupported by the Controller." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.3" }, 
       ModelCorrespondence { "CIM_Controller.ProtocolSupported" }]
   string ProtocolDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CoolingDevice
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( "Capabilities and management of CoolingDevices." )]
class CIM_CoolingDevice : CIM_LogicalDevice {

      [Description ( 
          "ActiveCooling is a Boolean that indicates that the "
          "Cooling Device provides active (as opposed to passive) "
          "cooling." )]
   boolean ActiveCooling;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_DeviceConnection
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "The DeviceConnection relationship indicates that two or more "
       "Devices are connected together." )]
class CIM_DeviceConnection : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "A LogicalDevice." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A second LogicalDevice that is connected to the Antecedent Device."
           )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "When several bus and connection speeds are possible, the "
          "NegotiatedSpeed property defines the one that is in use "
          "between the Devices. Speed is specified in bits per "
          "second. If connection or bus speeds are not negotiated, "
          "or if this information is not available or not important "
          "to Device management, the property should be set to 0." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIF.DMTF|Bus Port Association|001.2" }, 
       PUnit ( "bit / second" )]
   uint64 NegotiatedSpeed;

      [Description ( 
          "When several bus and connection data widths are "
          "possible, the NegotiatedDataWidth property defines the "
          "one that is in use between the Devices. Data width is "
          "specified in bits. If data width is not negotiated, or "
          "if this information is not available or not important to "
          "Device management, the property should be set to 0." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Bus Port Association|001.3" }, 
       PUnit ( "bit" )]
   uint32 NegotiatedDataWidth;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceIdentity 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "CIM_DeviceIdentity indicates that two LogicalDevices represent "
       "different aspects of the same underlying entity. This "
       "association refines the CIM_LogicalIdentity superclass by "
       "restricting it to the Device level and defining its use in "
       "well understood scenarios. One of these scenarios is to "
       "represent that a Device is both a \'bus\' entity and a "
       "\'functional\' entity. For example, a Device could be both a "
       "PCI Device (or a USB Device), as well as a CIM_Keyboard. The "
       "other scenario is where a Device plays multiple functional "
       "roles that can not be distinguished by their hardware "
       "realization alone. For example, a Fibre Channel adapter might "
       "have aspects of both a NetworkAdapter and a SCSIController." )]
class CIM_DeviceIdentity : CIM_LogicalIdentity {

      [Override ( "SystemElement" ), 
       Description ( 
          "SystemElement represents one aspect of the Device." )]
   CIM_LogicalDevice REF SystemElement;

      [Override ( "SameElement" ), 
       Description ( 
          "SameElement represents an alternate aspect of the System entity."
           )]
   CIM_LogicalDevice REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceSoftware
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "The DeviceSoftware relationship identifies any software that "
       "is associated with a Device such as drivers, configuration, or "
       "application software, or firmware." )]
class CIM_DeviceSoftware : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The SoftwareElement." )]
   CIM_SoftwareElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDevice that requires or uses the software." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "An enumerated integer that indicates the role that this "
          "software plays in regards to its associated Device. For "
          "example, this software could be instrumentation "
          "(value=5) or firmware (value=6)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Driver", 
          "Configuration Software", "Application Software", 
          "Instrumentation", "Firmware", "BIOS", "Boot ROM" }, 
       MappingStrings { "MIF.DMTF|SubComponent Software|001.2" }, 
       ModelCorrespondence { "CIM_DeviceSoftware.PurposeDescription" }]
   uint16 Purpose;

      [Description ( 
          "A free-form string that provides more information for "
          "the Purpose property, for example, \"Application "
          "Software\"." ), 
       ModelCorrespondence { "CIM_DeviceSoftware.Purpose" }]
   string PurposeDescription;

      [Description ( 
          "Boolean that indicates that the software is \'burned "
          "into\' or otherwise located on the hardware of the "
          "LogicalDevice." )]
   boolean LoadedOnDevice;

      [Description ( 
          "Boolean that indicates whether the software is "
          "upgradeable, when it is LoadedOnDevice. Software that is "
          "loaded as part of the OperatingSystem is typically "
          "changeable and upgradeable. However, when DeviceSoftware "
          "is burned into EEPROM or a chip that realizes the "
          "LogicalDevice, then it might not be upgradeable. This "
          "property indicates the ability to update and upgrade "
          "DeviceSoftware." )]
   boolean UpgradeableOnDevice;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_Door 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "A Door is the abstraction of hardware providing access to the "
       "internal componentry of a System. When a Door is \'opened\', "
       "typically all accessible, moving components are stopped or "
       "suspended to prevent physical harm." )]
class CIM_Door : CIM_LogicalDevice {

      [Description ( 
          "Boolean indicating the \'open\' (TRUE) or \'closed\' "
          "(FALSE) status of the Door." )]
   boolean Open;

      [Description ( 
          "Boolean indicating that the Door is \'locked\' (TRUE) or "
          "\'unlocked\' (FALSE). When the Door is locked, access to "
          "the componentry is prevented, without the use of a "
          "physical key or the issuance of a software unlock "
          "command." )]
   boolean Locked;

      [Description ( 
          "When a Door is \'Open\', all accessible, moving "
          "componentry and Device operation are typically stopped. "
          "The Timeout property provides a mechanism to event on a "
          "Door left open for a period of time (in seconds) "
          "exceeding the property\'s value." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 Timeout;

      [Description ( "Date and time that the Door was last opened." )]
   datetime LastOpened;

      [Description ( 
          "The Capabilities of the Door. For example, information "
          "on whether the Door is \"Host System Lockable\" "
          "(value=2) and/or whether a key is available (value=3) "
          "are specified in this property. The value 4, \"All "
          "Drives Dismounted Before Access\", pertains to a Door on "
          "a StorageLibrary or set of drive bays. If specified for "
          "the Door, it means that it can not be opened unless all "
          "Media are first unloaded from the accessible "
          "MediaAccessDevices." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Host System Lockable", 
          "Physical Key", "All Drives Dismounted Before Access" }]
   uint16 Capabilities[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DoorAccessToDevice 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Doors provide access to PhysicalElements for hot swap, repair "
       "and similar activities. In turn, PhysicalElements \'Realize\' "
       "LogicalDevices. Since it may not be possible to define all the "
       "PhysicalElements that exist, and optimizing the retrieval of "
       "Devices \'behind\' the Door may be desirable, the DoorAccessTo "
       "Device association provides a shortcut mechanism for defining "
       "the LogicalDevices (\'hardware\') accessed through a Door." )]
class CIM_DoorAccessToDevice : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Door that provides access." )]
   CIM_Door REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The LogicalDevice that is accessed." )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DoorAccessToPhysicalElement 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Doors provide access to PhysicalElements for hot swap, repair "
       "and similar activities. The entities accessed through a Door "
       "are indicated in this relationship." )]
class CIM_DoorAccessToPhysicalElement : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Door that provides access." )]
   CIM_Door REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PhysicalElement that is accessed." )]
   CIM_PhysicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ErrorCountersForDevice
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "ErrorCountersForDevice relates the DeviceErrorCounts class to "
       "the LogicalDevice to which it applies." )]
class CIM_ErrorCountersForDevice : CIM_Statistics {

      [Override ( "Stats" ), 
       Weak, Description ( 
          "The statistical object, in this case, the error counter class."
           )]
   CIM_DeviceErrorCounts REF Stats;

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Device to which the error counters apply." )]
   CIM_LogicalDevice REF Element;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ESCONController 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( "Capabilities and management of an ESCONController." )]
class CIM_ESCONController : CIM_Controller {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ExtentInDiskGroup
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DiskGroup" ), 
    Description ( 
       "CIM_ExtentInDiskGroup defines the StorageExtents that are "
       "located within and restricted by the Group." )]
class CIM_ExtentInDiskGroup : CIM_CollectedMSEs {

      [Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( 
          "The DiskGroup. An Extent is defined within at most one DiskGroup."
           )]
   CIM_DiskGroup REF Collection;

      [Override ( "Member" ), 
       Description ( 
          "The StorageExtent that is restricted by and "
          "participating in the Group." )]
   CIM_StorageExtent REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Fan 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( "Capabilities and management of a Fan CoolingDevice." )]
class CIM_Fan : CIM_CoolingDevice {

      [Description ( 
          "Indication of whether the fan supports variable speeds." )]
   boolean VariableSpeed;

      [Description ( 
          "DesiredSpeed is the currently requested fan speed, "
          "defined in Revolutions per Minute, when a variable speed "
          "fan is supported (VariableSpeed boolean = TRUE). The "
          "current speed is determined via a sensor "
          "(CIM_Tachometer) that is associated with the Fan using "
          "the CIM_AssociatedSensor relationship." ), 
       Units ( "Revolutions per Minute" )]
   uint64 DesiredSpeed;


      [Description ( 
          "Requests that the Fan speed be set to the value "
          "specified in the method\'s input parameter. The return "
          "value should be 0 if the request was successfully "
          "executed, 1 if the request is not supported and some "
          "other value if an error occurred. In a subclass, the set "
          "of possible return codes could be specified, using a "
          "ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 SetSpeed(
         [IN, Description ( "The desired speed for the fan." )]
      uint64 DesiredSpeed);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FibreProtocolService
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "FibreProtocolService abstracts and allows the management of "
       "the Alias, Management, Time, Security, Directory (Naming), and "
       "other services and functions that are available in a Fibre "
       "Channel network. This class will be further defined in a later "
       "release of CIM." )]
class CIM_FibreProtocolService : CIM_Service {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Processor" ), 
    Description ( 
       "The CIM_HardwareThread class inherits from "
       "CIM_EnabledLogicalElement and represents a specific processor "
       "hardware thread. CIM_HardwareThread instances are related to "
       "the CIM_ProcessorCore instance they are based on." )]
class CIM_HardwareThread : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. \n"
          "In order to ensure uniqueness within the NameSpace, the "
          "value of InstanceID SHOULD be constructed using the "
          "following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "Loading of this processor hardware thread, averaged over "
          "the last minute, in Percent." ), 
       Units ( "Percent" ), 
       Gauge, PUnit ( "percent" )]
   uint16 LoadPercentage;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HeatPipe 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Capabilities and management of a HeatPipe CoolingDevice." )]
class CIM_HeatPipe : CIM_CoolingDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IBSubnetManager 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::IB" ), 
    Description ( 
       "An Infiniband Subnet Manager (SM) is an entity responsible for "
       "configuring and managing an IB subnet. It uses Subnet "
       "Management Agents (SMA) to access and manage individual nodes. "
       "The SM is hosted in the context of a specific computer system "
       "(i.e., hosted by an instance of UnitaryComputerSystem), as "
       "described by the HostedService association. Note that there "
       "may be multiple SMs operating in a subnet, but only the "
       "elected master is allowed to perform configuration functions." )]
class CIM_IBSubnetManager : CIM_Service {

      [Write, Description ( 
          "Administratively assigned priority for this SM, used to "
          "establish the master. A higher number indicates a higher "
          "priority and likelihood of becoming the master. The "
          "property value can be reset by the master SM." ), 
       MappingStrings { "MAD.IBTA | SMInfo | Priority" }]
   uint8 Priority;

      [Description ( 
          "Enumerated value that indicates the Subnet Manager\'s "
          "State. The values are fairly self-explanatory except for "
          "\"Not Active\". This value indicates that the SM is "
          "available to participate in the subnet, but has not been "
          "given permission. A value \"Unknown\" (0) is also "
          "defined." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Not Active", "Discovering", "Standby", 
          "Master" }, 
       MappingStrings { "MAD.IBTA | SMInfo | SMState" }]
   uint16 State;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IDEController 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( "Capabilities and management of an IDEController." )]
class CIM_IDEController : CIM_Controller {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "CIM_IndicatorLED represents an LED of a managed element used "
       "to indicate one or more conditions for the managed element. A "
       "single discrete package may be represented by one or more "
       "instances of CIM_IndicatorLED. There shall be an instance of "
       "CIM_IndicatorLED for each IndicatedCondition that may be "
       "indicated simultaneously by the discrete package. For example, "
       "if a single LED is capable of flashing yellow for one "
       "condition and blue for a different one, but the conditions are "
       "not indicated simultaneously, it is modeled using a single "
       "instance of CIM_IndicatorLED that supports both colors. If the "
       "LED indicated both conditions simultaneously, i.e. the package "
       "was lit yellow and blue simultaneously, there would be two "
       "instances of CIM_IndicatorLED." )]
class CIM_IndicatorLED : CIM_LogicalDevice {

      [Override ( "ElementName" ), 
       Description ( 
          "ElementName specifies an identifier for the LED. The "
          "value of ElementName shall be constructed using the "
          "following \"preferred\" algorithm: <OrgID>::<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by two colons "
          "(::), and where <OrgID> shall include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "ControlPattern or that is a registered ID assigned to "
          "the business entity by a recognized global authority. "
          "<LocalID> is chosen by the business entity and should "
          "not be reused to identify different underlying "
          "(real-world) elements." )]
   string ElementName;

      [Description ( 
          "The condition indicated by the LED. 2 \"Not Applicable\" "
          "shall indicate the LED is currently not assigned an "
          "interpretation. \n"
          "3 \"Location\" shall indicate the LED is used to "
          "indicate the location of associated managed elements.\n"
          "4 \"Attention\" shall indicate the LED is used to "
          "indicate the associated managed elements requires the "
          "attention of service personnel.\n"
          "5 \"Activity\" shall indicate the LED is used to "
          "indicate activity is occurring for the associated "
          "managed elements. The type of activity indicated is "
          "specific to the associated managed elements.\n"
          "6 \"Powered On\" shall indicate the LED is used to "
          "indicate if the associated managed elements are "
          "receiving power. \n"
          "7 \"Fault\" shall indicate the LED is used to indicate "
          "if the associated managed elements are in a fault, "
          "error, or otherwise degraded state." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "..", 
          "32768..65535" }, 
       Values { "Unknown", "Other", "Not Applicable", "Location", 
          "Attention", "Activity", "Powered On", "Fault", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_IndicatorLED.OtherIndicatedConditionDescription" }]
   uint16 IndicatedConditions[];

      [Description ( 
          "This property shall have a value if IndicatedCondition "
          "contains the value 1 \"Other\"." ), 
       ModelCorrespondence { "CIM_IndicatorLED.IndicatedCondition" }]
   string OtherIndicatedConditionDescription;

      [Write, Description ( 
          "This property shall indicate the current color of the "
          "LED. If the value of the ActivationState property is 4 "
          "\"Off\" this property shall indicate the color of the "
          "LED the last time it was lit, or shall have the value 2 "
          "\"Not Applicable\"." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Not Applicable", "White", 
          "Red", "Green", "Blue", "Orange", "Yellow", "Black", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_IndicatorLED.OtherColorDescription", 
          "CIM_IndicatorLEDCapabilities.SupportedColors" }]
   uint16 Color;

      [Write, Description ( 
          "This property shall have a value if Color contains the "
          "value 1 \"Other\"." ), 
       ModelCorrespondence { "CIM_IndicatorLED.Color", 
          "CIM_IndicatorLEDCapabilities.OtherSupportedColorDescriptions" }]
   string OtherColorDescription;

      [Write, Description ( 
          "ControlMode indicates the current control mode for the "
          "LED.2 \"Automatic\" shall indicate the state of the LED "
          "is being controlled by the management infrastructure. 3 "
          "\"Manual\" shall indicate the state of the LED is being "
          "controlled by a management client. 4 \"Test\" shall "
          "indicate the LED is in a test mode." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "Automatic", "Manual", "Test", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_IndicatorLEDCapabilities.SupportedControlModes" }]
   uint16 ControlMode;

      [Description ( 
          "DefaultActivationState indicates the default state of an "
          "LED. See ActivationState for a description of the "
          "values." ), 
       ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Lit", "Blinking", "Off", "Control Pattern", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 DefaultActivationState;

      [Write, Description ( 
          "ActivationState indicates the current activity of an "
          "LED. An LED may exhibit behaviors that vary greatly in "
          "complexity. If the behavior of the LED is simple or a "
          "detailed depiction of the behavior is unnecessary to "
          "convey to client applications, values of than 5 "
          "\"ControlPattern\" may be used to indicate the behavior. "
          "If the behavior is complex and detailed information "
          "about the behavior is meaningful to a client, the value "
          "5 \"ControlPattern\" shall be used to indicate the "
          "ControlPattern property describes the behavior. \n"
          "2 \"Lit\" shall indicate the LED is continuously "
          "illuminated without variation in color or intensity. 3 "
          "\"Blinking\" shall indicate the LED is alternating "
          "between illuminated and not illuminated in a regular "
          "pattern without variation in color or intensity. The "
          "pattern is not indicated. \n"
          "4 \"Off\" shall indicate the LED is not illuminated. 5 "
          "\"ControlPattern\" shall indicate the LED is exhibiting "
          "behavior that is described using the ControlPattern "
          "property." ), 
       ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Lit", "Blinking", "Off", "Control Pattern", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IndicatorLED.ControlPattern", 
          "CIM_IndicatorLEDCapabilities.SupportedActivationStates" }]
   uint16 ActivationState;

      [Write, Description ( 
          "An LED may exhibit a range of behavior from very simple "
          "(ex. solid on) to very complicated (ex. a series of "
          "blinks of alternating color and duration). "
          "ControlPattern specifies the vendor or standard behavior "
          "exhibited by the LED if it cannot be described using one "
          "of the standard behaviors listed for the ActivationState "
          "property. \n"
          "If ActivationState has the value 5 \"ControlPattern\", "
          "the ControlPattern property shall not be NULL. \n"
          "The value of ControlPattern shall be constructed using "
          "the following \"preferred\" algorithm: "
          "<OrgID>::<Pattern> \n"
          "Where <OrgID> and < Pattern> are separated by two colons "
          "(::), and where <OrgID> shall include a copyrighted, "
          "trademarked, or otherwise unique name that is owned by "
          "the business entity that is creating or defining the "
          "ControlPattern or that is a registered ID assigned to "
          "the business entity by a recognized global authority. If "
          "the definition of the value is specified by the DMTF, "
          "the value of <OrgID> shall be \"DMTF\". <Pattern> is "
          "chosen by the business entity and shall not be reused to "
          "identify different underlying (real-world) behaviors. If "
          "the behavior specified for the LED adheres to a standard "
          "or proprietary specification, <Pattern> shall be a "
          "uniquely assigned value identifying the behavior. If the "
          "behavior for the LED is described using a standard or "
          "proprietary grammar, <Pattern> shall be prefixed with a "
          "uniquely assigned identifier for the grammar." ), 
       ModelCorrespondence { "CIM_IndicatorLED.ActivationState", 
          "CIM_IndicatorLEDCapabilities.SupportedControlPatterns" }]
   string ControlPattern;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InfraredController 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of an InfraredController." )]
class CIM_InfraredController : CIM_Controller {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LabelReader 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "LabelReaders represent hardware capable of scanning or reading "
       "a physical label or the NonVolatileMemory on a PhysicalMedia. "
       "Examples of labels include barcode and OCR tags." )]
class CIM_LabelReader : CIM_LogicalDevice {

      [Description ( 
          "An array of enumerated integers describing the formats "
          "of the labels that can be read or scanned by the "
          "LabelReader. The values specified for this property "
          "correspond to those defined for "
          "CIM_PhysicalMedia.LabelFormats." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Barcode", "Radio Frequency Identification", 
          "OCR (Optical Character Recognition)", 
          "MICR (Magnetic Ink Character Recognition)", 
          "7 Character Barcode", "9 Character Barcode" }, 
       ModelCorrespondence { "CIM_PhysicalMedia.LabelFormats" }]
   uint16 SupportedFormats[];

      [Description ( 
          "The technology used by the LabelReader. One entry of the "
          "Values array requires some explanation - \"Memory "
          "Reader\". The latter describes the ability to access "
          "memory in a PhysicalMedia\'s packaging (for example, "
          "memory on an AIT tape). The existence of this Memory is "
          "indicated by the MemoryWithMedia association on the "
          "physical side, or by AssociatedMemory on the logical "
          "side." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "Laser", "Infrared", "RF", 
          "Camera", "Memory Reader" }]
   uint16 Technology;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01530.000" type ="add">Correct ValueMaps</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00904" type="add">Correct descriptions
// use of MAY and MUST to may and shall.</change>
// ==================================================================
//  CIM_LogicalDisk
// ==================================================================
   [Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A LogicalDisk is a presentation of a contiguous range of "
       "logical blocks that is identifiable by applications such as "
       "filesystems via the Name field. (DeviceID (key) may use the "
       "same name or some other unique text such as a UUID.) For "
       "example in a Windows environment, the Name field may contain a "
       "drive letter. In a Unix environment, it may contain the access "
       "path (for example, \'/dev/...\'); and in a NetWare "
       "environment, may contain the volume name. LogicalDisks are "
       "typically built on a DiskPartition or other LogicalDisks (for "
       "instance, those exposed by a software volume manager). "
       "However, it can be based on other StorageExtents, like "
       "CIM_Memory, in the case of a RAM disk. \n"
       "\n"
       "LogicalDisks SHOULD set the \'Exported\' value in "
       "ExtentStatus[] if they are intended for application use." )]
class CIM_LogicalDisk : CIM_StorageExtent {

      [Override ( "NameFormat" ), 
       Description ( 
          "LogicalDisk names shall use OS Device Name format." ), 
       ValueMap { "1", "12" }, 
       Values { "Other", "OS Device Name" }]
   uint16 NameFormat = 12;

      [Override ( "NameNamespace" ), 
       Description ( 
          "LogicalDisk names shall use OS Device Namespace." ), 
       ValueMap { "1", "8" }, 
       Values { "Other", "OS Device Namespace" }]
   uint16 NameNamespace = 8;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "LogicalModule is the logical device that corresponds to a "
       "component part (such as a card or blade) in a device. For "
       "example, a line card in a switch is an instance of "
       "LogicalModule, that is associated with the the switch itself. "
       "A logical module is not necessarily independently managed." )]
class CIM_LogicalModule : CIM_LogicalDevice {

      [Description ( 
          "Logical modules are often named by the physical or "
          "logical slot that they occupy within the containing "
          "device. ModuleNumber is the number assigned to the "
          "module by its parent." )]
   uint16 ModuleNumber;

      [Description ( 
          "Type identifies the type of LogicalModule this instance "
          "represents. \n"
          "A value of \"Unknown\" indicates that the "
          "LogicalModuleType is unknown. \n"
          "A value of \"Other\" indicates that the value is not one "
          "of the enumerated values. "
          "OtherLogicalModuleTypeDescription should contain "
          "additional information. \n"
          "A value of \"Device Tray\" indicates that the device is "
          "a device or media tray, for example in a modular system. \n"
          "A value of \"Line Card\" indicates that the module is a "
          "line card in a switch. \n"
          "A value of \"Blade\" indicates the module is a blade "
          "inserted into a switch. \n"
          "The ranges expressed by \"DMTF Reserved\" and \"Vendor "
          "Reserved\" are reserved for DMTF and Vendor "
          "extensibility, respectively." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Device Tray", "Line Card", 
          "Blade", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_LogicalModule.OtherLogicalModuleTypeDescription" }]
   uint16 LogicalModuleType = 0;

      [Description ( 
          "OtherLogicalModuleTypeDescription provides additional "
          "information about the type of LogicalModule represented "
          "by this instance when the value of LogicalModuleType is "
          "1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_LogicalModule.LogicalModuleType" }]
   string OtherLogicalModuleTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_LogicalPort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "The abstraction of a port or connection point of a Device. "
       "This object should be instantiated when the Port has "
       "independent management characteristics from the Device that "
       "includes it. Examples are a Fibre Channel Port and a USB Port." )]
class CIM_LogicalPort : CIM_LogicalDevice {

      [Description ( "The bandwidth of the Port in Bits per Second." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint64 Speed;

      [Description ( 
          "The maximum bandwidth of the Port in Bits per Second." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint64 MaxSpeed;

      [Write, Description ( 
          "The requested bandwidth of the Port in Bits per Second. "
          "The actual bandwidth is reported in LogicalPort.Speed." ), 
       Units ( "Bits per Second" ), 
       ModelCorrespondence { "CIM_LogicalPort.Speed" }, 
       PUnit ( "bit / second" )]
   uint64 RequestedSpeed;

      [Description ( 
          "In some circumstances, a LogicalPort might be "
          "identifiable as a front end or back end port. An example "
          "of this situation would be a storage array that might "
          "have back end ports to communicate with disk drives and "
          "front end ports to communicate with hosts. If there is "
          "no restriction on the use of the port, then the value "
          "should be set to \'not restricted\'." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Front-end only", "Back-end only", 
          "Not restricted" }]
   uint16 UsageRestriction;

      [Description ( 
          "PortType is defined to force consistent naming of the "
          "\'type\' property in subclasses and to guarantee unique "
          "enum values for all instances of NetworkPort. When set "
          "to 1 (\"Other\"), related property OtherPortType "
          "contains a string description of the type of port. A "
          "range of values, DMTF_Reserved, has been defined that "
          "allows subclasses to override and define their specific "
          "types of ports." ), 
       ValueMap { "0", "1", "2", "3..15999", "16000..65535" }, 
       Values { "Unknown", "Other", "Not Applicable", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_NetworkPort.OtherNetworkPortType" }]
   uint16 PortType;

      [Description ( 
          "Describes the type of module, when PortType is set to 1 (\"Other\")."
           ), 
       ModelCorrespondence { "CIM_LogicalPort.PortType" }]
   string OtherPortType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ManagementController
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of a ManagementController. An I2C "
       "microcontroller is a type of ManagementController." )]
class CIM_ManagementController : CIM_Controller {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_MediaAccessDevice 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "A MediaAccessDevice represents the ability to access one or "
       "more media and use this media to store and retrieve data." )]
class CIM_MediaAccessDevice : CIM_LogicalDevice {

      [Description ( 
          "Capabilities of the MediaAccessDevice. For example, the "
          "Device may support \"Random Access\", removeable media "
          "and \"Automatic Cleaning\". In this case, the values 3, "
          "7 and 9 would be written to the array. \n"
          "Several of the enumerated values require some "
          "explanation: 1) Value 11, Supports Dual Sided Media, "
          "distinguishes a Device that can access both sides of "
          "dual sided Media, from a Device that reads only a single "
          "side and requires the Media to be flipped; and, 2) Value "
          "12, Predismount Eject Not Required, indicates that Media "
          "does not have to be explicitly ejected from the Device "
          "before being accessed by a PickerElement." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12" }, 
       Values { "Unknown", "Other", "Sequential Access", 
          "Random Access", "Supports Writing", "Encryption", 
          "Compression", "Supports Removeable Media", 
          "Manual Cleaning", "Automatic Cleaning", 
          // 10               
          "SMART Notification", 
          "Supports Dual Sided Media", 
          "Predismount Eject Not Required" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Storage Devices|001.9", 
          "MIF.DMTF|Storage Devices|001.11", 
          "MIF.DMTF|Storage Devices|001.12", "MIF.DMTF|Disks|003.7", 
          "MIF.DMTF|Host Disk|001.2", "MIF.DMTF|Host Disk|001.4" }, 
       ModelCorrespondence { 
          "CIM_MediaAccessDevice.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the AccessDevice features "
          "indicated in the Capabilities array. Note, each entry of "
          "this array is related to the entry in the Capabilities "
          "array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_MediaAccessDevice.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "ErrorMethodology is a free-form string describing the "
          "type(s) of error detection and correction supported by "
          "this Device." )]
   string ErrorMethodology;

      [Description ( 
          "A free form string indicating the algorithm or tool used "
          "by the device to support compression. If it is not "
          "possible or not desired to describe the compression "
          "scheme (perhaps because it is not known), recommend "
          "using the following words: \"Unknown\" to represent that "
          "it is not known whether the device supports compression "
          "capabilities or not, \"Compressed\" to represent that "
          "the device supports compression capabilities but either "
          "its compression scheme is not known or not disclosed, "
          "and \"Not Compressed\" to represent that the devices "
          "does not support compression capabilities." )]
   string CompressionMethod;

      [Description ( 
          "When the MediaAccessDevice supports multiple individual "
          "Media, this property defines the maximum number which "
          "can be supported or inserted." )]
   uint32 NumberOfMediaSupported;

      [Description ( 
          "Maximum size, in KBytes, of media supported by this "
          "Device. KBytes is interpreted as the number of bytes "
          "multiplied by 1000 (NOT the number of bytes multiplied "
          "by 1024)." ), 
       MappingStrings { "MIF.DMTF|Sequential Access Devices|001.2", 
          "MIF.DMTF|Host Disk|001.5" }]
   uint64 MaxMediaSize;

      [Description ( 
          "Default block size, in bytes, for this Device." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 DefaultBlockSize;

      [Description ( 
          "Maximum block size, in bytes, for media accessed by this Device."
           ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 MaxBlockSize;

      [Description ( 
          "Minimum block size, in bytes, for media accessed by this Device."
           ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 MinBlockSize;

      [Description ( 
          "Boolean indicating that the MediaAccessDevice needs "
          "cleaning. Whether manual or automatic cleaning is "
          "possible is indicated in the Capabilities array "
          "property." )]
   boolean NeedsCleaning;

      [Description ( 
          "True indicates that the media is locked in the Device "
          "and can not be ejected. For non-removeable Devices, this "
          "value should be true." )]
   boolean MediaIsLocked;

      [Description ( 
          "An enumeration indicating the operational security "
          "defined for the MediaAccessDevice. For example, "
          "information that the Device is \"Read Only\" (value=4) "
          "or \"Boot Bypass\" (value=6) can be described using this "
          "property." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Other", "Unknown", "None", "Read Only", 
          "Locked Out", "Boot Bypass", "Boot Bypass and Read Only" }, 
       MappingStrings { "MIF.DMTF|Disks|003.22" }]
   uint16 Security;

      [Description ( 
          "The date and time on which the Device was last cleaned." )]
   datetime LastCleaned;

      [Description ( 
          "Time in milliseconds to move from the first location on "
          "the Media to the location that is furthest with respect "
          "to time. For a DiskDrive, this represents full seek + "
          "full rotational delay. For TapeDrives, this represents a "
          "search from the beginning of the tape to the most "
          "physically distant point. (The end of a tape may be at "
          "its most physically distant point, but this is not "
          "necessarily true.)" ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 MaxAccessTime;

      [Description ( 
          "The sustained data transfer rate in KB/sec that the "
          "Device can read from and write to a Media. This is a "
          "sustained, raw data rate. Maximum rates or rates "
          "assuming compression should not be reported in this "
          "property." ), 
       Units ( "KiloBytes per Second" ), 
       PUnit ( "byte / second * 10^3" )]
   uint32 UncompressedDataRate;

      [Description ( 
          "Time in milliseconds from \'load\' to being able to read "
          "or write a Media. For example, for DiskDrives, this is "
          "the interval between a disk not spinning to the disk "
          "reporting that it is ready for read/write (ie, the disk "
          "spinning at nominal speeds). For TapeDrives, this is the "
          "time from a Media being injected to reporting that it is "
          "ready for an application. This is usually at the tape\'s "
          "BOT area." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 LoadTime;

      [Description ( 
          "Time in milliseconds from being able to read or write a "
          "Media to its \'unload\'. For example, for DiskDrives, "
          "this is the interval between a disk spinning at nominal "
          "speeds and a disk not spinning. For TapeDrives, this is "
          "the time for a Media to go from its BOT to being fully "
          "ejected and accessible to a PickerElement or human "
          "operator." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 UnloadTime;

      [Description ( 
          "For a MediaAccessDevice that supports removable Media, "
          "the number of times that Media have been mounted for "
          "data transfer or to clean the Device. For Devices "
          "accessing nonremovable Media, such as hard disks, this "
          "property is not applicable and should be set to 0." ), 
       Counter]
   uint64 MountCount;

      [Description ( 
          "For a MediaAccessDevice that supports removable Media, "
          "the most recent date and time that Media was mounted on "
          "the Device. For Devices accessing nonremovable Media, "
          "such as hard disks, this property has no meaning and is "
          "not applicable." )]
   datetime TimeOfLastMount;

      [Description ( 
          "For a MediaAccessDevice that supports removable Media, "
          "the total time (in seconds) that Media have been mounted "
          "for data transfer or to clean the Device. For Devices "
          "accessing nonremovable Media, such as hard disks, this "
          "property is not applicable and should be set to 0." )]
   uint64 TotalMountTime;

      [Description ( 
          "Defines \'Units\' relative to its use in the property, "
          "MaxUnitsBeforeCleaning. This describes the criteria used "
          "to determine when the MediaAccessDevice should be "
          "cleaned." ), 
       ModelCorrespondence { 
          "CIM_MediaAccessDevice.MaxUnitsBeforeCleaning", 
          "CIM_MediaAccessDevice.UnitsUsed" }]
   string UnitsDescription;

      [Description ( 
          "An unsigned integer indicating the maximum \'units\' "
          "that can be used, with respect to the AccessDevice, "
          "before the Device should be cleaned. The property, "
          "UnitsDescription, defines how \'units\' should be "
          "interpreted." ), 
       ModelCorrespondence { "CIM_MediaAccessDevice.UnitsDescription" }]
   uint64 MaxUnitsBeforeCleaning;

      [Description ( 
          "An unsigned integer indicating the currently used "
          "\'units\' of the AccessDevice, helpful to describe when "
          "the Device may require cleaning. The property, "
          "UnitsDescription, defines how \'units\' should be "
          "interpreted." ), 
       Gauge, ModelCorrespondence { 
          "CIM_MediaAccessDevice.UnitsDescription", 
          "CIM_MediaAccessDevice.MaxUnitsBeforeCleaning" }]
   uint64 UnitsUsed;


      [Description ( 
          "Method to lock and unlock the media in a removeable "
          "Access Device. The method takes one parameter as input - "
          "a boolean indicating whether to lock or unlock. TRUE "
          "indicates that the media should be locked in the Device, "
          "FALSE indicates that the media should be unlocked. The "
          "method returns 0 if successful, 1 if not supported, and "
          "any other value if an error occurred. The set of "
          "possible return codes should be specified in a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \'translated\' should be specified "
          "as a Values array qualifier on the method." )]
   uint32 LockMedia(
         [IN, Description ( 
             "If TRUE, lock the media. If FALSE release the media."
              )]
      boolean Lock);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaPartition 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A MediaPartition is a presentation of a contiguous range of "
       "logical blocks and has identifying data written on/to it. It "
       "may include a signature written by the OS or by an "
       "application. This class is a common superclass for Disk and "
       "TapePartions. Partitions are directly realized by Physical "
       "Media (indicated by the RealizesExtent association) or built "
       "on StorageVolumes (indicated by the BasedOn association)." )]
class CIM_MediaPartition : CIM_StorageExtent {

      [Description ( 
          "Boolean indicating that the Partition is labeled as "
          "bootable. (Note that this does not mean that an "
          "Operating System is actually loaded on the Partition.) "
          "With the advent of bootable Tape and other bootable "
          "media, this property is included in the higher level "
          "MediaPartition class, rather than in a subclass such as "
          "DiskPartition." )]
   boolean Bootable;

      [Description ( 
          "Boolean indicating that the Partition is available and "
          "may be allocated for use." )]
   boolean Allocatable;

      [Description ( 
          "An identifying string written to the Partition. "
          "Additional information related to this \'Signature\' may "
          "be found in the properties, SignatureState and "
          "SignatureAlgorithm." ), 
       ModelCorrespondence { "CIM_MediaPartition.SignatureState", 
          "CIM_MediaPartition.SignatureAlgorithm" }]
   string Signature;

      [Description ( 
          "A free-form string describing the algorithm used to "
          "define the Partition Signature. The value of this "
          "property is dependent on the Signature\'s State." ), 
       ModelCorrespondence { "CIM_MediaPartition.Signature", 
          "CIM_MediaPartition.SignatureState" }]
   string SignatureAlgorithm;

      [Description ( 
          "An enumeration describing the state of the Partition\'s "
          "identifying Signature string. Information such as "
          "\"Uninitialized\" (value=2), or \"Assigned by Owning "
          "Application\" (value=5) are possible entries." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Unimplemented", "Uninitialized", 
          "Calculated by Operating System", 
          "Calculated by a Media Manager", 
          "Assigned by Owning Application" }, 
       ModelCorrespondence { "CIM_MediaPartition.Signature", 
          "CIM_MediaPartition.SignatureAlgorithm" }]
   string SignatureState;

      [Description ( 
          "Boolean indicating that the Partition can be "
          "grown/extended without reformatting." )]
   boolean Extendable;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaPresent 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "Where a StorageExtent must be accessed through a MediaAccess "
       "Device, this relationship is described by the MediaPresent "
       "association." ), 
    MappingStrings { "MIF.DMTF|Storage Devices|001.8" }]
class CIM_MediaPresent : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The MediaAccessDevice." )]
   CIM_MediaAccessDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The StorageExtent accessed using the MediaAccessDevice." )]
   CIM_StorageExtent REF Dependent;

      [Description ( 
          "Boolean indicating that the accessed StorageExtent is "
          "fixed in the MediaAccessDevice and can not be ejected." )]
   boolean FixedMedia;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MediaTransferDevice 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "A MediaTransferDevice represents hardware that moves Physical "
       "Media. It is a superclass for Devices like PickerElement, "
       "ChangerDevice and InterLibraryPort." )]
class CIM_MediaTransferDevice : CIM_LogicalDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_Memory 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "Capabilities and management of Memory-related LogicalDevices." )]
class CIM_Memory : CIM_StorageExtent {

      [Description ( 
          "Volatile is a property that indicates whether this "
          "memory is volatile or not." )]
   boolean Volatile;

      [Override ( "ErrorMethodology" ), 
       Description ( 
          "ErrorMethodology for Memory is a string property that "
          "indicates whether parity or CRC algorithms, ECC or other "
          "mechanisms are used. Details on the algorithm can also "
          "be supplied." ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.7" }]
   string ErrorMethodology;

      [Description ( 
          "The beginning address, referenced by an application or "
          "operating system and mapped by a memory controller, for "
          "this Memory object. The starting address is specified in "
          "KBytes." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "MIF.DMTF|Memory Array Mapped Addresses|001.3", 
          "MIF.DMTF|Memory Device Mapped Addresses|001.4" }, 
       PUnit ( "byte * 10^3" )]
   uint64 StartingAddress;

      [Description ( 
          "The ending address, referenced by an application or "
          "operating system and mapped by a memory controller, for "
          "this Memory object. The ending address is specified in "
          "KBytes." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "MIF.DMTF|Memory Array Mapped Addresses|001.4", 
          "MIF.DMTF|Memory Device Mapped Addresses|001.5" }, 
       PUnit ( "byte * 10^3" )]
   uint64 EndingAddress;

      [Deprecated { "CIM_MemoryError.ErrorInfo" }, 
       Description ( 
          "An integer enumeration describing the type of error that "
          "occurred most recently. For example, single (value=6) or "
          "double bit errors (7) can be specified using this "
          "property. The values, 12-14, are undefined in the CIM "
          "Schema since in DMI, they mix the semantics of the type "
          "of error and whether it was correctable or not. The "
          "latter is indicated in the property, CorrectableError." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14" }, 
       Values { "Other", "Unknown", "OK", "Bad Read", 
          "Parity Error", "Single-Bit Error", "Double-Bit Error", 
          "Multi-Bit Error", "Nibble Error", "Checksum Error", 
          "CRC Error", "Undefined", "Undefined", "Undefined" }, 
       MappingStrings { "MIF.DMTF|Memory Device|005.12", 
          "MIF.DMTF|Physical Memory Array|001.8" }, 
       ModelCorrespondence { "CIM_Memory.OtherErrorDescription" }]
   uint16 ErrorInfo;

      [Deprecated { "CIM_MemoryError.OtherErrorDescription" }, 
       Description ( 
          "Free form string providing more information if the Error "
          "Type property is set to 1, \"Other\". If not set to 1, "
          "this string has no meaning." ), 
       ModelCorrespondence { "CIM_Memory.ErrorInfo" }]
   string OtherErrorDescription;

      [Deprecated { "CIM_MemoryError.CorrectableError" }, 
       Description ( 
          "Boolean indicating that the most recent error was "
          "correctable. If the ErrorInfo property is equal to 3, "
          "\"OK\", then this property has no meaning." ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.8" }]
   boolean CorrectableError;

      [Deprecated { "CIM_MemoryError.ErrorTime" }, 
       Description ( 
          "The time that the last memory error occurred. The type "
          "of error is described by the ErrorInfo property. If the "
          "Error Info property is equal to 3, \"OK\", then this "
          "property has no meaning." )]
   datetime ErrorTime;

      [Deprecated { "CIM_MemoryError.ErrorAccess" }, 
       Description ( 
          "An integer enumeration indicating the memory access "
          "operation that caused the last error. The type of error "
          "is described by the ErrorInfo property. If the ErrorInfo "
          "property is equal to 3, \"OK\", then this property has "
          "no meaning." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Read", "Write", "Partial Write" }, 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.10" }]
   uint16 ErrorAccess;

      [Deprecated { "CIM_MemoryError.ErrorTransferSize" }, 
       Description ( 
          "The size of the data transfer in bits that caused the "
          "last error. 0 indicates no error. If the ErrorInfo "
          "property is equal to 3, \"OK\", then this property "
          "should be set to 0." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.11" }, 
       PUnit ( "bit" )]
   uint32 ErrorTransferSize;

      [Deprecated { "CIM_MemoryError.ErrorData" }, 
       Description ( 
          "Data captured during the last erroneous mebmory access. "
          "The data occupies the first n octets of the array "
          "necessary to hold the number of bits specified by the "
          "ErrorTransferSize property. If ErrorTransferSize is 0, "
          "then this property has no meaning." ), 
       OctetString, ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Physical Memory Array|001.12" }]
   uint8 ErrorData[];

      [Deprecated { "CIM_MemoryError.ErrorDataOrder" }, 
       Description ( 
          "The ordering for data stored in the ErrorData property. "
          "\"Least Significant Byte First\" (value=1) or \"Most "
          "Significant Byte First\" (2) can be specified. If "
          "ErrorTransferSize is 0, then this property has no "
          "meaning." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Least Significant Byte First", 
          "Most Significant Byte First" }]
   uint16 ErrorDataOrder;

      [Deprecated { "CIM_MemoryError.StartingAddress" }, 
       Description ( 
          "Specifies the address of the last memory error. The type "
          "of error is described by the ErrorInfo property. If the "
          "ErrorInfo property is equal to 3, \"OK\", then this "
          "property has no meaning." ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.19", 
          "MIF.DMTF|Physical Memory Array|001.14" }]
   uint64 ErrorAddress;

      [Deprecated { "CIM_MemoryError.SystemLevelAddress" }, 
       Description ( 
          "Boolean indicating whether the address information in "
          "the property, ErrorAddress, is a system-level address "
          "(TRUE) or a physical address (FALSE). If the ErrorInfo "
          "property is equal to 3, \"OK\", then this property has "
          "no meaning." )]
   boolean SystemLevelAddress;

      [Deprecated { "CIM_MemoryError.ErrorResolution" }, 
       Description ( 
          "Specifies the range, in bytes, to which the last error "
          "can be resolved. For example, if error addresses are "
          "resolved to bit 11 (ie, on a typical page basis), then "
          "errors can be resolved to 4K boundaries and this "
          "property is set to 4000. If the ErrorInfo property is "
          "equal to 3, \"OK\", then this property has no meaning." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Memory Device|005.21", 
          "MIF.DMTF|Physical Memory Array|001.15" }, 
       PUnit ( "byte" )]
   uint64 ErrorResolution;

      [Deprecated { "CIM_MemoryError.AdditionalErrorData" }, 
       Description ( 
          "An array of octets holding additional error information. "
          "An example is ECC Syndrome or the return of the check "
          "bits if a CRC-based ErrorMethodology is used. In the "
          "latter case, if a single bit error is recognized and the "
          "CRC algorithm is known, it is possible to determine the "
          "exact bit that failed. This type of data (ECC Syndrome, "
          "Check Bit or Parity Bit data, or other vendor supplied "
          "information) is included in this field. If the ErrorInfo "
          "property is equal to 3, \"OK\", then AdditionalErrorData "
          "has no meaning." ), 
       OctetString, MappingStrings { 
          "MIF.DMTF|Memory Device|005.18", 
          "MIF.DMTF|Physical Memory Array|001.13" }]
   uint8 AdditionalErrorData[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Modem 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "CIM_Modem is the superclass for grouping the numerous types of "
       "Modems." )]
class CIM_Modem : CIM_LogicalDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_NetworkAdapter
// ==================================================================
   [Deprecated { "CIM_NetworkPort" }, 
    Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_NetworkAdpater class has been "
       "deprecated in lieu of CIM_NetworkPort. CIM_NetworkPort better "
       "reflects that the hardware of a single port is described and "
       "managed. \n"
       "Deprecated description: NetworkAdapter is an Abstract class "
       "that defines general networking hardware concepts (for "
       "example, PermanentAddress or Speed of operation)." )]
class CIM_NetworkAdapter : CIM_LogicalDevice {

      [Deprecated { "CIM_NetworkPort.PermanentAddress" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: PermanentAddress defines the "
          "network address that is hardcoded into an adapter. This "
          "\'hardcoded\' address might be changed through a "
          "firmware upgrade or software configuration. If so, this "
          "field should be updated when the change is made. "
          "PermanentAddress should be left blank if no \'hardcoded\' "
          "address exists for the NetworkAdapter." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Network Adapter 802 Port|001.2" }]
   string PermanentAddress;

      [Deprecated { "CIM_NetworkPort.NetworkAddresses" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array of strings that "
          "indicates the network addresses for an adapter." ), 
       ArrayType ( "Indexed" ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Network Adapter 802 Port|001.3" }]
   string NetworkAddresses[];

      [Deprecated { "CIM_NetworkPort.Speed" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An estimate of the current "
          "bandwidth in Bits per Second. For Adapters that vary in "
          "bandwidth or for those where no accurate estimation can "
          "be made, this property should contain the nominal "
          "bandwidth." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIB.IETF|RFC1213-MIB.ifSpeed", 
          "MIF.DMTF|Network Adapter 802 Port|001.5" }, 
       PUnit ( "bit / second" )]
   uint64 Speed;

      [Deprecated { "CIM_NetworkPort.MaxSpeed" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The maximum speed, in Bits per "
          "Second, for the Network Adapter." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint64 MaxSpeed;

      [Deprecated { "CIM_NetworkPort.FullDuplex" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A Boolean that indicates that "
          "the Adapter is operating in full duplex mode." )]
   boolean FullDuplex;

      [Deprecated { "CIM_NetworkPort.AutoSense" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A Boolean that indicates whether "
          "the NetworkAdapter is capable of automatically "
          "determining the speed or other communications "
          "characteristics of the attached network media." )]
   boolean AutoSense;

      [Deprecated { "CIM_NetworkPortStatistics.BytesTransmitted" }, 
       Description ( 
          "Note: The use of this method has been deprecated. The "
          "replacement is "
          "CIM_NetworkPortStatistics.BytesTransmitted." ), 
       Counter, MappingStrings { "MIB.IETF|RFC1213-MIB.ifOutOctets", 
          "MIF.DMTF|Network Adapter 802 Port|001.7" }]
   uint64 OctetsTransmitted;

      [Deprecated { "CIM_NetworkPortStatistics.BytesReceived" }, 
       Description ( 
          "Note: The use of OctetsReceived is deprecated. The "
          "replacement is CIM_NetworkPortStatistics.BytesReceived." ), 
       Counter, MappingStrings { "MIB.IETF|RFC1213-MIB.ifInOctets", 
          "MIF.DMTF|Network Adapter 802 Port|001.9" }]
   uint64 OctetsReceived;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NetworkAdapterRedundancyComponent
// ==================================================================
   [Association, Deprecated { "CIM_OrderedMemberOfCollection" }, 
    Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_NetworkAdapterRedundancyComponent "
       "class has been deprecated because a specific association is "
       "not needed. Instead use the CIM_ OrderedMemberOf Collection "
       "class. \n"
       "Deprecated description: CIM_NetworkAdapterRedundancyComponent "
       "indicates the role that a NetworkAdapter plays in an "
       "ExtraCapacityGroup, providing load balancing." )]
class CIM_NetworkAdapterRedundancyComponent : CIM_RedundancyComponent {

      [Deprecated { "CIM_OrderedMemberOfCollection.Collection" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The RedundancyGroup that "
          "represents a set of load-balanced NetworkAdapters." )]
   CIM_ExtraCapacityGroup REF GroupComponent;

      [Deprecated { "CIM_OrderedMemberOfCollection.Member" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The Network Adapters that belong "
          "to the RedundancyGroup." )]
   CIM_NetworkAdapter REF PartComponent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Indicates the scope of load "
          "balancing for the NetworkAdapters that is involved in "
          "the RedundancyGroup. Load balancing can be restricted to "
          "transmitting data only (value=1), receiving data only "
          "(value=2), or used for both transmit and receive "
          "(value=3)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Load Balancing - Transmit Only", 
          "Load Balancing - Receive Only", "Full Load Balancing" }]
   uint16 ScopeOfBalancing;

      [Deprecated { "CIM_OrderedMemberOfCollection.AssignedSequence" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A Boolean that indicates whether "
          "the Network Adapter is an original primary adapter "
          "(value=1), a preferred primary adapter (value=2), or "
          "both (value=3). Values of \"Unknown\" and \"Not "
          "Applicable\" can also be specified." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Original Primary", "Preferred Primary", 
          "Both", "Not Applicable" }]
   uint16 PrimaryAdapter;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_NetworkPort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "NetworkPort is the logical representation of network "
       "communications hardware such as a physical connector and the "
       "setup or operation of the network chips, at the lowest layers "
       "of a network stack." )]
class CIM_NetworkPort : CIM_LogicalPort {

      [Override ( "Speed" ), 
       Description ( 
          "The current bandwidth of the Port in Bits per Second. "
          "For ports that vary in bandwidth or for those where no "
          "accurate estimation can be made, this property should "
          "contain the nominal bandwidth." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIB.IETF|MIB-II.ifSpeed", 
          "MIF.DMTF|Network Adapter 802 Port|001.5" }, 
       PUnit ( "bit / second" )]
   uint64 Speed;

      [Deprecated { "CIM_NetworkPort.OtherPortType" }, 
       Description ( 
          "Note: The use of this property is deprecated in lieu of "
          "CIM_LogicalPort.PortType. \n"
          "Deprecated description: The type of module, when "
          "PortType is set to 1 (\"Other\".)" ), 
       ModelCorrespondence { "CIM_LogicalPort.PortType" }]
   string OtherNetworkPortType;

      [Description ( 
          "NetworkPorts are often numbered relative to either a "
          "logical module or a network element." )]
   uint16 PortNumber;

      [Description ( 
          "An enumeration of the types of links. When set to 1 "
          "(\"Other\"), the related property OtherLinkTechnology "
          "contains a string description of the type of link." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "Ethernet", "IB", "FC", "FDDI", 
          "ATM", "Token Ring", "Frame Relay", "Infrared", 
          "BlueTooth", "Wireless LAN" }, 
       ModelCorrespondence { "CIM_NetworkPort.OtherLinkTechnology" }]
   uint16 LinkTechnology;

      [Description ( 
          "A string value that describes LinkTechnology when it is "
          "set to 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_NetworkPort.LinkTechnology" }]
   string OtherLinkTechnology;

      [Description ( 
          "PermanentAddress defines the network address that is "
          "hardcoded into a port. This \'hardcoded\' address can be "
          "changed using a firmware upgrade or a software "
          "configuration. When this change is made, the field "
          "should be updated at the same time. PermanentAddress "
          "should be left blank if no \'hardcoded\' address exists "
          "for the NetworkAdapter." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Network Adapter 802 Port|001.2" }]
   string PermanentAddress;

      [Description ( 
          "An array of strings that indicates the network addresses "
          "for the port." ), 
       MaxLen ( 64 ), 
       MappingStrings { "MIF.DMTF|Network Adapter 802 Port|001.3" }]
   string NetworkAddresses[];

      [Description ( 
          "Boolean that indicates that the port is operating in "
          "full duplex mode." )]
   boolean FullDuplex;

      [Description ( 
          "A Boolean that indicates whether the NetworkPort is "
          "capable of automatically determining the speed or other "
          "communications characteristics of the attached network "
          "media." )]
   boolean AutoSense;

      [Description ( 
          "The maximum transmission unit (MTU) that can be supported."
           ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 SupportedMaximumTransmissionUnit;

      [Description ( 
          "The active or negotiated maximum transmission unit (MTU) "
          "that can be supported." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 ActiveMaximumTransmissionUnit;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NetworkVirtualAdapter
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteIdentity" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_NetworkVirtualAdapter class has been "
       "deprecated. A specific association is not needed. Instead use "
       "the CIM_ConcreteIdentity class. \n"
       "Deprecated description: NetworkVirtual Adapter describes that "
       "an instance of NetworkAdapter is actually the result of "
       "several Adapters participating in a load-balanced "
       "RedundancyGroup." )]
class CIM_NetworkVirtualAdapter : CIM_LogicalIdentity {

      [Deprecated { "CIM_ConcreteIdentity.SystemElement" }, 
       Override ( "SystemElement" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The \'virtual\' NetworkAdapter." )]
   CIM_NetworkAdapter REF SystemElement;

      [Deprecated { "CIM_ConcreteIdentity.SameElement" }, 
       Override ( "SameElement" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The ExtraCapacity "
          "RedundancyGroup that describes the load balancing. The "
          "result of the load balancing is the \'virtual\' Adapter." )]
   CIM_ExtraCapacityGroup REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_NonVolatileStorage 
// ==================================================================
   [Deprecated { "CIM_Memory" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "This class has been deprecated in favor of CIM_Memory with the "
       "volatile parameter set to false. Capabilities and management "
       "of NV Storage. Non-volatile memory natively includes flash and "
       "ROM storage. In addition, NV memory can be BasedOn "
       "VolatileStorage, if the volatile memory is backed by a "
       "Battery. This scenario would be completely described by an "
       "instance of the AssociatedBattery relationship, referencing "
       "the NonVolatileStorage as the Dependent and the Battery as the "
       "Antecedent, and an instance of the BasedOn relationship, "
       "referencing the NonVolatileStorage as the Dependent and the "
       "VolatileStorage as the Antecedent." )]
class CIM_NonVolatileStorage : CIM_Memory {

      [Deprecated { "CIM_Memory.Access" }, 
       Description ( "Indicating that the NV storage is writeable." )]
   boolean IsWriteable;

      [Deprecated { "no value" }, 
       Description ( 
          "Boolean indicating that at least some portion of the "
          "NonVolatileStorage is writeable by applications." )]
   boolean ApplicationWriteable;

      [Deprecated { "no value" }, 
       Description ( 
          "When at least some portion of the NonVolatileStorage is "
          "writeable (ApplicationWriteable property = TRUE), "
          "StartAddress forApplcationWrite indicates the starting "
          "address for application data. If the "
          "ApplicationWriteable property is FALSE, this property is "
          "undefined." ), 
       ModelCorrespondence { 
          "CIM_NonVolatileStorage.ApplicationWriteable" }]
   uint64 StartAddressForApplicationWrite;

      [Deprecated { "no value" }, 
       Description ( 
          "When at least some portion of the NonVolatileStorage is "
          "writeable (ApplicationWriteable property = TRUE), "
          "Application WritableSize indicates the number of bits "
          "available for application data. If the "
          "ApplicationWriteable property is FALSE, this property is "
          "undefined." ), 
       Units ( "Bits" ), 
       ModelCorrespondence { 
          "CIM_NonVolatileStorage.ApplicationWriteable" }, 
       PUnit ( "bit" )]
   uint64 ApplicationWriteableSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageDependency 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::DeviceElements" ), 
    Description ( 
       "A LogicalDevice is installed in a Package such as a Chassis or "
       "a Rack, not for a specific Device, but to function with the "
       "Package in general. This relationship is described by the "
       "PackageDependency association." )]
class CIM_PackageDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Logical Device for the Package." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PhysicalPackage whose environment is affected." )]
   CIM_PhysicalPackage REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ParallelController
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of the ParallelController." )]
class CIM_ParallelController : CIM_Controller {

      [Description ( 
          "Set to true if the ParallelController supports DMA." ), 
       MappingStrings { "MIF.DMTF|Parallel Ports|003.7" }]
   boolean DMASupport;

      [Description ( 
          "An integer enumeration that indicates the capabilities "
          "of the ParallelController." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "XT/AT Compatible", 
          "PS/2 Compatible", "ECP", "EPP", "PC-98", "PC-98-Hireso", 
          "PC-H98" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Parallel Ports|003.8" }, 
       ModelCorrespondence { 
          "CIM_ParallelController.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the ParallelController "
          "features that are indicated in the Capabilities array. "
          "Note, each entry of this array is related to the entry "
          "in the Capabilities array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_ParallelController.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "An enumeration that indicates the operational security "
          "for the Controller. For example, information that the "
          "external interface of the Device is locked out (value=4) "
          "or \"Boot Bypass\" (value=6) can be described using this "
          "property." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "None", 
          "External Interface Locked Out", 
          "External Interface Enabled", "Boot Bypass" }, 
       MappingStrings { "MIF.DMTF|Parallel Ports|003.10" }]
   uint16 Security;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "A device that is a replacement for physical cables and allows "
       "internal network physical ports in a chassis or rack to be "
       "made accessible from the external network. This may a fixed "
       "internal port to external port relationship, or a configurable "
       "mapping of internal ports to output ports via a cross-point "
       "switching function. The mapping between an internal and "
       "external port is modeled using the InternalPorts and "
       "ExternalPorts array properties. Corresponding array indices of "
       "the InternalPorts and ExternalPorts properties shall contain "
       "the port number of the internal port and external port, "
       "respectively in a mapping pair. Usage of this class is "
       "appropriate when modeling a simple n x n pass through module "
       "where the protocols supported by the module are not the target "
       "of management. Implementations wishing to enable management of "
       "the network function should instrument the appropriate device "
       "and network models. The tie into the device and network models "
       "is accomplished by correlating the port numbers in this class\' "
       "internal and external port arrays with CIM_NetworkPort\'s "
       "PortNumber property. The following is an example of how this "
       "class could be used: \n"
       "For a given instance, the value of NumberOfPorts is 3. This "
       "indicates that there are 3 internal ports and 3 external "
       "ports. Internal port 2 is mapped to external port 3. Internal "
       "ports 1 and 3 are not mapped to an external port. External "
       "ports 1 and 2 are not mapped to internal ports. For this "
       "instance the length of the InternalPorts and ExternalPorts "
       "arrays shall both be one. The first array position in "
       "InternalPortshall contain the value 2. The first array "
       "position in ExternalPorts shall contain the value 3." )]
class CIM_PassThroughModule : CIM_LogicalModule {

      [Description ( 
          "An enumeration of the link technologies that can be "
          "passed- through by this device. When set to 1 (\"Other\"), "
          "the property OtherLinkTechnologies contains string "
          "descriptions of the alternative link types." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Ethernet", "IB", "FC", "FDDI", 
          "ATM", "Token Ring", "Frame Relay", "Infrared", 
          "BlueTooth", "Wireless LAN", "DMTF Reserved", 
          "Vendor Specified" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_PassThroughModule.OtherLinkTechnologies" }]
   uint16 LinkTechnologies[];

      [Description ( 
          "An array of string values describing the supported "
          "technologies when an entry in the LinkTechnologies array "
          "is set to 1, \"Other\"." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PassThroughModule.LinkTechnologies" }]
   string OtherLinkTechnologies[];

      [Description ( 
          "Boolean indicating if the port assignments on this "
          "switch are software programmable or not." )]
   boolean IsProgrammable = false;

      [Description ( 
          "A PassThroughModule is a simple module with 1-1 "
          "correspondence between internal and external ports. This "
          "number represents the number of external ports. By "
          "virtue of there being a 1-1 correspondence of ports, it "
          "also represents the number of internal ports. \n"
          "The ports are numbered 1 through N." )]
   uint16 NumberOfPorts;

      [Description ( 
          "An indexed array containing the internal port numbers. "
          "Corresponding external ports are in the ExternalPorts "
          "array. Only internal ports which are mapped to an "
          "external port shall appear in the array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PassThroughModule.ExternalPorts", 
          "CIM_NetworkPort.PortNumber" }]
   uint16 InternalPorts[];

      [Description ( 
          "An indexed array containing the external ports. "
          "Corresponding internal ports are in the InternalPorts "
          "array. Only external ports which are mapped to an "
          "internal port shall appear in the array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PassThroughModule.InternalPorts", 
          "CIM_NetworkPort.PortNumber" }]
   uint16 ExternalPorts[];


      [Description ( 
          "If the switch is software programmable, then this method "
          "is called to assign an internal port to an external "
          "port. \n"
          "If 0 is returned, the requested status of the mapping of "
          "InternalPort and ExternalPort is in effect. That is, an "
          "attempt to unmap two ports that are not mapped to any "
          "other ports or an attempt to map two ports which are "
          "already mapped to each other shall return 0, because the "
          "resultant state of the mapping is equivalent to the "
          "client request. For a mapping operation, if either "
          "target port is already mapped to a different port, the "
          "implementation shall first unmap it. An attempt to unmap "
          "two ports that are not mapped to each other shall fail "
          "with an error of \"Not Mapped\"." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Not Mapped", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 AssignPorts(
         [IN, Description ( 
             "Boolean indicating if the ports are to be unmapped "
             "or mapped. If \"True\", InternalPorts and "
             "ExternalPorts shall be updated to contain a "
             "mapping of InternalPort to ExternalPort. If "
             "\"False\", InternalPorts and ExternalPorts shall "
             "be updated to remove the mapping if one exists." )]
      boolean Mapped, 
         [IN, Description ( 
             "The mapping for this internal port shall be updated."
              )]
      uint16 InternalPort, 
         [IN, Description ( 
             "The mapping for this external port shall be updated."
              )]
      uint16 ExternalPort);

};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "PCIController is a superclass for the PCIBridge and PCIDevice "
       "classes. These classes model adapters and bridges on a PCI "
       "bus. The properties in PCIController and its subclasses are "
       "defined in the various PCI Specifications that are published "
       "by the PCI SIG." )]
class CIM_PCIController : CIM_Controller {

      [Description ( 
          "Current contents of the register that provides basic "
          "control over the ability of the device to respond to or "
          "perform PCI accesses." )]
   uint16 CommandRegister;

      [Description ( 
          "An array of integers that indicates controller "
          "capabilities. Information such as \"Supports 66MHz\" "
          "(value=2) is specified in this property. The data in the "
          "Capabilities array is gathered from the PCI Status "
          "Register and the PCI Capabilities List as defined in the "
          "PCI Specification." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16..32767", 
          "32768..65535" }, 
       Values { "Unknown", "Other", "Supports 66MHz", 
          "Supports User Definable Features", 
          "Supports Fast Back-to-Back Transactions", 
          "PCI-X Capable", "PCI Power Management Supported", 
          "Message Signaled Interrupts Supported", 
          "Parity Error Recovery Capable", "AGP Supported", 
          "Vital Product Data Supported", 
          "Provides Slot Identification", "Hot Swap Supported", 
          "Supports PCIe", "Supports PCIe Gen 2", 
          "Supports PCIe Gen 3", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_PCIController.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the PCIController "
          "features that are indicated in the Capabilities array. "
          "Note, each entry of this array is related to the entry "
          "in the Capabilities array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PCIController.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "The slowest device-select timing for a target device." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Fast", "Medium", "Slow", 
          "Reserved" }]
   uint16 DeviceSelectTiming;

      [Description ( 
          "Register of 8 bits that identifies the basic function of "
          "the PCI device. This property is only the upper byte "
          "(offset 0Bh) of the 3-byte ClassCode field. Note that "
          "the ValueMap array of the property specifies the decimal "
          "representation of this information." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18..254", 
          "255" }, 
       Values { "Pre 2.0", "Mass Storage", "Network", "Display", 
          "Multimedia", "Memory", "Bridge", "Simple Communications", 
          "Base Peripheral", "Input", "Docking Station", 
          "Processor", "Serial Bus", "Wireless", "Intelligent I/O", 
          "Satellite Communication", "Encryption/Decryption", 
          "Data Acquisition and Signal Processing", "PCI Reserved", 
          "Other" }]
   uint8 ClassCode;

      [Description ( 
          "Specifies the system cache line size in doubleword "
          "increments (for example, a 486-based system would store "
          "the value 04h, indicating a cache line size of four "
          "doublewords." ), 
       Units ( "DoubleWords" ), 
       PUnit ( "dataword * 2" )]
   uint8 CacheLineSize;

      [Description ( 
          "Defines the minimum amount of time, in PCI clock cycles, "
          "that the bus master can retain ownership of the bus." ), 
       Units ( "PCI clock cycles" ), 
       PUnit ( "cycle" )]
   uint8 LatencyTimer;

      [Description ( 
          "Defines the PCI interrupt request pin (INTA# to INTD#) "
          "to which a PCI functional device is connected." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "None", "INTA#", "INTB#", "INTC#", "INTD#", "Unknown" }]
   uint16 InterruptPin;

      [Description ( "Doubleword Expansion ROM-base memory address." ), 
       Units ( "DoubleWords" ), 
       PUnit ( "dataword * 2" )]
   uint32 ExpansionROMBaseAddress;

      [Description ( 
          "Reports if the PCI device can perform the self-test "
          "function. Returns bit 7 of the BIST register as a "
          "Boolean." )]
   boolean SelfTestEnabled;


      [Description ( 
          "Method to invoke PCI device self-test. This method sets "
          "bit 6 of the BIST register. The return result is the "
          "lower 4 bits of the BIST register where 0 indicates "
          "success and non-zero is a device-dependent failure. "
          "Support for this method is optional in the PCI "
          "Specification." )]
   uint8 BISTExecution(
);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    ClassConstraint { 
       "inv:IsBaseAddress64=true implies BaseAddress=null and BaseAddress64<>null", 
       "inv:IsBaseAddress64=false implies BaseAddress64=null" }, 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of a PCI device controller on an "
       "adapter card." )]
class CIM_PCIDevice : CIM_PCIController {

      [Description ( "Array of doubleword base-memory addresses." ), 
       ModelCorrespondence { "CIM_PCIDevice.IsBaseAddress64" }]
   uint32 BaseAddress[];

      [Description ( "Subsystem identifier code." )]
   uint16 SubsystemID;

      [Description ( 
          "Subsystem vendor ID. ID information is reported from a "
          "PCIDevice through protocol-specific requests. The "
          "correct place in the CIM Schema for this information is "
          "in CIM_Physical Element (the Manufacturer property) for "
          "hardware, and CIM_Product (the Vendor property) if the "
          "information is related to Product acquisition. This data "
          "is also reported here, because it is part of the "
          "standard output from the Device and is an optimization." )]
   uint16 SubsystemVendorID;

      [Description ( 
          "Register that indicates how long the master would like "
          "to retain PCI bus ownership whenever it initiates a "
          "transaction. A 0 value indicates no requirement." ), 
       Units ( "250 nanoseconds" ), 
       PUnit ( "second * 250 * 10^-9" )]
   uint8 MinGrantTime;

      [Description ( 
          "Register that specifies how often the device needs "
          "access to the PCI bus in 250ns. A 0 value indicates no "
          "requirement." ), 
       Units ( "250 nanoseconds" ), 
       PUnit ( "second * 250 * 10^-9" )]
   uint8 MaxLatency;

      [Description ( "The bus number where this PCI device resides." )]
   uint8 BusNumber;

      [Description ( 
          "The device number assigned to this PCI device for this bus."
           )]
   uint8 DeviceNumber;

      [Description ( "The function number for this PCI device." )]
   uint8 FunctionNumber;

      [Description ( 
          "Register that contains a value assigned by the device "
          "manufacturer used to identify the type of device." )]
   uint16 PCIDeviceID;

      [Description ( 
          "Register that contains a value assigned by the PCI SIG "
          "used to identify the manufacturer of the device." )]
   uint16 VendorID;

      [Description ( 
          "Register that contains a value assigned by the device "
          "manufacturer used to identify the revision number of the "
          "device." )]
   uint8 RevisionID;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of a PCI device that provide PCI "
       "Express switch capability." )]
class CIM_PCIeSwitch : CIM_PCIDevice {

      [Description ( 
          "The number of ports that are exposed by this switch." )]
   uint16 NumberOfPorts;

      [Description ( 
          "The number of the PCI bus segments to which the "
          "secondary interfaces of the switch are connected." )]
   uint8 SecondaryBusNumbers[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Represents PCI device ports used to describe the connection "
       "between PCI devices." )]
class CIM_PCIPort : CIM_LogicalPort {

      [Override ( "PortType" ), 
       Description ( "The type of port." ), 
       ValueMap { "0", "1", "2", "150", "151", "152", "153", "..", 
          "16000..65535" }, 
       Values { "Unknown", "Other", "Not Applicable", "PCI", 
          "PCI-X", "PCIe", "PCIe Gen 2", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 PortType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PCMCIAController 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( "Capabilities and management of a PCMCIAController." )]
class CIM_PCMCIAController : CIM_Controller {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_PhysicalExtent 
// ==================================================================
   [Deprecated { "CIM_ProtectedExtentBasedOn", 
       "CIM_CompositeExtentBasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Deprecated - use CIM_ProtectedExtentBasedOn or "
       "CIM_CompositeExtentBasedOn instead. The information on check "
       "and user data is better expressed in the association that "
       "layers the storage, than in the extent itself. A "
       "PhysicalExtent is used to model an SCC RAID implementation. It "
       "defines the consecutive addressable block addresses on a "
       "single storage device, that are treated as a single "
       "StorageExtent and that are in the same StorageRedundancyGroup. "
       "An alternate possibility, if automatic configuration is used, "
       "is to instantiate or extend the AggregatePExtent class." )]
class CIM_PhysicalExtent : CIM_StorageExtent {

      [Deprecated { "CIM_CompositeExtentBasedOn.BlockSize", 
          "CIM_ProtectedExtentBasedOn.BlockSize" }, 
       Override ( "BlockSize" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.4" }]
   uint64 BlockSize;

      [Deprecated { "CIM_CompositeExtentBasedOn.NumberOfBlocks", 
          "CIM_ProtectedExtentBasedOn.NumberOfBlocks" }, 
       Override ( "NumberOfBlocks" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.3" }]
   uint64 NumberOfBlocks;

      [Deprecated { 
          "CIM_CompositeExtentBasedOn.UnitsBeforeCheckDataInterleave", 
          "CIM_ProtectedExtentBasedOn.UnitsBeforeCheckDataInterleave" }, 
       Description ( 
          "Number of bytes of user data to skip before starting the "
          "check data interleave." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.6" }, 
       PUnit ( "byte" )]
   uint64 UnitsBeforeCheckDataInterleave;

      [Deprecated { "CIM_CompositeExtentBasedOn.UnitsOfCheckData", 
          "CIM_ProtectedExtentBasedOn.UnitsOfCheckData" }, 
       Description ( 
          "Number of bytes to be reserved for check data." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.7" }, 
       PUnit ( "byte" )]
   uint64 UnitsOfCheckData;

      [Deprecated { "CIM_CompositeExtentBasedOn.UnitsOfUserData", 
          "CIM_ProtectedExtentBasedOn.UnitsOfUserData" }, 
       Description ( "Number of bytes to be reserved for user data." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.8" }, 
       PUnit ( "byte" )]
   uint64 UnitsOfUserData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_PickerElement 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "PickerElements represent hardware used to pick or place "
       "PhysicalMedia from/into StorageMediaLocations." )]
class CIM_PickerElement : CIM_MediaTransferDevice {

      [Description ( 
          "The maximum time in seconds for a PickerElement to grab "
          "a PhysicalMedia from a StorageMediaLocation, once the "
          "Picker has arrived at that Location. The maximum time "
          "interval for moving a Media from one point to another is "
          "the sum of the PickerElement\'s MaxPickTime, the Changer "
          "Device\'s MaxTransitTime and the PickerElement\'s "
          "MaxPutTime." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 MaxPickTime;

      [Description ( 
          "The maximum time in seconds for a PickerElement to place "
          "a PhysicalMedia into a StorageMediaLocation, once the "
          "Picker has arrived at that Location. The maximum time "
          "interval for moving a Media from one point to another is "
          "the sum of the PickerElement\'s MaxPickTime, the Changer "
          "Device\'s MaxTransitTime and the PickerElement\'s "
          "MaxPutTime." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 MaxPutTime;

      [Description ( 
          "String describing the location in the StorageLibrary "
          "where the Picker is currently positioned." )]
   string CellLocation;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PortActiveConnection
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "The PortActiveConnection relationship indicates that a "
       "NetworkPort is using the referenced PhysicalConnector to "
       "output to the network. This relationship is important when the "
       "port can choose to output from one of several connectors. The "
       "connectors can be associated with the NetworkPort in a "
       "Realizes relationship, but this is not required. This "
       "association provides additional information (for instance,\'in "
       "use for communication\') different than Realizes." )]
class CIM_PortActiveConnection : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PhysicalConnector." )]
   CIM_PhysicalConnector REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The NetworkPort that transmits using the Connector." )]
   CIM_NetworkPort REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PortController
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "PortController is a logical device corresponding to a hardware "
       "network port controller. Port controllers provide various "
       "features depending on their types and versions." )]
class CIM_PortController : CIM_Controller {

      [Description ( 
          "The type or model of the port controller. Specific "
          "values will be enumerated in a later release of this "
          "schema. When set to 1 (\"Other\"), the related property "
          "OtherControllerType contains a string description of the "
          "type of the controller." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Ethernet", "IB", "FC", "FDDI", 
          "ATM", "Token Ring", "Frame Relay" }, 
       ModelCorrespondence { "CIM_PortController.OtherControllerType" }]
   uint16 ControllerType;

      [Description ( 
          "A string value for controller types that is not captured "
          "by the ControllerType enumeration. This property should "
          "be used only when the value of the ControllerType "
          "property is set to 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_PortController.ControllerType" }]
   string OtherControllerType;

      [Description ( "The revision number of the controller." )]
   uint16 ControllerVersion;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PortOnDevice 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "PortOnDevice associates a Port or connection point with its Device."
        )]
class CIM_PortOnDevice : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Description ( "The Device that includes the Port." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Port on the Device." )]
   CIM_LogicalPort REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "This class is a representation of logical properties of a "
       "generic power source. Any logical device that has an aspect of "
       "producing power and thus effectively being a power source may "
       "be represented by this class or the subclass of this class." )]
class CIM_PowerSource : CIM_LogicalDevice {

      [Description ( 
          "Indicates the maximum amount of power that may be drawn "
          "within the rating of the PowerSource. The units of the "
          "value shall be described by the OutputPowerUnits "
          "property. A value of zero shall indicate \'unknown\'." ), 
       ModelCorrespondence { "CIM_PowerSource.OutputPowerUnits" }]
   uint32 RatedMaxOutputPower;

      [Description ( 
          "Indicates the programatic units for the MaxOutputPower property."
           ), 
       ModelCorrespondence { "CIM_PowerSource.MaxOutputPower" }, 
       ISPunit]
   string OutputPowerUnits;

      [Description ( 
          "A value of true shall indicate the output from the "
          "PowerSource is alternating current (AC). A value of "
          "false shall indicate the output from the PowerSource is "
          "direct current (DC)." )]
   boolean IsACOutput;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_PowerSupply
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Capabilities and management of the PowerSupply LogicalDevice." )]
class CIM_PowerSupply : CIM_LogicalDevice {

      [Description ( 
          "Boolean indicating that the PowerSupply is a switching "
          "(instead of linear) supply." )]
   boolean IsSwitchingSupply;

      [Description ( 
          "The low voltage of Input Voltage Range 1 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.7" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range1InputVoltageLow;

      [Description ( 
          "The high voltage of Input Voltage Range 1 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.8" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range1InputVoltageHigh;

      [Description ( 
          "The frequency (in hertz) at the low end of the Input "
          "Frequency Range 1 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.17" }, 
       PUnit ( "hertz" )]
   uint32 Range1InputFrequencyLow;

      [Description ( 
          "The frequency (in hertz) at the high end of the Input "
          "Frequency Range 1 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.18" }, 
       PUnit ( "hertz" )]
   uint32 Range1InputFrequencyHigh;

      [Description ( 
          "The low voltage of Input Voltage Range 2 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.11" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range2InputVoltageLow;

      [Description ( 
          "The high voltage of Input Voltage Range 2 for this Power "
          "Supply, in millivolts. A value of 0 denotes \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.12" }, 
       PUnit ( "volt * 10^-3" )]
   uint32 Range2InputVoltageHigh;

      [Description ( 
          "The frequency (in hertz) at the low end of the Input "
          "Frequency Range 2 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.19" }, 
       PUnit ( "hertz" )]
   uint32 Range2InputFrequencyLow;

      [Description ( 
          "The frequency (in hertz) at the high end of the Input "
          "Frequency Range 2 of this Power Supply. A value of 0 "
          "implies DC." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.20" }, 
       PUnit ( "hertz" )]
   uint32 Range2InputFrequencyHigh;

      [Description ( 
          "ActiveInputVoltage indicates which input voltage range "
          "is currently in use. Range 1, 2, or both can be "
          "specified using the values 3, 4, or 5, respectively. If "
          "the Supply is not currently drawing power, the value 6 "
          "(\"Neither\") can be specified. This information is "
          "necessary in the case of a UPS, a subclass of "
          "PowerSupply." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Range 1", "Range 2", "Both", 
          "Neither" }, 
       MappingStrings { "MIF.DMTF|Power Supply|004.15" }]
   uint16 ActiveInputVoltage;

      [Description ( 
          "TypeOfRangeSwitching describes the kind of input voltage "
          "range switching that is implemented in this PowerSupply. "
          "For example, autoswitching can be specified (value=4)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Manual", "Autoswitch", 
          "Wide Range", "Not Applicable" }, 
       MappingStrings { "MIF.DMTF|Power Supply|004.16" }]
   uint16 TypeOfRangeSwitching;

      [Description ( 
          "Represents the total output power of the PowerSupply in "
          "milliWatts. 0 denotes \'unknown\'." ), 
       Units ( "MilliWatts" ), 
       MappingStrings { "MIF.DMTF|Power Supply|004.21" }, 
       PUnit ( "watt * 10^-3" )]
   uint32 TotalOutputPower;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.25.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "Capabilities and management of the Printer LogicalDevice. The "
       "ABNF for CIM references to PWG Standards and MIBs is in the "
       "directory \'ftp://ftp.pwg.org/pub/pwg/general/process\' in the "
       "file \'pwg-cim-references-format-20060309.txt\'. Examples \n"
       "include: (a) a MappingStrings reference to a PWG Standard is "
       "\'PWG5101-1.PWG|Section 4 Media Color Names\'; \n"
       "(b) a MappingStrings reference to a PWG MIB is "
       "\'MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorCompletedJobs\'. \n"
       "Note: A Printer shall be associated with at least one of every "
       "required component (e.g., PrintMarker) via an instance of the "
       "PrinterComponent class. A Printer may be associated with zero "
       "or more optional components (e.g., PrintSupply) via an "
       "instance of the ConcreteComponent class. See: Model in section "
       "2 of Printer MIB (RFC 3805)." ), 
    MappingStrings { "MIB.IETF|Printer-MIB.prtGeneralEntry" }]
class CIM_Printer : CIM_LogicalDevice {

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of Printer. In "
          "addition, the user-friendly name can be used as an index "
          "property for a search or query. (Note: The name does not "
          "have to be unique within a namespace.) This name shall "
          "be generated as a factory default by the manufacturer "
          "and may be changed out-of-band to a site-specific name "
          "by the system administrator." ), 
       MappingStrings { "MIB.IETF|Printer-MIB.prtGeneralPrinterName" }, 
       ModelCorrespondence { "CIM_ManagedElement.ElementName" }]
   string ElementName;

      [Description ( 
          "Status information for a Printer, beyond that specified "
          "in the LogicalDevice.Availability property. \n"
          "Values mapped directly from hrPrinterStatus in Host "
          "Resources MIB (RFC 2790) are: \n"
          "1 (Other) means the printer is in some non-standard "
          "state \n"
          "- see Printer.ErrorInformation for more information \n"
          "2 (Unknown) means the printer state is unknown \n"
          "3 (Idle) means the printer is ready but idle \n"
          "4 (Printing) means the printer is processing job(s) \n"
          "5 (Warmup) means the printer is warming up - not ready \n"
          "Note: The values 6 (Stopped Printing) and 7 (Offline) "
          "are redundant with DetectedErrorState (below) and not "
          "mapped from hrPrinterStatus in Host Resources MIB (RFC "
          "2790)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", ".." }, 
       Values { "Other", "Unknown", "Idle", "Printing", "Warmup", 
          "Stopped Printing", "Offline", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|HOST-RESOURCES-MIB.hrPrinterStatus", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrPrinterDetectedErrorState" }, 
       ModelCorrespondence { "CIM_LogicalDevice.Availability", 
          "CIM_Printer.DetectedErrorState", 
          "CIM_Printer.ErrorInformation" }]
   uint16 PrinterStatus;

      [Description ( 
          "Printer error info mapped from "
          "hrPrinterDetectedErrorState in Host Resources MIB (RFC "
          "2790), as follows: \n"
          "0 (Unknown) means no error information is available \n"
          "1 (Other) means some non-standard error has occurred \n"
          "- see Printer.ErrorInformation for more information \n"
          "2 (No Error) means there are no error conditions \n"
          "3 (Low Paper) means PrintInputTray is low on paper \n"
          "4 (No Paper) means all PrintInputTray(s) are empty \n"
          "5 (Low Toner) means PrintMarker is low on toner \n"
          "6 (No Toner) means PrintMarker is out of toner \n"
          "7 (Door Open) means PrintInterlock is open \n"
          "8 (Jammed) means PrintMarker or PrintMediaPath is jammed \n"
          "9 (Offline) means Printer is offline (see PrinterStatus) \n"
          "10 (Service Requested) means intervention is required \n"
          "11 (Output Bin Full) means PrintOutputTray is full \n"
          "12 (Input Tray Missing) means PrintInputTray is missing \n"
          "13 (Output Tray Missing) means PrintOutputTray is "
          "missing \n"
          "14 (Marker Supply Missing) means PrintSupply is missing \n"
          "15 (Output Near Full) means PrintOutputTray is nearly "
          "full \n"
          "16 (Input Tray Empty) means PrintInputTray is empty \n"
          "17 (Overdue Prevent Maint) means Printer needs service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", ".." }, 
       Values { "Unknown", "Other", "No Error", "Low Paper", 
          "No Paper", "Low Toner", "No Toner", "Door Open", 
          "Jammed", "Offline", "Service Requested", 
          "Output Bin Full", "Input Tray Missing", 
          "Output Tray Missing", "Marker Supply Missing", 
          "Output Near Full", "Input Tray Empty", 
          "Overdue Prevent Maint", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|HOST-RESOURCES-MIB.hrPrinterDetectedErrorState" }, 
       ModelCorrespondence { "CIM_Printer.ErrorInformation" }]
   uint16 DetectedErrorState;

      [Description ( 
          "An array that provides supplemental information for the "
          "current error state, that is indicated in "
          "DetectedErrorState." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.13 printer-state-message" }, 
       ModelCorrespondence { "CIM_Printer.DetectedErrorState" }]
   string ErrorInformation[];

      [Deprecated { "CIM_PrintInputTray.MediaSizeName" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use PrintInputTray.MediaSizeName. \n"
          "Deprecated description: \n"
          "An integer array that indicates the sizes of paper "
          "supported." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", ".." }, 
       Values { "Unknown", "Other", "A", "B", "C", "D", "E", 
          "Letter", "Legal", "NA-10x13-Envelope", 
          // 10                
          "NA-9x12-Envelope", 
          "NA-Number-10-Envelope", "NA-7x9-Envelope", 
          "NA-9x11-Envelope", "NA-10x14-Envelope", 
          "NA-Number-9-Envelope", "NA-6x9-Envelope", 
          "NA-10x15-Envelope", "A0", "A1", 
          // 20                
          "A2", "A3", "A4", "A5", 
          "A6", "A7", "A8", "A9", "A10", "B0", 
          // 30                
          "B1", "B2", "B3", "B4", 
          "B5", "B6", "B7", "B8", "B9", "B10", 
          // 40                
          "C0", "C1", "C2", "C3", 
          "C4", "C5", "C6", "C7", "C8", "ISO-Designated", 
          // 50                
          "JIS B0", "JIS B1", 
          "JIS B2", "JIS B3", "JIS B4", "JIS B5", "JIS B6", 
          "JIS B7", "JIS B8", "JIS B9", 
          // 60                
          "JIS B10", "NA-Letter", 
          "NA-Legal", "B4-Envelope", "B5-Envelope", "C3-Envelope", 
          "C4-Envelope", "C5-Envelope", "C6-Envelope", 
          "Designated-Long-Envelope", 
          // 70                
          "Monarch-Envelope", 
          "Executive", "Folio", "Invoice", "Ledger", "Quarto", 
          "DMTF Reserved" }, 
       MappingStrings { "PWG5101-1.PWG|Media Standardized Names", 
          "MIB.IETF|Printer-MIB.prtInputMediaName", 
          "MIB.IETF|Printer-MIB.prtInputMediaDimFeedDirChosen", 
          "MIB.IETF|Printer-MIB.prtInputMediaDimXFeedDirChosen", 
          "RFC2911.IETF|Printer.media-supported", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.11 media", 
          "RFC2911.IETF|APPENDIX C \'media\' keyword values" }]
   uint16 PaperSizesSupported[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the MediaType, MediaName, and "
          "MediaSizeName and IsDefault properties in "
          "PrintInputTray. \n"
          "Deprecated description: \n"
          "An array of free-form strings specifying the types and "
          "sizes of paper that are currently available on the "
          "Printer. The values of the property SHOULD conform to "
          "the requirements of the PWG Media Standardized Names "
          "specification [PWG5101.1], which defines the normative "
          "values for this property. See older Appendix B \'Media "
          "Size Names\' and Appendix C \'Media Names\' of IETF "
          "Printer MIB v2 [RFC3805] which list the values of "
          "standardized media names defined in ISO DPA [ISO10175]." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "PWG5101-1.PWG|Media Standardized Names", 
          "MIB.IETF|Printer-MIB.prtInputMediaName", 
          "RFC2911.IETF|Printer.media-ready", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.11 media", 
          "RFC2911.IETF|APPENDIX C \'media\' keyword values" }, 
       ModelCorrespondence { "CIM_PrintJob.RequiredPaperType", 
          "CIM_PrintService.PaperTypesAvailable" }]
   string PaperTypesAvailable[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the MediaType, MediaName, and "
          "MediaSizeName and IsDefault properties in "
          "PrintInputTray. \n"
          "Deprecated description: \n"
          "Specifies the paper type that the Printer will use if a "
          "PrintJob does not specify a particular type. The string "
          "should be a value of PaperTypesAvailable. The values of "
          "the property SHOULD conform to the requirements of the "
          "PWG Media Standardized Names specification [PWG5101.1], "
          "which defines the normative values for this property. "
          "See older Appendix B \'Media Size Names\' and Appendix C "
          "\'Media Names\' of IETF Printer MIB v2 [RFC3805] which "
          "list the values of standardized media names defined in "
          "ISO DPA [ISO10175]." ), 
       MappingStrings { "PWG5101-1.PWG|Media Standardized Names", 
          "MIB.IETF|Printer-MIB.prtInputDefaultIndex", 
          "MIB.IETF|Printer-MIB.prtInputMediaName", 
          "RFC2911.IETF|Printer.media-default", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.11 media", 
          "RFC2911.IETF|APPENDIX C \'media\' keyword values" }, 
       ModelCorrespondence { "CIM_Printer.PaperTypesAvailable" }]
   string DefaultPaperType;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the MediaType, MediaName, and "
          "MediaSizeName and IsDefault properties in "
          "PrintInputTray. \n"
          "Deprecated description: \n"
          "Specifies the paper type that the Printer is currently "
          "using. The string should be a value of "
          "PaperTypesAvailable. The values of the property SHOULD "
          "conform to the requirements of the PWG Media "
          "Standardized Names specification [PWG5101.1], which "
          "defines the normative values for this property. See "
          "older Appendix B \'Media Size Names\' and Appendix C "
          "\'Media Names\' of IETF Printer MIB v2 [RFC3805] which "
          "list the values of standardized media names defined in "
          "ISO DPA [ISO10175]." ), 
       MappingStrings { "PWG5101-1.PWG|Media Standardized Names", 
          "MIB.IETF|Printer-MIB.prtInputDefaultIndex", 
          "MIB.IETF|Printer-MIB.prtInputMediaName", 
          "RFC2911.IETF|Printer.media-default", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.11 media", 
          "RFC2911.IETF|APPENDIX C \'media\' keyword values" }, 
       ModelCorrespondence { "CIM_Printer.PaperTypesAvailable" }]
   string CurrentPaperType;

      [Deprecated { "CIM_PrintInterpreter.LangType" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use PrintInterpreter.LangType. \n"
          "Deprecated description: \n"
          "An array that indicates the print languages that are "
          "natively supported \n"
          "Note: For legacy compatiblity reasons, this property is "
          "NOT exactly aligned (in order of values) with the "
          "authoritative PrtInterpreterLangFamilyTC in the IANA "
          "Printer MIB, unlike the newer property "
          "PrintInterpreter.LangType (which is exactly aligned with "
          "the IANA Printer MIB)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "50", "51", "52", "53", "54", "55", "56", 
          "57", "58", "59", "60", "61", "62", "63", "64", "65", 
          "66", "67", "68", "69", ".." }, 
       Values { "Other", "Unknown", "PCL", "HPGL", "PJL", "PS", 
          "PSPrinter", "IPDS", "PPDS", // 10
          "EscapeP", 
          "Epson", "DDIF", "Interpress", "ISO6429", "Line Data", 
          "MODCA", "REGIS", "SCS", "SPDL", 
          // 20
          "TEK4014", "PDS", "IGP", "CodeV", 
          "DSCDSE", "WPS", "LN03", "CCITT", "QUIC", "CPAP", 
          // 30
          "DecPPL", "Simple Text", "NPAP", "DOC", 
          "imPress", "Pinwriter", "NPDL", "NEC201PL", "Automatic", 
          "Pages", // 40
          "LIPS", "TIFF", "Diagnostic", 
          "CaPSL", "EXCL", "LCDS", "XES", "MIME", "TIPSI", 
          // 50
          "Prescribe", "LinePrinter", "IDP", "XJCL", 
          "PDF", "RPDL", "IntermecIPL", "UBIFingerprint", 
          "UBIDirectProtocol", "Fujitsu", // 60
          "PCLXL", 
          "ART", "CGM", "JPEG", "CALS1", "CALS2", "NIRS", "C4", 
          "XPS", "OpenXPS", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtInterpreterLangFamily", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtInterpreterLangFamilyTC", 
          "RFC2911.IETF|Section 4.4.22 document-format-supported" }, 
       ModelCorrespondence { "CIM_Printer.MimeTypesSupported", 
          "CIM_PrintJob.Language", 
          "CIM_PrintService.LanguagesSupported", 
          "CIM_PrintInterpreter.LangType" }]
   uint16 LanguagesSupported[];

      [Deprecated { "CIM_PrintInterpreter.LangType" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use PrintInterpreter.LangType. \n"
          "Deprecated description: \n"
          "An array of free-form strings that provides more "
          "detailed explanations of any MIME types that are "
          "supported by the Printer. If data is provided for this "
          "property, then the (value=47), \"Mime\", should be "
          "included in the Languages Supported property." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.22 document-format-supported" }, 
       ModelCorrespondence { "CIM_Printer.LanguagesSupported", 
          "CIM_PrintJob.MimeTypes", 
          "CIM_PrintService.MimeTypesSupported", 
          "CIM_PrintInterpreter.LangType" }]
   string MimeTypesSupported[];

      [Deprecated { "CIM_PrintInterpreter.LangType" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes "
          "PrintInterpreter and PrintChannel and the association "
          "class AssociatedPrintInterpreter value of DefaultType "
          "(JCL or PDL) to the PrintInterpreter.LangType property "
          "for default language(s) for each PrintChannel instance. \n"
          "Deprecated description: \n"
          "Indicates the current printer language being used. A "
          "language that is being used by the Printer should also "
          "be listed in LanguagesSupported. \n"
          "Note: For legacy compatiblity reasons, this property is "
          "NOT exactly aligned (in order of values) with the "
          "authoritative PrtInterpreterLangFamilyTC in the IANA "
          "Printer MIB, unlike the newer property "
          "PrintInterpreter.LangType (which is exactly aligned with "
          "the IANA Printer MIB)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "50", "51", "52", "53", "54", "55", "56", 
          "57", "58", "59", "60", "61", "62", "63", "64", "65", 
          "66", "67", "68", "69", ".." }, 
       Values { "Other", "Unknown", "PCL", "HPGL", "PJL", "PS", 
          "PSPrinter", "IPDS", "PPDS", // 10
          "EscapeP", 
          "Epson", "DDIF", "Interpress", "ISO6429", "Line Data", 
          "MODCA", "REGIS", "SCS", "SPDL", 
          // 20
          "TEK4014", "PDS", "IGP", "CodeV", 
          "DSCDSE", "WPS", "LN03", "CCITT", "QUIC", "CPAP", 
          // 30
          "DecPPL", "Simple Text", "NPAP", "DOC", 
          "imPress", "Pinwriter", "NPDL", "NEC201PL", "Automatic", 
          "Pages", // 40
          "LIPS", "TIFF", "Diagnostic", 
          "CaPSL", "EXCL", "LCDS", "XES", "MIME", "TIPSI", 
          // 50
          "Prescribe", "LinePrinter", "IDP", "XJCL", 
          "PDF", "RPDL", "IntermecIPL", "UBIFingerprint", 
          "UBIDirectProtocol", "Fujitsu", // 60
          "PCLXL", 
          "ART", "CGM", "JPEG", "CALS1", "CALS2", "NIRS", "C4", 
          "XPS", "OpenXPS", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtChannelDefaultPageDescLangIndex", 
          "MIB.IETF|Printer-MIB.prtInterpreterLangFamily", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtInterpreterLangFamilyTC", 
          "RFC2911.IETF|Section 4.4.21 document-format-default" }, 
       ModelCorrespondence { "CIM_Printer.LanguagesSupported", 
          "CIM_Printer.CurrentMimeType" }]
   uint16 CurrentLanguage;

      [Deprecated { "CIM_PrintInterpreter.LangType" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes "
          "PrintInterpreter and PrintChannel and the association "
          "class AssociatedPrintInterpreter value of DefaultType "
          "(JCL or PDL) to the PrintInterpreter.LangType property "
          "for default language(s) for each PrintChannel instance. \n"
          "Deprecated description: \n"
          "Specifies the MIME type that is currently in use by the "
          "Printer if the CurrentLanguage is set to indicate that a "
          "MIME type is in use (value=47)." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.21 document-format-default" }, 
       ModelCorrespondence { "CIM_Printer.CurrentLanguage" }]
   string CurrentMimeType;

      [Deprecated { "CIM_PrintInterpreter.LangType" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes "
          "PrintInterpreter and PrintChannel and the association "
          "class AssociatedPrintInterpreter value of DefaultType "
          "(JCL or PDL) to the PrintInterpreter.LangType property "
          "for default language(s) for each PrintChannel instance. \n"
          "Deprecated description: \n"
          "Indicates the default printer language. A language that "
          "is used as a default by the Printer should also be "
          "listed in LanguagesSupported. \n"
          "Note: For legacy compatiblity reasons, this property is "
          "NOT exactly aligned (in order of values) with the "
          "authoritative PrtInterpreterLangFamilyTC in the IANA "
          "Printer MIB, unlike the newer property "
          "PrintInterpreter.LangType (which is exactly aligned with "
          "the IANA Printer MIB)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "50", "51", "52", "53", "54", "55", "56", 
          "57", "58", "59", "60", "61", "62", "63", "64", "65", 
          "66", "67", "68", "69", ".." }, 
       Values { "Other", "Unknown", "PCL", "HPGL", "PJL", "PS", 
          "PSPrinter", "IPDS", "PPDS", // 10
          "EscapeP", 
          "Epson", "DDIF", "Interpress", "ISO6429", "Line Data", 
          "MODCA", "REGIS", "SCS", "SPDL", 
          // 20
          "TEK4014", "PDS", "IGP", "CodeV", 
          "DSCDSE", "WPS", "LN03", "CCITT", "QUIC", "CPAP", 
          // 30
          "DecPPL", "Simple Text", "NPAP", "DOC", 
          "imPress", "Pinwriter", "NPDL", "NEC201PL", "Automatic", 
          "Pages", // 40
          "LIPS", "TIFF", "Diagnostic", 
          "CaPSL", "EXCL", "LCDS", "XES", "MIME", "TIPSI", 
          // 50
          "Prescribe", "LinePrinter", "IDP", "XJCL", 
          "PDF", "RPDL", "IntermecIPL", "UBIFingerprint", 
          "UBIDirectProtocol", "Fujitsu", // 60
          "PCLXL", 
          "ART", "CGM", "JPEG", "CALS1", "CALS2", "NIRS", "C4", 
          "XPS", "OpenXPS", "DMTF Reserved" }, 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtChannelDefaultPageDescLangIndex", 
          "MIB.IETF|Printer-MIB.prtInterpreterLangFamily", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtInterpreterLangFamilyTC", 
          "RFC2911.IETF|Section 4.4.21 document-format-default" }, 
       ModelCorrespondence { "CIM_Printer.LanguagesSupported", 
          "CIM_Printer.DefaultMimeType" }]
   uint16 DefaultLanguage;

      [Deprecated { "CIM_PrintInterpreter.LangType" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes "
          "PrintInterpreter and PrintChannel and the association "
          "class AssociatedPrintInterpreter value of DefaultType "
          "(JCL or PDL) to the PrintInterpreter.LangType property "
          "for default language(s) for each PrintChannel instance. \n"
          "Deprecated description: \n"
          "Specifies the default MIME type that is used by the "
          "Printer if the DefaultLanguage is set to indicate that a "
          "MIME type is in use (value=47)." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.21 document-format-default" }, 
       ModelCorrespondence { "CIM_Printer.DefaultLanguage" }]
   string DefaultMimeType;

      [Description ( 
          "Printer jobs that are processed since last reset. These "
          "jobs can be processed from one or more PrintQueues." ), 
       Counter, MappingStrings { 
          "MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorCompletedJobs" }]
   uint32 JobCountSinceLastReset;

      [Description ( "Time of the last reset of the Printer Device." ), 
       MappingStrings { "MIB.IETF|SNMPv2-MIB.sysUpTime", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemUptime", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemDate", 
          "RFC2911.IETF|Section 4.4.29 printer-up-time", 
          "RFC2911.IETF|Section 4.4.30 printer-current-time" }]
   datetime TimeOfLastReset;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes, "
          "e.g., PrintInputTray, PrintMarker, PrintFinisher, etc. "
          "For example, 3 (Duplex Printing) support can be found in "
          "the PrintMediaPath.Type property. \n"
          "Deprecated description: \n"
          "An array of integers that indicates Printer "
          "capabilities. Information such as \"Duplex Printing\" "
          "(value=3) or \"Transparency Printing\" (value=7) is "
          "specified in this property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", ".." }, 
       Values { "Unknown", "Other", "Color Printing", 
          "Duplex Printing", "Copies", "Collation", "Stapling", 
          "Transparency Printing", "Punch", "Cover", "Bind", 
          "Black and White Printing", "One Sided", 
          "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", 
          "Landscape", "Reverse Portrait", "Reverse Landscape", 
          "Quality High", "Quality Normal", "Quality Low", 
          "DMTF Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Printer.CapabilityDescriptions", 
          "CIM_PrintJob.Finishing", "CIM_PrintService.Capabilities" }]
   uint16 Capabilities[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes, "
          "e.g., PrintInputTray, PrintMarker, PrintFinisher, etc. \n"
          "Deprecated description: \n"
          "An array of free-form strings that provides more "
          "detailed explanations for any of the Printer features "
          "that are indicated in the Capabilities array. Note, each "
          "entry of this array is related to the entry in the "
          "Capabilities array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Printer.Capabilities" }]
   string CapabilityDescriptions[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes, "
          "e.g., PrintInputTray, PrintMarker, PrintFinisher, etc. \n"
          "Deprecated description: \n"
          "Specifies which finishings and other capabilities of the "
          "Printer will be used by default. An entry in Default "
          "Capabilities should also be listed in the Capabilities "
          "array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", ".." }, 
       Values { "Unknown", "Other", "Color Printing", 
          "Duplex Printing", "Copies", "Collation", "Stapling", 
          "Transparency Printing", "Punch", "Cover", "Bind", 
          "Black and White Printing", "One Sided", 
          "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", 
          "Landscape", "Reverse Portrait", "Reverse Landscape", 
          "Quality High", "Quality Normal", "Quality Low", 
          "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_Printer.Capabilities" }]
   uint16 DefaultCapabilities[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the Printer component classes, "
          "e.g., PrintInputTray, PrintMarker, PrintFinisher, etc. \n"
          "Deprecated description: \n"
          "Specifies which finishings and other capabilities of the "
          "Printer are currently being used. An entry in this "
          "property should also be listed in the Capabilities "
          "array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", ".." }, 
       Values { "Unknown", "Other", "Color Printing", 
          "Duplex Printing", "Copies", "Collation", "Stapling", 
          "Transparency Printing", "Punch", "Cover", "Bind", 
          "Black and White Printing", "One Sided", 
          "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", 
          "Landscape", "Reverse Portrait", "Reverse Landscape", 
          "Quality High", "Quality Normal", "Quality Low", 
          "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_Printer.Capabilities" }]
   uint16 CurrentCapabilities[];

      [Description ( 
          "Note: The use of this property will be deprecated in "
          "favor of new PrintServiceCapabilities.Copies in the "
          "future. \n"
          "The maximum number of copies that can be produced by the "
          "Printer from a single Job." ), 
       MappingStrings { "RFC2911.IETF|Printer.copies-supported", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.5 copies" }, 
       ModelCorrespondence { "CIM_PrintJob.Copies" }]
   uint32 MaxCopies;

      [Description ( 
          "Note: The use of this property will be deprecated in "
          "favor of new PrintServiceSettings.Copies in the future. \n"
          "The number of copies that will be produced for a single "
          "Job unless otherwise specified." ), 
       MappingStrings { "RFC2911.IETF|Printer.copies-default", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.5 copies" }]
   uint32 DefaultCopies;

      [Description ( 
          "Note: The use of this property will be deprecated in "
          "favor of new PrintServiceCapabilities.NumberUp in the "
          "future. \n"
          "The maximum number of print-stream pages that the "
          "Printer can render onto a single media sheet." ), 
       MappingStrings { "RFC2911.IETF|Printer.number-up-supported", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.9 number-up" }, 
       ModelCorrespondence { "CIM_PrintJob.NumberUp" }]
   uint32 MaxNumberUp;

      [Description ( 
          "Note: The use of this property will be deprecated in "
          "favor of new PrintServiceSettings.NumberUp in the "
          "future. \n"
          "The number of print-stream pages that the Printer will "
          "render onto a single media sheet unless a Job specifies "
          "otherwise." ), 
       MappingStrings { "RFC2911.IETF|Printer.number-up-default", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.9 number-up" }]
   uint32 DefaultNumberUp;

      [Deprecated { "CIM_PrintMarker.XFeedAddressability" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the XFeedAddressability "
          "property in the Printer component classes PrintMarker "
          "and PrintInterpreter. \n"
          "Deprecated description: \n"
          "The resolution of the Printer in Pixels per Inch in the "
          "cross-feed direction, i.e., short-edge in portrait feed "
          "mode." ), 
       Units ( "Pixels per Inch" ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerAddressabilityXFeedDir", 
          "RFC2911.IETF|Section 4.2.12 printer-resolution" }, 
       ModelCorrespondence { "CIM_PrintJob.HorizontalResolution" }, 
       PUnit ( "pixel / inch" )]
   uint32 HorizontalResolution;

      [Deprecated { "CIM_PrintMarker.FeedAddressability" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use the FeedAddressability "
          "property in the Printer component classes PrintMarker "
          "and PrintInterpreter. \n"
          "Deprecated description: \n"
          "The resolution of the Printer in Pixels per Inch in the "
          "feed direction, i.e., long-edge in portrait feed mode." ), 
       Units ( "Pixels per Inch" ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtMarkerAddressabilityFeedDir", 
          "RFC2911.IETF|Section 4.2.12 printer-resolution" }, 
       ModelCorrespondence { "CIM_PrintJob.VerticalResolution" }, 
       PUnit ( "pixel / inch" )]
   uint32 VerticalResolution;

      [Description ( 
          "Identifies the available character sets for the output "
          "of text that is related to managing the Printer. Strings "
          "provided in this property should conform to the "
          "semantics and syntax specified by section 4.1.2 "
          "(\"Charset parameter\") in RFC 2046 (MIME Part 2) and "
          "contained in the IANA character-set registry. Examples "
          "include \"utf-8\", \"us-ascii\" and \"iso-8859-1\". \n"
          "Note: For compatiblity with the IETF Printer MIB (RFC "
          "3805) and IETF IPP/1.1 (RFC 2911), values in this array "
          "property shall be parallel to values in "
          "NaturalLanguagesSupported." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtLocalizationCharacterSet", 
          "MIB.IETF|IANA-CHARSET-MIB.IANACharset", 
          "RFC2911.IETF|Section 4.4.18 charset-supported" }, 
       ModelCorrespondence { "CIM_PrintJob.CharSet" }]
   string CharSetsSupported[];

      [Description ( 
          "Specifies the current character set that is being used "
          "for the output of text that relates to the management of "
          "the Printer. The character set that is described by this "
          "property should also be listed in CharsetsSupported. The "
          "string that is specified by this property should conform "
          "to the semantics and syntax that are specified by "
          "section 4.1.2 (\"Charset parameter\") in RFC 2046 (MIME "
          "Part 2) and contained in the IANA character-set "
          "registry. Examples include \"utf-8\", \"us-ascii\" and "
          "\"iso-8859-1\". \n"
          "Note: For compatiblity with the IETF Printer MIB (RFC "
          "3805) and IETF IPP/1.1 (RFC 2911), values in this array "
          "property shall be parallel to values in "
          "CharSetsSupported." ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtGeneralCurrentLocalization", 
          "MIB.IETF|Printer-MIB.prtLocalizationCharacterSet", 
          "MIB.IETF|IANA-CHARSET-MIB.IANACharset", 
          "RFC2911.IETF|Section 4.4.19 charset-configured" }, 
       ModelCorrespondence { "CIM_Printer.CharSetsSupported" }]
   string CurrentCharSet;

      [Description ( 
          "Identifies the available languages for strings that are "
          "used by the Printer for the output of management "
          "information. The strings should conform to RFC 1766, for "
          "example, \"en\" is used for English." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtLocalizationLanguage", 
          "MIB.IETF|Printer-MIB.prtLocalizationCountry", 
          "RFC2911.IETF|Printer.generated-natural-language-supported", 
          "RFC2911.IETF|Section 4.4.20" }, 
       ModelCorrespondence { "CIM_Printer.CurrentNaturalLanguage", 
          "CIM_Printer.ConsoleNaturalLanguage", 
          "CIM_PrintJob.NaturalLanguage" }]
   string NaturalLanguagesSupported[];

      [Description ( 
          "Identifies the current language that is being used by "
          "the Printer for management. The language listed in the "
          "CurrentNaturalLanguage property should also be listed in "
          "NaturalLanguagesSupported." ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtGeneralCurrentLocalization", 
          "MIB.IETF|Printer-MIB.prtLocalizationLanguage", 
          "MIB.IETF|Printer-MIB.prtLocalizationCountry", 
          "RFC2911.IETF|Section 4.4.19 natural-language-configured" }, 
       ModelCorrespondence { "CIM_Printer.NaturalLanguagesSupported" }]
   string CurrentNaturalLanguage;

      [Description ( 
          "Note: The use of this property will be deprecated in "
          "favor of new PrintServiceCapabilities.MaxJobSize in the "
          "future. \n"
          "Specifies the largest Job (as a byte stream) that the "
          "Printer will accept in units of Kbytes. A value of 0 "
          "indicates that no limit has been set." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.33 job-k-octets-supported" }, 
       ModelCorrespondence { "CIM_PrintJob.JobSize" }, 
       PUnit ( "byte * 10^3" )]
   uint32 MaxSizeSupported;

      [Description ( 
          "Describes all of the job sheets that are available on "
          "the Printer. This method can also be used to describe "
          "the banner that a Printer might provide at the beginning "
          "of each Job or that can describe other user specified "
          "options." ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtAuxiliarySheetStartupPage", 
          "MIB.IETF|Printer-MIB.prtAuxiliarySheetBannerPage", 
          "RFC2911.IETF|Printer.job-sheets-supported", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.3 job-sheets" }, 
       ModelCorrespondence { "CIM_PrintJob.RequiredJobSheets" }]
   string AvailableJobSheets[];

      [Deprecated { "CIM_PrintMarker.MarkTech" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use PrintMarker.MarkTech. \n"
          "Deprecated description: \n"
          "Specifies the marking technology that is used by the "
          "Printer." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", ".." }, 
       Values { "Other", "Unknown", "Electrophotographic LED", 
          "Electrophotographic Laser", "Electrophotographic Other", 
          "Impact Moving Head Dot Matrix 9pin", 
          "Impact Moving Head Dot Matrix 24pin", 
          "Impact Moving Head Dot Matrix Other", 
          "Impact Moving Head Fully Formed", "Impact Band", 
          "Impact Other", "Inkjet Aqueous", "Inkjet Solid", 
          "Inkjet Other", "Pen", "Thermal Transfer", 
          "Thermal Sensitive", "Thermal Diffusion", "Thermal Other", 
          "Electroerosion", "Electrostatic", 
          "Photographic Microfiche", "Photographic Imagesetter", 
          "Photographic Other", "Ion Deposition", "eBeam", 
          "Typesetter", "DMTF Reserved" }, 
       MappingStrings { "MIB.IETF|Printer-MIB.prtMarkerMarkTech", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtMarkerMarkTechTC" }]
   uint16 MarkingTechnology;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PrinterServicingJob 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This association indicates that a Printer is currently "
       "servicing a particular PrintJob." )]
class CIM_PrinterServicingJob : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The destination Printer for a PrintJob." )]
   CIM_Printer REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PrintJob." )]
   CIM_PrintJob REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PrintJobFile
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This association indicates which files are associated with a "
       "PrintJob." )]
class CIM_PrintJobFile : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The PrintJob that is based on one or more Files." )]
   CIM_PrintJob REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The Files that make up a PrintJob." )]
   CIM_DataFile REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00858" type ="change'>Update the
// the properties MappingStrings.</
// ==================================================================
//  CIM_PrintSAP
// ==================================================================
   [Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( "The ServiceAccessPoint for a printing Service." )]
class CIM_PrintSAP : CIM_ServiceAccessPoint {

      [Description ( 
          "Specifies the print procotols that this AccessPoint "
          "uses. Note, each entry of this array is related to the "
          "entry in the PrintProtocolInfo array that is located at "
          "the same index." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "SMB", "BSD", "SYSV", "HPNP", 
          "IPP", "Local" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|IANA-PRINTER-MIB.PrtChannelInformation", 
          "MIB.IETF|Printer-MIB.prtChannelType" }, 
       ModelCorrespondence { "CIM_PrintSAP.PrintProtocolInfo" }]
   uint16 PrintProtocol[];

      [Description ( 
          "Provides clarifying or additional information about the "
          "protocols that are supported by this AccessPoint. Note, "
          "each entry of this array is related to the entry in the "
          "PrintProtocol array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|IANA-PRINTER-MIB.PrtChannelInformation", 
          "MIB.IETF|Printer-MIB.prtChannelType" }, 
       ModelCorrespondence { "CIM_PrintSAP.PrintProtocol" }]
   string PrintProtocolInfo[];


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "The Service that provides support for printing. The basic "
       "assumption of the Printing Model is that a PrintService "
       "accepts a PrintJob for processing, using its PrintSAP. The Job "
       "is then placed on a PrintQueue (that is indicated by the "
       "QueueForPrintService association). Printers take Jobs from "
       "Queues (indicated by the PrinterServicingQueue association). "
       "The ABNF for CIM references to PWG Standards and MIBs is in "
       "the directory \'ftp://ftp.pwg.org/pub/pwg/general/process\' in "
       "the file \'pwg-cim-references-format-20060309.txt\'. An "
       "example for a MappingStrings reference to a PWG Standard is "
       "\'PWG5101-1.PWG|Section 4 Media Color Names\'. An example for "
       "a MappingStrings reference to a PWG MIB is "
       "\'MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorCompletedJobs\'." )]
class CIM_PrintService : CIM_Service {

      [Description ( 
          "An array of free-form strings that specifies the types "
          "and sizes of paper that can be used by Jobs that are "
          "submitted to this PrintService. This list can be "
          "different than the paper types that are installed on the "
          "Printer, because the PrintService can include support "
          "for manually making other types available or only a "
          "subset of paper types can be exported using this "
          "PrintService. The values of the property SHOULD conform "
          "to the requirements of the PWG Media Standardized Names "
          "specification [PWG5101.1], which defines the normative "
          "values for this property. See older Appendix B \'Media "
          "Size Names\' and Appendix C \'Media Names\' of IETF "
          "Printer MIB v2 [RFC3805] which list the values of "
          "standardized media names defined in ISO DPA [ISO10175]." ), 
       MappingStrings { "PWG5101-1.PWG|Media Standardized Names", 
          "MIB.IETF|Printer-MIB.prtInputMediaName", 
          "RFC2911.IETF|Printer.media-supported", 
          "RFC2911.IETF|Section 4.2 Job Template Attributes", 
          "RFC2911.IETF|Section 4.2.11 media", 
          "RFC2911.IETF|APPENDIX C \'media\' keyword values" }, 
       ModelCorrespondence { "CIM_Printer.PaperTypesAvailable", 
          "CIM_PrintJob.RequiredPaperType", 
          "CIM_PrintServiceSettings.Media" }]
   string PaperTypesAvailable[];

      [Deprecated { "CIM_PrintService.MimeTypesSupported" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use MimeTypesSupported. \n"
          "Enumerated print languages are only available in the "
          "IETF Printer MIB v1/v2 (RFC 1759/3805) and are not "
          "available in open standard print protocols (i.e., no "
          "known mapping). \n"
          "Deprecated description: \n"
          "An array that indicates the print languages that are "
          "supported by the PrintService. A PrintService can "
          "support more languages than those available on the "
          "underlying Printer through the use of filters. An "
          "administrator can also choose to prevent some languages "
          "from being exported by the PrintService. \n"
          "Note: For legacy compatiblity reasons, this property is "
          "NOT exactly aligned (in order of values) with the "
          "authoritative PrtInterpreterLangFamilyTC in the IANA "
          "Printer MIB, unlike the newer property "
          "PrintInterpreter.LangType (which is exactly aligned with "
          "the IANA Printer MIB)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "50", "51", "52", "53", "54", "55", "56", 
          "57", "58", "59", "60", "61", "62", "63", "64", "65", 
          "66", "67", "68", "69", ".." }, 
       Values { "Other", "Unknown", "PCL", "HPGL", "PJL", "PS", 
          "PSPrinter", "IPDS", "PPDS", "EscapeP", "Epson", "DDIF", 
          "Interpress", "ISO6429", "Line Data", "MODCA", "REGIS", 
          "SCS", "SPDL", "TEK4014", "PDS", "IGP", "CodeV", "DSCDSE", 
          "WPS", "LN03", "CCITT", "QUIC", "CPAP", "DecPPL", 
          "Simple Text", "NPAP", "DOC", "imPress", "Pinwriter", 
          "NPDL", "NEC201PL", "Automatic", "Pages", "LIPS", "TIFF", 
          "Diagnostic", "CaPSL", "EXCL", "LCDS", "XES", "MIME", 
          "TIPSI", "Prescribe", "LinePrinter", "IDP", "XJCL", "PDF", 
          "RPDL", "IntermecIPL", "UBIFingerprint", 
          "UBIDirectProtocol", "Fujitsu", "PCLXL", "ART", "CGM", 
          "JPEG", "CALS1", "CALS2", "NIRS", "C4", "XPS", "OpenXPS", 
          "DMTF Reserved" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtInterpreterLangFamily" }, 
       ModelCorrespondence { "CIM_Printer.LanguagesSupported", 
          "CIM_PrintJob.Language" }]
   uint16 LanguagesSupported[];

      [Description ( 
          "An array of input document formats (MIME types) that are "
          "supported by the PrintService." ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.22 document-format-supported" }, 
       ModelCorrespondence { "CIM_Printer.MimeTypesSupported", 
          "CIM_PrintJob.MimeTypes", 
          "CIM_PrintServiceSettings.DocumentFormat" }]
   string MimeTypesSupported[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use PrintServiceCapabilities "
          "properties (e.g., Finishings). \n"
          "Deprecated description: \n"
          "An array of integers that indicates the capabilities "
          "that are supported by this service. Information such as "
          "values \'Duplex Printing\' or \'Transparency Printing\' "
          "is specified in this property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21" }, 
       Values { "Unknown", "Other", "Color Printing", 
          "Duplex Printing", "Copies", "Collation", "Stapling", 
          "Transparency Printing", "Punch", "Cover", "Bind", 
          "Black and White Printing", "One Sided", 
          "Two Sided Long Edge", "Two Sided Short Edge", "Portrait", 
          "Landscape", "Reverse Portrait", "Reverse Landscape", 
          "Quality High", "Quality Normal", "Quality Low" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtInterpreterLangFamily", 
          "MIB.IETF|IANA-PRINTER-MIB.PrtInterpreterLangFamilyTC", 
          "RFC2911.IETF|Section 4.4.22 document-format-supported" }, 
       ModelCorrespondence { "CIM_Printer.Capabilities", 
          "CIM_PrintJob.Finishing", 
          "CIM_PrintService.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. Instead use properties defined in the "
          "PrintServiceCapabilities class. \n"
          "Deprecated description: \n"
          "An array of free-form strings that provides more "
          "detailed explanations for any of the Printer features "
          "that are indicated in the Capabilities array. Note, each "
          "entry of this array is related to the entry in the "
          "Capabilities array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_PrintService.Capabilities" }]
   string CapabilityDescriptions[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this property has been deprecated, due "
          "to ambiguity. \n"
          "Print filter information is not available in open "
          "standard print protocols (i.e., no known mapping). \n"
          "Deprecated description: \n"
          "Describes the filters that are available within this "
          "Print Service. For example, a PrintService can convert a "
          "Job that is submitted in one page description language "
          "to another, so that it can be passed to an available "
          "Printer." )]
   string AvailableFilters[];

      [Required, Override ( "Description" ), 
       Description ( 
          "The description of this specific instance of "
          "PrintService. \n"
          "This text shall be generated as a factory default by the "
          "manufacturer and may be changed out-of-band by the "
          "system administrator." ), 
       MappingStrings { "RFC2911.IETF|Section 4.4.6 printer-info" }]
   string Description;

      [Required, Override ( "ElementName" ), 
       Description ( 
          "The user-friendly name for this instance of "
          "PrintService. In addition, the user-friendly name can be "
          "used as an index property for a search or query. (Note: "
          "The name does not have to be unique within a namespace.) "
          "This name shall be generated as a factory default by the "
          "manufacturer and may be changed out-of-band to a "
          "site-specific name by the system administrator." ), 
       MappingStrings { "RFC2911.IETF|Section 4.4.4 printer-name" }]
   string ElementName;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Device::Processor" ), 
    Description ( 
       "Capabilities and management of the Processor LogicalDevice." )]
class CIM_Processor : CIM_LogicalDevice {

      [Description ( 
          "A free-form string that describes the role of the "
          "Processor, for example, \"Central Processor\" or \"Math "
          "Processor\"." )]
   string Role;

      [Description ( 
          "The Processor family type. For example, values include "
          "\"Pentium(R) processor with MMX(TM) technology\" "
          "(value=14) and \"68040\" (value=96)." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          // 11                   
          "11", "12", "13", "14", 
          "15", "16", "17", "18", "19", "20", "21", 
          // 24                   
          "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", 
          // 48                   
          "48", "49", "50", "51", 
          "52", "53", "54", "55", "56", "57", "58", "59", "60", 
          "61", "62", // 64                   
          "64", "65", 
          "66", "67", "68", "69", "70", "71", "72", "73", 
          // 80                   
          "80", "81", "82", "83", 
          "84", "85", "86", "87", "88", 
          // 96                      
          "96", "97", "98", 
          "99", "100", "101", 
          // 112                   
          "112", "120", "121", 
          "122", "128", "130", "131", "132", "133", "134", 
          // 135
          "135", "136", "137", "138", "139", "140", 
          "141", "142", "143", 
          // 144                      
          "144", "145", 
          "146", "147", "148", "149", "150", 
          // 160                      
          "160", "161", 
          "162", "163", "164", "165", "166", "167", "168", "169", 
          // 170
          "170", "171", "172", "173", "174", "175", 
          "176", "177", "178", "179", // 180
          "180", "181", 
          "182", "183", "184", "185", "186", "187", "188", "189", 
          // 190                   
          "190", "191", "192", 
          "193", "194", "195", "196", "197", "198", "199", 
          // 200                   
          "200", "201", "202", 
          "203", "204", "205", "206", // 210
          "210", "211", 
          "212", "213", "214", "215", "216", "217", "218", "219", 
          // 220
          "221", "222", "223", "224", 
          // 230 
          "230", "231", "232", "233", "234", 
          "235", "236", "237", "238", "239", 
          // 250                 
          "250", "251", "254", 
          "255", "260", "261", "280", "281", 
          // 300                 
          "300", "301", "302", 
          "320", "350", "500", 
          // 65534                 
          "65534", "65535" }, 
       Values { "Other", "Unknown", "8086", "80286", "80386", 
          "80486", "8087", "80287", "80387", "80487", 
          // 11                     
          "Pentium(R) brand", 
          "Pentium(R) Pro", "Pentium(R) II", 
          "Pentium(R) processor with MMX(TM) technology", 
          "Celeron(TM)", "Pentium(R) II Xeon(TM)", "Pentium(R) III", 
          "M1 Family", "M2 Family", 
          "Intel(R) Celeron(R) M processor", 
          "Intel(R) Pentium(R) 4 HT processor", 
          // 24                    
          "K5 Family", 
          "K6 Family", "K6-2", "K6-3", 
          "AMD Athlon(TM) Processor Family", 
          "AMD(R) Duron(TM) Processor", "AMD29000 Family", 
          // 31                    
          "K6-2+", 
          "Power PC Family", "Power PC 601", "Power PC 603", 
          "Power PC 603+", "Power PC 604", "Power PC 620", 
          "Power PC X704", "Power PC 750", 
          "Intel(R) Core(TM) Duo processor", 
          "Intel(R) Core(TM) Duo mobile processor", 
          "Intel(R) Core(TM) Solo mobile processor", 
          "Intel(R) Atom(TM) processor", 
          // 48                     
          "Alpha Family", 
          "Alpha 21064", "Alpha 21066", "Alpha 21164", 
          "Alpha 21164PC", "Alpha 21164a", "Alpha 21264", 
          "Alpha 21364", 
          // 56
          "AMD Turion(TM) II Ultra Dual-Core Mobile M Processor Family", 
          "AMD Turion(TM) II Dual-Core Mobile M Processor Family", 
          "AMD Athlon(TM) II Dual-Core Mobile M Processor Family", 
          "AMD Opteron(TM) 6100 Series Processor", 
          "AMD Opteron(TM) 4100 Series Processor", 
          "AMD Opteron(TM) 6200 Series Processor", 
          "AMD Opteron(TM) 4200 Series Processor", 
          // 64                     
          "MIPS Family", 
          "MIPS R4000", "MIPS R4200", "MIPS R4400", "MIPS R4600", 
          "MIPS R10000", "AMD C-Series Processor", 
          "AMD E-Series Processor", "AMD S-Series Processor", 
          "AMD G-Series Processor", 
          // 80                     
          "SPARC Family", 
          "SuperSPARC", "microSPARC II", "microSPARC IIep", 
          "UltraSPARC", "UltraSPARC II", "UltraSPARC IIi", 
          "UltraSPARC III", "UltraSPARC IIIi", 
          // 96                     
          "68040", 
          "68xxx Family", "68000", "68010", "68020", "68030", 
          // 112                     
          "Hobbit Family", 
          "Crusoe(TM) TM5000 Family", "Crusoe(TM) TM3000 Family", 
          "Efficeon(TM) TM8000 Family", "Weitek", 
          "Itanium(TM) Processor", 
          "AMD Athlon(TM) 64 Processor Family", 
          "AMD Opteron(TM) Processor Family", 
          "AMD Sempron(TM) Processor Family", 
          "AMD Turion(TM) 64 Mobile Technology", 
          // 135                   
          "Dual-Core AMD Opteron(TM) Processor Family", 
          "AMD Athlon(TM) 64 X2 Dual-Core Processor Family", 
          "AMD Turion(TM) 64 X2 Mobile Technology", 
          "Quad-Core AMD Opteron(TM) Processor Family", 
          "Third-Generation AMD Opteron(TM) Processor Family", 
          "AMD Phenom(TM) FX Quad-Core Processor Family", 
          "AMD Phenom(TM) X4 Quad-Core Processor Family", 
          "AMD Phenom(TM) X2 Dual-Core Processor Family", 
          "AMD Athlon(TM) X2 Dual-Core Processor Family", 
          // 144                     
          "PA-RISC Family", 
          "PA-RISC 8500", "PA-RISC 8000", "PA-RISC 7300LC", 
          "PA-RISC 7200", "PA-RISC 7100LC", "PA-RISC 7100", 
          // 160                     
          "V30 Family", 
          // 161 
          "Quad-Core Intel(R) Xeon(R) processor 3200 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 3000 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 5300 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 5100 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 5000 Series", 
          "Dual-Core Intel(R) Xeon(R) processor LV", 
          "Dual-Core Intel(R) Xeon(R) processor ULV", 
          "Dual-Core Intel(R) Xeon(R) processor 7100 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 5400 Series", 
          "Quad-Core Intel(R) Xeon(R) processor", 
          "Dual-Core Intel(R) Xeon(R) processor 5200 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 7200 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 7300 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 7400 Series", 
          "Multi-Core Intel(R) Xeon(R) processor 7400 Series", 
          // 176 
          "Pentium(R) III Xeon(TM)", 
          "Pentium(R) III Processor with Intel(R) SpeedStep(TM) Technology", 
          "Pentium(R) 4", "Intel(R) Xeon(TM)", 
          // 180                     
          "AS400 Family", 
          "Intel(R) Xeon(TM) processor MP", 
          "AMD Athlon(TM) XP Family", "AMD Athlon(TM) MP Family", 
          "Intel(R) Itanium(R) 2", 
          "Intel(R) Pentium(R) M processor", 
          "Intel(R) Celeron(R) D processor", 
          "Intel(R) Pentium(R) D processor", 
          "Intel(R) Pentium(R) Processor Extreme Edition", 
          "Intel(R) Core(TM) Solo Processor", 
          // 190                     
          "K7", 
          "Intel(R) Core(TM)2 Duo Processor", 
          "Intel(R) Core(TM)2 Solo processor", 
          "Intel(R) Core(TM)2 Extreme processor", 
          "Intel(R) Core(TM)2 Quad processor", 
          "Intel(R) Core(TM)2 Extreme mobile processor", 
          "Intel(R) Core(TM)2 Duo mobile processor", 
          "Intel(R) Core(TM)2 Solo mobile processor", 
          "Intel(R) Core(TM) i7 processor", 
          "Dual-Core Intel(R) Celeron(R) Processor", 
          // 200                     
          "S/390 and zSeries Family", 
          "ESA/390 G4", "ESA/390 G5", "ESA/390 G6", 
          "z/Architectur base", 
          // 205
          "Intel(R) Core(TM) i5 processor", 
          "Intel(R) Core(TM) i3 processor", 
          // 210                   
          "VIA C7(TM)-M Processor Family", 
          "VIA C7(TM)-D Processor Family", 
          "VIA C7(TM) Processor Family", 
          "VIA Eden(TM) Processor Family", 
          "Multi-Core Intel(R) Xeon(R) processor", 
          "Dual-Core Intel(R) Xeon(R) processor 3xxx Series", 
          "Quad-Core Intel(R) Xeon(R) processor 3xxx Series", 
          "VIA Nano(TM) Processor Family", 
          "Dual-Core Intel(R) Xeon(R) processor 5xxx Series", 
          "Quad-Core Intel(R) Xeon(R) processor 5xxx Series", 
          // 221
          "Dual-Core Intel(R) Xeon(R) processor 7xxx Series", 
          "Quad-Core Intel(R) Xeon(R) processor 7xxx Series", 
          "Multi-Core Intel(R) Xeon(R) processor 7xxx Series", 
          "Multi-Core Intel(R) Xeon(R) processor 3400 Series", 
          // 230
          "Embedded AMD Opteron(TM) Quad-Core Processor Family", 
          "AMD Phenom(TM) Triple-Core Processor Family", 
          "AMD Turion(TM) Ultra Dual-Core Mobile Processor Family", 
          "AMD Turion(TM) Dual-Core Mobile Processor Family", 
          "AMD Athlon(TM) Dual-Core Processor Family", 
          "AMD Sempron(TM) SI Processor Family", 
          "AMD Phenom(TM) II Processor Family", 
          "AMD Athlon(TM) II Processor Family", 
          "Six-Core AMD Opteron(TM) Processor Family", 
          "AMD Sempron(TM) M Processor Family", 
          // 250                   
          "i860", "i960", 
          "Reserved (SMBIOS Extension)", 
          "Reserved (Un-initialized Flash Content - Lo)", "SH-3", 
          "SH-4", "ARM", "StrongARM", 
          // 300                   
          "6x86", "MediaGX", 
          "MII", "WinChip", "DSP", "Video Processor", 
          // 65534                   
          "Reserved (For Future Special Purpose Assignment)", 
          "Reserved (Un-initialized Flash Content - Hi)" }, 
       MappingStrings { "MIF.DMTF|Processor|017.3" }, 
       ModelCorrespondence { "CIM_Processor.OtherFamilyDescription" }]
   uint16 Family;

      [Description ( 
          "A string that describes the Processor Family type. It is "
          "used when the Family property is set to 1 (\"Other\"). "
          "This string should be set to NULL when the Family "
          "property is any value other than 1." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_Processor.Family" }]
   string OtherFamilyDescription;

      [Description ( 
          "CPU socket information that includes data on how this "
          "Processor can be upgraded (if upgrades are supported). "
          "This property is an integer enumeration." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42" }, 
       Values { "Other", "Unknown", "Daughter Board", "ZIF Socket", 
          "Replacement/Piggy Back", "None", "LIF Socket", "Slot 1", 
          "Slot 2", "370 Pin Socket", "Slot A", "Slot M", 
          "Socket 423", "Socket A (Socket 462)", "Socket 478", 
          "Socket 754", "Socket 940", "Socket 939", 
          "Socket mPGA604", "Socket LGA771", "Socket LGA775", 
          "Socket S1", "Socket AM2", "Socket F (1207)", 
          "Socket LGA1366", "Socket G34", "Socket AM3", 
          "Socket C32", "Socket LGA1156", "Socket LGA1567", 
          "Socket PGA988A", "Socket BGA1288", "rPGA988B", "BGA1023", 
          "BGA1224", "LGA1155", "LGA1356", "LGA2011", "Socket FS1", 
          "Socket FS2", "Socket FM1", "Socket FM2" }, 
       MappingStrings { "MIF.DMTF|Processor|017.7" }]
   uint16 UpgradeMethod;

      [Description ( "The maximum speed (in MHz) of this Processor." ), 
       Units ( "MegaHertz" ), 
       MappingStrings { "MIF.DMTF|Processor|017.5" }, 
       PUnit ( "hertz * 10^6" )]
   uint32 MaxClockSpeed;

      [Description ( "The current speed (in MHz) of this Processor." ), 
       Units ( "MegaHertz" ), 
       MappingStrings { "MIF.DMTF|Processor|017.6" }, 
       PUnit ( "hertz * 10^6" )]
   uint32 CurrentClockSpeed;

      [Description ( "Processor data width in bits." ), 
       Units ( "Bits" ), 
       PUnit ( "bit" )]
   uint16 DataWidth;

      [Description ( "Processor address width in bits." ), 
       Units ( "Bits" ), 
       PUnit ( "bit" )]
   uint16 AddressWidth;

      [Description ( 
          "Loading of this Processor, averaged over the last "
          "minute, in Percent." ), 
       Units ( "Percent" ), 
       Gauge, MappingStrings { 
          "MIB.IETF|HOST-RESOURCES-MIB.hrProcessorLoad" }, 
       PUnit ( "percent" )]
   uint16 LoadPercentage;

      [Description ( 
          "Stepping is a free-form string that indicates the "
          "revision level of the Processor within the "
          "Processor.Family." ), 
       ModelCorrespondence { "CIM_Processor.Family" }]
   string Stepping;

      [Description ( 
          "A globally unique identifier for the Processor. This "
          "identifier can be unique only within a Processor Family." )]
   string UniqueID;

      [Description ( 
          "The CPUStatus property that indicates the current status "
          "of the Processor. For example, the Processor might be "
          "disabled by the user (value=2), or disabled due to a "
          "POST error (value=3). Information in this property can "
          "be obtained from SMBIOS, the Type 4 structure, and the "
          "Status attribute." ), 
       ValueMap { "0", "1", "2", "3", "4", "7" }, 
       Values { "Unknown", "CPU Enabled", "CPU Disabled by User", 
          "CPU Disabled By BIOS (POST Error)", "CPU Is Idle", "Other" }]
   uint16 CPUStatus;

      [Description ( 
          "The speed (in MHz) of the external bus interface (also "
          "known as the front side bus)." ), 
       Units ( "MegaHertz" ), 
       PUnit ( "hertz * 10^6" )]
   uint32 ExternalBusClockSpeed;

      [Description ( 
          "Array of enumerated values that describes the "
          "characteristics of the processor. The characteristics "
          "include certain features of the processor such as 64 bit "
          "support for data width of the processor. Note that if "
          "this property does not contain the value corresponding "
          "to a feature of the processor, than the feature either "
          "is not that some of the features of the processor may "
          "exist but may not be enabled. To find the the currently "
          "enabled features the processor, reffer to the "
          "EnabledProcessorCharacteristics property. Values "
          "specified in the enumeration may be obtained from SMBIOS "
          "v2.5 Type 4 offset 26h (Processor Characteristics Word). "
          "32-bit Capable - describes whether the processor has the "
          "capability for 32 bits data width. 64-bit Capable - "
          "describes whether the processor has the capability for "
          "64 bits data width. Enhanced Virtualization - describes "
          "whether the processor has the capability for executing "
          "enhanced virtualization instructions. Hardware Thread - "
          "indicates that the processor is capable of the hardware "
          "threading. NX-bit - describes whether the processor has "
          "capability to utilize non-execute bit and can "
          "differentiate the memory marked strictly for storage. "
          "Power/Performance Control - describes whether the "
          "processor has capability for load based power savings. "
          "Core Frequency Boosting - describes whether the "
          "processor has a capability for one processor core to "
          "increase its frequency whenever the other core has gone "
          "into an idle state." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
          "9..32567", "32568..65535" }, 
       Values { "Unknown", "DMTF Reserved", "64-bit Capable", 
          "32-bit Capable", "Enhanced Virtualization", 
          "Hardware Thread", "NX-bit", "Power/Performance Control", 
          "Core Frequency Boosting", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_Processor.EnabledProcessorCharacteristics" }]
   uint16 Characteristics[];

      [Description ( 
          "This property indicates the enabled states of the "
          "corresponding processor characteristics. The property "
          "array is indexed with ProcessorCharacteristics property "
          "array of the associated CIM_ProcessorCapabilities "
          "instance through the CIM_ElementCapabilities "
          "association. Each of the values in the "
          "ProcessorCharacteristics array property shall have its "
          "enabled state indicated in the corresponding element of "
          "this property array. For example; if the "
          "ProcessorCharacteristics array has value - NX-bit - for "
          "the first element of the array, then the first element "
          "of this property will contain the value for the enabled "
          "state of the NX-bit feature of the processor: whether "
          "the processor currently differentiates the dedicated "
          "storage memory based on the non-execute bit. Unknown - "
          "the processor feature is in unknown state. Enabled - the "
          "processor feature is enabled and could be used. Disabled "
          "- the processor feature is disabled and cannot be used. "
          "Not Applicable - the processor feature does not have "
          "state context." ), 
       ValueMap { "0", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "Enabled", "Disabled", "Not Applicable", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_Processor.Characteristics" }]
   uint16 EnabledProcessorCharacteristics[];

      [Description ( 
          "Number of processor cores enabled for processor." )]
   uint16 NumberOfEnabledCores = 1;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.122.0" ), 
    UMLPackagePath ( "CIM::Device::Processor" ), 
    Description ( 
       "The CIM_ProcessorCore class inherits from "
       "CIM_EnabledLogicalElement and describes a specific processor "
       "core. CIM_ProcessorCore instances are related to the instance "
       "of CIM_Processor that represents the processor they are "
       "contained in." )]
class CIM_ProcessorCore : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. \n"
          "In order to ensure uniqueness within the NameSpace, the "
          "value of InstanceID SHOULD be constructed using the "
          "following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Description ( 
          "The CoreEnabledState property is the configuration state "
          "of the processor core. For example, the core might be "
          "disabled by the user (value=2), or disabled due to a "
          "POST error (value=3)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "DMTF Reserved", "Core Enabled", 
          "Core Disabled", "Core Disabled by User", 
          "Core Disabled By POST Error)" }]
   uint16 CoreEnabledState;

      [Description ( 
          "Loading of this processor core, averaged over the last "
          "minute, in Percent." ), 
       Units ( "Percent" ), 
       Gauge, PUnit ( "percent" )]
   uint16 LoadPercentage;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_ProtectedSpaceExtent 
// ==================================================================
   [Deprecated { "CIM_ProtectedExtentBasedOn", 
       "CIM_CompositeExtentBasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Deprecated - use CIM_ProtectedExtentBasedOn or "
       "CIM_CompositeExtentBasedOn instead. The information on check "
       "and user data is better expressed in the association that "
       "layers the storage, than in the extent itself. A "
       "ProtectedSpaceExtent is used to model an SCC RAID "
       "implementation. ProtectedSpaceExtent defines addressable "
       "logical block addresses, treated as a single Extent, located "
       "on one or more PhysicalExtents. ProtectedSpaceExtents exclude "
       "any logical blocks mapped as check data and contain user data "
       "stripe depth mapping information. An alternate possibility, if "
       "automatic configuration is used, is to instantiate or extend "
       "the AggregatePSExtent class." )]
class CIM_ProtectedSpaceExtent : CIM_StorageExtent {

      [Deprecated { "CIM_CompositeExtentBasedOn.BlockSize", 
          "CIM_ProtectedExtentBasedOn.BlockSize" }, 
       Override ( "BlockSize" ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.4" }]
   uint64 BlockSize;

      [Deprecated { "CIM_CompositeExtentBasedOn.NumberOfBlocks", 
          "CIM_ProtectedExtentBasedOn.NumberOfBlocks" }, 
       Override ( "NumberOfBlocks" ), 
       Description ( 
          "The number of user data blocks contained in this Extent." ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.3" }]
   uint64 NumberOfBlocks;

      [Deprecated { "CIM_CompositeExtentBasedOn.UserDataStripeDepth" }, 
       Description ( 
          "For a ProtectedSpaceExtent that is allocated to a Volume "
          "Set (i.e. is named in a CIM_VolumeSetBasedOnPSExtent "
          "association), this property is the number of user data "
          "bytes placed on this ProtectedSpaceExtent before moving "
          "on to the next ProtectedSpaceExtent in the VolumeSet. "
          "Otherwise, this ProtectedSpaceExtent is considered to be "
          "unallocated, and this property shall be set to zero "
          "(0h.)" ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.6" }, 
       PUnit ( "byte" )]
   uint64 UserDataStripeDepth;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProtocolController 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "ProtocolController is a superclass for grouping controllers "
       "that are used to control the operation and function of "
       "sophisticated devices that instantiate a protocol such as "
       "SCSI. Simpler \'bus\' and device controllers are modeled using "
       "the CIM_Controller class." )]
class CIM_ProtocolController : CIM_LogicalDevice {

      [Description ( 
          "Maximum number of Units that can be controlled by or "
          "accessed through this ProtocolController." )]
   uint32 MaxUnitsControlled;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProtocolControllerForDevice 
// ==================================================================
   [Association, Abstract, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "This association indicates a subclass of LogicalDevice (for "
       "example a Storage Volume) is connected through a specific "
       "ProtocolController. In many situations (for example storage "
       "LUN masking), there may be many of these associations used to "
       "relate to different objects. Therefore subclasses have been "
       "defined to optimize enumeration of the associations." )]
class CIM_ProtocolControllerForDevice : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The ProtocolController." )]
   CIM_ProtocolController REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The controlled Device." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "Address of the associated Device in the context of the "
          "Antecedent Controller." )]
   string DeviceNumber;

      [Description ( 
          "This property describes the priority given to accesses "
          "of the device through this Controller. The highest "
          "priority path will have the lowest value for this "
          "parameter." )]
   uint16 AccessPriority;

      [Description ( 
          "The AccessState property describes the accessibility of "
          "the LogicalDevice through the ProtocolController. \n"
          "Unknown (0) indicates the instrumentation does not know "
          "whether access is or is not functioning. \n"
          "Active (2) indicates normal access. \n"
          "Inactive (3) indicates the instrumentation knows this "
          "path is not active, and one of the other values (below) "
          "does not apply. \n"
          "Replication in Progress (4) indicates that the path is "
          "temporarily inactive due to a replication activity. \n"
          "Mapping Inconsistency (5) indicates the instrumentation "
          "has detected that this path is inactive due to an "
          "inconsistency in the DeviceNumber/DeviceAccess "
          "configuration." ), 
       ValueMap { "0", "2", "3", "4", "5" }, 
       Values { "Unknown", "Active", "Inactive", 
          "Replication In Progress", "Mapping Inconsistency" }]
   uint16 AccessState;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProtocolControllerForPort 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "This association is used to define a relationship between a "
       "ProtocolController and a LogicalPort. This subclass is "
       "provided so that an enumeration of related controllers and "
       "ports can be performed without retrieving any other "
       "controllers or connected units." )]
class CIM_ProtocolControllerForPort : CIM_ProtocolControllerForDevice {

      [Override ( "Antecedent" ), 
       Description ( "The ProtocolController." )]
   CIM_ProtocolController REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalPort \'behind\' the ProtocolController." )]
   CIM_LogicalPort REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "This association is used to define a relationship between a "
       "ProtocolController and an exposed Logical Unit (for example a "
       "Storage Volume or a MediaAccessDevice such as a tape drive). "
       "An example of the use of this association is SCSI, where it "
       "link the target controller and Logical Units. This subclass is "
       "provided so that an enumeration of related controllers and "
       "units can be performed without retrieving any connected ports "
       "or other controllers." )]
class CIM_ProtocolControllerForUnit : CIM_ProtocolControllerForDevice {

      [Override ( "Antecedent" ), 
       Description ( "The ProtocolController." )]
   CIM_ProtocolController REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The logical unit (eg StorageVolume) \'behind\' the "
          "ProtocolController." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "The access rights granted to the referenced logical unit "
          "as exposed through referenced ProtocolController. The "
          "\'No Access\' value is used in implementations where the "
          "DeviceNumber is reserved, but no access is granted. \n"
          "If the instrumentation exposes "
          "PrivilegeManagementService, this property MUST be "
          "synchronized with the Activities property of any "
          "Privilege instances associated with StorageHardwareIDs "
          "associated to the referenced ProtocolController and the "
          "referenced LogicalDevice. In particular, when this "
          "property is \'Read Write\', Privilege.Activities MUST "
          "include entries for \'Read\' and \'Write\'. When this "
          "property is \'Read-Only\', Privilege.Activities MUST "
          "include an entry for \'Read\'. The corresponding entries "
          "for Privilege.ActivityQualifiers MUST be \'CDB=*\' and "
          "the corresponding entries for Privilege.QualifierFormat "
          "MUST be \'SCSI Command\'." ), 
       ValueMap { "0", "2", "3", "4", "5..15999", "16000.." }, 
       Values { "Unknown", "Read Write", "Read-Only", "No Access", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 DeviceAccess;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RealizesExtent 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "StorageExtents can be realized by PhysicalComponents. For "
       "example, disks or tapes are realized by PhysicalMedia. Memory "
       "is realized by PhysicalMemory. This relationship of Extents to "
       "PhysicalComponents is made explicit by the RealizesExtent "
       "association. In addition, the StartingAddress of the "
       "StorageExtent on the Component is specified here." )]
class CIM_RealizesExtent : CIM_Realizes {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalComponent on which the Extent is realized." )]
   CIM_PhysicalComponent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The StorageExtent that is located on the Component." )]
   CIM_StorageExtent REF Dependent;

      [Description ( 
          "The starting address on the PhysicalComponent where the "
          "StorageExtent begins. Ending address of the "
          "StorageExtent is determined using the NumberOfBlocks and "
          "Block Size properties of the StorageExtent object." )]
   uint64 StartingAddress;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RealizesPExtent 
// ==================================================================
   [Association, Deprecated { "CIM_RealizesExtent" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "PhysicalExtents are realized on a PhysicalMedia. This is "
       "described by RealizesPExtent. However, there is no need for "
       "the specificity of this association. It is deprecated in lieu "
       "of the generic RealizesExtent relationship." )]
class CIM_RealizesPExtent : CIM_RealizesExtent {

      [Deprecated { "CIM_RealizesExtent.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalMedia on which the Extent is realized." )]
   CIM_PhysicalMedia REF Antecedent;

      [Deprecated { "CIM_RealizesExtent.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The PhysicalExtent that is located on the Media." )]
   CIM_PhysicalExtent REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Refrigeration 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Capabilities and management of a Refrigeration CoolingDevice." )]
class CIM_Refrigeration : CIM_CoolingDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Scanner 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Capabilities and management of the Scanner LogicalDevice." )]
class CIM_Scanner : CIM_LogicalDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_SCSIController
// ==================================================================
   [Deprecated { "CIM_SCSIProtocolController" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of this class is deprecated in lieu of "
       "SCSIProtocolController. The latter reflects the protocol- "
       "related issues of SCSI interfaces, because these are not bus "
       "master-type Controllers.\" Deprecated description: "
       "Capabilities and management of the SCSIController." )]
class CIM_SCSIController : CIM_Controller {

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: An integer enumeration that "
          "indicates whether or not the SCSIController provides "
          "redundancy or protection against device failures." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Unprotected", "Protected", 
          "Protected through SCC (SCSI-3 Controller Command)", 
          "Protected through SCC-2 (SCSI-3 Controller Command)" }, 
       MappingStrings { "MIF.DMTF|Storage Controller|001.3" }]
   uint16 ProtectionManagement;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Maximum data width (in bits) "
          "supported by the SCSIController." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.7" }, 
       PUnit ( "bit" )]
   uint32 MaxDataWidth;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Maximum transfer rate (in Bits "
          "per Second) supported by the SCSIController." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.8" }, 
       PUnit ( "bit / second" )]
   uint64 MaxTransferRate;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Number of SCSIController "
          "timeouts that have occurred since the TimeOfLastReset." ), 
       Counter]
   uint32 ControllerTimeouts;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Signal capabilities that can be "
          "supported by the SCSIController. For example, the "
          "Controller can support \"Single Ended\" and "
          "\"Differential\". In this case, the values 3 and 4 would "
          "be written to the Signal Capabilities array." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Single Ended", "Differential", 
          "Low Voltage Differential", "Optical" }, 
       ModelCorrespondence { "CIM_SCSIInterface.SCSISignal" }]
   uint16 SignalCapabilities[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "SCSIProtocolController is a type of ProtocolController, "
       "managing a SCSI interface." )]
class CIM_SCSIProtocolController : CIM_ProtocolController {

      [Description ( 
          "The NameFormat property identifies how the Name of the "
          "SCSIProtocolController is selected. \n"
          "For Fibre Channel, the NameFormat is \'FC Port WWN\'. \n"
          "For iSCSI, Name can use any of the 3 iSCSI formats (iqn, "
          "eui, naa) which include the iSCSI format as as a prefix "
          "in the name, so they are not ambiguous." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "FC Port WWN", "iSCSI Name" }, 
       ModelCorrespondence { "CIM_SCSIProtocolController.Name", 
          "CIM_SCSIProtocolController.OtherNameFormat" }]
   uint16 NameFormat;

      [Description ( 
          "A string describing how the ProtocolController is "
          "identified when the NameFormat is \"Other\"." ), 
       ModelCorrespondence { "CIM_SCSIProtocolController.Name", 
          "CIM_SCSIProtocolController.NameFormat" }]
   string OtherNameFormat;


};

// Copyright (c) 2007 DMTF.  All rights reserved.
// <change cr="SysDevCR00718.001" type ="add">Make concrete</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00881" type="add">Add enumerations
// to SensorType for "Power Consumption" and "Power Production" 
// as well as the reserved enumerations that were missing.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// <change cr="CIMCoreCR00909" type="add">change description.</change>
// <change cr="CIMCoreCR00942" type="add">add Pressure to SensorType </change>
// ==================================================================
//  CIM_Sensor
// ==================================================================
   [Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "A Sensor is an entity capable of measuring or reporting the "
       "characteristics of some physical property - for example, the "
       "temperature or voltage characteristics of a Computer System." )]
class CIM_Sensor : CIM_LogicalDevice {

      [Description ( 
          "The Type of the Sensor, e.g. Voltage or Temperature "
          "Sensor. If the type is set to \"Other\", then the "
          "OtherSensorType Description can be used to further "
          "identify the type, or if the Sensor has numeric "
          "readings, then the type of the Sensor can be implicitly "
          "determined by the Units. A description of the different "
          "Sensor types is as follows: A Temperature Sensor "
          "measures the environmental temperature. Voltage and "
          "Current Sensors measure electrical voltage and current "
          "readings. A Tachometer measures speed/revolutions of a "
          "Device. For example, a Fan Device can have an associated "
          "Tachometer which measures its speed. A Counter is a "
          "general purpose Sensor that measures some numerical "
          "property of a Device. A Counter value can be cleared, "
          "but it never decreases. A Switch Sensor has states like "
          "Open/Close, On/Off, or Up/Down. A Lock has states of "
          "Locked/Unlocked. Humidity, Smoke Detection and Air Flow "
          "Sensors measure the equivalent environmental "
          "characteristics. A Presence Sensor detects the presence "
          "of a PhysicalElement. A Power Consumption Sensor "
          "measures the instantaneous power consumed by a managed "
          "element. A Power Production Sensor measures the "
          "instantaneous power produced by a managed element such "
          "as a power supply or a voltage regulator. A pressure "
          "sensor is used to report pressure." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Temperature", "Voltage", 
          "Current", "Tachometer", "Counter", "Switch", "Lock", 
          "Humidity", "Smoke Detection", "Presence", "Air Flow", 
          "Power Consumption", "Power Production", "Pressure", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_Sensor.OtherSensorTypeDescription" }]
   uint16 SensorType;

      [Description ( 
          "A string describing the Sensor type - used when the "
          "SensorType property is set to \"Other\"." ), 
       MaxLen ( 128 ), 
       ModelCorrespondence { "CIM_Sensor.SensorType" }]
   string OtherSensorTypeDescription;

      [Description ( 
          "PossibleStates enumerates the string outputs of the "
          "Sensor. For example, a \"Switch\" Sensor may output the "
          "states \"On\", or \"Off\". Another implementation of the "
          "Switch may output the states \"Open\", and \"Close\". "
          "Another example is a NumericSensor supporting "
          "thresholds. This Sensor can report the states like "
          "\"Normal\", \"Upper Fatal\", \"Lower Non-Critical\", "
          "etc. A NumericSensor that does not publish readings and "
          "thresholds, but stores this data internally, can still "
          "report its states." ), 
       MaxLen ( 128 )]
   string PossibleStates[];

      [Description ( 
          "The current state indicated by the Sensor. This is "
          "always one of the \"PossibleStates\"." ), 
       MaxLen ( 128 )]
   string CurrentState;

      [Description ( 
          "The polling interval that the Sensor hardware or the "
          "instrumentation uses to determine the current state of "
          "the Sensor." ), 
       Units ( "NanoSeconds" ), 
       PUnit ( "second * 10^-9" )]
   uint64 PollingInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_SerialController
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of the SerialController." )]
class CIM_SerialController : CIM_Controller {

      [Description ( 
          "The Capabilities property defines chip level "
          "compatibility for the SerialController. Therefore, this "
          "property describes the buffering and other capabilities "
          "of the SerialController that might be inherent in the "
          "chip hardware. The property is an enumerated integer." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "160", "161" }, 
       Values { "Other", "Unknown", "XT/AT Compatible", 
          "16450 Compatible", "16550 Compatible", 
          "16550A Compatible", 
          // 160                      
          "8251 Compatible", 
          "8251FIFO Compatible" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIF.DMTF|Serial Ports|004.7" }, 
       ModelCorrespondence { 
          "CIM_SerialController.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the SerialController "
          "features that are indicated in the Capabilities array. "
          "Note, each entry of this array is related to the entry "
          "in the Capabilities array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_SerialController.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "Maximum baud rate in Bits per Second that is supported "
          "by the SerialController." ), 
       Units ( "Bits per Second" ), 
       MappingStrings { "MIF.DMTF|Serial Ports|004.6" }, 
       PUnit ( "bit / second" )]
   uint32 MaxBaudRate;

      [Description ( 
          "An enumeration that indicates the operational security "
          "for the Controller. For example, information that the "
          "external interface of the Device is locked out (value=4) "
          "or \"Boot Bypass\" (value=6) can be described using this "
          "property." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "None", 
          "External Interface Locked Out", 
          "External Interface Enabled", "Boot Bypass" }, 
       MappingStrings { "MIF.DMTF|Serial Ports|004.9" }]
   uint16 Security;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::SCSI" ), 
    Description ( 
       "A class derived from Service that describes the ability to "
       "control access to shared devices." )]
class CIM_SharedDeviceManagementService : CIM_Service {


      [Description ( 
          "ShareDevice defines the ability to change the access of "
          "a System to a shared LogicalDevice. If this method "
          "completes successfully the value of CurrentAccess for "
          "the instance of CIM_SharingDependency which references "
          "the LogicalDevice will have the value of the "
          "RequestedAccess parameter. If 4096 (0x1000) is returned, "
          "then the task will take some time to complete, "
          "ConcreteJob will be created, and its reference returned "
          "in the output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11..4095", "4096", "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", 
          "Can NOT complete within Timeout Period", "Failed", 
          "Invalid Parameter", "Unsupported Access", 
          "Invalid Device", "Invalid System", 
          "Use of Timeout Parameter Not Supported", "Busy", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 ShareDevice(
         [IN, Description ( 
             "The desired access of the System to the shared Logical Device."
              ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "No Access", "Exclusive Access", 
             "Shared Read", "Shared Full", "DMTF Reserved", 
             "Vendor Reserved" }, 
          ModelCorrespondence { 
             "CIM_SharingDependency.CurrentAccess", 
             "CIM_DeviceSharingCapabilities.SupportedAccessModes" }]
      uint16 RequestedAccess, 
         [IN, Description ( 
             "The LogicalDevice to change access to." )]
      CIM_LogicalDevice REF Device, 
         [IN, Description ( 
             "The System whose access to the LogicalDevice the "
             "change is requested for." )]
      CIM_System REF System, 
         [IN, Description ( 
             "A timeout period that specifies the maximum amount "
             "of time that the client is willing to wait for "
             "access to the shared device to be granted before "
             "the request should be abandoned. This value does "
             "not directly correlate to a timeout for the method "
             "invocation. That is, its possible for a job to be "
             "started to process the request and the method to "
             "return within the timeout period only to have the "
             "operation aborted later when the timeout period "
             "expires. The TimeoutPeriod shall be specified in "
             "interval format. A value of 0 indicates that if "
             "the requested access can not be granted "
             "immediately the client does not wish to wait and "
             "the request should fail. A null parameter "
             "indicates that the client has no time requirements "
             "for the request to be granted and wishes to wait "
             "indefinitely for access to be granted. \n"
             "If this property does not contain 0 or null and "
             "the implementation doesn\'t support this "
             "parameter, a return code of \'Use Of Timeout "
             "Parameter Not Supported\' shall be returned." )]
      datetime TimeoutPeriod, 
         [IN, Description ( 
             "This parameter is used by a client to indicate "
             "that they wish the requested access to be granted "
             "even if it requires forcibly revoking access "
             "currently granted to another system. When the "
             "value of this parameter is true, and a valid "
             "TimeoutPeriod is specified, the implementation "
             "shall wait for the duration specified by "
             "TimeoutPeriod before forcibly modifying access. If "
             "the access requested can be granted without "
             "disruption prior to the TimeoutPeriod expiring, "
             "the implementation should complete the request and "
             "not wait for the expiration of the interval "
             "specified by TimeoutPeriod." )]
      boolean Force, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (may be null "
             "if task completed)." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::SCSI" ), 
    Description ( 
       "In some configurations, a logical device may be shared among "
       "multiple systems while only belonging to one. When modeling "
       "this sharing relationship, one instance of LogicalDevice "
       "exists to model the resource. This instance is associated with "
       "the owning system via the SystemDevice association. An "
       "additional instance of LogicalDevice will exist for each "
       "system the device is shared with to represent the device in "
       "the context of each System it is shared with. Each of these "
       "instances is associated with a single instance of System via "
       "an instance of the SystemDevice association. This is very "
       "similar to the way that virtual devices are modeled. However, "
       "there are additional semantics associated with shared devices "
       "that need to be modeled, including the current access of a "
       "sharing system to the shared device. The SharingDependency "
       "association will be used to add support for modeling this "
       "additional semantic. It is used to associate a LogicalDevice "
       "instance in the sharing system to the LogicalDevice "
       "representing the underlying shared resource." )]
class CIM_SharingDependency : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The shared LogicalDevice." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDevice owned by the sharing System." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "CurrentAccess describes the current ability of the "
          "System owning the Dependent LogicalDevice to access the "
          "shared device. This property does not model whether or "
          "not the referenced System is authorized to utilize the "
          "shared resource. It is intended to model the current "
          "sharing relationship the system has to the device. "
          "Authorization for a user or service running within the "
          "system would be modeled identical to if the resource was "
          "owned exclusively by the system. However, the ability of "
          "an authorized user to utilize a shared resource is "
          "contingent on the System having access to the shared "
          "resource. \n"
          "Unknown (0) indicates that the current access of the "
          "System to the shared resource is unknown \n"
          "No Access (1) indicates that the System currently does "
          "not have access to the shared resource \n"
          "Exclusive Access (2) indicates that the System has "
          "exclusive access to the shared resource. The resource is "
          "effectively locked. Granting another System access to "
          "the shared resource will cause this system to lose "
          "access. \n"
          "Shared Read (3) indicates that the System is accessing "
          "the resource in a read only mode. Other Systems can have "
          "concurrent access to the device of type \"Shared Read\" "
          "or \"Shared Full\" \n"
          "Shared Full (4) indicates that the System is accessing "
          "the resource in read/write mode. Other Systems can have "
          "concurrent access to the device of type \"Shared Read\" "
          "or \"Shared Full\"." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "No Access", "Exclusive Access", 
          "Shared Read", "Shared Full", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_SharingDependency.OtherCurrentAccess", 
          "CIM_DeviceSharingCapabilities.SupportedAccessModes" }]
   uint16 CurrentAccess;

      [Description ( 
          "A string value describing CurrentAccess when it has a "
          "value of \"1 (Other)\"." ), 
       ModelCorrespondence { "CIM_SharingDependency.CurrentAccess" }]
   string OtherCurrentAccess;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Snapshot 
// ==================================================================
   [Deprecated { "No Value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Deprecated. Snapshots are now modeled in a more abstrct way "
       "using StorageExtent and StorageSynchronized. \n"
       "The Snapshot class is an optional construct. It can be used to "
       "represent an Extent that contains a full copy of another "
       "Extent, or the changes to that Extent when performing a "
       "delta-based (delta before or delta after) copy. \n"
       "Snapshot\'s definition in CIM is not equivalent to the act of "
       "creating a volume or file-based snapshot, or a point in time "
       "copy. It is at a much lower level and represents the use of "
       "storage to hold a copied image of an Extent, or to hold "
       "changes to an Extent. Use of the Snapshot object when making a "
       "full copy is only recommended if the purpose is to describe "
       "the existence of a copy. (This use will be very infrequent.) "
       "The problem with describing an Extent solely as a \'snapshot\' "
       "is that when the snapshot/copy is broken, the object must be "
       "destroyed. Typically, this object still holds valid data, and "
       "would have to be reinstantiated. If the \'full copy\' object "
       "is to be treated as a StorageVolume or more general Extent, "
       "then it should be modeled as such from the beginning - i.e., "
       "not as an instance of Snapshot but as an instance of a generic "
       "StorageExtent or StorageVolume. In this case, the Synchronized "
       "association would be used to describe that one StorageExtent "
       "is synchronized with another. \n"
       "When describing a delta-based snapshot/point in time copy, the "
       "Snapshot object represents the store holding the before/after "
       "image changes to the original Extent. For example, when doing "
       "a \'delta before\' Snapshot, the resultant target would be "
       "modeled as a StorageExtent that is BasedOn the original Extent "
       "and the instance of Snapshot (that holds the changes to the "
       "original Extent)." )]
class CIM_Snapshot : CIM_StorageExtent {

      [Deprecated { "CIM_Synchronized.SyncMaintained" }, 
       Description ( "True indicates that the snapshot is synced." )]
   boolean IsSynced;

      [Deprecated { "CIM_Synchronized.WhenSynced" }, 
       Description ( 
          "The time stamp indicating when the sync occurred." )]
   datetime SyncTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SnapshotOfExtent 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Deprecated. Snapshots are now modeled in a more abstract way "
       "using StorageExtent and CIM_StorageSynchronized. \n"
       "SnapshotOfExtent is an association between an Extent and its "
       "Snapshot. This relationship is made explicit in this "
       "association." )]
class CIM_SnapshotOfExtent : CIM_Dependency {

      [Deprecated { "No Value" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Deprecated { "No Value" }, 
       Override ( "Dependent" ), 
       Description ( "The Snapshot." )]
   CIM_Snapshot REF Dependent;

      [Deprecated { "CIM_StorageSynchronized.CopyType" }, 
       Description ( "The type of snapshot." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", "Copy", "Before Delta", 
          "After Delta" }]
   uint16 SnapshotType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SSAController 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of an SSAController (Serial "
       "Storage Architecture)." )]
class CIM_SSAController : CIM_Controller {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "This is a Service that provides methods for statistics "
       "retrieval and BlockStatisticsManifest manipulation. The "
       "methods of the service that are supported by the provider can "
       "be determined from the SynchronousMethodsSupported and "
       "AsynchronousMethodsSupported properties of the "
       "StatisticsCapabilities associated to the service." )]
class CIM_StatisticsService : CIM_Service {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageDefect 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "The StorageDefect aggregation collects the StorageErrors for a "
       "StorageExtent." )]
class CIM_StorageDefect {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The Extent reference defines the StorageExtent on which "
          "the errors occurred." )]
   CIM_StorageExtent REF Extent;

      [Key, Weak, Description ( 
          "Error references the Error object, defining the starting "
          "and ending addresses that are \'mapped out\' of the "
          "Storage Extent." )]
   CIM_StorageError REF Error;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00678" type = "deprecate"> (CIM V2.9.1 Final) Deprecate CIM_StorageMediaLibrary in Device model </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ===================================================================
// StorageLibrary
// ===================================================================
   [Deprecated { "CIM_ComputerSystem", "CIM_StorageLibraryCapabilities" }, 
    Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "A StorageLibrary is a collection of ManagedSystemElements that "
       "operate together to provide cartridge library capabilities. "
       "This object serves as an aggregation point to group the "
       "following elements: MediaTransferDevices, a Label Reader, a "
       "library Door, MediaAccessDevices, and other Library "
       "components. \n"
       "The use of this class is deprecated in favor of "
       "CIM_ComputerSystem. Originally it was felt that a media "
       "library could be purely mechanical and thus not a "
       "ComputerSystem. However all manageable libraries are "
       "ComputerSystems. This change simplifies the use of the model "
       "by client software." )]
class CIM_StorageLibrary : CIM_System {

      [Deprecated { "CIM_StorageLibraryCapabilities.Capabilities" }, 
       Description ( 
          "Capabilities of the StorageLibrary. For example, it can "
          "be indicated that the Library can perform automatic "
          "cleaning of the MediaAccessDevices contained in it "
          "(value=1) or that the Library provides physical door "
          "access for an operator (value=2)." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Automatic Cleaning", "Manual Operation", 
          "Front Panel Lockable" }]
   uint16 Capabilities[];

      [Deprecated { "CIM_ComputerSystem.OperationalStatus" }, 
       Description ( 
          "This property is deprecated in favour of an "
          "OperationalStatus value of 4 (\'stressed\').\n"
          "Boolean set to TRUE if there are more PhysicalMedia in a "
          "Library than there are StorageMediaLocations to contain "
          "them. For instance, if all MediaAccessDevices have a "
          "Media loaded in them, and all StorageMediaLocations are "
          "loaded by an operator, then an Overfilled condition "
          "exists." )]
   boolean Overfilled;

      [Deprecated { "CIM_ComputerSystem.OperationalStatus" }, 
       Description ( 
          "This property is deprecated in favour of an "
          "OperationalStatus value of 0 (\'Unknown\').\n"
          "Boolean set to TRUE if the Library can not currently "
          "report the correct state of each PhysicalMedia within "
          "its proper StorageMediaLocation." )]
   boolean AuditNeeded;

      [Deprecated { "CIM_ComputerSystem.OperationalStatus" }, 
       Description ( 
          "This property is deprecated in favour of an "
          "OperationalStatus value of 11 (\'In Service\').\n"
          "Boolean set to TRUE if an audit of the location of some "
          "or all of the Library\'s PhysicalMedia is currently "
          "being performed. That an individual Changer is currently "
          "doing an audit is indicated by a similar AuditInProgress "
          "boolean property on the Changer object." )]
   boolean AuditInProgress;

      [Deprecated { "CIM_StorageLibraryCapabilities.MaxAuditTime" }, 
       Description ( 
          "Maximum time in seconds that it takes for the Storage "
          "Library to perform a complete audit of each StorageMedia "
          "Location, to determine the absence or presence of a "
          "Physical Media. If automated support is not provided, "
          "then this property\'s value is undefined." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint64 MaxAuditTime;

      [Deprecated { "No value" }, 
       Description ( 
          "This property is deprecated since all managed libraries "
          "willbe automated.\n"
          "Boolean set to TRUE if the Library includes a robotics "
          "mechanism that can be controlled by a ComputerSystem, to "
          "automatically load and unload PhysicalMedia to/from "
          "MediaAccessDevices and StorageMediaLocations. The "
          "property is set to FALSE if the Library represents a "
          "repository of Media that are inaccessible to a "
          "MediaAccess Device without human intervention. An "
          "example of a non- automated Library is a \'shelf\' or "
          "\'vault\' where Physical Media are kept for extended "
          "periods of time." )]
   boolean Automated;

      [Deprecated { "CIM_ComputerSystem.OperationalStatus" }, 
       Description ( 
          "This property is deprecated in favour of an "
          "OperationalStatus value of 10 (\'Stopped\').\n"
          "Boolean indicating whether the Library\'s robotics are "
          "currently active/enabled. If TRUE, then the Library may "
          "not be safe for a human to enter." )]
   boolean RoboticsEnabled;


      [Deprecated { "CIM_ComputerSystem.RequestStateChange" }, 
       Description ( 
          "Requests that the Library robotics be enabled for "
          "automated operation (input parameter, Enabled, set to "
          "TRUE), or disabled for manual operation (input parameter "
          "set to FALSE). The return value should be 0 if the "
          "request was successfully executed, 1 if the request is "
          "not supported and some other value if an error occurred. "
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 EnableRobotics(
         [IN, Description ( "Set TRUE to enable." )]
      boolean Enable);

};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "A StoragePool is a conglomeration of storage capacity for the "
       "purpose of assignment and allocation based on service "
       "characteristics, such as location, available space or other "
       "criteria (for example, cost per megabyte or hardware "
       "ownership). A StoragePool is managed within the scope of a "
       "particular System. StoragePools may consist of component "
       "StoragePools or StorageExtents. StorageExtents that belong to "
       "the StoragePool have a Component relationship to the "
       "StoragePool. StorageExtents/StoragePools that are elements of "
       "a pool have their available space aggregated into the pool. "
       "StoragePools, StorageVolumes and LogicalDisks may be created "
       "from StoragePools. This is indicated by the "
       "AllocatedFromStoragePool association. StoragePool is scoped to "
       "a system by the HostedStoragePool association." )]
class CIM_StoragePool : CIM_LogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;

      [Required, Description ( 
          "A unique name in the context of the System that "
          "identifies this pool." ), 
       MaxLen ( 256 )]
   string PoolID;

      [Description ( 
          "If true, \"Primordial\" indicates that this StoragePool "
          "is the base from which storage capacity is drawn and "
          "returned in the activity of storage management. Being "
          "primordial means that this StoragePool shall not be "
          "created or deleted by consumers of this model. However, "
          "other actions, modeled or not, may affect the "
          "characteristics or size of primordial StoragePools. If "
          "false, \"Primordial\" indicated that the StoragePool, a "
          "concrete Storage Pool, is subject to storage services "
          "functions. This distinction is important because "
          "higher-level StoragePools may be assembled using the "
          "Component or AllocatedFromStoragePool associations. "
          "Although the higher-level abstractions can be created "
          "and deleted, the most basic, (i.e. primordial), "
          "hardware-based StoragePools cannot. They are physically "
          "realized as part of the System, or are actually managed "
          "by some other System and imported as if they were "
          "physically realized." )]
   boolean Primordial = false;

      [Description ( 
          "The total amount of capacity usable for the allocation "
          "of StorageVolumes, LogicalDisks, or child Storage Pools. \n"
          "For primordial Storage Pools, this capacity reflects the "
          "usable capacity of Disk Drives or LUNs, for example, to "
          "the owning storage device or application. For example, "
          "in storage array, a primordial Storage Pool\'s "
          "TotalManagedSpace does not include metadata such as the "
          "disk label area and absolute disk drive capacity lost in "
          "disk formatting. \n"
          "For concrete Storage Pools, the same applies, but the "
          "metadata not included in TotalManagedSpace is consumed "
          "in virtualization like RAID and concatenation. Concrete "
          "Storage Pool may also be simple reserve of capacity. In "
          "such a case, no capacity may be lost in formation of the "
          "Storage Pool. \n"
          "Conceptually TotalManagedSpace is the sum of all storage "
          "known via AssociatedComponentExtent associations to "
          "underlying StorageExtents. However, note some of these "
          "underlying storage may not be modeled by the "
          "instrumentation." ), 
       Units ( "Bytes" ), 
       ModelCorrespondence { "CIM_StoragePool.RemainingManagedSpace" }]
   uint64 TotalManagedSpace;

      [Required, Description ( 
          "The remaining usable capacity after the allocation of "
          "StorageVolumes, LogicalDisks, or child Storage Pools. "
          "This property is maintained here to provide efficient "
          "access to this information. However, note that it is "
          "possible to compute RemainingManagedSpace as "
          "(TotalManagedSpace minus the sum of SpaceConsumed from "
          "all of the AllocatedFromStoragePool references from this "
          "StoragePool). Note that SpaceConsumed remains useful to "
          "determine the amount of capacity consumed by a "
          "particular allocated element." ), 
       Units ( "Bytes" ), 
       ModelCorrespondence { "CIM_StoragePool.TotalManagedSpace", 
          "CIM_AllocatedFromStoragePool.SpaceConsumed" }]
   uint64 RemainingManagedSpace;


      [Description ( 
          "For pools that support discrete sizes for volume or pool "
          "creation, this method can be used to retrieve a list of "
          "supported sizes. Note that different pool "
          "implementations may support either or both the "
          "GetSupportedSizes and GetSupportedSizeRanges methods at "
          "different times, depending on Pool configuration. Also "
          "note that the advertised sizes may change after the call "
          "due to requests from other clients. If the pool "
          "currently only supports a range of sizes, then the "
          "return value will be set to 1." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Method completed OK", "Method not supported", 
          "Use GetSupportedSizeRange instead" }]
   uint32 GetSupportedSizes(
         [IN, Description ( 
             "The type of element for which supported sizes are reported for."
              ), 
          ValueMap { "2", "3", "4" }, 
          Values { "Storage Pool", "Storage Volume", 
             "Logical Disk" }]
      uint16 ElementType, 
         [IN, Description ( 
             "The StorageSetting for which supported sizes "
             "should be reported for." )]
      CIM_StorageSetting REF Goal, 
         [IN ( false ), OUT, Description ( 
             "List of supported sizes for a Volume/Pool creation "
             "or modification." ), 
          Units ( "Bytes" )]
      uint64 Sizes[]);

      [Description ( 
          "For pools that that support a range of sizes for volume "
          "or pool creation, this method can be used to retrieve "
          "the supported range. Note that different pool "
          "implementations may support either or both the "
          "GetSupportedSizes and GetSupportedSizeRanges methods at "
          "different times, depending on Pool configuration. Also "
          "note that the advertised sizes may change after the call "
          "due to requests from other clients. If the pool "
          "currently only supports discrete sizes, then the return "
          "value will be set to 1." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Method completed OK", "Method not supported", 
          "Use GetSupportedSizes instead" }]
   uint32 GetSupportedSizeRange(
         [IN, Description ( 
             "The type of element for which supported size "
             "ranges are reported for." ), 
          ValueMap { "2", "3", "4" }, 
          Values { "Storage Pool", "Storage Volume", 
             "Logical Disk" }]
      uint16 ElementType, 
         [IN, Description ( 
             "The StorageSetting for which supported size ranges "
             "should be reported for." )]
      CIM_StorageSetting REF Goal,  
         [IN ( false ), OUT, Description ( 
             "The minimum size for a volume/pool in bytes." ), 
          Units ( "Bytes" )]
      uint64 MinimumVolumeSize, 
         [IN ( false ), OUT, Description ( 
             "The maximum size for a volume/pool in bytes." ), 
          Units ( "Bytes" )]
      uint64 MaximumVolumeSize, 
         [IN ( false ), OUT, Description ( 
             "A volume/pool size must be a multiple of this "
             "value which is specified in bytes." ), 
          Units ( "Bytes" )]
      uint64 VolumeSizeDivisor);

      [Description ( 
          "This method can be used to retrieve a list of available "
          "Extents that may be used in the creation or modification "
          "of a StoragePool, StorageVolume, or LogicalDisk. The "
          "GetAvailableExtents method MUST return the Extents from "
          "the set of Component Extents of the Pool on which the "
          "method is being invoked. The returned Extents are "
          "available at the time the method returns. There is no "
          "guarantee that the same Extents will be available later. "
          "This method MUST return the Extents that are not being "
          "used as supporting capacity for any other Pools, "
          "Volumes, or LogicalDisks that have been allocated from "
          "this Pool. The Extent returned MUST be a component "
          "Extent of the Pool or subdivisions of a component "
          "Extent, the subdivisions themselves represented as "
          "Extents." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "4098..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", "Method Reserved", 
          "Vendor Specific" }]
   uint32 GetAvailableExtents(
         [IN, Description ( 
             "The StorageSetting (Goal) for which supported "
             "extents should be retrieved as available. \n"
             "If a NULL is passed for the Goal, the method will "
             "return all available extents, regardless of the "
             "goal. There exists a possibility of error in "
             "creating a Pool, Volume, or LogicalDisk retrieved "
             "in this manner." )]
      CIM_StorageSetting REF Goal, 
         [OUT, Description ( 
             "List of references to available StorageExtents, or "
             "subclass instances." )]
      CIM_StorageExtent REF AvailableExtents[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageVolume 
// ==================================================================
   [Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A StorageVolume is a StorageExtent that is published for use "
       "outside of the scoping System. For SCSI storage target "
       "devices, StorageVolumes are used to represent target Block "
       "devices, (peripheral device type codes 0h (i.e, "
       "direct-access), 4h (i.e., write-once), 5h (i.e., CD/DVD), 7h "
       "(i.e., optical memory), and Eh (i.e., simplified "
       "direct-access).); \n"
       "Stream devices, (peripheral device type codes 1h (i.e., \n"
       "sequential-access) and 3h (i.e., processor).). \n"
       "In these case, StorageVolume.Name will be derived from SCSI "
       "volume as documented in StorageExtent.Nameformat and "
       "NameNamespace Descriptions. \n"
       "\n"
       "The \'Exported\' value from StorageExtent.ExtentStatus[] MUST "
       "be in all instances of StorageVolume to maintain the semantic "
       "of \'published\' described above." )]
class CIM_StorageVolume : CIM_StorageExtent {

      [Override ( "Name" ), 
       Description ( "A unique identifier for the Volume." ), 
       MappingStrings { "ANSI|T10|SCSI SPC-3|8.6" }, 
       ModelCorrespondence { "CIM_StorageVolume.NameFormat" }]
   string Name;

      [Override ( "NameFormat" ), 
       Description ( 
          "A subset of StorageExtent name formats apply to StorageVolumes."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "VPD83NAA6", "VPD83NAA5", 
          "VPD83Type2", "VPD83Type1", "VPD83Type0", "SNVM", 
          "NodeWWN", "NAA", "EUI64", "T10VID" }]
   uint16 NameFormat;

      [Override ( "NameNamespace" ), 
       Description ( 
          "A subset of StorageExtent name spaces apply to StorageVolume."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "VPD83Type3", "VPD83Type2", 
          "VPD83Type1", "VPD80", "NodeWWN", "SNVM" }]
   uint16 NameNamespace;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "The SuppliesPower relationship indicates that a "
       "ManagedSystemElementis in the power domain of the referenced "
       "PowerSource. It indicates which ManagedSystemElements are "
       "dependent on the PowerSource, and therefore, which "
       "ManagedSystemElements are affected if the PowerSource is lost." )]
class CIM_SuppliesPower : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Supply that is providing power." )]
   CIM_PowerSupply REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A ManagedSystemElement in the power domain of the Supply." )]
   CIM_ManagedSystemElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_TapeDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and managment of a TapeDrive, a subtype of "
       "MediaAccessDevice." )]
class CIM_TapeDrive : CIM_MediaAccessDevice {

      [Description ( 
          "EOTWarningZoneSize indicates the size, in bytes, of the "
          "area designated as \'end of tape\'. Access in this area "
          "generates an \'end of tape\' warning." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint32 EOTWarningZoneSize;

      [Description ( "Maximum partition count for the TapeDrive." )]
   uint32 MaxPartitionCount;

      [Description ( 
          "Padding indicates the number of bytes inserted between "
          "blocks on a tape Media." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint32 Padding;

      [Description ( 
          "Time in milliseconds to move from the most physically "
          "distant point on the tape to the beginning." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 MaxRewindTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TapePartition 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "Capabilities and management of a TapePartition StorageExtent. "
       "Note that if a PhysicalTape is not partitioned, only a generic "
       "StorageExtent that represents the entire Tape should be "
       "instantiated. TapePartitions may be BasedOn other "
       "StorageExtents or directly Realized on a PhysicalTape." )]
class CIM_TapePartition : CIM_MediaPartition {

      [Override ( "NameFormat" ), 
       Description ( "TapePartition names are application specific." ), 
       ValueMap { "0", "1" }, 
       Values { "Other", "Unknown" }]
   uint16 NameFormat = 1;

      [Override ( "NameNamespace" ), 
       Description ( "TapePartition names are application specific." ), 
       ValueMap { "0", "1" }, 
       Values { "Other", "Unknown" }]
   uint16 NameNamespace = 1;

      [Description ( 
          "Number of blocks that are currently unused/not written "
          "on the Partition. When this number is multiplied by the "
          "BlockSize, inherited from StorageExtent, the total "
          "number of bytes available for writing can be computed." ), 
       Gauge]
   uint64 UnusedBlocks;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TokenRingAdapter
// ==================================================================
   [Deprecated { "CIM_TokenRingAdapter" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_TokenRingAdapter class has been "
       "deprecated, consistent with NetworkAdapter. Instead use the "
       "CIM_TokenRingPort class. \n"
       "Deprecated description: This class describes the capabilities "
       "and management aspects of a TokenRingAdapter." )]
class CIM_TokenRingAdapter : CIM_NetworkAdapter {

      [Deprecated { "CIM_TokenRingAdapter.NetworkAddresses" }, 
       Override ( "NetworkAddresses" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Token Ring/802.5 MAC addresses "
          "formatted as twelve hexadecimal digits (for example, "
          "\"010203040506\"), with each pair representing one of "
          "the six octets of the MAC address in \"canonical\" bit "
          "order. (Therefore, the Group address bit is found in the "
          "low order bit of the first character of the string.)" ), 
       ArrayType ( "Indexed" )]
   string NetworkAddresses[];

      [Deprecated { "CIM_TokenRingPort.MaxDataSize" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The maximum size of the INFO "
          "(non-MAC) field that will be received or transmitted." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpPortMaxInfo" }]
   uint32 MaxDataSize;

      [Deprecated { "CIM_TokenRingPort.Capabilities" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Capabilities of the "
          "TokenRingAdapter. For example, the Device might support "
          "AlertOnLan, WakeOnLan, Load Balancing, or Failover. If "
          "failover or load balancing capabilities are listed, a "
          "SpareGroup (failover) or ExtraCapacityGroup (load "
          "balancing) should also be defined to completely describe "
          "the capability." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TokenRingPort.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Deprecated { "CIM_TokenRingPort.CapabilityDescriptions" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array of free-form strings "
          "that provides more detailed explanations for any of the "
          "TokenRingAdapter features that are indicated in the "
          "Capabilities array. Note, each entry of this array is "
          "related to the entry in the Capabilities array that is "
          "located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_TokenRingAdapter.Capabilities" }]
   string CapabilityDescriptions[];

      [Deprecated { "CIM_TokenRingPort.EnabledCapabilities" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Specifies which of the "
          "capabilities from the \"Capabilities\" property are "
          "currently enabled." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ModelCorrespondence { "CIM_TokenRingAdapter.Capabilities" }]
   uint16 EnabledCapabilities[];

      [Deprecated { "CIM_TokenRingPort.RingStatus" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The current status that can be "
          "used to diagnose fluctuating problems that can occur on "
          "token rings, after a station has successfully been added "
          "to the ring. Before an open is completed, this object "
          "contains the value that indicates \"no status\" "
          "(131072). (The RingState and RingOpenStatus properties "
          "are also provided for debugging problems when the "
          "station cannot even enter the ring.) The value of the "
          "property is a sum of values, one for each currently "
          "applicable condition. The following values are defined "
          "for various conditions: \n"
          "0=No Problems Detected, 32=Ring Recovery, 64=Single "
          "Station, 256=Remove Received, 512=Reserved, 1024= "
          "Auto-Removal Error, 2048=Lobe Wire Fault, 4096=Transmit "
          "Beacon, 8192=Soft Error, 16384=Hard Error, 32768=Signal "
          "Loss, 131072=No Status, Open Not Completed." ), 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5RingStatus" }]
   uint32 RingStatus;

      [Deprecated { "CIM_TokenRingPort.RingState" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The current Device state with "
          "respect to entering or leaving the ring." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Opened", "Closed", "Opening", "Closing", 
          "Open Failure", "Ring Failure" }, 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5RingState" }]
   uint16 RingState;

      [Deprecated { "CIM_TokenRingPort.RingOpenStatus" }, 
       Description ( 
          "Note: The use of this property has been deprecated. \n"
          "Deprecated description: This property indicates the "
          "success, or the reason for failure, of the most recent "
          "attempt of the station to enter the ring." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "No Open Attempted", "Bad Parameter", "Lobe Failed", 
          "Signal Loss", "Insertion Timeout", "Ring Failed", 
          "Beaconing", "Duplicate MAC", "Request Failed", 
          "Remove Received", 
          // 10                      
          "Last Open Successful" }, 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5RingOpenStatus" }]
   uint16 RingOpenStatus;

      [Deprecated { "CIM_TokenRingPort.RingSpeed" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The bandwidth of the ring." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "One Megabit", "Four Megabit", 
          "Sixteen Megabit" }, 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5RingSpeed" }]
   uint16 RingSpeed;

      [Deprecated { "CIM_TokenRingPortStatistics.BurstErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station detects the absence of transitions for five "
          "half-bit timers (burst-five errors)." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsBurstErrors" }]
   uint32 BurstErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.ACErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station receives an AMP or SMP frame in which A is "
          "equal to C, and C is equal to 0, and then receives "
          "another SMP frame with A equal to C, and C equal to 0 "
          "without first receiving an AMP frame. This condition "
          "indicates a station that cannot set the AC bits "
          "properly." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsACErrors" }]
   uint32 ACErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.AbortTransErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station transmits an abort delimiter while "
          "transmitting data." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsAbortTransErrors" }]
   uint32 AbortTransErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.InternalErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station recognizes an internal error." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsInternalErrors" }]
   uint32 InternalErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.LostFrameErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station is transmitting and its TRR timer expires. "
          "This result indicates a condition where a transmitting "
          "station in strip mode does not receive the trailer of "
          "the frame before the TRR timer goes off." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsLostFrameErrors" }]
   uint32 LostFrameErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.ReceiveCongestions" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station recognizes a frame addressed to its specific "
          "address but has no available buffer space, which "
          "indicates that the station is congested." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsReceiveCongestions" }]
   uint32 ReceiveCongestions;

      [Deprecated { "CIM_TokenRingPortStatistics.FrameCopiedErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station recognizes a frame that is addressed to its "
          "specific address and detects that the FS field A bits "
          "are set to 1, which indicates a possible line hit or "
          "duplicate address." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5StatsFrameCopiedErrors" }]
   uint32 FrameCopiedErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.TokenErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: This counter is incremented when "
          "a station that acts as the active monitor recognizes an "
          "error condition that needs a token transmitted." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsTokenErrors" }]
   uint32 TokenErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.SoftErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of Soft Errors that "
          "the Device has detected. This method directly "
          "corresponds to the number of Report Error MAC frames "
          "that this Device has transmitted. Soft Errors are those "
          "that are recoverable by the MAC layer protocols." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsSoftErrors" }]
   uint32 SoftErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.HardErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that this "
          "Device has detected an immediately recoverable fatal "
          "error. This method indicates the number of times that "
          "this Device is either transmitting or receiving beacon "
          "MAC frames." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsHardErrors" }]
   uint32 HardErrors;

      [Deprecated { "CIM_TokenRingPortStatistics.SignalLossCount" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that this "
          "Device has detected the loss of signal condition from "
          "the ring." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsSignalLoss" }]
   uint32 SignalLossCount;

      [Deprecated { "CIM_TokenRingPortStatistics.TransmittedBeacons" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that this "
          "Device has transmitted a beacon frame." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsTransmitBeacons" }]
   uint32 TransmittedBeacons;

      [Deprecated { "CIM_TokenRingPortStatistics.Recoverys" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of Claim Token MAC "
          "frames that are received or transmitted after the Device "
          "has received a Ring Purge MAC frame. This counter "
          "signifies the number of times that the ring has been "
          "purged and is being recovered back into a normal "
          "operating state." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsRecoverys" }]
   uint32 Recoverys;

      [Deprecated { "CIM_TokenRingPortStatistics.LobeWires" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that the "
          "Device has detected an open or short circuit in the lobe "
          "data path. The adapter will be closed and RingState will "
          "signify this condition." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsLobeWires" }]
   uint32 LobeWires;

      [Deprecated { "CIM_TokenRingPortStatistics.Removes" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that the "
          "Device has received a Remove Ring Station MAC frame "
          "request. When this frame is received, the Device will "
          "enter the close state and RingState will signify this "
          "condition." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsRemoves" }]
   uint32 Removes;

      [Deprecated { "CIM_TokenRingPortStatistics.Singles" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that the "
          "Device has sensed that it is the only station on the "
          "ring. This situation occurs if the Device is the first "
          "one up on a ring or if there is a hardware problem." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsSingles" }]
   uint32 Singles;

      [Deprecated { "CIM_TokenRingPortStatistics.FrequencyErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that the "
          "Device has detected that the frequency of the incoming "
          "signal differs from the expected frequency by more than "
          "that specified by the IEEE 802.5 standard." ), 
       Counter, MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token RingMIB.dot5StatsFreqErrors" }]
   uint32 FrequencyErrors;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TokenRingPort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( "Capabilities and management of a TokenRingPort." )]
class CIM_TokenRingPort : CIM_NetworkPort {

      [Override ( "NetworkAddresses" ), 
       Description ( 
          "Token Ring/802.5 MAC addresses formatted as twelve "
          "hexadecimal digits (for example,\"010203040506\"), with "
          "each pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order. (Therefore, the "
          "Group address bit is found in the low order bit of the "
          "first character of the string.)" )]
   string NetworkAddresses[];

      [Description ( 
          "The maximum size of the INFO (non-MAC) field that will "
          "be received or transmitted." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpPortMaxInfo" }]
   uint32 MaxDataSize;

      [Description ( 
          "Capabilities of the TokenRingPort. For example, the "
          "Device might support AlertOnLan, WakeOnLan, Load "
          "Balancing, or Failover. If failover or load balancing "
          "capabilities are listed, a SpareGroup (failover) or "
          "ExtraCapacityGroup (load balancing) should also be "
          "defined to completely describe the capability." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TokenRingPort.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the TokenRingAPort "
          "features that are indicated in the Capabilities array. "
          "Note, each entry of this array is related to the entry "
          "in the Capabilities array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_TokenRingPort.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "Specifies which of the capabilities from the "
          "\"Capabilities\" property are currently enabled." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_TokenRingPort.Capabilities", 
          "CIM_TokenRingPort.OtherEnabledCapabilities" }]
   uint16 EnabledCapabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the enabled "
          "capabilities that are specified as \'Other\'." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_TokenRingPort.EnabledCapabilities" }]
   string OtherEnabledCapabilities[];

      [Description ( 
          "The current status that can be used to diagnose "
          "fluctuating problems that can occur on token rings, "
          "after a station has successfully been added to the ring. "
          "Before an open is completed, this object contains the "
          "value that indicates \"no status\" (131072). (The "
          "RingState and RingOpenStatus properties are also "
          "provided for debugging problems when the station cannot "
          "even enter the ring.) The value of the property is a sum "
          "of values, one for each currently applicable condition. "
          "The following values are defined for various conditions: \n"
          "0 = No Problems Detected, 32 = Ring Recovery, 64 = "
          "Single Station, 256 = Remove Received, 512 = Reserved, "
          "1024 = Auto-Removal Error, 2048 = Lobe Wire Fault, 4096 "
          "= Transmit Beacon, 8192 = Soft Error, 16384 = Hard "
          "Error, 32768 = Signal Loss, 131072 = No Status, Open Not "
          "Completed." ), 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5RingStatus" }]
   uint32 RingStatus;

      [Description ( 
          "The current Device state with respect to entering or "
          "leaving the ring." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Opened", "Closed", "Opening", "Closing", 
          "Open Failure", "Ring Failure" }, 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5RingState" }]
   uint16 RingState;

      [Description ( 
          "This property indicates the success, or the reason for "
          "failure, of the most recent attempt by the station to "
          "enter the ring." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "No Open Attempted", "Bad Parameter", "Lobe Failed", 
          "Signal Loss", "Insertion Timeout", "Ring Failed", 
          "Beaconing", "Duplicate MAC", "Request Failed", 
          "Remove Received", 
          // 10                            
          "Last Open Successful" }, 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5RingOpenStatus" }]
   uint16 RingOpenStatus;

      [Description ( "The bandwidth of the ring." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "One Megabit", "Four Megabit", 
          "Sixteen Megabit" }, 
       MappingStrings { 
          "MIB.IETF|IEEE 802.5 Token Ring MIB.dot5RingSpeed" }]
   uint16 RingSpeed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_UninterruptiblePowerSupply
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Capabilities and management of an UninterruptiblePowerSupply. "
       "The properties of the UPS Device indicate when incoming power "
       "is trimmed or boosted, and the aggregated information of the "
       "batteries, generators, and so on that comprise the Device. "
       "These individual components (for example, multiple batteries) "
       "can also be independently modeled and associated with the UPS." )]
class CIM_UninterruptiblePowerSupply : CIM_PowerSupply {

      [Override ( "Range1InputVoltageLow" ), 
       Description ( 
          "If the voltage (in millivolts) drops below the value "
          "specified by Range1InputVoltageLow, the UPS will "
          "compensate by boosting the voltage using its power "
          "sources. A value of 0 indicates that the voltage at "
          "which boosting occurs is \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       PUnit ( "volt * 10^-3" )]
   uint32 Range1InputVoltageLow;

      [Override ( "Range1InputVoltageHigh" ), 
       Description ( 
          "If the voltage (in millivolts) rises above the value "
          "specified by Range1InputVoltageHigh, the UPS will "
          "compensate by trimming the voltage. A value of 0 "
          "indicates that the voltage at which trimming occurs is "
          "\'unknown\'." ), 
       Units ( "MilliVolts" ), 
       PUnit ( "volt * 10^-3" )]
   uint32 Range1InputVoltageHigh;

      [Override ( "Range2InputVoltageLow" ), 
       Description ( 
          "If the voltage (in millivolts) drops below the value "
          "specified by Range2InputVoltageLow, the UPS will "
          "compensate by boosting the voltage using its power "
          "sources. A value of 0 indicates that the voltage at "
          "which boosting occurs is \'unknown\'." ), 
       Units ( "MilliVolts" ), 
       PUnit ( "volt * 10^-3" )]
   uint32 Range2InputVoltageLow;

      [Override ( "Range2InputVoltageHigh" ), 
       Description ( 
          "If the voltage (in millivolts) rises above the value "
          "specified by Range2InputVoltageHigh, the UPS will "
          "compensate by trimming the voltage. A value of 0 "
          "indicates that the voltage at which trimming occurs is "
          "\'unknown\'." ), 
       Units ( "MilliVolts" ), 
       PUnit ( "volt * 10^-3" )]
   uint32 Range2InputVoltageHigh;

      [Description ( 
          "The indication of the capacity that remains in the UPS "
          "batteries, generator, and so on. A value of \"Normal\" "
          "(2) indicates that the remaining estimated minutes of "
          "run-time are greater than the \'low power\' state "
          "defined for the UPS (typically two minutes). A value of "
          "\"Low\" (3) indicates that the remaining estimated "
          "minutes of run-time are less than or equal to the "
          "defined \'low power\' state of the device. A value of "
          "\"Depleted\" (4) indicates that the UPS will be unable "
          "to sustain the present load when and if the utility "
          "power is lost (including the possibility that the "
          "utility power is currently absent)." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Unknown", "Normal", "Low", "Depleted" }, 
       MappingStrings { "MIF.DMTF|UPS Battery|001.1" }]
   uint16 RemainingCapacityStatus;

      [Description ( 
          "TimeOnBackup indicates the elapsed time in seconds since "
          "the UPS last switched to battery power, generator, or so "
          "on or the time since the UPS was last restarted, "
          "whichever is less. 0 is returned if the UPS is \'on "
          "line\'." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIF.DMTF|UPS Battery|001.2" }, 
       PUnit ( "second" )]
   uint32 TimeOnBackup;

      [Description ( 
          "EstimatedRunTime is an estimate in minutes of the time "
          "that depletion of the battery, generator, or other "
          "device, will occur under the present load conditions if "
          "the utility power is off or is lost and remains off." ), 
       Units ( "Minutes" ), 
       MappingStrings { "MIF.DMTF|UPS Battery|001.3" }, 
       PUnit ( "minute" )]
   uint32 EstimatedRunTime;

      [Description ( 
          "An estimate of the percentage of full charge remaining "
          "for a UPS (that uses battery technology)." ), 
       Units ( "Percent" ), 
       Gauge, MappingStrings { "MIF.DMTF|UPS Battery|001.4" }, 
       PUnit ( "percent" )]
   uint16 EstimatedChargeRemaining;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_USBController
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of a USB Host Controller." )]
class CIM_USBController : CIM_Controller {

      [Description ( 
          "Indicates the latest USB Version that is supported by "
          "the Controller. The property is expressed as a "
          "Binary-Coded Decimal (BCD) where a decimal point is "
          "implied between the second and third digits. For "
          "example, a value of 0x201 indicates that version 2.01 is "
          "supported." )]
   uint16 USBVersion;

      [Description ( 
          "The type of interface used between the host-system "
          "software and the USBController." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "UHCI", "OHCI" }, 
       ModelCorrespondence { "CIM_USBController.ControllerVersion" }]
   uint16 InterfaceType;

      [Description ( 
          "Indicates the version of the USB Host Controller "
          "register set, specific to the InterfaceType. The "
          "property is expressed as a Binary-Coded Decimal (BCD) "
          "value where a decimal point is implied between the "
          "second and third digits. For example, a value of 0x103 "
          "indicates that version 1.03 is supported." ), 
       ModelCorrespondence { "CIM_USBController.InterfaceType" }]
   uint16 ControllerVersion;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::USB" ), 
    Description ( "The management characterisitics of a USB Device." )]
class CIM_USBDevice : CIM_LogicalDevice {

      [Description ( 
          "Indicates the latest USB Version supported by the USB "
          "Device. The property is expressed as a Binary-Coded "
          "Decimal (BCD) where a decimal point is implied between "
          "the 2nd and 3rd digits. For example, a value of 0x201 "
          "indicates that version 2.01 is supported." )]
   uint16 USBVersion;

      [Description ( "Indicates the USB class code." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceClass" }]
   uint8 ClassCode;

      [Description ( "Indicates the USB subclass code." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceSubClass" }]
   uint8 SubclassCode;

      [Description ( "Indicates the USB protocol code." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bDeviceProtocol" }]
   uint8 ProtocolCode;

      [Description ( 
          "From the USB specification Device Descriptor, where "
          "\'bcdUSB\' is the USB Specification Number, in "
          "Binary-Coded Decimal format, that the device complies "
          "with." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bcdUSB" }]
   uint16 USBVersionInBCD;

      [Description ( 
          "From the USB specification Device Descriptor, Maximum "
          "Packet size for the USB zero endpoint. Valid sizes are "
          "8, 16, 32, 64." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bMaxPacketSize" }]
   uint8 MaxPacketSize;

      [Description ( 
          "From the USB specification Device Descriptor, Vendor ID "
          "assigned by USB.org." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|idVendor" }]
   uint16 VendorID;

      [Description ( 
          "From the USB specification Device Descriptor, Product ID "
          "assigned by manufacturer." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|idProduct" }]
   uint16 ProductID;

      [Description ( 
          "From the USB specification Device Descriptor, Device "
          "Release Number in Binary-Coded Decimal." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bcdDevice" }]
   uint16 DeviceReleaseNumber;

      [Description ( 
          "From the USB specification Device Descriptior, "
          "Manufacturer string." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|iManufacturer" }]
   string Manufacturer;

      [Description ( 
          "From the USB specification Device Descriptor, Product String."
           ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|iProduct" }]
   string Product;

      [Description ( 
          "From the USB specification Device Descriptor, Serial "
          "Number String." ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|iSerialNumber" }]
   string SerialNumber;

      [Description ( 
          "Number of device configurations that are defined for the Device."
           ), 
       MappingStrings { 
          "Universal Serial Bus Specification.USB-IF|Standard Device Descriptor|bNumConfigurations" }]
   uint8 NumberOfConfigs;

      [Description ( 
          "Indicates the configuration currently selected for the "
          "Device. If this value is zero, the Device is "
          "unconfigured." ), 
       ModelCorrespondence { "CIM_USBDevice.CurrentAlternateSettings" }]
   uint8 CurrentConfigValue;

      [Description ( 
          "An array of USB \'alternate settings\' for each "
          "interface in the currently selected configuration "
          "(indicated by the CurrentConfigValue property). This "
          "array has one entry for each interface in the "
          "configuration. If the property, CurrentConfigValue, is "
          "zero (indicating the Device is not configured), the "
          "array is undefined. To understand how to parse this "
          "octet string, refer to the USB Specification." ), 
       ModelCorrespondence { "CIM_USBDevice.CurrentConfigValue" }]
   uint8 CurrentAlternateSettings[];

      [Description ( 
          "CommandTimeout is configurable by management "
          "applications supporting USB Redirections. When the "
          "Redirection Service redirects a USBDevice command to a "
          "remote device, and the remote device does not respond "
          "before CommandTimout times out, the Redirection Service "
          "will emulate a media eject event and re-try the command "
          "and/or try to re-establish the connection to the remote "
          "device. The timeout is expressed using the interval "
          "format of the datetime type." )]
   datetime CommandTimeout;


      [Description ( 
          "This method returns the USBDevice Descriptor as "
          "specified by the input parameters. Each parameter is "
          "briefly described here with more detail in its Qualifier "
          "list. RequestType is an input parameter that defines "
          "whether the request is for standard, class or "
          "vendor-specific information, as well as specifying the "
          "recipient. RequestValue is also an input parameter and "
          "defines the USB Descriptor Type and Index. RequestIndex "
          "is an input parameter which describes the language used "
          "to return a string Descriptor. RequestLength is both an "
          "input and output parameter. It specifies the length of "
          "the Descriptor that should be returned (on input) and "
          "what is actually returned in the Buffer parameter (on "
          "output). Buffer is an output parameter, containing the "
          "Descriptor data. The GetDescriptor method returns an "
          "integer value of 0 if the USB Descriptor is successfully "
          "returned, 1 if the request is not supported and any "
          "other number to indicate an error. \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 GetDescriptor(
         [IN, Description ( 
             "RequestType is bit-mapped and identifies the type "
             "of Descriptor request and the recipient. The type "
             "of request may be \'standard\', \'class\' or "
             "\'vendor-specific\'. The recipient may be "
             "\'device\', \'interface\', \'endpoint\' or "
             "\'other\'. Refer to the USB Specification for the "
             "appropriate values for each bit." )]
      uint8 RequestType, 
         [IN, Description ( 
             "RequestValue contains the Descriptor Type in the "
             "high byte and the Descriptor Index (for example, "
             "index or offset into the Descriptor array) in the "
             "low byte. Refer to the USB Specification for more "
             "information." )]
      uint16 RequestValue, 
         [IN, Description ( 
             "RequestIndex defines the 2 byte Language ID code "
             "used by the USBDevice when returning string "
             "Descriptor data. The parameter is typically 0 for "
             "non-string Descriptors. Refer to the USB "
             "Specification for more information." )]
      uint16 RequestIndex, 
         [IN, OUT, Description ( 
             "On input, RequestLength is the length (in octets) "
             "of the Descriptor that should be returned. If this "
             "value is less than the actual length of the "
             "Descriptor, only the requested length will be "
             "returned. If it is more than the actual length, "
             "the actual length is returned. On output, this "
             "parameter is the length, in octets, of the Buffer "
             "being returned. If the requested Descriptor does "
             "not exist, the contents of this parameter are "
             "undefined." )]
      uint16 RequestLength, 
         [IN ( false ), OUT, Description ( 
             "Buffer returns the requested Descriptor "
             "information. If the Descriptor does not exist, the "
             "contents of the Buffer are undefined." )]
      uint8 Buffer[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_USBHub 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::USB" ), 
    Description ( "USB Hub Device." )]
class CIM_USBHub : CIM_USBDevice {

      [Description ( 
          "Indicates whether power to the Hub Ports is individually "
          "or gang-switched. If this value is FALSE, power is "
          "switched individually for each Port. If this value is "
          "TRUE, power is switched to all Ports on the Hub at once." )]
   boolean GangSwitched;

      [Description ( 
          "Number of downstream Ports on the Hub, including those "
          "embedded in the Hub\'s silicon. Individual USBPorts are "
          "associated with the Hub using the USBPortOnHub "
          "association." )]
   uint8 NumberOfPorts;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_USBPort 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::USB" ), 
    Description ( "A Port on a USBHub." )]
class CIM_USBPort : CIM_LogicalPort {

      [Override ( "Speed" ), 
       Description ( 
          "USB Port Speed in bits per second. This speed is "
          "determined and set by the attached Device. The \'attached "
          "Device\' is indicated using the USBConnection "
          "association. At this time, only several Port speeds are "
          "valid. These are: 1.5Mbps and 12Mbps. The value 0 can "
          "also be specified to indicate that the current speed is "
          "\'unknown\' or 1 to indicate that the speed is \'other\' "
          "than 1.5 or 12Mbps." ), 
       ValueMap { "0", "1", "1500000", "12000000" }]
   uint64 Speed;

      [Override ( "StatusInfo" ), 
       Description ( 
          "Indicates whether the Port is currently enabled." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Unknown", "Enabled", "Disabled" }]
   uint16 StatusInfo;

      [Override ( "Availability" ), 
       Description ( 
          "Indicates whether the Port is currently Powered." ), 
       ValueMap { "2", "3", "7" }, 
       Values { "Unknown", "Running/Full Power", "Power Off" }]
   uint16 Availability;

      [Description ( 
          "The USB Port\'s power capability. The current "
          "specification defines that 1 or 5 loads can be supported "
          "(values 2 or 3 would be specified, respectively)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "1 Unit Load", "5 Unit Loads" }]
   uint16 Power;

      [Description ( 
          "Indicates whether the Port is currently Suspended." )]
   boolean Suspended;

      [Description ( 
          "Indicates whether the Port is disabled due to an "
          "overcurrent event." )]
   boolean Overcurrent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_USBPortOnHub 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::USB" ), 
    Description ( 
       "USBPortOnHub associates a USBPort or connection point with the "
       "USBHub that includes it." )]
class CIM_USBPortOnHub : CIM_PortOnDevice {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Hub that includes the USBPort." )]
   CIM_USBHub REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( "The Port on the USBHub." )]
   CIM_USBPort REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UserDevice 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "UserDevices are LogicalDevices that allow a ComputerSystem\'s "
       "users to input, view or hear data. It is a superclass from "
       "which other classes, such as Keyboard or DesktopMonitor, "
       "descend." )]
class CIM_UserDevice : CIM_LogicalDevice {

      [Description ( 
          "An indication of whether the Device is locked, "
          "preventing user input or output." )]
   boolean IsLocked;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="CIMCoreCR00734.006" type ="deprecate">Deprecate class.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_VideoController
// ==================================================================
   [Deprecated { "CIM_DisplayController, CIM_VideoHead" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of the CIM_VideoController class has been "
       "deprecated in lieu of CIM_DisplayController. Deprecated "
       "description: Capabilities and management of the "
       "VideoController." )]
class CIM_VideoController : CIM_Controller {

      [Deprecated { "No Value" }, 
       Override ( "Description" ), 
       MappingStrings { "MIF.DMTF|Video|004.18" }]
   string Description;

      [Deprecated { "CIM_DisplayController.VideoProcessor" }, 
       Description ( 
          "A free-form string that describes the video processor or "
          "Controller." )]
   string VideoProcessor;

      [Deprecated { "CIM_DisplayController.VideoMemoryType" }, 
       Description ( 
          "An integer enumeration that indicates the type of video memory."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13" }, 
       Values { "Other", "Unknown", "VRAM", "DRAM", "SRAM", "WRAM", 
          "EDO RAM", "Burst Synchronous DRAM", 
          "Pipelined Burst SRAM", //10 
          "CDRAM", "3DRAM", 
          "SDRAM", "SGRAM" }, 
       MappingStrings { "MIF.DMTF|Video|004.6" }]
   uint16 VideoMemoryType;

      [Deprecated { "CIM_DisplayController.NumberOfVideoPages" }, 
       Description ( 
          "Number of video pages that are supported given the "
          "current resolutions and available memory." )]
   uint32 NumberOfVideoPages;

      [Deprecated { "CIM_DisplayController.MaxMemorySupported" }, 
       Description ( "Maximum amount of memory supported in bytes." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint32 MaxMemorySupported;

      [Deprecated { "CIM_DisplayController.AcceleratorCapabilities" }, 
       Description ( 
          "An array of integers that indicates the graphics and 3D "
          "capabilities of the VideoController." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Graphics Accelerator", 
          "3D Accelerator", "PCI Fast Write", 
          "MultiMonitor Support", "PCI Mastering", 
          "Second Monochrome Adapter Support", 
          "Large Memory Address Support" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_VideoController.CapabilityDescriptions" }]
   uint16 AcceleratorCapabilities[];

      [Deprecated { "CIM_DisplayController.CapabilityDescriptions" }, 
       Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the video Accelerator "
          "features that are indicated in the Capabilities array. "
          "Note, each entry of this array is related to the entry "
          "in the Capabilities array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_VideoController.AcceleratorCapabilities" }]
   string CapabilityDescriptions[];

      [Deprecated { "CIM_VideoHead.CurrentBitsPerPixel" }, 
       Description ( 
          "The number of bits used to display each pixel." ), 
       Units ( "Bits" ), 
       MappingStrings { "MIF.DMTF|Video|004.12" }, 
       PUnit ( "bit" )]
   uint32 CurrentBitsPerPixel;

      [Deprecated { "CIM_VideoHead.CurrentHorizontalResolution" }, 
       Description ( "Current number of horizontal pixels." ), 
       Units ( "Pixels" ), 
       MappingStrings { "MIF.DMTF|Video|004.11" }, 
       PUnit ( "pixel" )]
   uint32 CurrentHorizontalResolution;

      [Deprecated { "CIM_VideoHead.CurrentVerticalResolution" }, 
       Description ( "Current number of vertical pixels." ), 
       Units ( "Pixels" ), 
       MappingStrings { "MIF.DMTF|Video|004.10" }, 
       PUnit ( "pixel" )]
   uint32 CurrentVerticalResolution;

      [Deprecated { "CIM_VideoHead.MaxRefreshRate" }, 
       Description ( 
          "Maximum refresh rate of the VideoController in hertz." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Video|004.5" }, 
       PUnit ( "hertz" )]
   uint32 MaxRefreshRate;

      [Deprecated { "CIM_VideoHead.MinRefreshRate" }, 
       Description ( 
          "Minimum refresh rate of the Video Controller in hertz." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Video|004.4" }, 
       PUnit ( "hertz" )]
   uint32 MinRefreshRate;

      [Deprecated { "CIM_VideoHead.CurrentRefreshRate" }, 
       Description ( "Current refresh rate in hertz." ), 
       Units ( "Hertz" ), 
       MappingStrings { "MIF.DMTF|Video|004.15" }, 
       PUnit ( "hertz" )]
   uint32 CurrentRefreshRate;

      [Deprecated { "CIM_VideoHead.CurrentScanMode" }, 
       Description ( 
          "Current scan mode. \"Interlaced\" (value=3) or \"Non "
          "Interlaced\" (value=4) can be defined using this "
          "property." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", "Interlaced", "Non Interlaced" }, 
       MappingStrings { "MIF.DMTF|Video|004.8" }]
   uint16 CurrentScanMode;

      [Deprecated { "CIM_VideoHead.CurrentNumberOfRows" }, 
       Description ( 
          "If in character mode, the number of rows for this Video "
          "Controller. Otherwise, enter 0." ), 
       MappingStrings { "MIF.DMTF|Video|004.13" }]
   uint32 CurrentNumberOfRows;

      [Deprecated { "CIM_VideoHead.CurrentNumberOfColumns" }, 
       Description ( 
          "If in character mode, the number of columns for this "
          "VideoController. Otherwise, enter 0." ), 
       MappingStrings { "MIF.DMTF|Video|004.14" }]
   uint32 CurrentNumberOfColumns;

      [Deprecated { "CIM_VideoHead.CurrentNumberOfColors" }, 
       Description ( 
          "The number of colors that are supported at the current "
          "resolutions." )]
   uint64 CurrentNumberOfColors;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="CIMCoreCR00734.006" type ="deprecate">Deprecate class.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VideoSetting
// ==================================================================
   [Association, Deprecated { "CIM_ElementSetting" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of the CIM_VideoSetting class has been "
       "deprecated in lieu of CIM_ElementSetting. \n"
       "Deprecated description: \n"
       "VideoSetting associates the VideoControllerResolution Setting "
       "with the Controllers to which it applies." )]
class CIM_VideoSetting : CIM_ElementSetting {

      [Deprecated { "CIM_ElementSetting.Element" }, 
       Override ( "Element" ), 
       Description ( "The VideoController." )]
   CIM_VideoController REF Element;

      [Deprecated { "CIM_ElementSetting.Setting" }, 
       Override ( "Setting" ), 
       Description ( 
          "The resolutions, refresh rates, scan mode, and number of "
          "colors that can be set for the Controller." )]
   CIM_VideoControllerResolution REF Setting;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VolatileStorage 
// ==================================================================
   [Deprecated { "CIM_Memory" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( "Capabilities and management of Volatile Storage." )]
class CIM_VolatileStorage : CIM_Memory {

      [Deprecated { "CIM_AssociatedCacheMemory" }, 
       Description ( 
          "Indicates whether this Memory can be cached or not." ), 
       MappingStrings { "MIF.DMTF|System Resource Memory Info|002.5" }]
   boolean Cacheable;

      [Deprecated { "CIM_AssociatedCacheMemory.WritePolicy" }, 
       Description ( 
          "An enumeration indicating the cache type that is "
          "compatible with this Memory. For example, 4 indicates "
          "write-through cache. If the Cacheable property is set to "
          "false, then this property does not have meaning and "
          "should be set to 5, \"Not Applicable\"." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Write-Back", "Write-Through", 
          "Not Applicable" }, 
       MappingStrings { "MIF.DMTF|System Resource Memory Info|002.6" }]
   uint16 CacheType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VolumeSet 
// ==================================================================
   [Deprecated { "CIM_CompositeExtent" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "VolumeSet is deprecated in lieu of CompositeExtent, which "
       "removes the restriction that the Set must be exported. A "
       "VolumeSet can be used to model an SCC RAID implementation. "
       "VolumeSets represent a contiguous range of logical blocks "
       "presented to the operating environment. VolumeSets may "
       "overlap. However, the underlying PhysicalExtents within the "
       "overlap shall not contain any check data. They are BasedOn one "
       "or more ProtectedSpaceExtents. These BasedOn associations "
       "should be instantiated or subclassed as needed." )]
class CIM_VolumeSet : CIM_StorageVolume {

      [Deprecated { "CIM_CompositeExtent.NumberOfBlocks" }, 
       Override ( "NumberOfBlocks" ), 
       MappingStrings { "MIF.DMTF|Volume Set|001.3" }]
   uint64 NumberOfBlocks;

      [Deprecated { "CIM_CompositeExtent.ExtentStripeLength" }, 
       Description ( 
          "Number of contiguous ProtectedSpaceExtents counted "
          "before looping back to the first ProtectedSpaceExtent of "
          "the current stripe. It is the number of Extents forming "
          "the user data stripe." ), 
       MappingStrings { "MIF.DMTF|Volume Set|001.4" }]
   uint64 PSExtentStripeLength;

      [Deprecated { "CIM_CompositeExtent.ExtentInterleaveDepth" }, 
       Description ( 
          "Number of ProtectedSpaceExtents to stripe as a "
          "collective set. In SCC, this value is defined as the "
          "number of stripes to count before continuing to map into "
          "the next contiguous set of Extents, beyond the current "
          "stripe." ), 
       MappingStrings { "MIF.DMTF|Volume Set|001.5" }]
   uint64 PSExtentInterleaveDepth;

      [Deprecated { "No value" }, 
       Description ( 
          "VolumeSets in SCC have additional status information "
          "beyond that captured in the Availability and other "
          "properties, inherited from ManagedSystemElement. This "
          "additional information (for example, \"Protection "
          "Disabled\", value=9) is captured in the VolumeStatus "
          "property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14" }, 
       Values { "Other", "Unknown", "None/Not Applicable", "Broken", 
          "Data Lost", "Dynamic Reconfig", "Exposed", 
          "Fractionally Exposed", "Partially Exposed", 
          "Protection Disabled", 
          // 10               
          "Readying", "Rebuild", 
          "Recalculate", "Spare in Use", "Verify In Progress" }]
   uint16 VolumeStatus;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_Watchdog
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Processor" ), 
    Description ( 
       "CIM_Watchdog is a timer that is implemented in the system "
       "hardware. It allows the hardware to monitor the state of the "
       "Operating System, BIOS, or a software component that is "
       "installed on the System. If the monitored component fails to "
       "re-arm the timer before its expiration, the hardware assumes "
       "that the System is in a critical state, and could reset the "
       "ComputerSystem. This feature can also be used as an "
       "application watchdog timer for a mission-critical application. "
       "In this case, the application would assume responsibility for "
       "re-arming the timer before expiration." )]
class CIM_Watchdog : CIM_LogicalDevice {

      [Description ( 
          "The entity that is currently being monitored by the "
          "WatchDog. This property is used to identify the module "
          "that is responsible for re-arming, or whose information "
          "is used to re-arm, the watchdog at periodic intervals." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Operating System", 
          "Operating System Boot Process", 
          "Operating System Shutdown Process", 
          "Firmware Boot Process", "BIOS Boot Process", 
          "Application", "Service Processor" }]
   uint16 MonitoredEntity;

      [Description ( 
          "A string that describes more textual information about "
          "the monitored entity." ), 
       MaxLen ( 256 )]
   string MonitoredEntityDescription;

      [Description ( 
          "The timeout interval that is used by the watchdog, in "
          "MicroSeconds." ), 
       Units ( "MicroSeconds" ), 
       PUnit ( "second * 10^-6" )]
   uint32 TimeoutInterval;

      [Description ( 
          "Resolution of the timer. For example, if this value is "
          "100, then the timer can expire anytime between "
          "(TimeoutInterval- 100) microseconds or "
          "(TimeoutInterval+100) microseconds." ), 
       Units ( "MicroSeconds" ), 
       PUnit ( "second * 10^-6" )]
   uint32 TimerResolution;

      [Description ( "The time of the last timer expiry." )]
   datetime TimeOfLastExpiration;

      [Description ( 
          "Monitored entity at the time of last timer expiry." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Operating System", 
          "Operating System Boot Process", 
          "Operating System Shutdown Process", 
          "Firmware Boot Process", "BIOS Boot Process", 
          "Application", "Service Processor" }]
   uint16 MonitoredEntityOnLastExpiration;

      [Description ( 
          "The action that should happen upon the expiry of the watchdog."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "None - Status Only", "System Reset", 
          "System Power Off", "System Power Off, then On", 
          "Generate System NonMaskableInterrupt (NMI)", 
          "Generate System Management Interrupt (SMI)" }]
   uint16 ActionOnExpiration;


      [Description ( 
          "A method to re-arm the timer. This method is used only "
          "if the MonitoredEntity is \"Application\". It returns 0 "
          "if successful, 1 if unsupported, and any other value if "
          "an error occurred. In a subclass, the set of possible "
          "return codes could be specified, using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \'translated\' can also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 KeepAlive(
);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "WiFiPort is the logical representation of wireless local area "
       "network communications hardware that conforms to the IEEE "
       "802.11 series of specifications. It embodies properties at the "
       "lowest layers of a network stack, such as the antennas used "
       "for transmission and reception, the address permanently "
       "embedded into the hardware, and the operational bandwidth of "
       "the device." )]
class CIM_WiFiPort : CIM_NetworkPort {

      [Override ( "Speed" ), 
       Description ( 
          "The data rate at which the current PPDU (PLCP (Physical "
          "Layer Convergence Protocol) Protocol Data Unit) was "
          "received. This value is encoded in the first 4 bits of "
          "the PLCP header in each PLCP frame." )]
   uint64 Speed;

      [Override ( "MaxSpeed" ), 
       Description ( 
          "Shall contain the maximum bandwidth relative to the "
          "current operating mode specified in PortType. For "
          "example, shall contain 11000000 if PortType contains 71 "
          "(\"802.11b\")." )]
   uint64 MaxSpeed;

      [Override ( "PortType" ), 
       Description ( 
          "PortType shall contain the specific 802.11 operating "
          "mode that is currently enabled on the Port. All modes "
          "are specified in" ), 
       ValueMap { "0", "1", "70", "71", "72", "73", "..", "16000.." }, 
       Values { "Unknown", "Other", "802.11a", "802.11b", "802.11g", 
          "802.11n", "DMTF Reserved", "Vendor Reserved" }]
   uint16 PortType;

      [Override ( "PermanentAddress" ), 
       Description ( 
          "IEEE 802 EUI-48 MAC address, formatted as twelve "
          "hexadecimal digits (for example, \"010203040506\"), with "
          "each pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order. (Therefore, the "
          "Group address bit is found in the low order bit of the "
          "first character of the string.)" )]
   string PermanentAddress;

      [Override ( "NetworkAddresses" ), 
       Description ( 
          "IEEE 802 EUI-48 MAC addresses, each formatted as twelve "
          "hexadecimal digits (for example, \"010203040506\"), with "
          "each pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order. (Therefore, the "
          "Group address bit is found in the low order bit of the "
          "first character of the string.)" )]
   string NetworkAddresses[];


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "CIM_WiFiRadio describes a radio transceiver component of a "
       "WiFiPort. It is modeled because of the possibility of multiple "
       "transceivers being associated with a single port, the "
       "possibility of multiple ports being associated with a single "
       "radio transceiver, and the possibility of enabling/disabling a "
       "radio transceiver independent of its associated WiFiPort." )]
class CIM_WiFiRadio : CIM_LogicalDevice {

      [Description ( "The received signal strength, in -dBm." ), 
       PUnit ( "decibel(m) * -1" )]
   uint32 SignalStrength;

      [Description ( "The received signal noise, in -dBm." ), 
       PUnit ( "decibel(m) * -1" )]
   uint32 SignalNoise;

      [Description ( 
          "Channel shall contain the channel number currently in "
          "use by the WiFiRadio to communicate with the station "
          "with which it is associated. Each channel number is "
          "associated with a particular signal frequency band." )]
   uint16 Channel;

      [Description ( 
          "The frequency, in Megahertz, of the center frequency of "
          "the band (channel) currently in use by the WiFiRado." ), 
       PUnit ( "hertz * 10^6" )]
   uint32 Frequency;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WORMDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and managment of a WORMDrive, a subtype of "
       "MediaAccessDevice." )]
class CIM_WORMDrive : CIM_MediaAccessDevice {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "The ZoneService if responsible for managing the Zone "
       "enforcement for the fabric. The ZoneService is hosted on an "
       "AdminDomain. This relationship is depicted by the "
       "HostedService association." )]
class CIM_ZoneService : CIM_Service {

      [Description ( 
          "SessionState is an integer enumeration that indicates "
          "whether the session is currently starting (value=2) or "
          "has ended (value=3). It is possible that a particular "
          "instance of a ZoneService might not support sessions. If "
          "sessions are not supported, the value 4 (\"Not "
          "Applicable\") is used." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Starting", "Ended", "Not Applicable" }]
   uint16 SessionState = 4;

      [Description ( 
          "RequestedSessionState is an integer enumeration that "
          "indicates whether the ZoneService session has been "
          "requested to start (value=2), end (value=3), or "
          "terminate (value=4). Note that when "
          "RequestedSessionState is set to 4 (\"Not Applicable\"), "
          "then this property is not used. By default, the "
          "RequestedSessionState of the element is 5 (\"No "
          "Change\")." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "Start", "End", "Terminate", "No Change" }, 
       ModelCorrespondence { "CIM_ZoneService.SessionState", 
          "CIM_ZoneService.SessionControl()" }]
   uint16 RequestedSessionState = 5;

      [Description ( 
          "DefaultZoningState indicates whether fabric members "
          "(devices) that are not in any other active Zones can "
          "access each other. In particular, if no Zones are "
          "active, a DefaultZoningState \"Allow\" indicates that "
          "all fabric members can access each other." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Allow", "Deny" }]
   uint16 DefaultZoningState;


      [Description ( 
          "The method creates a ZoneSet and the association "
          "HostedCollection. The newly created association, "
          "HostedCollection, associates the Zone to the same "
          "AdminDomain that the ZoneService is hosted to. For the "
          "newly created ZoneSet, the Active property is always set "
          "to false. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 CreateZoneSet(
         [Required, IN, Description ( 
             "A user-friendly name for the ZoneSet that is "
             "unique within the AdminDomain." ), 
          ModelCorrespondence { "CIM_ZoneSet.ElementName" }]
      string ZoneSetName, 
         [IN, OUT, Description ( 
             "A reference to the newly created Zone." )]
      CIM_ZoneSet REF ZoneSet);

      [Description ( 
          "The method creates a Zone and the association "
          "HostedCollection. The newly created association, "
          "HostedCollection, associates the Zone to the same "
          "AdminDomain that the ZoneService is hosted to. For the "
          "newly created Zone, the Active property is always set to "
          "false. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 CreateZone(
         [Required, IN, Description ( 
             "A user-friendly name for the Zone that is unique "
             "within the AdminDomain." ), 
          ModelCorrespondence { "CIM_Zone.ElementName" }]
      string ZoneName, 
         [IN, Description ( "The type of zoning to be enforced." ), 
          ValueMap { "2", "3" }, 
          Values { "Default", "Protocol" }, 
          ModelCorrespondence { "CIM_Zone.ZoneType" }]
      uint16 ZoneType, 
         [IN, Description ( 
             "Specific clarification to be used when the "
             "ZoneType has an enumeration that requires it. "
             "Specifically, if ZoneType is \"Protocol\", then "
             "SubType is the Fibre Channel FC4 type." ), 
          ValueMap { "2", "3", "4" }, 
          Values { "SCSI", "VI", "IP" }, 
          ModelCorrespondence { "CIM_Zone.ZoneSubType" }]
      uint16 ZoneSubType, 
         [IN, OUT, Description ( 
             "A reference to the newly created Zone." )]
      CIM_Zone REF Zone);

      [Description ( 
          "The method creates a ZoneAlias and the association "
          "HostedCollection. The newly created association, "
          "HostedCollection, associates the ZoneAlias to the same "
          "AdminDomain that the ZoneService is hosted to. For the "
          "newly created ZoneAlias, the Active property is always "
          "set to false. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 CreateZoneAlias(
         [Required, IN, Description ( 
             "A name (alias) for the ZoneAlias that is unique in "
             "the context of the hosting System." ), 
          ModelCorrespondence { "CIM_ZoneAlias.CollectionAlias" }]
      string CollectionAlias, 
         [IN, OUT, Description ( 
             "A reference to the newly created ZoneAlias." )]
      CIM_NamedAddressCollection REF ZoneAlias);

      [Description ( 
          "CreateZoneMembershipSettingData creates a "
          "ZoneMembershipSettingData and adds it to the specified "
          "Zone or ZoneAlias by creating a MemberOfCollection "
          "association. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 CreateZoneMembershipSettingData(
         [Required, IN, Description ( 
             "Identifies the type of identification placed in "
             "ConnectivityMemberID." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "..", 
             "0x8000.." }, 
          Values { "Unknown", "Other", "PermanentAddress", 
             "NetworkAddress", "SwitchPortID", 
             "LogicalPortGroup", "DMTF_Reserved", 
             "Vendor_Reserved" }, 
          ModelCorrespondence { 
             "CIM_ZoneMembershipSettingData.ZoneMemberType" }]
      uint16 ConnectivityMemberType, 
         [Required, IN, Description ( 
             "This property specifies the type of identification "
             "used in the ConnectivityMemberID field. For Fibre "
             "Channel: \n"
             "* A ConnectivityMemberType of \'PermanentAddress\', "
             "the ConnectivityMemberID is the NxPort WWN; \n"
             "* A ConnectivityMemberType of \'NetworkAddress\', "
             "the ConnectivityMemberID is the NXPort Address ID; \n"
             "* A ConnectivityMemberType of \'SwitchPortID\', "
             "the ConnectivityMemberID is \'Domain:PortNumber\'." ), 
          ModelCorrespondence { 
             "CIM_ZoneMembershipSettingData.ConnectivityMemberID" }]
      string ConnectivityMemberID, 
         [Required, IN, Description ( 
             "The collection that the ZoneMembershipSettingData "
             "should be added to. The collection is either a "
             "Zone or ZoneAlias." )]
      CIM_SystemSpecificCollection REF SystemSpecificCollection, 
         [IN, OUT, Description ( 
             "A reference to the newly created ZoneMembershipSettingData."
              )]
      CIM_ZoneMembershipSettingData REF ZoneMembershipSettingData);

      [Description ( 
          "Adds to the ZoneSet the specified Zone. Adding a Zone to "
          "a ZoneSet, extends the zone enforcement definition of "
          "the ZoneSet to include the members of that Zone. If "
          "adding the Zone is successful, the Zone should be "
          "associated with the ZoneSet by MemberOfCollection. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 AddZone(
         [Required, IN, Description ( 
             "A reference to the ZoneSet that the Zone is added to."
              )]
      CIM_ZoneSet REF ZoneSet, 
         [IN, Description ( 
             "A reference to the Zone that is to be added to the ZoneSet."
              )]
      CIM_Zone REF Zone);

      [Description ( 
          "Adds to the Zone or ZoneAlias, the specified "
          "ZoneMembershipSettingData. If adding the "
          "ZoneMembershipSettingData is successful, an "
          "ElementSettingData association will be created between "
          "the ZoneMembershipSettingData and either the Zone or "
          "ZoneAlias. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 AddZoneMembershipSettingData(
         [Required, IN, Description ( 
             "A reference to the Zone or ZoneAlias that the "
             "ZoneMembershipSettingData is to be added to." )]
      CIM_SystemSpecificCollection REF SystemSpecificCollection, 
         [IN, Description ( 
             "A reference to the ZoneMembershipSettingData that "
             "is to be added to the Zone or ZoneAlias." )]
      CIM_ZoneMembershipSettingData REF ZoneMembershipSettingData);

      [Description ( 
          "Adds to the Zone the specified ZoneAlias. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Already_Exists", "Insufficient_Resources", 
          "DMTF_Reserved", "Method_Reserved", "Vendor_Reserved" }]
   uint32 AddZoneAlias(
         [Required, IN, Description ( 
             "A reference to the Zone that the ZoneAlias is to be added to."
              )]
      CIM_Zone REF Zone, 
         [IN, Description ( 
             "A reference to the ZoneAlias that is to be added to the Zone."
              )]
      CIM_NamedAddressCollection REF ZoneAlias);

      [Description ( 
          "Activates the specified ZoneSet. After the ZoneSet is "
          "activated, the ZoneSet, associated Zone, ZoneAliases, "
          "and ZoneMembershipSettingData instances will have the "
          "active flag set to true. \n"
          "\n"
          "This method might be deprecated in the future in lieu of "
          "intrinsics after limitations in the CIM Operations are "
          "addressed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Not_Found", "Insufficient_Resources", "DMTF_Reserved", 
          "Method_Reserved", "Vendor_Reserved" }]
   uint32 ActivateZoneSet(
         [Required, IN, Description ( 
             "A reference to the ZoneSet to be activated." )]
      CIM_ZoneSet REF ZoneSet, 
         [Required, IN, Description ( 
             "Activate indicates whether the references to "
             "ZoneSet should be activated (Active=true) or "
             "deactivated (Active=false)." )]
      boolean Activate);

      [Description ( 
          "SessionControl requests that a session start (value=2), "
          "end (value=3), or terminate (value=4)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "9", 
          "10..0x0FFF", "0x1000..0x7777", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "Access_Denied", 
          "Insufficient_Resources", "DMTF_Reserved", 
          "Method_Reserved", "Vendor_Reserved" }]
   uint32 SessionControl(
         [IN, Description ( 
             "RequestedSessionState is an integer enumeration "
             "that indicates whether the ZoneService session has "
             "been requested to start (value=2), end (value=3), "
             "or terminate (value=4)." ), 
          ValueMap { "2", "3", "4" }, 
          Values { "Start", "End", "Terminate" }, 
          ModelCorrespondence { 
             "CIM_ZoneService.RequestedSessionState" }]
      uint16 RequestedSessionState);

};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::Event" ), 
    Description ( 
       "An IndicationService is a Service of the CIM Object Manager "
       "that is responsible for delivering indications to Indication "
       "Handlers." )]
class CIM_IndicationService : CIM_Service {

      [Description ( 
          "The FilterCreationEnabled property controls whether or "
          "not clients can create indication filters. If this value "
          "is set to false, only the indication filters that exist "
          "can be subscribed to. If this value is true clients may "
          "attempt to create filters. Note that implementations may "
          "preset this setting and not allow this value to be "
          "modified." )]
   boolean FilterCreationEnabled = false;

      [Description ( 
          "Defines the number of retries that the indication "
          "service will try to deliver an indication to a "
          "particular listener destination. This does not effect "
          "the original delivery attempt, thus if set to 0, it will "
          "only try to deliver the indication once. Note that "
          "implementations may preset this setting and not allow "
          "this value to be modified." ), 
       MinValue ( 0 ), 
       ModelCorrespondence { 
          "CIM_IndicationService.DeliveryRetryInterval" }]
   uint16 DeliveryRetryAttempts = 3;

      [Description ( 
          "Defines the minimal time interval in seconds for the "
          "indication service to use before delivering an "
          "indication to a particular listener destination that "
          "previously failed. The implementation may take longer "
          "due to QoS or other processing. Note that "
          "implementations may preset this setting and not allow "
          "this value to be modified." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.DeliveryRetryAttempts" }, 
       PUnit ( "Seconds" )]
   uint32 DeliveryRetryInterval = 30;

      [Description ( 
          "Defines the removal action for subscriptions that have "
          "two failed indication deliveries without any successful "
          "indication deliveries in between and the time between "
          "the failed deliveries exceeded the timeout defined in "
          "the SubscriptionRemovalTimeInterval property. \"Remove\" "
          "defines the subscription is to be removed.\n"
          "\"Disable\" indicates that subscription removal process "
          "isnot being enforced. \n"
          "\"Ignore\" indicates that the removal action is "
          "temporarily not enforced. implementations may preset "
          "this setting and not allow this value to be modified." ), 
       ValueMap { "2", "3", "4", ".." }, 
       Values { "Remove", "Disable", "Ignore", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_IndicationService.SubscriptionRemovalTimeInterval" }]
   uint16 SubscriptionRemovalAction;

      [Description ( 
          "Minimum time between two failed indication deliveries "
          "without any successful indication deliveries in between "
          "before the SubscriptionRemovalPolicy goes into effect." ), 
       ModelCorrespondence { 
          "CIM_IndicationService.SubscriptionRemovalAction" }, 
       PUnit ( "Seconds" )]
   uint32 SubscriptionRemovalTimeInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "IdentificationOfManagedSystem is an association that links the "
       "SystemIdentification object to the CIM_System(s) that are "
       "being identified and represented in the Namespace." )]
class CIM_IdentificationOfManagedSystem : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The System which is identified." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The SystemIdentification information." )]
   CIM_SystemIdentification REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "The class, ObjectManagerCommunicationMechanism, describes "
       "access to an ObjectManager. It describes a protocol and data "
       "encoding that can be used for communication. When all "
       "instances of this class are enumerated for an ObjectManager "
       "(using the CommMechanismForManager association), all possible "
       "protocol and encoding schemes will be known. Also, specific "
       "capabilities (for example, basic read or query) that are "
       "supported in the protocol/encoding are described - using the "
       "ProfilesSupported property." )]
class CIM_ObjectManagerCommunicationMechanism : CIM_ServiceAccessPoint {

      [Required, Description ( 
          "CommunicationMechanism describes an encoding and "
          "protocol which can be used to communicate with the "
          "server. ObjectManager, the specified string should be "
          "indicated. If Other is used, the value "
          "forOtherCommunicationMechanismDescription must not be "
          "null." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "CIM-XML", "SM-CLP", 
          "WS-Management", "WSDM" }, 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.OtherCommunicationMechanismDescription" }]
   uint16 CommunicationMechanism;

      [Description ( 
          "A free-form string providing a description of the "
          "supported protocols when 1, \"Other\", is specified in "
          "the CommunicationMechanism." ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.CommunicationMechanism" }]
   string OtherCommunicationMechanismDescription;

      [Required, Description ( 
          "Enumerated array describing the types of operations "
          "supported by the ObjectManager, using this "
          "encoding/protocol. The enumeration is based on the "
          "Functional Profiles defined for conformance in the DMTF "
          "document, Specification for CIM Operations over HTTP." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12" }, 
       Values { "Unknown", "Other", "Basic Read", "Basic Write", 
          "Schema Manipulation", "Instance Manipulation", 
          "Association Traversal", "Query Execution", 
          "Qualifier Declaration", "Indications", "Pulled Read", 
          "Pulled Read Count", "Pulled Query Execution" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.FunctionalProfileDescriptions" }]
   uint16 FunctionalProfilesSupported[];

      [Description ( 
          "Free-form strings providing descriptions of the "
          "supported operations of the object manager. Entries in "
          "the array are correlated with those in the "
          "ProfilesSupported array. An entry in this Descriptions "
          "array MUST be provided when 1, \"Other\", is specified "
          "in the FunctionalProfilesSupported array." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.FunctionalProfilesSupported" }]
   string FunctionalProfileDescriptions[];

      [Required, Description ( 
          "Boolean indicating whether the ObjectManager supports "
          "multiple operation requests (TRUE) or only simple "
          "requests (FALSE)." )]
   boolean MultipleOperationsSupported;

      [Required, Description ( 
          "Enumerated array describing the types of authentication "
          "supported by the ObjectManager, using the "
          "encoding/protocol. specified in the property, "
          "CommunicationMechanism. The defined values represent the "
          "authentication defined in the DMTF document, "
          "Specification for CIM Operations over HTTP." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "None", "Basic", "Digest" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.AuthenticationMechanismDescriptions" }]
   uint16 AuthenticationMechanismsSupported[];

      [Description ( 
          "Free-form strings providing descriptions of the "
          "supported mechanisms. Entries in this array are "
          "correlated with those in the "
          "AuthenticationMechanismsSupported array. An entry in "
          "this Descriptions array MUST be provided when 1, "
          "\"Other\", is specified in "
          "AuthenticationMechanismsSupported." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.AuthenticationMechanismsSupported" }]
   string AuthenticationMechanismDescriptions[];

      [Required, Description ( 
          "Provides the protocol version for this service access "
          "point. Version information MUST be in the form of M.N, "
          "where M is a numeric that describes the Major version "
          "and N is a numeric that describes the minor version." )]
   string Version;

      [Required, Description ( 
          "This property signifies the advertisement for this "
          "access point. . It is used by the advertising services "
          "of the WBEM infrastructure to determine what should be "
          "advertised, via what mechanisms. The property is an "
          "array so that the communicationMechansim MAY be "
          "advertised using several mechanisms. Note: If this "
          "property is null/uninitialized, this is equivalent to "
          "specifying the value 2, \"Not Advertised\"." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Not Advertised", "SLP" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.AdvertiseTypeDescriptions" }]
   uint16 AdvertiseTypes[];

      [Description ( 
          "A free-form string providing additional information "
          "related to the AdvertiseType. A description MUST be "
          "provided when the AdvertiseType is 1, \"Other\". An "
          "entry in this array corresponds to the entry in the "
          "AdvertiseTypes array at the same index. It is not "
          "expected that additional descriptions are needed if the "
          "Type is set to \"Not Advertised\" or \"SLP\". However, "
          "as the SLP template expands, or as other advertisement "
          "mechanisms are defined, support for additional "
          "descriptions may be needed. This array is defined to "
          "support this." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ObjectManagerCommunicationMechanism.AdvertiseTypes" }]
   string AdvertiseTypeDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "An abstract class for WBEM services such as the ObjectManager "
       "(CIM Server), Providers, protocol adapters, or other pluggable "
       "components. A type of CIM_Service that provides associated "
       "capabilities and details about the communication capabilities, "
       "namespaces, etc. for a specific WBEMService." )]
class CIM_WBEMService : CIM_Service {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "ContainedTransform associates a proposal with a list of "
       "transforms. If multiple transforms of a given type are "
       "included in a proposal, these transforms are interpreted as "
       "alternatives -- i.e., logically ORed with each other. The "
       "order of preference is dictated by the SequenceNumber "
       "property. Sets of transforms of different types are logically "
       "ANDed. For example, a proposal based on two AH transforms and "
       "three ESP transforms means one of the AH AND one of the ESP "
       "transforms MUST be chosen. Note that at least 1 transform MUST "
       "be aggregated into the proposal." ), 
    MappingStrings { "IPSP Policy Model.IETF|ContainedTransform" }]
class CIM_ContainedTransform : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The Proposal containing the transforms." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedTransform.GroupComponent" }]
   CIM_IPsecProposal REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( "Transforms in the proposal." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedTransform.PartComponent" }]
   CIM_SATransform REF PartComponent;

      [Description ( 
          "SequenceNumber indicates the order of preference for "
          "SATransforms of the same type. Lower-valued transforms "
          "are preferred over transforms of the same type with "
          "higher values. For ContainedTransforms (of the same "
          "type) that reference the same IPsecProposal, "
          "SequenceNumber values MUST be unique." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|ContainedTransform.SequenceNumber" }]
   uint16 SequenceNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IKERule contains the Conditions and Actions for IKE phase 1 "
       "negotiations or to specify static actions such as Discard." ), 
    MappingStrings { "IPSP Policy Model.IETF|IKERule" }]
class CIM_IKERule : CIM_SARule {

      [Description ( 
          "An IP endpoint may have multiple identities for use in "
          "different situations. The IdentityContext property "
          "specifies the specific context/identities which pertain "
          "to this Rule. The property\'s function is similar to "
          "that of PolicyRoles. A context may be a VPN name or "
          "other identifier that selects the appropriate identity. \n"
          "\n"
          "IdentityContext is an array of strings. The multiple "
          "values in the array are logically ORed together in "
          "matching an IPNetworkIdentity\'s IdentityContext. Each "
          "value in the array may be a composition of multiple "
          "context names. When an array value is a composition, the "
          "individual values are logically ANDed together for "
          "evaluation purposes. The syntax is: \n"
          "<ContextName>[&&<ContextName>]* \n"
          "where the individual context names appear in "
          "alphabetical order (according to the collating sequence "
          "for UCS-2). So, for example, the values \'CompanyXVPN\', "
          "\'CompanyYVPN&&TopSecret\', \'CompanyZVPN&&Confidential\' "
          "are possible contexts for a Rule. They are matched "
          "against an IPNetworkIdentity\'s IdentityContext. Any of "
          "the values may indicate a match and select an Identity, "
          "since the values in the array are logically ORed." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IKERule.IdentityContexts" }, 
       ModelCorrespondence { "CIM_IdentityContext" }]
   string IdentityContexts[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IPsecPolicyForSystem associates a PolicyGroup with a specific "
       "system (e.g., a host or a network device) - indicating that "
       "this is the \'default\' IPsec policy for that system. The "
       "referenced PolicyGroup would be used for any "
       "IPProtocolEndpoint\'s IPsec negotiations, UNLESS the "
       "IPsecPolicyForEndpoint association is defined. "
       "IPsecPolicyForEndpoint indicates a more specific PolicyGroup "
       "for IPsec negotiations for the endpoint." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecPolicyForSystem" }]
class CIM_IPsecPolicyForSystem : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "A System to which the PolicyGroup applies." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecPolicyForSystem.Antecedent" }]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( 
          "The PolicyGroup that defines the \'default\' IPsec "
          "negotiation policy for the System." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecPolicyForSystem.Dependent" }]
   CIM_PolicyGroup REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IPsecRule contains the Conditions and Actions for phase 2 "
       "negotiations or to specify static actions such as Discard." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecRule" }]
class CIM_IPsecRule : CIM_SARule {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "PacketConditionInSARule aggregates an SARule with at least one "
       "instance of PacketFilterCondition. This is a specialization of "
       "the PolicyConditionInPolicyRule association." ), 
    MappingStrings { "IPSP Policy Model.IETF|SAConditionInRule" }]
class CIM_PacketConditionInSARule : CIM_PolicyConditionInPolicyRule {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "An SARule subclass of PolicyRule." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|SAConditionInRule.GroupComponent" }]
   CIM_SARule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( 
          "An SACondition that is required for the SARule." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|SAConditionInRule.PartComponent" }]
   CIM_PacketFilterCondition REF PartComponent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Metrics::BaseMetric" ), 
    Description ( 
       "CIM_MetricService provides the ability to manage metrics. For "
       "each metric that the service manages, there shall be an "
       "instance of CIM_ServiceAffectsElement that associates the "
       "CIM_MetricService to the instance of CIM_BaseMetricDefinition "
       "that defines the metric, where the value of the "
       "CIM_ServiceAffectsElement.ElementAffects property is 5 "
       "\"Manages\". The capabilities of the CIM_MetricService "
       "instance are advertised through an instance of "
       "CIM_MetricServiceCapabilities associated with the "
       "CIM_MetricService instance through CIM_ElementCapabilities." )]
class CIM_MetricService : CIM_Service {


      [Description ( 
          "ShowMetrics reports the Metrics available to be "
          "collected for a ManagedElement, the ManagedElements for "
          "which a metric defined by an instance of "
          "CIM_BaseMetricDefinition is available to be collected, "
          "and whether or not a particular metric is currently "
          "being collected for a ManagedElement. \n"
          "If the Subject parameter is specified and the Definition "
          "parameter is NULL, upon successful completion of the "
          "method, the DefinitionList[] parameter shall contain a "
          "reference to an instance of CIM_BaseMetricDefinition for "
          "each instance of CIM_BaseMetricDefinition to which the "
          "instance of CIM_ManagedElement identified by the Subject "
          "parameter is associated through CIM_MetricDefForME where "
          "the CIM_BaseMetricDefinition instance is associated to "
          "the CIM_MetricService instance through "
          "CIM_ServiceAffectsElement, the MetricCollectionEnabled "
          "parameter shall contain a value corresponding to the "
          "value of the MetricCollectionEnabled property of the "
          "instance of CIM_MetricDefForME that associates the "
          "CIM_ManagedElement identified by the Subject parameter "
          "with the CIM_BaseMetricDefinition for which a reference "
          "is returned in the DefinitionList parameter at the same "
          "array index.\n"
          "If the Definition parameter is non-NULL and the Subject "
          "parameter is NULL, upon successful completion of the "
          "method the ManagedElements parameter shall contain a "
          "reference to each CIM_ManagedElement instance to which "
          "the CIM_BaseMetricDefinition instance referenced by the "
          "Definition parameteris associated through "
          "CIM_MetricDefForME and the MetricCollectionEnabled "
          "parameter shall contain a value corresponding to the "
          "value of the MetricCollectionEnabled property of the "
          "instance of CIM_MetricDefForME that associates the "
          "CIM_BaseMetricDefinition identified by the Definition "
          "parameter with the CIM_ManagedElement for which a "
          "reference is returned in the ManagedElements parameter "
          "at the same array index as the reference to the CIM_ManagedElement.\n"
          "If the Subject parameter and Definition parameter are "
          "both non-NULL, the method shall return NULL values for "
          "the DefinitionList and ManagedElements parameters, and "
          "the MetricCollectionEnabled parameter shall contain a "
          "single value that corresponds to the value of the "
          "MetricCollectionEnabled property of the instance of "
          "CIM_MetricDefForME that associates the instance of "
          "CIM_ManagedElement identified by the Subject parameter "
          "with the instance of CIM_BaseMetricDefinition identified "
          "by the Definition parameter. If the Subject and "
          "Definition parameters are both NULL, the method shall "
          "return 2 \"Failed\". If the Definition parameter is a "
          "reference to an instance of CIM_BaseMetricDefinition "
          "that is not associated to the CIM_MetricService through "
          "CIM_ServiceAffectsElement, the method shall return 2 "
          "\"Failed\". If the Subject parameter does not identify a "
          "single instance the Method shall return 2 \"Failed\"." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ShowMetrics(
         [IN, Description ( 
             "The Subject parameter identifies an instance of "
             "CIM_ManagedElement for which the method returns "
             "references to instances of "
             "CIM_BaseMetricDefinition that define metrics that "
             "are being captured for the CIM_ManagedElement." )]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "The Definition parameter identifies an instance of "
             "CIM_BaseMetricDefintion. The method returns "
             "references to instances of CIM_ManagedElement for "
             "which metrics defined by the instance of "
             "CIM_BaseMetricDefinition are available to be "
             "collected." )]
      CIM_BaseMetricDefinition REF Definition, 
         [IN ( false ), OUT, Description ( 
             "Upon successful completion of the method, the "
             "ManagedElements[] parameter may contain references "
             "to CIM_ManagedElements for which the metric "
             "identified by Definition parameter is available "
             "for collection." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_MetricService.ShowMetrics.DefinitionList" }]
      CIM_ManagedElement REF ManagedElements[], 
         [IN ( false ), OUT, Description ( 
             "Upon successful completion of the method, the "
             "DefinitionList parameter may contain references to "
             "instances of CIM_BaseMetricDefinitions that define "
             "metrics available for collection for the "
             "CIM_ManagedElement identified by the Subject "
             "parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_MetricService.ShowMetrics.ManagedElements" }]
      CIM_BaseMetricDefinition REF DefinitionList[], 
         [IN ( false ), OUT, Description ( 
             "Upon successful completion of the method, each "
             "array index of the MetricNames parameter shall "
             "contain the value of the Name property for the "
             "instance of CIM_BaseMetricDefinition referenced by "
             "the corresponding array index of the "
             "DefinitionList parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_MetricService.ShowMetrics.DefinitionList" }]
      string MetricNames[], 
         [IN ( false ), OUT, Description ( 
             "The MetricCollectionEnabled parameter indicates "
             "whether a metric is being collected for a managed "
             "element." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "Enable", "Disable", "Reserved", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 MetricCollectionEnabled[]);

      [Description ( 
          "ShowMetricsByClass reports the Metrics available to be "
          "collected for all instances of a CIM class. The CIM "
          "classes for which a metric defined by an instance of "
          "CIM_BaseMetricDefinition is available to be collected, "
          "and whether or not a particular metric is currently "
          "being collected for a ManagedElement. \n"
          "If the Subject parameter is specified and the Definition "
          "parameter is NULL, upon successful completion of the "
          "method, the DefinitionList[] parameter shall contain a "
          "reference to an instance of CIM_BaseMetricDefinition for "
          "each instance of CIM_BaseMetricDefinition that is "
          "associated with all instances of the class identified by "
          "the Subject parameter, where the "
          "CIM_BaseMetricDefinition instance is associated to the "
          "CIM_MetricService instance through "
          "CIM_ServiceAffectsElement; the MetricCollectionEnabled "
          "parameter shall contain the value 2 \"Enabled\" if the "
          "value of the MetricCollectionEnabled property has the "
          "value 2 \"Enabled\" for every instance of "
          "CIM_MetricDefForME that associates the "
          "CIM_ManagedElement identified by the Subject parameter "
          "with the CIM_BaseMetricDefinition for which a reference "
          "CIM_BaseMetricDefinition is returned in the "
          "DefinitionList parameter at the same array index as the "
          "reference and the MetricCollectionEnabled parameter "
          "shall contain the value 3 \"Disabled\" if the value of "
          "the MetricCollectionEnabled property does not have the "
          "value 2 \"Enabled\" for every instance of "
          "CIM_MetricDefForME that associates the "
          "CIM_ManagedElement identified by the Subject parameter "
          "with the CIM_BaseMetricDefinition for which a reference "
          "CIM_BaseMetricDefinition is returned in the "
          "DefinitionList parameter at the same array index as the "
          "reference. \n"
          "If the Subject parameter and Definition parameter are "
          "both non-NULL, the method shall return NULL value for "
          "the DefinitionList parameter and the "
          "MetricCollectionEnabled parameter shall contain a single "
          "value that corresponds to the value of the "
          "MetricCollectionEnabled property of the instance of "
          "CIM_MetricDefForME that associates the instance of "
          "CIM_ManagedElement identified by the Subject parameter "
          "with the instance of CIM_BaseMetricDefinition identified "
          "by the Definition parameter. If the Subject and "
          "Definition parameters are both NULL, the method shall "
          "return 2 \"Failed\". If the Definition parameter is a "
          "reference to an instance of CIM_BaseMetricDefinition "
          "that is not associated to the CIM_MetricService through "
          "CIM_ServiceAffectsElement, the method shall return 2 "
          "\"Failed\". If the Subject parameter does not identify a "
          "single CIM Class the Method shall return 2 \"Failed\"." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ShowMetricsByClass(
         [Required, IN, Description ( 
             "The Subject parameter identifies a CIM class for "
             "which the method returns references to instances "
             "of CIM_BaseMetricDefinition that define metrics "
             "that are available to be captured for all "
             "instances of the class." )]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "The Definition parameter identifies an instance of "
             "CIM_BaseMetricDefinition. The method returns "
             "references to instances of CIM_ManagedElement for "
             "which metrics defined by the instance of "
             "CIM_BaseMetricDefinition are available to be "
             "collected." )]
      CIM_BaseMetricDefinition REF Definition, 
         [IN ( false ), OUT, Description ( 
             "Upon successful completion of the method, the "
             "DefinitionList parameter may contain references to "
             "instances of CIM_BaseMetricDefinitions that define "
             "metrics available for collection for the "
             "CIM_ManagedElement identified by the Subject "
             "parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_MetricService.ShowMetricsByClass.ManagedElements" }]
      CIM_BaseMetricDefinition REF DefinitionList[], 
         [IN ( false ), OUT, Description ( 
             "Upon successful completion of the method, each "
             "array index of the MetricNames parameter shall "
             "contain the value of the Name property for the "
             "instance of CIM_BaseMetricDefinition referenced by "
             "the corresponding array index of the "
             "DefinitionList parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_MetricService.ShowMetricsByClass.DefinitionList" }]
      string MetricNames[], 
         [IN ( false ), OUT, Description ( 
             "The MetricCollectionEnabled parameter indicates "
             "whether a metric is being collected for all "
             "instances of a class of managed elements." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "Enabled", "Disabled", "Reserved", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 MetricCollectionEnabled[]);

      [Description ( 
          "ControlMetrics enables and disables the collection of "
          "metrics. It is used to control the collection of each "
          "type of metric for a CIM_ManagedElement, the collection "
          "of a given type of metric for all ManagedElements, or "
          "the collection of a specific metric for a specific "
          "ManagedElement. \n"
          "If the Subject parameter is specified and the Definition "
          "parameter is NULL and the MetricCollectionEnabled "
          "parameter has the value 2 \"Enabled\" or 3 \"Disabled\", "
          "upon successful completion of the method, the "
          "MetricCollectionEnabled property of each instance of "
          "CIM_MetricDefForME that references the instance of "
          "CIM_ManagedElement identified by the Subject parameter "
          "and references an instance of CIM_BaseMetricDefinition "
          "that is associated to the CIM_BaseMetricService through "
          "the CIM_ServiceAffectsElement association shall have the "
          "value of the MetricCollectionEnabled parameter. If the "
          "Subject parameter is specified and the Definition "
          "parameter is NULL and the value of the "
          "MetricCollectionEnabled parameter is 4 \"Reset\" upon "
          "successful completion of the method, the value of the "
          "MetricCollectionEnabled of each instance of "
          "CIM_MetricDefForME that references the instance of "
          "CIM_ManagedElement identified by the Subject parameter "
          "and references an instance of CIM_BaseMetricDefinition "
          "that is associated to the CIM_BaseMetricService through "
          "the CIM_ServiceAffectsElement association shall "
          "transition to 3 \"Disabled\" then to 2 \"Enabled\". If "
          "the Definition parameter is non-NULL and the Subject "
          "parameter is NULL, and the MetricCollectionEnabled "
          "parameter has the value 2 \"Enabled\" or 3 \"Disabled\", "
          "upon successful completion of the method the "
          "MetricCollectionEnabled property of each instance of "
          "CIM_MetricDefForME that references the instance of "
          "CIM_BaseMetricDefinition identified by the Definition "
          "parameter shall have the value of the "
          "MetricCollectionEnabled parameter. If the Definition "
          "parameter is non-NULL and the Subject parameter is NULL, "
          "and the value of the MetricCollectionEnabled parameter "
          "is 4 \"Reset\" upon successful completion of the method "
          "the MetricCollectionEnabled property of each instance of "
          "CIM_MetricDefForME that references the instance of "
          "CIM_BaseMetricDefinition identified by the Definition "
          "parameter shall transition to 3 \"Disabled\" then to 2 "
          "\"Enabled\". If the Subject parameter and Definition "
          "parameter are both non-NULL, and the "
          "MetricCollectionEnabled parameter has the value 2 "
          "\"Enable\" or 3 \"Disable\", upon successful completion "
          "of the method, the MetricCollectionEnabled property of "
          "the instance of CIM_MetricDefForME that references the "
          "instance of CIM_ManagedElement identified by the Subject "
          "parameter and references the instance of "
          "CIM_BaseMetricDefinition identified by the Definition "
          "parameter shall have the value of the "
          "MetricCollectionEnabled parameter.\n"
          "If the Subject parameter and Definition parameter are "
          "both non-NULL and the value of the "
          "MetricCollectionEnabled parameter is 4 \"Reset\" upon "
          "successful completion of the method, the "
          "MetricCollectionEnabled property of the instance of "
          "CIM_MetricDefForME that references the instance of "
          "CIM_ManagedElement identified by the Subject parameter "
          "and references the instance of CIM_BaseMetricDefinition "
          "identified by the Definition parameter shall transition "
          "to 3 \"Disabled\" then to 2 \"Enabled\". If the Subject "
          "parameter and Definition parameter are both non-NULL and "
          "there is not an instance of CIM_MetricDefForME that "
          "associates the two instances, the method shall return 2 "
          "\"Failed\". If the Subject and Definition parameters are "
          "both NULL, the method shall return 2 \"Failed\". If the "
          "Definition parameter is a reference to an instance of "
          "CIM_BaseMetricDefinition that is not associated to the "
          "CIM_MetricService through CIM_ServiceAffectsElement, the "
          "method shall return 2 \"Failed\". If the Subject "
          "parameter does not identify a single instance the Method "
          "shall return 2 \"Failed\"." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ControlMetrics(
         [IN, Description ( 
             "The Subject parameter identifies managed "
             "element(s) for which metrics will be controlled." )]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "The Definition parameter identifies a "
             "CIM_BaseMetricDefinition for which metrics will be "
             "controlled." )]
      CIM_BaseMetricDefinition REF Definition, 
         [Required, IN, Description ( 
             "The MetricCollectionEnabled parameter indicates "
             "the desired operation to perform on the metrics." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "Enable", "Disable", "Reset", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint16 MetricCollectionEnabled);

      [Description ( 
          "ControlMetricsByClass enables and disables the "
          "collection of metrics. It is used to control the "
          "collection of each type of metric for all instances of a "
          "class or the collection of a specific metric for all "
          "instances of a class. \n"
          "If the Definition parameter is NULL, and the "
          "MetricCollectionEnabled parameter has the value 2 "
          "\"Enabled\" or 3 \"Disabled\", upon successful "
          "completion of the method, the MetricCollectionEnabled "
          "property of each instance of CIM_MetricDefForME that "
          "references an instance of the class identified by the "
          "Subject parameter and references an instance of "
          "CIM_BaseMetricDefinition that is associated to the "
          "CIM_BaseMetricService through the "
          "CIM_ServiceAffectsElement association shall have the "
          "value of the MetricCollectionEnabled parameter. If the "
          "Definition parameter is NULL, and the "
          "MetricCollectionEnabled parameter has the value 4 "
          "\"Reset\", upon successful completion of the method, the "
          "MetricCollectionEnabled property of each instance of "
          "CIM_MetricDefForME that references an instance of the "
          "class identified by the Subject parameter and references "
          "an instance of CIM_BaseMetricDefinition that is "
          "associated to the CIM_BaseMetricService through the "
          "CIM_ServiceAffectsElement association shall transition "
          "to 3 \"Disabled\" then to 2 \"Enabled\". If the "
          "Definition parameter is non-NULL, and the "
          "MetricCollectionEnabled parameter has the value 2 "
          "\"Enable\" or 3 \"Disable\", upon successful completion "
          "of the method the MetricCollectionEnabled property of "
          "each instance of CIM_MetricDefForME that references the "
          "instance of CIM_BaseMetricDefinition identified by the "
          "Definition parameter and references an instance of the "
          "class identified by the Subject parameter shall have the "
          "value of the MetricCollectionEnabled parameter. If the "
          "Definition parameter is non-NULL, and the "
          "MetricCollectionEnabled parameter has the value 4 "
          "\"Reset\", upon successful completion of the method the "
          "MetricCollectionEnabled property of each instance of "
          "CIM_MetricDefForME that references the instance of "
          "CIM_BaseMetricDefinition identified by the Definition "
          "parameter and references an instance of the class "
          "identified by the Subject parameter shall transition to "
          "3 \"Disabled\" then to 2 \"Enabled\". For each instance "
          "of the class identified by the Subject parameter, if "
          "there is not an instance of CIM_MetricDefForME that "
          "associates the CIM_BaseMetricDefinition instance "
          "identified by the Definition parameter to the instance, "
          "the method shall return 2 \"Failed\". If the Subject and "
          "Definition parameters are both NULL, the method shall "
          "return 2 \"Failed\". If the Definition parameter is a "
          "reference to an instance of CIM_BaseMetricDefinition "
          "that is not associated to the CIM_MetricService through "
          "CIM_ServiceAffectsElement, the method shall return 2 "
          "\"Failed\". If the Subject parameter does not identify a "
          "single CIM Class the Method shall return 2 \"Failed\"." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ControlMetricsByClass(
         [Required, IN, Description ( 
             "The Subject parameter identifies the CIM class for "
             "which metrics will be controlled." )]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "The Definition parameter identifies a "
             "CIM_BaseMetricDefinition for which metrics will be "
             "controlled." )]
      CIM_BaseMetricDefinition REF Definition, 
         [Required, IN, Description ( 
             "The MetricCollectionEnabled parameter indicates "
             "the desired operation to perform on the metrics." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "Enable", "Disable", "Reset", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint16 MetricCollectionEnabled);

      [Description ( 
          "GetMetricValues provides the ability to return a "
          "filtered list of CIM_BaseMetricValue instances. \n"
          "If the Definition parameter is NULL, the method shall "
          "return 2 \"Failed\". If the Definition parameter is a "
          "reference to an instance of CIM_BaseMetricDefinition "
          "with which the CIM_MetricService is not associated "
          "through CIM_ServiceAffectsElement, the method shall "
          "return 2 \"Failed\"." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 GetMetricValues(
         [Required, IN, Description ( 
             "The Definition parameter identifies a "
             "CIM_BaseMetricDefinition for which metrics will be "
             "returned." )]
      CIM_BaseMetricDefinition REF Definition, 
         [IN, Description ( 
             "The Range parameter identifies how the instances "
             "are selected. The algorithm for ordering value "
             "instances is metric definition specific." ), 
          ValueMap { "2", "3", "..", "32768..65535" }, 
          Values { "Minimum", "Maximum", "DMTF Reserved", 
             "Vendor Specific" }]
      uint16 Range, 
         [IN, Description ( 
             "The Count parameter identifies the maximum number "
             "of instances to to be returned by the method." )]
      uint16 Count, 
         [IN ( false ), OUT, Description ( 
             "Upon successful completion of the method, the "
             "Values parameter contains references to instances "
             "of CIM_BaseMetricValue, filteredaccording to the "
             "values of the input parameters." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_MetricService.ShowMetrics.ManagedElements" }]
      CIM_BaseMetricValue REF Values[]);

      [Description ( 
          "Method used to allow specification of the point in time "
          "metric gathering is to be started and to specify the "
          "preferred sample interval time for periodic data "
          "gathering. \n"
          "Whenever sampling for additional metrics is started, the "
          "settings specified by this method may be used." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ControlSampleTimes(
         [Required, IN, Description ( 
             "Point in time when sampling for the metrics is to "
             "be started. \n"
             "A value of 99990101000000.000000+000 shall "
             "indicate that sampling should start at the next "
             "time it is synchronized to the full hour. Sampling "
             "is synchronized to the full hour if seconds since "
             "midnight modulo sample interval in seconds is "
             "equal to 0." )]
      datetime StartSampleTime, 
         [Required, IN, Description ( 
             "Preferred sample interval time. In order to get "
             "correlatable metrics, it is recommended that the "
             "sample interval be chosen in a way that 3600 "
             "modulo sample interval time in seconds is equal to "
             "0. \n"
             "It is the responsibility of the CIM metric service "
             "implementation to decide whether the requested "
             "sample interval time is honored. \n"
             "The CIM client can check whether or not the metric "
             "providers are honoring the requested sample "
             "interval time by retrieving related "
             "BaseMetricDefinition instances and checking the "
             "contents of the "
             "\"CIM_BaseMetricDefinition.SampleInterval\" "
             "property." )]
      datetime PreferredSampleInterval, 
         [Required, IN, Description ( 
             "Boolean that when set to TRUE requests that "
             "gathering of all metrics associated to the metric "
             "service is re-started with this method call." )]
      boolean RestartGathering);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPIPRoute 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "BGPIPRoute describes a BGP routing entry that connects two "
       "peer routers that are running BGP. The source and destination "
       "addresses may be either specific IP endpoints or IP subnets. "
       "Examining the BGPIPRoute class definition, note that its "
       "superclass IPRoute is deprecated. Unfortunately, IPRoute "
       "cannot be removed from the object hierarchy without a major "
       "Schema release. When/if this occurs, the IPRoute superclass "
       "will be removed, and BGPIPRoute will subclass from "
       "CIM_NextHopRouting directly." )]
class CIM_BGPIPRoute : CIM_IPRoute {

      [Description ( 
          "Usually, the administrative distance is used to "
          "determine which route gets installed in the routing "
          "table. Using this scheme, routes learned via EBGP will "
          "win over routes learned via an IGP. If this is not "
          "desired, then this assigns the administrative distance "
          "of this route to be equal to that of a local route, "
          "which means that the same route learned by an IGP will "
          "have a lower administrative distance and be installed "
          "instead." )]
   boolean IsBackDoorRoute;

      [Description ( 
          "Loopback interfaces are often used by IBGP peers, "
          "because they eliminate a dependency that would otherwise "
          "occur if the actual IP address of a physical interface "
          "was used to configure BGP. The loopback interface "
          "instead instructs the router to use any available "
          "interface." )]
   boolean UsesLoopbackPeering;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConditioningService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "ConditioningService represents the ability to define how "
       "traffic is conditioned in the data-forwarding path of a "
       "device. The subclasses of ConditioningService define the "
       "particular types of conditioning that are done. These are the "
       "services performed by a classifier, a meter, a marker, a "
       "dropper, a queue, and a scheduler. Other, more sophisticated "
       "types of conditioning may be defined in the future. \n"
       "\n"
       "ConditioningService is a concrete class because its superclass "
       "(ForwardingService) is concrete. While this class can be "
       "instantiated, an instance of it does not accomplish anything, "
       "because the nature of the conditioning, and the parameters "
       "that control it, are specified only in the subclasses of "
       "ConditioningService. \n"
       "\n"
       "Two associations in which ConditioningService participates are "
       "critical to its usage in QoS - QoSConditioningSubService and "
       "NextService. QoSConditioningSubService aggregates "
       "ConditioningServices into a particular QoS service (such as "
       "AF), to describe the specific conditioning functionality that "
       "underlies that QoSService in a particular device. NextService "
       "indicates the subsequent conditioning service(s) for different "
       "traffic streams." )]
class CIM_ConditioningService : CIM_Service {

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "This property is a boolean that, if TRUE, signifies that "
          "one or more conditioning functions can be performed on "
          "traffic encountered by this ConditioningService. This "
          "allows one or more ConditioningServices to be enabled or "
          "disabled to provide different types of conditioning for "
          "traffic. Enabled is deprecated in lieu of a similar (but "
          "more generally and completely defined) property which is "
          "inherited." )]
   boolean Enabled;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DropperService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "DropperService represents the ability to selectively drop "
       "network traffic, and/or to invoke another ConditioningService "
       "(indicated using the NextService association) for further "
       "processing of traffic that is not dropped. It is the base "
       "class for different types of droppers. Droppers are "
       "distinguished by the algorithm that they use to drop traffic. \n"
       "\n"
       "The NextService association has special semantics for "
       "droppers, in addition to conveying the general information of "
       "\'what happens next\' (that apply to all Conditioning "
       "Services). The queue(s) from which a particular dropper drops "
       "packets are identified by following chain(s) of NextService "
       "associations \'rightwards\' from the dropper, until they reach "
       "a queue." )]
class CIM_DropperService : CIM_ConditioningService {

      [Description ( 
          "This property is an enumerated 16-bit unsigned integer "
          "that defines the type of dropper. Its Values are: \n"
          "1: Other \n"
          "2: Random \n"
          "3: HeadTail \n"
          "4: Absolute Dropper \n"
          "\n"
          "Note: The DropperType property and the DropperService "
          "subclasses provide similar information. This property is "
          "defined for query purposes and to not require a subclass "
          "for all types of DropperServices (for example, to "
          "describe an Absolute Dropper in today\'s model). "
          "Therefore, DropperService can be instantiated directly "
          "and the Type property is needed." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Random", "HeadTail", "Absolute Dropper" }, 
       ModelCorrespondence { "CIM_DropperService.OtherDropperType" }]
   uint16 DropperType;

      [Description ( 
          "This property contains a vendor-specific value for the "
          "type of dropping that is done. It is used when the value "
          "of the DropperType property is 1 (Other)." ), 
       ModelCorrespondence { "CIM_DropperService.DropperType" }]
   string OtherDropperType;

      [Deprecated { "CIM_DropperService.DropperType" }, 
       Description ( 
          "This property indicates whether the Dropper will always "
          "drop incoming packets (value=1) regardless of their "
          "type. It is deprecated since its information is conveyed "
          "by the DropperType property (value=4, \'Absolute "
          "Dropper\')." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Always Drop", "Do Not Always Drop" }]
   uint16 AlwaysDrop;

      [Description ( 
          "This enumeration indicates the point in the associated "
          "queue (associated via the NextService relationship) from "
          "which packets should be dropped. If the value is 0 "
          "\"Unknown\", then packets MAY be dropped from any "
          "location in the queue." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Head", "Tail" }]
   uint16 DropFrom;

      [Description ( 
          "This property is an enumerated unsigned 16-bit integer "
          "that defines the metric used to trigger the start of "
          "dropping packets. This does NOT mean that all packets "
          "will be dropped; it does mean that SOME packets will "
          "start to be dropped. The number and type of packets "
          "dropped is a function of the type of algorithm used by "
          "this Dropper. Values are: \n"
          "\n"
          "1: Other \n"
          "2: Queue Threshold \n"
          "3: Arrival Rate." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Queue Threshold", "Arrival Rate" }]
   uint16 DropStartMetric;

      [Description ( 
          "This property is an enumerated unsigned 16-bit integer "
          "that defines the metric used to determine when ALL "
          "packets will be dropped REGARDLESS of the type of "
          "algorithm used by this Dropper. Values are: \n"
          "\n"
          "1: Other \n"
          "2: Queue Threshold \n"
          "3: Arrival Rate." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Queue Threshold", "Arrival Rate" }]
   uint16 DropMaintainMetric;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DropThresholdCalculationService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class calculates an average depth for a queue, based on a "
       "smoothing weight and a sampling time interval. The latter are "
       "properties of this Service, describing how it operates and its "
       "necessary parameters. The Service does the calculation on "
       "behalf of a RED dropper (as indicated by the association, "
       "CalculationServiceForDroppper). A "
       "DropThresholdCalculationService is always associated to the "
       "single queue that it examines via the Calculation BasedOnQueue "
       "relationship." )]
class CIM_DropThresholdCalculationService : CIM_Service {

      [Description ( 
          "This property is a 32-bit unsigned integer, ranging "
          "between 0 and 100,000 - specified in thousandths. It "
          "defines the weighting of past history in affecting the "
          "calculation of the current average queue depth. The "
          "current queue depth calculation uses the inverse of this "
          "value as its factor, and one minus that inverse as the "
          "factor for the historical average. The calculation takes "
          "the form: \n"
          "average = (old_average*(1-inverse of SmoothingWeight)) \n"
          "+ (current_queue_depth*inverse of SmoothingWeight) \n"
          "Implementations may choose to limit the acceptable set "
          "of values to a specified set, such as powers of 2." ), 
       Units ( "Thousandths" ), 
       MinValue ( 0 ), 
       MaxValue ( 100000 )]
   uint32 SmoothingWeight;

      [Description ( 
          "This property is a 32-bit unsigned integer, and defines "
          "the number of nanoseconds between each calculation of "
          "average/smoothed queue depth. When this property is not "
          "specified, the CalculationService may determine an "
          "appropriate interval." ), 
       Units ( "NanoSeconds" )]
   uint32 TimeInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HeadTailDropper 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "HeadTailDropper describes the threshold information of a head "
       "or tail dropper. The inherited property DropFrom indicates "
       "whether a particular instance of this class is a head dropper "
       "or a tail dropper. \n"
       "\n"
       "A head dropper always examines the same queue from which it "
       "drops packets, and this queue is always related to the dropper "
       "as the following service in the NextService association." )]
class CIM_HeadTailDropper : CIM_DropperService {

      [Description ( 
          "This is an unsigned 32-bit integer that indicates the "
          "queue depth (in bytes) at which traffic is dropped. For "
          "a tail dropper, all newly arriving traffic is dropped. "
          "For a head dropper, packets at the front of the queue "
          "are dropped to make room for new packets, which are "
          "added at the end." ), 
       Units ( "Bytes" )]
   uint32 QueueThreshold;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedRoute 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "HostedRoute describes the relationship between the route and "
       "the system in whose context it is defined." )]
class CIM_HostedRoute : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The network element that scopes/provides context for the route."
           )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The next hop route defined on the System." )]
   CIM_NextHopRoute REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A class derived from Service Access Point, that describes an "
       "access point to start the KVM redirection. One access point "
       "represents access to a single KVM redirection stream." )]
class CIM_KVMRedirectionSAP : CIM_ServiceAccessPoint {

      [Description ( 
          "An enumeration specifying the type of the KVM stream "
          "supported on this SAP. In some cases this may be a raw "
          "video steam, with the characters having no special "
          "meaning. However, in other cases it may support a "
          "protocol where some messages have a predefined "
          "structure. \n"
          "0 \"Unknown\" shall indicate the protocol is unknown. \n"
          "1 \"Other\" shall indicate the protocol is specified in "
          "OtherKVMProtocol. \n"
          "2 \"Raw\" shall indicate the protocol is a raw and "
          "uncompressed data stream. 3 \"RDP\" shall indicate the "
          "protocol is the Remote Desktop Protocol. \n"
          "4 \"VNC\" shall indicate the protocol is the VNC "
          "Protocol." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Raw", "RDP", "VNC-RFB", 
          "DMTF Reserved", "Vendor Specified" }, 
       ModelCorrespondence { "CIM_KVMRedirectionSAP.OtherKVMProtocol" }]
   uint16 KVMProtocol;

      [Description ( 
          "A string describing the KVMProtocol when the value of "
          "the KVMProtocol property is set to 1 = \"Other\"." ), 
       ModelCorrespondence { "CIM_KVMRedirectionSAP.KVMProtocol" }]
   string OtherKVMProtocol;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MarkerService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "MarkerService represents the general process of marking a "
       "selected field in a network packet with a specified value. "
       "Packets are marked in order to control the conditioning that "
       "they will subsequently receive. Subclasses of MarkerService "
       "identify the specific fields to be marked, and introduce "
       "properties to represent the values used in marking these "
       "fields. Markers are usually invoked as a result of a preceding "
       "classifier match. \n"
       "\n"
       "MarkerService is a concrete class because its superclass "
       "(ConditioningService) is concrete. While this class can be "
       "instantiated, an instance of it does not accomplish anything, "
       "because both the field to be marked and the value used to mark "
       "it are defined in subclasses. \n"
       "\n"
       "MarkerService is modeled as a ConditioningService so that it "
       "can be aggregated into a QoSService (using the "
       "QoSConditioningSubService association). This association "
       "indicates that the MarkerService\'s functionality underlies "
       "the QoSService. MarkerService also participates in the "
       "NextService association to identify the subsequent "
       "ConditioningService(s) that act on packets after they have "
       "been marked." )]
class CIM_MarkerService : CIM_ConditioningService {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::MediaRedirection" ), 
    Description ( 
       "MediaRedirectionSAP is a logical representation of a Media "
       "redirection session. One access point represents access to a "
       "single Media redirection session." )]
class CIM_MediaRedirectionSAP : CIM_ServiceAccessPoint {

      [Description ( 
          "An enumeration specifying the type of connection mode "
          "supported by the session. A value set to 2 = \"Listen\" "
          "shall indicate that the SAP will listen for a connection "
          "request from the remote Media redirection server. A "
          "CIM_BindsTo association to a CIM_ProtocolEndpoint may be "
          "used to represent where the SAP is listening for the "
          "connection request. A value set to 3 = \"Connect\" shall "
          "indicate that the the SAP shall initiate the connection "
          "to the remote Media redirection server. A "
          "CIM_RemoteAccessAvailableToElement association to a "
          "CIM_RemoteServiceAccessPoint may be used to represent "
          "where the SAP shall connect to the remote Media "
          "redirection server." ), 
       ValueMap { "0", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Listen", "Connect", "DMTF Reserved", 
          "Vendor Specified" }]
   uint16 ConnectionMode;

      [Description ( 
          "CommandTimeout is configurable by management "
          "applications supporting Media Redirections. When the "
          "Redirection Service redirects a Media device command to "
          "a remote device, and the remote device does not respond "
          "before CommandTimeout times out, the Redirection Service "
          "will emulate a media eject event and re-try the command "
          "and/or try to re-establish the connection to the remote "
          "device. Commandtimeout shall be expressed using the "
          "interval format of the datetime type." )]
   datetime CommandTimeout;

      [Description ( 
          "The amount of time the session shall wait after sending "
          "a Reset to the Remote System before concluding that the "
          "Remote System is not responding in a timely fashion, it "
          "may be hung or busy. When the Reset Timeout is exceeded "
          "the managed system tries to establish a new connection "
          "with the Remote System. ResetTimeout shall be expressed "
          "using the interval format of the datetime type." )]
   datetime ResetTimeout;

      [Description ( 
          "The amount of time the session will wait for a Remote "
          "System to establish a new connection before the Media "
          "Device is detached. SessionTimeout shall be expressed "
          "using the interval format of the datetime type." )]
   datetime SessionTimeout;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MeterService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents the metering of network traffic. "
       "Metering is the function of monitoring the arrival times of "
       "packets of a traffic stream and determining the level of "
       "conformance of each packet with respect to a pre- established "
       "traffic profile. A meter has the ability to invoke different "
       "ConditioningServices for conforming and non-conforming "
       "traffic. Traffic leaving a meter may be further conditioned "
       "(e.g., dropped or queued) by routing the packet to another "
       "conditioning element. \n"
       "\n"
       "This class is modeled as a ConditioningService so that it can "
       "be aggregated into a QoSService (using the "
       "QoSConditioningSubService association), to indicate that its "
       "functionality underlies that QoS service. MeterService also "
       "participates in a subclass of the NextService association, to "
       "identify the subsequent ConditioningServices for conforming "
       "and non-conforming traffic." )]
class CIM_MeterService : CIM_ConditioningService {

      [Description ( 
          "This property is an enumerated 16-bit unsigned integer "
          "that is used to specify the particular type of meter. "
          "Defined values of the enumeration are: \n"
          "\n"
          "1: Other \n"
          "2: Average Rate Meter \n"
          "3: Exponentially Weighted Moving Average Meter \n"
          "4: Token Bucket Meter \n"
          "\n"
          "Note: The MeterType property and the MeterService "
          "subclasses provide similar information. This property is "
          "defined for query purposes and for future expansion. It "
          "is assumed that not all MeterServices will require a "
          "subclass to define them. Therefore, MeterService will be "
          "instantiated directly and the Type property is needed." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Average Rate Meter", 
          "Exponentially Weighted Moving Average Meter", 
          "Token Bucket Meter" }, 
       ModelCorrespondence { "CIM_MeterService.OtherMeterType" }]
   uint16 MeterType;

      [Description ( 
          "This property is a string used in conjunction with the "
          "MeterType property. When the value of MeterType is 1 "
          "(i.e., \"Other\"), then the name of the conformance "
          "level for this meter is defined in this property." ), 
       ModelCorrespondence { "CIM_MeterService.MeterType" }]
   string OtherMeterType;

      [Description ( 
          "An unsigned integer indicating the number of conformance "
          "levels supported by the Meter. For example, when only "
          "\'in-profile\' or \'out of profile\' metering is "
          "supported. ConformanceLevels is set to 2." )]
   uint16 ConformanceLevels;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::Pipes" ), 
    Description ( 
       "NetworkPipe is a subclass of EnabledLogicalElement, "
       "representing the state and management of a connection or trail "
       "between endpoints. This object is different than the "
       "association between the endpoints (CIM_ActiveConnection) since "
       "the emphasis is NOT on the endpoints but on the management of "
       "the pipe itself - its state, configuration, etc. NetworkPipes "
       "are defined in the context of a CIM_Network and represent the "
       "\'transfer of information . . . between . . . endpoints\'. "
       "These concepts are aligned with the definition of the Pipe "
       "object in ITU\'s M.3100 specification." ), 
    MappingStrings { "Recommendation.ITU|M3100.Pipe", 
       "Recommendation.ITU|M3100.TrailR1", 
       "Recommendation.ITU|M3100.ConnectionR1", 
       "Recommendation.ITU|M3100.SubNetworkConnection" }]
class CIM_NetworkPipe : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. In order to ensure uniqueness within the "
          "NameSpace, the value of InstanceID SHOULD be constructed "
          "using the following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) In addition, to ensure uniqueness "
          "<OrgID> MUST NOT contain a colon (\':\'). When using "
          "this algorithm, the first colon to appear in InstanceID "
          "MUST appear between <OrgID> and <LocalID>. (For DMTF "
          "defined instances, the \'preferred\' algorithm MUST be "
          "used with the <OrgID> set to \'CIM\'.) \n"
          "<LocalID> MUST include either a vendor specified unique "
          "identifier, or if mapping from an ITU M.3100 "
          "environment, the trailID, connectionID or "
          "subNetworkConnectionID of the instances of PipeR2." ), 
       MappingStrings { "Recommendation.ITU|M3100.TrailR1.trailId", 
          "Recommendation.ITU|M3100.ConnectionR1.connectionID", 
          "Recommendation.ITU|M3100.SubNetworkConnection.subNetworkConnectionID" }]
   string InstanceID;

      [Description ( 
          "Indicates whether the pipe is bi-directional (value = "
          "2), unidirectional (value = 3), or this information is "
          "not known (value = 0). For unidirectional pipes, the "
          "source and sink are indicated by a property "
          "(SourceOrSink) of the association, "
          "EndpointOfNetworkPipe." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Bi-Directional", "Unidirectional" }, 
       MappingStrings { 
          "Recommendation.ITU|M3100.Pipe.directionality" }]
   uint16 Directionality;

      [Description ( 
          "Indicates whether the pipe is composed of lower-level "
          "pipes, and if so, how these lower-level pipes are "
          "aggregated (in parallel or in sequence). The specific "
          "instances of NetworkPipe that are combined are described "
          "using the NetworkPipeComposition association. \n"
          "\n"
          "In the context of M.3100, the ability to be composed of "
          "lower-level pipes is modeled as a Trail. A Trail is made "
          "up of one or more Connections. (Note that both Trails "
          "and Connections are subclasses of Pipe). Because of the "
          "flexibility of the NetworkPipeComposition association, "
          "there is no need to subclass NetworkPipe, as was done in "
          "M.3100, but merely to instantiate the "
          "NetworkPipeComposition association to describe the "
          "bundling of the lower-level pipes (i.e., the "
          "connections), or the sequencing of them." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "No Lower-Level Composition", 
          "Combined In Parallel", "Combined In Sequence" }]
   uint16 AggregationBehavior;

      [Override ( "EnabledState" ), 
       MappingStrings { 
          "Recommendation.ITU|M3100.Pipe.operationalState" }]
   uint16 EnabledState;

      [Override ( "RequestedState" ), 
       Write, MappingStrings { 
          "Recommendation.ITU|M3100.Pipe.administrativeState" }]
   uint16 RequestedState = 5;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NetworkPipeComposition 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Pipes" ), 
    Description ( 
       "NetworkPipeComposition describes the makeup a pipe, based on "
       "lower-level ones. If the pipe is not composed of lower-level "
       "entities (i.e., its AggregationBehavior property is set to 2), "
       "then no instances of this association should be defined where "
       "the pipe has the role of GroupComponent. \n"
       "\n"
       "In the context of M.3100, this semantic is modeled as a Trail "
       "that is made up of one or more Connections. Both Trails and "
       "Connections are subclasses of M.3100\'s Pipe. Because of the "
       "flexibility of the NetworkPipeComposition association, there "
       "is no need to subclass NetworkPipe, as was done in M.3100, but "
       "merely to instantiate this association to describe the "
       "bundling of the lower-level pipes (connections), or the "
       "sequencing of them. How the lower-level pipes are aggregated "
       "is described by the property, AggregationBehavior, of "
       "NetworkPipe. If the pipes are combined in a sequence, the "
       "ordering is conveyed via the property, AggregationSequence, on "
       "this association." ), 
    MappingStrings { 
       "Recommendation.ITU|M3100.TrailR1.serverConnectionListPackage", 
       "Recommendation.ITU|M3100.TrailR1.clientConnectionListPackage" }]
class CIM_NetworkPipeComposition : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The higher level pipe that is composed of lower-level parts/pipes."
           )]
   CIM_NetworkPipe REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "A pipe which is a part of a higher-level one." )]
   CIM_NetworkPipe REF PartComponent;

      [Description ( 
          "Indicates the ordering of the PartComponent pipes in the "
          "GroupComponent. If the AggregationBehavior property of "
          "the GroupComponent pipe is set to 0 or 3 (\"Unknown\" or "
          "\"Combined In Parallel\"), then this property MUST be "
          "set to 0. If the AggregationBehavior is set to 4 "
          "(\"Combined In Sequence\"), then this property SHOULD "
          "indicate the ordering of the component pipes. Ordering "
          "starts with 1 and larger numbers indicate subsequent "
          "pipes. The numbering does not have to be in sequence. "
          "The word SHOULD is used in this Description, since the "
          "specific ordering of all the component pipes may not be "
          "known. In these cases, a value of 0 would be placed in "
          "AggregationSequence to indicate that ordering "
          "information is not available." )]
   uint16 AggregationSequence;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NetworkService 
// ==================================================================
   [Deprecated { "CIM_Service" }, 
    Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This is an abstract base class, derived from the Service "
       "class. It is deprecated in Version 2.7 with the recommendation "
       "that the Service class be subclassed instead. Distinguishing "
       "between services that modify traffic versus supporting basic "
       "communication has not proved useful." )]
class CIM_NetworkService : CIM_Service {

      [Deprecated { "No value" }, 
       Description ( 
          "This is a free-form array of strings that provide "
          "descriptive words and phrases that can be used in "
          "queries. To-date, this property has not been "
          "implemented, since it is not standardized. Also, if this "
          "was a necessary query construct, then it would be "
          "required higher in the inheritance hierarchy. The latter "
          "has not proven necessary. Therefore, the property is "
          "deprecated." )]
   string Keywords[];

      [Deprecated { "CIM_ServiceAccessURI" }, 
       Description ( 
          "This is a URL that provides the protocol, network "
          "location, and other service-specific information "
          "required in order to access the service. It is "
          "deprecated with the recommendation that ServiceAccessURI "
          "be instantiated instead. This new class correctly "
          "positions the semantics of the service access, and "
          "clarifies the format of the information." )]
   string ServiceURL;

      [Deprecated { "No value" }, 
       Description ( 
          "This is a free-form array of strings that specify any "
          "specific pre-conditions that must be met in order for "
          "this service to start correctly. It was expected that "
          "subclasses would refine the inherited StartService() "
          "method to suit their specific needs. To-date, this "
          "refinement has not been necessary. Also, the property is "
          "not very useful, since it is not standardized. If this "
          "was a necessary construct, then it would be required "
          "higher in the inheritance hierarchy (on Service). The "
          "latter has not proven true. Therefore, the property is "
          "deprecated." )]
   string StartupConditions[];

      [Deprecated { "No value" }, 
       Description ( 
          "This is a free-form array of strings that specify any "
          "specific parameters that must be supplied to the "
          "StartService() method in order for this service to start "
          "correctly. It was expected that subclasses would refine "
          "the inherited StartService() methods to suit their "
          "specific needs. To-date, this refinement has not been "
          "necessary. If indeed the method were refined, then its "
          "parameters would more formally convey this information. "
          "Therefore, the property is deprecated." )]
   string StartupParameters[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NextService 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "NextService establishes a predecessor-successor relationship "
       "between two ConditioningService objects. This association is "
       "used to indicate the sequence of ConditioningServices required "
       "to process a particular type of traffic. \n"
       "\n"
       "Instances describe the various relationships between different "
       "ConditioningServices (such as classifiers, meters, droppers, "
       "etc.) that are used collectively to condition traffic. Both "
       "one-to-one and more complicated fan-in and/or fan-out "
       "relationships can be described. The Conditioning Services may "
       "feed one another directly, or they may be mapped to multiple "
       "\'next\' Services based on the characteristics of the packet." )]
class CIM_NextService {

      [Key, Description ( 
          "The preceding ConditioningService, \'earlier\' in the "
          "processing sequence for a packet." )]
   CIM_ConditioningService REF PrecedingService;

      [Key, Description ( 
          "The \'next\' or following ConditioningService." )]
   CIM_ConditioningService REF FollowingService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NextServiceAfterMeter 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association describes a predecessor-successor "
       "relationship between a MeterService and one or more "
       "ConditioningService objects that process traffic from the "
       "meter. For example, for devices that implement preamble "
       "marking, the FollowingService reference (after the meter) is a "
       "PreambleMarkerService - to record the results of the metering "
       "in the preamble. \n"
       "\n"
       "It might be expected that the NextServiceAfterMeter "
       "association would subclass from NextService. However, meters "
       "are 1:n fan-out elements, and require a mechanism to "
       "distinguish between the different results/outputs of the "
       "meter. Therefore, this association defines a new key property, "
       "MeterResult, which is used to record the result and identify "
       "the output through which this traffic left the meter." )]
class CIM_NextServiceAfterMeter {

      [Key, Description ( 
          "The preceding MeterService, \'earlier\' in the "
          "processing sequence for a packet." )]
   CIM_MeterService REF PrecedingService;

      [Key, Description ( 
          "The \'next\' or following ConditioningService." )]
   CIM_ConditioningService REF FollowingService;

      [Key, Description ( 
          "Information on the result of the metering. Traffic is "
          "distinguished as being conforming, non-conforming, or "
          "partially conforming. More complicated metering can be "
          "built either by extending the enumeration or by "
          "cascading meters." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Conforming", "Partially Conforming", 
          "Non-Conforming" }]
   uint16 MeterResult;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PacketSchedulingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents the scheduling service, which is a "
       "process that determines whether a queued packet should be "
       "removed from a queue and sent to an output interface. Note "
       "that output interfaces can be physical network interfaces or "
       "interfaces to components internal to systems, such as "
       "crossbars or backplanes. In either case, if multiple queues "
       "are involved, schedulers are used to provide access to the "
       "interface. Each instance of a PacketSchedulingService "
       "describes a scheduler from the perspective of the queues that "
       "the scheduler is servicing. One can describe that different "
       "schedulers support different queues, or that a scheduler "
       "supports several queues. \n"
       "\n"
       "PacketSchedulingService is modeled as a ConditioningService so "
       "that it can be aggregated into a QoSService (using the "
       "QoSConditioningSubService association) to indicate that its "
       "functionality underlies that QoS service. It participates in "
       "the NextService association to identify a subsequent "
       "ConditioningService, if any, that acts on traffic after it has "
       "been processed by the scheduler." )]
class CIM_PacketSchedulingService : CIM_ConditioningService {

      [Description ( 
          "This property is an enumerated 16-bit unsigned integer, "
          "and defines the type of scheduler. Values are: \n"
          "1: Other \n"
          "2: FIFO \n"
          "3: Priority \n"
          "4: Allocation \n"
          "5: Bounded Priority \n"
          "6: Weighted Round Robin Packet \n"
          "If no value is specified, 2 (\"FIFO\") should be "
          "assumed." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "FIFO", "Priority", "Allocation", 
          "Bounded Priority", "Weighted Round Robin Packet" }, 
       ModelCorrespondence { 
          "CIM_PacketSchedulingService.OtherSchedulerType" }]
   uint16 SchedulerType;

      [Description ( 
          "This string property is used in conjunction with the "
          "SchedulerType property. When the value of SchedulerType "
          "is 1 (i.e., \"Other\"), then the type of scheduler to be "
          "used is defined in this attribute." ), 
       ModelCorrespondence { 
          "CIM_PacketSchedulingService.SchedulerType" }]
   string OtherSchedulerType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PreambleMarkerService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "PreambleMarkerService models the storing of traffic- "
       "conditioning results in a packet preamble. An instance appends "
       "a two-part string of the form \'<type>,<value>\' to the packet "
       "preamble. The concept of \'type\'s is discussed more fully in "
       "the Description of the class\' FilterItemList property." )]
class CIM_PreambleMarkerService : CIM_MarkerService {

      [Description ( 
          "To foster interoperability, the basic format of the "
          "information captured by a PreambleMarker is specified. "
          "That information is contained in the FilterItemList "
          "property (an ordered, string array). Each entry in the "
          "array takes the form \'type,value\'. When entries are "
          "added, they are appended to the end of the list. \n"
          "\n"
          "A limited set of standardized \'type\'s exist. They are: \n"
          "- ConformingFromMeter, NonConformingFromMeter and "
          "PartConformingFromMeter to convey metering results "
          "(where the \'value\' is the name of the meter) \n"
          "- VlanId to describe the traffic\'s VLAN information "
          "(where the \'value\' is the VLAN ID). \n"
          "An implementation is free to define and use other "
          "preamble \'types\'. \n"
          "Note that a wildcard value of \"any\" is allowed to "
          "indicate that the preamble entry matches for any \'value\' "
          "of the specified \'type\'. For example, using the "
          "wildcard, an administrator can define a filter to select "
          "all packets that were found to be conforming (\'type\' = "
          "\"ConformingFromMeter\") without having to name each "
          "meter individually." ), 
       ArrayType ( "Ordered" )]
   string FilterItemList[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Priority8021QMarkerService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "Priority8021QMarkerService marks the Priority field in an "
       "802.1Q- compliant frame, with a specified value. Frames are "
       "marked in order to control the conditioning that they will "
       "subsequently receive. Following common practice, the value to "
       "be written into the field is represented as an unsigned 8-bit "
       "integer." )]
class CIM_Priority8021QMarkerService : CIM_MarkerService {

      [Description ( 
          "This property is an unsigned 8-bit integer, representing "
          "a value to be used for marking the Priority field in the "
          "802.1Q header. Since the Priority field consists of 3 "
          "bits, the values for this property are limited to the "
          "range 0..7. When the Priority field is marked, the "
          "remaining two bits in the octet are left unchanged." ), 
       MinValue ( 0 ), 
       MaxValue ( 7 )]
   uint8 PriorityValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QoSService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a concrete class that represents the ability to "
       "conceptualize a QoS service as a set of coordinated "
       "sub-services. This enables the network administrator to map "
       "business rules to the network, and the network designer to "
       "engineer the network such that it can provide different "
       "functions for different traffic streams. \n"
       "\n"
       "This class has two main purposes. First, it serves as a common "
       "base class for defining various sub-services that are needed "
       "to build higher-level QoS services. Second, it serves as a way "
       "to consolidate relationships between different types of QoS "
       "services and different types of ConditioningServices. \n"
       "\n"
       "For example, Gold Service may be defined as a QoSService which "
       "aggregates two other QoSServices together. Each of these "
       "\'other\' QoSServices could be DiffServServices - one "
       "representing the servicing of very high demand packets "
       "(instantiated as a DiffServService directly), and one "
       "representing the service given to most of the packets "
       "(instantiated as an AFService). The high demand "
       "DiffServService instance would use QoSConditioning SubService "
       "to aggregate together the necessary classifiers to indicate "
       "which traffic it applies to, the appropriate meters for "
       "contract limits, the marker to mark the EF PHB in the packets, "
       "and the queuing-related services. The AFService instance would "
       "similarly use QoSConditioning SubService to aggregate its "
       "classifiers, meters, the several markers used to mark the "
       "different AF PHBs in the packets, and the queuing-related "
       "services needed to deliver the packet treatment." )]
class CIM_QoSService : CIM_Service {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QoSSubService 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "The associations - QoSSubService and QoSConditioningSub "
       "Service - operate in conjunction. High level QoS definitions, "
       "such as \'John gets Gold Service\', map to lower level, more "
       "concrete QoSServices (the subclasses of QoSService). This is "
       "described by the QoSSubService association. In turn, each of "
       "the SubServices may require their own conditioning. This is "
       "modeled using the QoSConditioningSubService aggregation. \n"
       "\n"
       "Note that a more concrete QoSService may only be aggregated "
       "into one higher level Service, using this association. The "
       "cardinality on the GroupComponent reference is Max (1)." )]
class CIM_QoSSubService : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The higher level QoSService that is constructed by "
          "aggregating one or more lower-level QoSServices." )]
   CIM_QoSService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The more concrete QoSService that is used to provide the "
          "higher level Service." )]
   CIM_QoSService REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QueuingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "QueuingService represents the ability to queue network "
       "traffic, and to specify the characteristics for determining "
       "long-term congestion. It is modeled as a ConditioningService "
       "so that it can be aggregated into a QoSService (using the "
       "QoSConditioningSubService association). This indicates that "
       "its functionality underlies the QoSService." )]
class CIM_QueuingService : CIM_ConditioningService {

      [Description ( 
          "Indicates the current depth of this queue in units "
          "specified by DepthUnits. This value may be important in "
          "diagnosing unexpected behavior." ), 
       Gauge, ModelCorrespondence { "CIM_QueuingService.DepthUnits" }]
   uint32 CurrentQueueDepth;

      [Description ( 
          "DepthUnits is an enumerated integer that identifies the "
          "units for the CurrentQueueDepth property. The values are "
          "either bytes (1) or packets (2)." ), 
       ValueMap { "1", "2" }, 
       Values { "Bytes", "Packets" }]
   uint16 DepthUnits;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_REDDropperService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "REDDropperService represents the ability to drop network "
       "traffic using a Random Early Detection (RED) algorithm. The "
       "purpose of a RED algorithm is to avoid congestion (as opposed "
       "to managing congestion). Instead of waiting for the queues to "
       "fill up, and then dropping large numbers of packets, RED works "
       "by monitoring average queue depth. When the queue depth "
       "exceeds a minimum threshold, packets are randomly discarded. "
       "These discards cause TCP to slow its transmission rate for "
       "those connections that experienced the packet discards. Other "
       "connections are not affected by these discards. \n"
       "\n"
       "A RED dropper always drops packets from a single queue, which "
       "is related to the dropper as the following Service in the "
       "NextService association. The queue(s) examined by the drop "
       "algorithm are found by following the "
       "CalculationServiceForDropper association(s) to determine the "
       "dropper\'s DropThresholdCalculationService(s), and then "
       "following the CalculationBasedOnQueue association to find the "
       "queue being watched by each CalculationService." )]
class CIM_REDDropperService : CIM_DropperService {

      [Description ( 
          "This is an unsigned 32-bit integer that defines the "
          "minimum average queue depth at which packets are subject "
          "to being dropped. (See the ThresholdUnits property to "
          "determine the units of the threshold.) The slope of the "
          "drop probability function is described by the "
          "Start/StopProbability properties." ), 
       ModelCorrespondence { "CIM_REDDropperService.ThresholdUnits" }]
   uint32 MinQueueThreshold;

      [Description ( 
          "This is an unsigned 32-bit integer that defines the "
          "maximum average queue length at which packets are "
          "subject to always being dropped, regardless of the "
          "dropping algorithm and probabilities being used. (See "
          "the ThresholdUnits property to determine the units of "
          "the threshold.)" ), 
       MinValue ( 0 ), 
       MaxValue ( 1000 ), 
       ModelCorrespondence { "CIM_REDDropperService.ThresholdUnits" }]
   uint32 MaxQueueThreshold;

      [Description ( 
          "This is an unsigned 32-bit integer, used in conjunction "
          "with the StopDropProbability property. The start and "
          "stop probabilities define the slope of the drop "
          "probability function. This function governs the rate at "
          "which packets are subject to being dropped, as a "
          "function of the queue length. \n"
          "\n"
          "This property expresses a drop probability in drops per "
          "thousand packets. For example, the value 100 indicates a "
          "drop probability of 100 per 1000 packets, that is, 10%. "
          "Min and max values are 0 to 1000." ), 
       Units ( "Per Thousand Packets" ), 
       ModelCorrespondence { "CIM_REDDropperService.StopProbability" }]
   uint32 StartProbability;

      [Description ( 
          "This is an unsigned 32-bit integer, used in conjunction "
          "with the StartDropProbability property. The start and "
          "stop probabilities define the slope of the drop "
          "probability function. This function governs the rate at "
          "which packets are subject to being dropped, as a "
          "function of the queue length. \n"
          "\n"
          "This property expresses a drop probability in drops per "
          "thousand packets. For example, the value 100 indicates a "
          "drop probability of 100 per 1000 packets, that is, 10%. "
          "Min and max values are 0 to 1000." ), 
       Units ( "Per Thousand Packets" ), 
       MinValue ( 0 ), 
       MaxValue ( 1000 ), 
       ModelCorrespondence { "CIM_REDDropperService.StartProbability" }]
   uint32 StopProbability;

      [Description ( 
          "ThresholdUnits is an enumerated integer that identifies "
          "the units for the Min and MaxQueueThreshold properties. "
          "The values are either bytes (1) or packets (2)." ), 
       ValueMap { "1", "2" }, 
       Values { "Bytes", "Packets" }]
   uint16 ThresholdUnits;


};

//Copyright (c) 2007 DMTF.  All Rights Reserved.
   [Version ( "2.17.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "RedirectionService provides the capability to manage "
       "redirection services. Examples of this include any video "
       "stream directed to a Network Port (by the operating system) on "
       "a Computer System redirected out to a remote administrator\'s "
       "console. Similarly this can include input redirected into the "
       "same Network Port. Other examples include the redirection of "
       "IO from a logical element to a remote or local destination. "
       "Each redirection stream is accessible via a SAP. This service "
       "can support multiple redirection types via multiple associated "
       "SAPs." )]
class CIM_RedirectionService : CIM_Service {

      [Description ( 
          "An enumerated array indicating the type(s) of "
          "Redirection supported by this Service. This value is set "
          "to the type of redirection service that this service "
          "represents. A value set to 2 = \"Text\" shall indicate a "
          "Text Console Redirection service. A value set to 3 = "
          "\"KVM\" shall indicate a Keyboard, Mouse and Video "
          "Console Redirection service. A value set to 4 = \"USB\" "
          "shall indicate a USB Redirection service. A value set to "
          "5 = \"media\" shall indicate a traditional Media "
          "Redirection service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..32767", 
          "32768..65535" }, 
       Values { "Unknown", "Other", "Text", "KVM", "USB", "Media", 
          "DMTF Reserved", "Vendor Specified" }, 
       ModelCorrespondence { 
          "CIM_RedirectionServiceType.OtherRedirectionServiceType" }]
   uint16 RedirectionServiceType[];

      [Description ( 
          "A string describing the Redirection Service when the "
          "value of the RedirectionServiceType property is set to 1 "
          "= \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_RedirectionService.RedirectionServiceType" }]
   string OtherRedirectionServiceType;

      [Description ( 
          "Maximum number of concurrently enabled redirection SAPs. "
          "The Service may have multiple (more than this number) "
          "SAPs associated with it. However, the number of Active "
          "SAPs (EnabledState=Enabled) associated with this Service "
          "instance cannot exceed this number. This limitation "
          "could come from hardware limitations (e.g. one COM port "
          "can only redirect the text to one console), or from any "
          "other software resource limitations." )]
   uint16 MaxCurrentEnabledSAPs;

      [Description ( 
          "An enumeration specifying the impact of enabling the "
          "redirection of the text console flow on the original "
          "destination of the flow. The original destination is "
          "modeled as a concrete subclass of LogicalDevice and "
          "associated to this service using a ServiceAffectsElement "
          "association). If this value is Exclusive, it shall mean "
          "that when the element flow is actively being redirected, "
          "then the element being redirected cannot be accessed at "
          "the original destination. If this value is Shared, it "
          "shall mean that when the element flow is actively being "
          "redirected, then the element being redirected can still "
          "be accessed at the original destination." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Exclusive", "Shared" }]
   uint16 SharingMode;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RouteCalculationService 
// ==================================================================
   [Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This is an abstract base class, derived from Service, that "
       "represents the route calculation aspects of a system. This "
       "class also addresses functions performed by the system when it "
       "exchanges routing information. \n"
       "\n"
       "Examining the RouteCalculationService class definition, note "
       "that its superclass NetworkService is deprecated. Therefore, "
       "NetworkService\'s properties need not be implemented in an "
       "instance of RouteCalculationService. Unfortunately, "
       "NetworkService cannot be removed from the object hierarchy "
       "without a major Schema release. When/if this occurs, the "
       "NetworkService superclass will be removed, and "
       "RouteCalculationService will subclass from CIM_Service "
       "directly. Also note that there are a large number of "
       "additional routing protocols that are not currently modeled. "
       "These will be added over time." )]
class CIM_RouteCalculationService : CIM_NetworkService {

      [Description ( 
          "The RouterID uniquely identifies the router that is "
          "performing the route calculation. It is the highest IP "
          "address on the router (or the highest loopback "
          "interface, if there is one)." )]
   string RouterID;

      [Description ( 
          "This is an enumerated value that defines the routing "
          "algorithm used in this route calculation." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "RIPv1", "RIPv2", "OSPFv1", "OSPFv2", 
          "BGPv1", "BGPv2", "BGPv3", "BGPv4" }]
   uint16 AlgorithmType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SchedulingServiceToSchedule 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a top-level association, representing the relationship "
       "between a scheduler (PacketSchedulingService) and a "
       "SchedulingElement, in a configuration involving cascaded "
       "schedulers. The SchedulingElement, in turn, represents the "
       "information in a packet scheduling service that is specific to "
       "this scheduler, such as relative priority or allocated "
       "bandwidth. \n"
       "\n"
       "Although it cannot be expressed formally with the association "
       "cardinalities, there is an additional constraint on "
       "participation in this association. A particular instance of (a "
       "subclass of) SchedulingElement always participates either in "
       "exactly one instance of this association, or in exactly one "
       "instance of the association QueueToSchedule." )]
class CIM_SchedulingServiceToSchedule {

      [Key, Max ( 1 ), 
       Description ( "The scheduler being cascaded." )]
   CIM_PacketSchedulingService REF SchedService;

      [Key, Description ( 
          "A SchedulingElement in the subsequent scheduler." )]
   CIM_SchedulingElement REF SchedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SNMPCommunityString 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SNMP" ), 
    Description ( 
       "SNMPCommunityString is an access point for an SNMPService. "
       "Each instance stores a community string that can be used for "
       "making SNMP requests." )]
class CIM_SNMPCommunityString : CIM_ServiceAccessPoint {

      [Description ( 
          "The SNMP community string/password used for read or "
          "read/write access to the agent\'s data." ), 
       MappingStrings { "MIB.IETF|ENTITY-MIB.entLogicalCommunity" }]
   string CommunityString;

      [Description ( 
          "An enumerated integer describing whether read or read/ "
          "write access is granted, or whether this information is "
          "unknown." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Read Only", "Read/Write" }]
   uint16 TypeOfAccess;

      [Description ( 
          "This array contains one or more object identifiers "
          "indicating the MIB modules/object subtrees that are "
          "accessed using the CommunityString. Either text strings "
          "of numbers (such as 1.2.3.4.5), or words (such as "
          "\'system\') are specified. When using text strings of "
          "numbers, an asterisk (*) can replace any subidentifier "
          "to specify a subtree family - for example, 1.2.*.5. "
          "Descriptions related to each entry in the array are "
          "found at the corresponding index of the "
          "LogicalEntitiesDescriptions property." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIB.IETF|ENTITY-MIB.entLogicalType" }, 
       ModelCorrespondence { 
          "CIM_SNMPCommunityString.LogicalEntitiesDescriptions" }]
   string LogicalEntitiesAccessed[];

      [Description ( 
          "Free-form textual descriptions of the logical entities "
          "indicated in the LogicalEntitiesAccessed array. There is "
          "a correspondence between the entity identifier in the "
          "LogicalEntitiesAccessed array, and the description in "
          "this array at the corresponding index." ), 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIB.IETF|ENTITY-MIB.entLogicalDescr" }, 
       ModelCorrespondence { 
          "CIM_SNMPCommunityString.LogicalEntitiesAccessed" }]
   string LogicalEntitiesDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SNMPService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SNMP" ), 
    Description ( 
       "SNMPService represents an SNMP agent running on a hosting "
       "system. The UDP port to use to contact the agent is an "
       "instance of UDPProtocolEndpoint. The endpoint is associated "
       "with the SNMPService via a Dependency relationship. The "
       "community string(s) to use when contacting the SNMP agent "
       "reside in instances of SNMPCommunityString, that are "
       "associated with the SNMPService via the ServiceAccessBySAP "
       "relationship." )]
class CIM_SNMPService : CIM_Service {


};

// Copyright (c) 2007 DMTF.  All Rights Reserved.
   [Version ( "2.17.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "TextRedirectionSAP describes an access point to start the text "
       "redirection. One access point represents access to a single "
       "text redirection stream." )]
class CIM_TextRedirectionSAP : CIM_ServiceAccessPoint {

      [Description ( 
          "A string sequence that allows the supervisor using the "
          "command line session to terminate the redirection "
          "stream. This is required because once the text "
          "redirection is started then the supervisor may lose the "
          "ability to interact with the command line session, and "
          "be unable to perform a RequestStateChange operation." )]
   string SessionTerminateSequence;

      [Description ( 
          "An enumeration specifying the type of the text stream "
          "supported on this SAP. In some cases this may be a raw "
          "character steam, with the characters having no special "
          "meaning. However, in other cases it may support a "
          "Terminal Mode where some characters have special "
          "meanings like backspace, positioning of the character on "
          "the screen, etc." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Character Stream", 
          "Terminal Mode", "DMTF Reserved", "Vendor Specified" }, 
       ModelCorrespondence { 
          "CIM_TextRedirectionSAP.OtherTextFlowType" }]
   uint16 TextFlowType;

      [Description ( 
          "An string describing the TextFlowType when the value of "
          "the TextFlowType property is set to 1 = \"Other\"." ), 
       ModelCorrespondence { "CIM_TextRedirectionSAP.TextFlowType" }]
   string OtherTextFlowType;


};

// Copyright (c) 2007 DMTF.  All Rights Reserved.
   [Version ( "2.17.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "TextRedirectionService provides the capability to redirect a "
       "text console output to the remote console. For example, any "
       "text stream directed to a Serial COM Port (by the operating "
       "system) on a Computer System can be redirected out to a remote "
       "administrator\'s console. Similarly the text input keystrokes "
       "from the remote administrator\'s console can be redirected "
       "into the same COM Port. Each redirection stream is accessible "
       "via a TextRedirectionSAP. This service can support multiple "
       "redirection streams via multiple associated "
       "TextRedirectionSAPs." )]
class CIM_TextRedirectionService : CIM_RedirectionService {

      [Override ( "RedirectionServiceType" ), 
       Description ( 
          "Type of Redirection Supported by this Service. This "
          "value is set to the type of Redirection Service That "
          "this service represents. A value set to 2 = \"Text\" "
          "indicates a Text Console Redirection service." ), 
       ValueMap { "..", "2", "3..32767", "32768..65535" }, 
       Values { "DMTF Reserved", "Text", "DMTF Reserved", 
          "Vendor Specified" }, 
       ModelCorrespondence { 
          "CIM_RedirectionSAP.OtherRedirectionServiceType" }]
   uint16 RedirectionServiceType[] = {2};


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TokenBucketMeterService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a concrete subclass of the MeterService class that "
       "represents the metering of network traffic using a token "
       "bucket meter. Two types of token bucket meters are defined "
       "using this class - a simple, two-parameter bucket meter, and a "
       "multi-stage meter. \n"
       "\n"
       "A simple token bucket usually has two parameters, an average "
       "token rate and a burst size, and has two conformance levels: "
       "\'conforming\' and \'non-conforming\'. This class also defines "
       "an excess burst size, which enables the meter to have three "
       "conformance levels (\'conforming\', \'partially conforming\', "
       "and \'non-conforming\'). In this case, packets that exceed the "
       "excess burst size are deemed non-conforming, while packets "
       "that exceed the smaller burst size but are less than the "
       "excess burst size are deemed partially conforming." )]
class CIM_TokenBucketMeterService : CIM_MeterService {

      [Description ( 
          "This property is a 32-bit unsigned integer that is used "
          "to define the committed rate of the meter. The value is "
          "expressed in kilobits per second." ), 
       Units ( "KiloBits per Second" )]
   uint32 AverageRate;

      [Description ( 
          "This attribute is a 32-bit unsigned integer that is used "
          "to define the peak rate of the meter. The value is "
          "expressed in kilobits per second." ), 
       Units ( "KiloBits per Second" )]
   uint32 PeakRate;

      [Description ( 
          "This property is a 32-bit unsigned integer that is used "
          "to define the maximum number of tokens available for the "
          "committed rate (specified by the AverageRate property). "
          "The value is specified in kilobytes." ), 
       Units ( "KiloBytes" )]
   uint32 BurstSize;

      [Description ( 
          "This property is a 32-bit unsigned integer that is used "
          "to define the maximum number of tokens available for the "
          "peak rate (specified by the PeakRate property). The "
          "value is specified in kilobytes." ), 
       Units ( "KiloBytes" )]
   uint32 ExcessBurstSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ToSMarkerService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "ToSMarkerService marks the ToS (type of service) field in the "
       "IPv4 packet header [R791] with a specific value. Packets are "
       "marked in order to control the conditioning that they will "
       "subsequently receive. Following common practice, the value to "
       "be written into the ToS field is represented as an unsigned "
       "8-bit integer." )]
class CIM_ToSMarkerService : CIM_MarkerService {

      [Description ( 
          "This property is an unsigned 8-bit integer, representing "
          "a value to be used for marking the type of service (ToS) "
          "field in the IPv4 packet header. The ToS field is "
          "defined to be a complete octet, so the range for this "
          "property is 0..255. Some implementations, however, "
          "require that the lowest-order bit in the field is always "
          "0. Such an implementation cannot support an odd "
          "TosValue." )]
   uint8 ToSValue;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::USBRedirection" ), 
    Description ( 
       "USBRedirectionSAP is a logical representation of a USB "
       "redirection session. One access point represents access to a "
       "single USB redirection session." )]
class CIM_USBRedirectionSAP : CIM_ServiceAccessPoint {

      [Description ( 
          "An enumeration specifying the type of connection mode "
          "supported by the session. A value set to 2 = \"Listen\" "
          "shall indicate that the SAP will listen for a connection "
          "request from the remote USB redirection server. A "
          "CIM_BindsTo association to a CIM_ProtocolEndpoint may be "
          "used to represent where the SAP is listening for the "
          "connection request. A value set to 3 = \"Connect\" shall "
          "indicate that the the SAP shall initiate the connection "
          "to the remote USB redirection server. A "
          "CIM_RemoteAccessAvailableToElement association to a "
          "CIM_RemoteServiceAccessPoint may be used to represent "
          "where the SAP shall connect to the remote USB "
          "redirection server." ), 
       ValueMap { "0", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Listen", "Connect", "DMTF Reserved", 
          "Vendor Specified" }]
   uint16 ConnectionMode;

      [Description ( 
          "The amount of time the session shall wait after sending "
          "a Reset to the Remote System before concluding that the "
          "Remote System is not responding in a timely fashion, it "
          "may be hung or busy. When the Reset Timeout is exceeded "
          "the managed system tries to establish a new connection "
          "with the Remote System. This property uses the interval "
          "format of the datetime type" )]
   datetime ResetTimeout;

      [Description ( 
          "The amount of time the session will wait for a Remote "
          "System to establish a new connection before the USB "
          "Device is detached. This property uses the interval "
          "format of the datetime type." )]
   datetime SessionTimeout;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VLAN 
// ==================================================================
   [Deprecated { "No Value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "An instance of VLAN represents a VLAN within a switch. In a "
       "particular switch, there should be an instance of VLAN for "
       "every VLAN available. For example, in a switch with port-based "
       "VLANs, if there are 16 VLANs to which ports can be assigned "
       "(VLAN 1 through VLAN 16), there should be an instance of "
       "CIM_VLAN for each of VLAN 1 through VLAN 16. \n"
       "\n"
       "VLAN inherits Name from ServiceAccessPoint. Use this for the "
       "textual name of the VLAN, if there is one. Otherwise, "
       "synthesize a textual name, e.g., VLAN 0003. (Consider leading "
       "zero fill, as shown, to ensure that if the textual VLAN names "
       "are extracted and presented by a management applictions, the "
       "VLAN names will sort in the expected order.) The numeric part "
       "of the name should be at least four digits wide since 802.1Q "
       "specifies 4095 VLANs. \n"
       "\n"
       "It is intended that VLAN be subclassed only if necessary to "
       "add attributes. The type of the VLAN can be inferred from the "
       "VLANService(s) with which the VLAN is associated in the "
       "VLANFor association. \n"
       "\n"
       "An instance of VLAN may be associated with more than one "
       "VLANService. For example, there are switches that support both "
       "802.1Q VLANs and the vendor\'s proprietary VLANs. In some such "
       "switches, if a broadcast packet is received on a port in an "
       "802.1Q VLAN (VLAN 5, for example), it may be be transmitted "
       "from a port in a \'proprietary\' VLAN 5. In effect, there is "
       "only one VLAN 5, and the type of port only determines the "
       "packet format for tagged packets. In the case just described, "
       "only one instance of CIM_VLAN should be instantiated for VLAN "
       "5, and it should be associated both with the 802.1Q "
       "VLANService and the proprietary VLANService. \n"
       "\n"
       "In typical VLAN-aware switches, packets can be assigned to a "
       "VLAN based on the port on which they are received (port-based "
       "VLANS), based on the source MAC address (MAC-based VLANs), or "
       "based on the value of a set of bits in the packet "
       "(protocol-based VLANs). If it is desirable to represent the "
       "VLAN assignment predicate for some MAC-based VLAN switch, it "
       "will be necessary to subclass VLAN. The list of MAC addresses "
       "associated with a VLAN might be an attribute of the subclass. "
       "If it is desirable to represent the VLAN assignment predicate "
       "in a protocol-based VLAN switch, it will also be necessary to "
       "subclass VLAN, InboundVLAN, or both. If the predicate applies "
       "to all ports in the switch, then only VLAN need be "
       "used/instantiated. If the predicate may vary based on the "
       "port, then InboundVLAN must be subclassed, and CIM_VLAN might "
       "have to be subclassed as well." )]
class CIM_VLAN : CIM_ServiceAccessPoint {

      [Deprecated { "No Value" }, 
       Description ( "VLAN identifying number." )]
   uint16 VLANNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VLANService 
// ==================================================================
   [Deprecated { "No Value" }, 
    Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "This class is deprecated following discussion as to the need "
       "of a modeling a VLAN as a service. It was determined that a "
       "VLAN service was not needed. VLANService represents the VLAN "
       "aspects of the function performed by a switch. Some VLAN-aware "
       "devices participate in protocols where VLAN information is "
       "propagated among switches, e.g., GVRP in 802.1Q switches and "
       "VTP in Cisco Catalyst switches. VLANService also represents "
       "the function performed by the switch as a participant in such "
       "a protocol. VLANService must be subclassed so that the type of "
       "instance can be distinguished by its class." )]
class CIM_VLANService : CIM_Service {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WeightedREDDropperService 
// ==================================================================
   [Deprecated { "No value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents a logical entity that resides in the "
       "data forwarding path of a network device. It describes the "
       "ability to drop network traffic using a Weighted Random Early "
       "Detection (WRED) algorithm. Like RED, the purpose of WRED is "
       "to avoid congestion (as opposed to managing congestion). This "
       "modification of the basic RED algorithm enables packets "
       "belonging to different traffic classes to be dropped at "
       "different queue depths. This algorithm also enables discard to "
       "be done based on different information contained in the packet "
       "header, such as IP Precedence, RSVP session parameters, or "
       "even on other factors not directly encoded in the packet "
       "header, such as the queue depth. \n"
       "\n"
       "Implementation of this class has shown that weighting should "
       "not be a property of the class (but on an association to it), "
       "and that there is insufficient data to process the drop "
       "metric. The class is deprecated pending further definition by "
       "the DMTF." )]
class CIM_WeightedREDDropperService : CIM_DropperService {

      [Deprecated { "No value" }, 
       Description ( 
          "This property is an enumerated 16-bit unsigned integer, "
          "and defines the type of metric that is used to drop "
          "traffic. Values are: \n"
          "\n"
          "1: Other \n"
          "2: IP Precedence \n"
          "3: DSCP Value \n"
          "4: 802.1P Priority Value \n"
          "5: RSVP Session \n"
          "6: Queue Depth \n"
          "7: Packet Arrival Rate." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Other", "IP Precedence", "DSCP Value", 
          "802.1P Priority Value", "RSVP Session", "Queue Depth", 
          "Packet Arrival Rate" }, 
       ModelCorrespondence { 
          "CIM_WeightedREDDropperService.OtherDropMetric" }]
   uint16 DropMetric;

      [Deprecated { "No value" }, 
       Description ( 
          "This string property is used in conjunction with the "
          "DropMetric property. When the value of DropMetric is 1 "
          "(i.e., \"Other\"), then the type of metric to be used is "
          "defined in this property." ), 
       ModelCorrespondence { 
          "CIM_WeightedREDDropperService.DropMetric" }]
   string OtherDropMetric;

      [Deprecated { 
          "CIM_DropThresholdCalculationService.SmoothingWeight" }, 
       Description ( 
          "This is a 32-bit real number that represents the "
          "weighting factor used to determine which queues get more "
          "service." ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   real32 Weight;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicyActionInPolicyAction is used to represent the "
       "compounding of policy actions into a higher-level policy "
       "action." )]
class CIM_PolicyActionInPolicyAction : CIM_PolicyActionStructure {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property represents the CompoundPolicyAction that "
          "contains one or more PolicyActions." )]
   CIM_CompoundPolicyAction REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property holds the name of a PolicyAction contained "
          "by one or more CompoundPolicyActions." )]
   CIM_PolicyAction REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A PolicyRule aggregates zero or more instances of the "
       "PolicyAction class, via the PolicyActionInPolicyRule "
       "association. A Rule that aggregates zero Actions is not "
       "valid--it may, however, be in the process of being entered "
       "into a PolicyRepository or being defined for a System. "
       "Alternately, the actions of the policy may be explicit in the "
       "definition of the PolicyRule. Note that a PolicyRule should "
       "have no effect until it is valid. \n"
       "\n"
       "The Actions associated with a PolicyRule may be given a "
       "required order, a recommended order, or no order at all. For "
       "Actions represented as separate objects, the "
       "PolicyActionInPolicyRule aggregation can be used to express an "
       "order. \n"
       "\n"
       "This aggregation does not indicate whether a specified action "
       "order is required, recommended, or of no significance; the "
       "property SequencedActions in the aggregating instance of "
       "PolicyRule provides this indication." )]
class CIM_PolicyActionInPolicyRule : CIM_PolicyActionStructure {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This property represents the PolicyRule that contains "
          "one or more PolicyActions." )]
   CIM_PolicyRule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "This property holds the name of a PolicyAction contained "
          "by one or more PolicyRules." )]
   CIM_PolicyAction REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "CIM_PolicyInSystem is a generic association used to establish "
       "dependency relationships between Policies and the Systems that "
       "host them. These Systems may be ComputerSystems where Policies "
       "are \'running\' or they may be Policy Repositories where "
       "Policies are stored. This relationship is similar to the "
       "concept of CIM_Services being dependent on CIM_Systems as "
       "defined by the HostedService association. \n"
       "\n"
       "Cardinality is Max (1) for the Antecedent/System reference "
       "since Policies can only be hosted in at most one System "
       "context. Some subclasses of the association will further "
       "refine this definition to make the Policies Weak to Systems. "
       "Other subclasses of PolicyInSystem will define an optional "
       "hosting relationship. Examples of each of these are the "
       "PolicyRuleInSystem and PolicyConditionIn PolicyRepository "
       "associations, respectively." )]
class CIM_PolicyInSystem : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The hosted Policy." )]
   CIM_Policy REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicySetInSystem is an abstract association class that "
       "represents a relationship between a System and a PolicySet "
       "used in the administrative scope of that system (e.g., "
       "AdminDomain, ComputerSystem). The Priority property is used to "
       "assign a relative priority to a PolicySet within the "
       "administrative scope in contexts where it is not a component "
       "of another PolicySet." )]
class CIM_PolicySetInSystem : CIM_PolicyInSystem {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The System in whose scope a PolicySet is defined." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A PolicySet named within the scope of a System." )]
   CIM_PolicySet REF Dependent;

      [Description ( 
          "The Priority property is used to specify the relative "
          "priority of the referenced PolicySet when there are more "
          "than one PolicySet instances applied to a managed "
          "resource that are not PolicySetComponents and, "
          "therefore, have no other relative priority defined. The "
          "priority is a non-negative integer; a larger value "
          "indicates a higher priority." )]
   uint16 Priority;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  PRS_SISService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "PRS::Support" ), 
    Description ( 
       "The PRS_SISService is used as a class factory for PRS_Transactions."
        )]
class PRS_SISService : CIM_Service {


      [Description ( 
          "When invoked on a local system, this method validates "
          "the objects in the local repository, to determine if "
          "they are sufficient for the indicated (input parameter) "
          "TransactionType. If not, an error is returned and no "
          "additional processing is performed. If the repository is "
          "successfully validated, this method creates a "
          "PRS_Transaction instance for return to the caller. \n"
          "\n"
          "The method also reviews the repository looking for new, "
          "modified or deleted objects. As these objects are "
          "located, their keys are appended to the related strings "
          "in the PRS_Activity instance referenced by another "
          "parameter of this method. \n"
          "\n"
          "After all the appropriate new, modified or deleted "
          "objects have been located, this method invokes the "
          "PRS_SISService\'s StartSISTransaction method on the "
          "remote system specified by the objects related to the "
          "Service Incident, associated with the PRS_Activity "
          "instance specified as a method parameter. The "
          "TransactionType and PRS_Activity REF is forwarded to the "
          "remote system as method parameters as well as the "
          "PRS_Transaction REF for the instance created by this "
          "method. \n"
          "\n"
          "The remote system creates a child namespace using the "
          "PRS_Transaction REF for the name. The local system then "
          "transfers all of the new, modified and deleted objects "
          "to the namespace on the remote system. Once all objects "
          "have been successfully transferred, the PRS_SISService\'s "
          "EndSISTransaction method is invoked on the remote system "
          "with a Status value of zero to indicate that the remote "
          "system should attempt to commit the transaction to the "
          "remote repository. \n"
          "\n"
          "The remote system passes the results of the remote "
          "commit back to the originating system by invoking the "
          "PRS_SISService\'s SetSISCompletionStatus method on the "
          "system that originated the SIS transaction. The "
          "CompletionStatus method parameter indicates whether the "
          "remote commit was successful. If the CompletionStatis is "
          "zero, the remote commit was successful. If it was "
          "unsuccessful, the objects were not applied to the remote "
          "repository and the CompletionStatus is non-zero, "
          "indicating the error. The local invocation of the SetSIS "
          "CompletionStatus method updates the specified "
          "PRS_Transaction\'s TransactionState to Closed and "
          "CompletionStatus to the value provided by the remote "
          "system in the CompletionStatus method parameter. \n"
          "\n"
          "In order to promote extensibility, the uint32 return "
          "values for PRS_SISService\'s methods and Status-related "
          "parameters are mapped into three sections. The first "
          "describes the type of value being reported. It indicates "
          "Error versus Notification, and Standard versus "
          "Vendor-Specific. \n"
          "\n"
          "The second section describes the source of the value. It "
          "indicates Method, Operating System, Repository, or "
          "Transport. In addition, this section indicates whether "
          "the value was created locally or remotely. \n"
          "\n"
          "The third section is the specific return value. \n"
          "\n"
          "If all 32 bits of the return value are reset, the method "
          "completed successfully. Any other value indicates an "
          "error condition or notification. If D31 is set, the "
          "method did not complete successfully. If D31 is reset, "
          "but the rest of the return value is non-zero, this is a "
          "Notification that the operation did complete "
          "successfully, but that there is a conditon of which the "
          "caller should be aware. \n"
          "\n"
          "If D30 is set, the return value is vendor specific. If "
          "D30 is reset, the return value is defined by the "
          "standard. \n"
          "\n"
          "If D29 is set, the return value was generated by a "
          "remote system. If D29 is reset, the return value was "
          "generated locally. The bit is always set or reset by the "
          "local system. The local system sets the bit if it "
          "receives a non-zero return value from a remote method "
          "invocation. \n"
          "\n"
          "Bit D28 is reserved for future use and shall be reset on "
          "all return values. \n"
          "\n"
          "When there is an error or notification, D24 through D27 "
          "indicate its source. The following sources are currently "
          "defined (D24 is the least significant bit below): \n"
          "0000 Method \n"
          "0001 Operating System \n"
          "0010 Repository \n"
          "0011 Transport \n"
          "All remaining values are reserved. \n"
          "\n"
          "Bits D16 through D23 are reserved for future use and "
          "shall be reset to zero. \n"
          "\n"
          "Bits D0 through D15 indicate the specific return value. "
          "If zero, all other bits in the return value must be "
          "zero, indicating successful completion of the method (or "
          "Transaction)." )]
   uint32 StartSISTransaction(
         [IN, Description ( 
             "The specific SIS transaction represented by this instance."
              ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
             "9", "10", "11", "254", "255" }, 
          Values { "Service_Request", "Entitlement", 
             "Problem_Submittal", "Accept_Problem", 
             "Problem_Resolution", "Request_Problem_Information", 
             "Provide_Problem_Information", 
             "Provide_Admin_Information", "Query_Incident", 
             "Confirm_Close", "Reject_Resolution", 
             "Request_Closure", "Other", "Unknown" }]
      uint8 TransactionType, 
         [IN, Description ( 
             "TransactionRef identifies the PRS_Transaction to "
             "commit or abort. If this property is NULL or does "
             "not identify an \'Open\' transaction, this method "
             "returns an error." )]
      PRS_Activity REF ActivityRef, 
         [IN, OUT, Description ( 
             "ActivityRef associates a time and description of "
             "the activity involved in the service incident "
             "transaction." )]
      PRS_Transaction REF TransactionRef);

      [Description ( 
          "The EndSISTransaction method is used to handle "
          "committing or aborting a transaction. For commit, the "
          "method is invoked by a remote system when all of the "
          "objects associated with the transaction have been placed "
          "in the child namespace created by StartSISTransaction. \n"
          "\n"
          "For abort, the method cleans up the child namespace and "
          "closes the specified PRS_Transaction, setting the "
          "Transaction\'s CompletionStatus to the method parameter "
          "of the same name." )]
   uint32 EndSISTransaction(
         [IN, Description ( 
             "Status indicates whether the transaction is to be "
             "committed or aborted. If Status is zero, the "
             "transaction is to be committed. If Status is "
             "non-zero, it indicates the transaction is to be "
             "aborted. If the transaction is being aborted, the "
             "Status field is passed back to the originating "
             "system as the CompletionStatus parameter for the "
             "PRS_SISService SetSISCompletionStatus method. See "
             "the description for "
             "PRS_SISService.StartSISTransaction for the "
             "definition of the contents of this property." )]
      uint32 Status, 
         [IN, Description ( 
             "TransactionRef identifies the PRS_Transaction to "
             "commit or abort. If this property is NULL or does "
             "not identify an \'Open\' transaction, this method "
             "returns an error." )]
      PRS_Transaction REF TransactionRef);

      [Description ( 
          "SetSISCompletionStatus is used to signal the system that "
          "originated a PRS_Transaction that the remote system has "
          "completed processing of the transaction. If the "
          "processing was successful, as indicated by the "
          "CompletionStatus parameter, the local system resets the "
          "DirtyFlag for all of the objects identified in the "
          "PRS_Activity instance associated with the "
          "PRS_Transaction." )]
   uint32 SetSISCompletionStatus(
         [IN, Description ( 
             "This parameter is used to set the CompletionStatus "
             "field of the specified PRS_Transaction. If zero, "
             "the Transaction was completed successfully. If "
             "non-zero, an error occurred and the objects "
             "provided in StartSISTransaction were not submitted "
             "to the remote repository. See the description for "
             "PRS_SISService.StartSISTransaction for the "
             "definition of the contents of this property." )]
      uint32 CompletionStatus, 
         [IN, Description ( 
             "TransactionRef identifies the PRS_Transaction that "
             "has completed. If this property is NULL or does "
             "not identify an \'Open\' transaction, this method "
             "returns an error." )]
      PRS_Transaction REF TransactionRef);

};

//Copyright (c) 2008 DMTF. All RIghts Reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::BIOS" ), 
    Description ( 
       "A class derived from Service that provides the controls to "
       "manage the system BIOS configuration of a managed computer "
       "system or device. This service exposes functionality to "
       "retrieve BIOS configuration data or attributes, set BIOS "
       "attribute values, and restore a default configuration of "
       "attribute values for a given computer system." )]
class CIM_BIOSService : CIM_Service {


      [Description ( 
          "This method is called to modify instances of "
          "BIOSAttribute associated with this BIOSService.If this "
          "method is not supported by the implementation, 1 (Not "
          "Supported) shall be returned. If the method is "
          "supported, but has not completed due to an unspecified "
          "error, 2 (Error) shall be returned. If the method is "
          "supported and has completed successfully, 0 (Completed "
          "with No Error) shall be returned. The method may return "
          "an instance of CIM_Error." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", "Error", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 SetBIOSAttribute(
         [IN, Description ( 
             "If supplied, TargetBIOS references the scoping "
             "instance of CIM_BIOSElement in which the operation "
             "is targeted. If TargetBIOS is not supplied, the "
             "target of the operation shall be the current "
             "instance of CIM_BIOSElement associated to the "
             "CIM_ComputerSystem hosting the service." )]
      CIM_BIOSElement REF TargetBIOS, 
         [Required, IN, Description ( 
             "A reference to a BIOSAttribute specified by "
             "AttributeName of the BIOSAttribute to be modified." )]
      string AttributeName, 
         [Required, IN, Description ( 
             "A new value to assign to the specified "
             "BIOSAttribute. A value of NULL indicates the "
             "factory default value for the BIOSAttribute is "
             "requested. If this value is valid, it will be "
             "applied to the CurrentValue or PendingValue "
             "property of the specified BIOSAttribute depending "
             "on the system BIOS implementation and any "
             "requirements for a system restart." )]
      string AttributeValue[], 
         [IN, Description ( 
             "When required, a token to modify BIOSAttribute "
             "values for this computer system. This is usually "
             "the BIOS administrator password. If this is a "
             "password, the PasswordEncoding parameter shall be "
             "used to denote the format of the password string. "
             "For example: the CIM_SharedCredential subclass may "
             "be utilized. In that case, the "
             "CIM_SharedCredential.Secret might be required and "
             "if is not specified this method would return 6 "
             "Invalid Parameter. The "
             "CIM_SharedCredential.Algorithm property might also "
             "be specified based on the property "
             "CIM_BIOSServiceCapabilities.SupportedPasswordAlgorithms."
              ), 
          EmbeddedInstance ( "CIM_Credential" )]
      string AuthorizationToken, 
         [IN, Description ( 
             "PasswordEncoding specifies encoding tag used to "
             "denote the format the password string is being "
             "passed into the BIOS. \"kbd\" denotes a string in "
             "hexadecimal format containing keyboard scan code "
             "input. An example of a password structured in this "
             "format would be \"321539191E1F1F11181320\", which "
             "is the representation of \"my password\" in US "
             "English keyboard scan codes. \"ascii\" denotes "
             "clear text that shall comply with the ASCII "
             "character set. Character encodings from \" \" "
             "(decimal 32) to \"~\" (decimal 126) are supported. "
             "An example would be \"my password\".\"pin\" "
             "denotes that only numeric input in ASCII text is "
             "allowed for the password instance. An example "
             "would be \"1234\"." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "ascii", "kbd", "pin", "UTF16", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint32 PasswordEncoding, 
         [IN ( false ), OUT, Description ( 
             "Invoking the SetBIOSAttribute may result in a set "
             "to CurrentValue property or the PendingValue "
             "property. SetResult returns the result of invoking "
             "the SetBIOSAttribute method when the method return "
             "code is 0 completed with no error." ), 
          ValueMap { "2", "3", "..", "32768..65535" }, 
          Values { "Set CurrentValue property", 
             "Set PendingValue property", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint32 SetResult);

      [Description ( 
          "This method is called to modify instances of "
          "BIOSAttribute associated with this BIOSService using an "
          "embedded instance If this method is not supported by the "
          "implementation, 1 (Not Supported) shall be returned. If "
          "the method is supported, but has not completed due to an "
          "unspecified error, 2 (Error) shall be returned. If the "
          "method is supported and has completed successfully, 0 "
          "(Completed with No Error) shall be returned. The method "
          "may return an instance of CIM_Error." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", "Error", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 SetBIOSAttributeEmbeddedInstance(
         [IN, Description ( 
             "If supplied, TargetBIOS references the scoping "
             "instance of CIM_BIOSElement in which the operation "
             "is targeted. If TargetBIOS is not supplied, the "
             "target of the operation shall be the current "
             "instance of CIM_BIOSElement associated to the "
             "CIM_ComputerSystem hosting the service." )]
      CIM_BIOSElement REF TargetBIOS, 
         [Required, IN, Description ( 
             "AttributeConfig is the input required to modify "
             "the value of a BIOSAttribute. The "
             "CIM_BIOSAttribute.AttributeName and the "
             "CIM_BIOSAttribute.CurrentValue properties are "
             "Required for this operation. If both properties "
             "are not specified the service shall return 6 "
             "Invalid Parameter." ), 
          EmbeddedInstance ( "CIM_BIOSAttribute" )]
      string AttributeConfig, 
         [IN, Description ( 
             "When required, a token to modify BIOSAttribute "
             "values for this computer system. This is usually "
             "the BIOS administrator password. If this is a "
             "password, the PasswordEncoding parameter shall be "
             "used to denote the format of the password string. "
             "For example: the CIM_SharedCredential subclass may "
             "be utilized. In that case, the "
             "CIM_SharedCredential.Secret might be required and "
             "if is not specified this method would return 6 "
             "Invalid Parameter. The "
             "CIM_SharedCredential.Algorithm property might also "
             "be specified based on the property "
             "CIM_BIOSServiceCapabilities.SupportedPasswordAlgorithms."
              ), 
          EmbeddedInstance ( "CIM_Credential" )]
      string AuthorizationToken, 
         [IN, Description ( 
             "PasswordEncoding specifies encoding tag used to "
             "denote the format the password string is being "
             "passed into the BIOS. This property is applicable "
             "if the AuthorizationToken parameter includes a password.\n"
             "\"kbd\" denotes a string in hexadecimal format "
             "containing keyboard scan code input. An example of "
             "a password structured in this format would be "
             "\"321539191E1F1F11181320\", which is the "
             "representation of \"my password\" in US English "
             "keyboard scan codes. \"ascii\" denotes clear text "
             "that shall comply with the ASCII character set. "
             "Character encodings from \" \" (decimal 32) to \"~\" "
             "(decimal 126) are supported. An example would be "
             "\"my password\".\"pin\" denotes that only numeric "
             "input in ASCII text is allowed for the password "
             "instance. An example would be \"1234\"." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "ascii", "kbd", "pin", "UTF16", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint32 PasswordEncoding, 
         [IN ( false ), OUT, Description ( 
             "Invoking the SetBIOSAttributeEmbeddedInstance may "
             "result in a set to CurrentValue property or the "
             "PendingValue property. SetResult returns the "
             "result of invoking the "
             "SetBIOSAttributeEmbeddedInstance method when the "
             "method return code is 0 completed with no error." ), 
          ValueMap { "2", "3", "..", "32768..65535" }, 
          Values { "Set CurrentValue property", 
             "Set PendingValue property", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint32 SetResult);

      [Description ( 
          "This method provides the ability to perform raw reads of "
          "BIOS configuration storage area. The method will return "
          "the lesser of the number of bytes specified by the "
          "NumberOfBytes parameter and the actual number of bytes "
          "available between Offset and the end of the BIOS area, "
          "starting at specified by the Offset parameter "
          "arereturned in the Data parameter." ), 
       ValueMap { "0", "1", "2", "..", "65536..4294967295" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint32 ReadRawBIOSData(
         [IN, Description ( 
             "If supplied, TargetBIOS references the scoping "
             "instance of CIM_BIOSElement in which the operation "
             "is targeted. If TargetBIOS is not supplied, the "
             "target of the operation shall be the current "
             "instance of CIM_BIOSElement associated to the "
             "CIM_ComputerSystem hosting the service." )]
      CIM_BIOSElement REF TargetBIOS, 
         [Required, IN, Description ( 
             "Specifies initial offset to start reading from." )]
      uint32 Offset, 
         [Required, IN, OUT, Description ( 
             "On input, specifies the number of bytes to read. "
             "On output, specifies the number of bytes read." )]
      uint32 NumberOfBytes, 
         [IN ( false ), OUT, Description ( 
             "Buffer to contain read data." ), 
          OctetString]
      uint8 Data[]);

      [Description ( 
          "This method provides the ability to perform raw writes "
          "of BIOS configuration storage area. The number of bytes "
          "specified by the Length parameter will be written from "
          "the Data parameter specified by the Offset parameter. If "
          "the number of bytes to write as indicated by the "
          "NumberOfBytes parameter exceeds the number of bytes from "
          "Offset to the end of the BIOS area, the method shall "
          "return 2." ), 
       ValueMap { "0", "1", "2", "..", "65536..4294967295" }, 
       Values { "Completed with  No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint32 WriteRawBIOSData(
         [IN, Description ( 
             "If supplied, TargetBIOS references the scoping "
             "instance of CIM_BIOSElement in which the operation "
             "is targeted. If TargetBIOS is not supplied, the "
             "target of the operation shall be the current "
             "instance of CIM_BIOSElement associated to the "
             "CIM_ComputerSystem hosting the service." )]
      CIM_BIOSElement REF TargetBIOS, 
         [Required, IN, Description ( 
             "Specifies initial offset to start reading from." )]
      uint32 Offset, 
         [Required, IN, OUT, Description ( 
             "On input, specifies the number of bytes of data to "
             "write. On output, specifies the number of bytes "
             "written." )]
      uint32 NumberOfBytes, 
         [IN, Description ( "Buffer containing data to write." ), 
          OctetString]
      uint8 Data[], 
         [IN, Description ( 
             "A token required to modify BIOSAttribute values "
             "for this computer system. This is usually the BIOS "
             "administrator password. For example: the "
             "CIM_SharedCredential subclass may be utilized. In "
             "that case, the CIM_SharedCredential.Secret might "
             "be required and if is not specified this method "
             "would return 6 Invalid Parameter. The "
             "CIM_SharedCredential.Algorithm property might also "
             "be specified based on the "
             "propertyCIM_BIOSServiceCapabilities.SupportedPasswordAlgorithms."
              ), 
          EmbeddedInstance ( "CIM_Credential" )]
      string AuthorizationToken, 
         [IN, Description ( 
             "PasswordEncoding specifies encoding tag used to "
             "denote the format the password string is being "
             "passed into the BIOS. This property is applicable "
             "if the AuthorizationToken parameter includes a "
             "password. \n"
             "\"kbd\" denotes a string in hexadecimal format "
             "containing keyboard scan code input. An example of "
             "a password structured in this format would be "
             "\"321539191E1F1F11181320\", which is the "
             "representation of \"my password\" in US English "
             "keyboard scan codes. \"ascii\" denotes clear text "
             "that shall comply with the ASCII character set. "
             "Character encodings from \" \" (decimal 32) to \"~\" "
             "(decimal 126) are supported. An example would be "
             "\"my password\".\"pin\" denotes that only numeric "
             "input in ASCII text is allowed for the password "
             "instance. An example would be \"1234\"." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "ascii", "kbd", "pin", "UTF16", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint32 PasswordEncoding);

      [Description ( 
          "This method is called to modify a group of BIOSAttribute "
          "instances associated with this BIOSService. If the "
          "method is not supported by the implementation, 1 (Not "
          "Supported) shall be returned. If the method is "
          "supported, but has not completed due to an unspecified "
          "error, 2 (Error) shall be returned. If the method is "
          "supported and has completed successfully, 0 (Completed "
          "with No Error) shall be returned; SetResult[] should be "
          "inspected to determine if individual BIOS Attribute "
          "values have been set. The method may return an instance "
          "of CIM_Error." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", "Error", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 SetBIOSAttributes(
         [IN, Description ( 
             "If supplied, TargetBIOS references the scoping "
             "instance of CIM_BIOSElement in which the operation "
             "is targeted. If TargetBIOS is not supplied, the "
             "target of the operation shall be the current "
             "instance of CIM_BIOSElement associated to the "
             "CIM_ComputerSystem hosting the service." )]
      CIM_BIOSElement REF TargetBIOS, 
         [IN, Description ( 
             "If supplied, the ConcreteCollection containing the "
             "BIOS Attributes to be modified, as specified by "
             "the ConcreteCollection.ElementName property. The "
             "value of ConcreteCollection.ElementName supplied "
             "for this parameter must be unique within the scope "
             "of the instantiating Namespace; if the value is "
             "not unique, this parameter shall not be supplied. "
             "If BIOS Attributes represented by the "
             "AttributeName[] parameter are not members of this "
             "collection, the SetResult parameter that "
             "corresponds to these BIOS Attributes shall return "
             "5 (No Attempt to Set Value due to Error). If "
             "CollectionElementName is not specified, the BIOS "
             "Attributes represented by the AttributeName[] "
             "parameter can be members of any collection or "
             "associated with no collection at all." )]
      string CollectionElementName, 
         [Required, IN, Description ( 
             "The BIOS Attribute names representing the BIOS "
             "Attributes to be modified, as specified by "
             "BIOSAttribute.AttributeName properties. The "
             "specified BIOS Attributes must already exist. The "
             "values of BIOSAttribute.AttributeName supplied for "
             "this parameter must be unique within the scope of "
             "the instantiating Namespace. The BIOS Attribute "
             "name members of this array must correspond with "
             "array members of the values represented by the "
             "AttributeValue[] parameter. If more than one value "
             "is specified for a particular BIOS Attribute, this "
             "parameter shall contain multiple identical array "
             "entries describing the BIOS Attribute name that "
             "corresponds with each respective BIOS Attribute "
             "value specified by the AttributeValue[] parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_BIOSAttribute.AttributeName", 
             "CIM_BIOSService.SetBIOSAttributes.AttributeValue" }]
      string AttributeName[], 
         [Required, IN, Description ( 
             "New values to assign to the BIOS Attributes "
             "specified in the AttributeName[] parameter. The "
             "BIOS Attribute value members of this array must "
             "correspond with the array members of the names "
             "represented by the AttributeName[] parameter. If "
             "more than one value is specified for a particular "
             "BIOS Attribute, this parameter shall contain an "
             "entry for each BIOS Attribute value. A value of "
             "NULL indicates the factory default values for the "
             "BIOSAttribute is requested. If this value is "
             "valid, it will be applied to the CurrentValue or "
             "PendingValue property of the specified "
             "BIOSAttribute depending on the system BIOS "
             "implementation and any requirements for a system "
             "restart. The result of applying the values are "
             "described in the corresponding array entries of "
             "the SetResult[] parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { "CIM_BIOSAttribute.CurrentValue", 
             "CIM_BIOSAttribute.PendingValue", 
             "CIM_BIOSService.SetBIOSAttributes.AttributeName", 
             "CIM_BIOSService.SetBIOSAttributes.SetResult" }]
      string AttributeValue[], 
         [IN, Description ( 
             "When required, a token to modify BIOSAttribute "
             "values for this computer system. This is usually "
             "the BIOS administrator password. If this is a "
             "password, the PasswordEncoding parameter shall be "
             "used to denote the format of the password string. "
             "For example: the CIM_SharedCredential subclass may "
             "be utilized. In that case, the "
             "CIM_SharedCredential.Secret might be required and "
             "if is not specified this method would return 6 "
             "Invalid Parameter. The "
             "CIM_SharedCredential.Algorithm property might also "
             "be specified based on the "
             "propertyCIM_BIOSServiceCapabilities.SupportedPasswordAlgorithms."
              ), 
          EmbeddedInstance ( "CIM_Credential" )]
      string AuthorizationToken, 
         [IN, Description ( 
             "PasswordEncoding specifies encoding tag used to "
             "denote the format the password string is being "
             "passed into the BIOS. \"kbd\" denotes a string in "
             "hexadecimal format containing keyboard scan code "
             "input. An example of a password structured in this "
             "format would be \"321539191E1F1F11181320\", which "
             "is the representation of \"my password\" in US "
             "English keyboard scan codes. \"ascii\" denotes "
             "clear text that shall comply with the ASCII "
             "character set. Character encodings from \" \" "
             "(decimal 32) to \"~\" (decimal 126) are supported. "
             "An example would be \"my password\".\"pin\" "
             "denotes that only numeric input in ASCII text is "
             "allowed for the password instance. An example "
             "would be \"1234\"." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "ascii", "kbd", "pin", "UTF16", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint32 PasswordEncoding, 
         [IN ( false ), OUT, Description ( 
             "Invoking SetBIOSAttributes may result in new "
             "values for BIOS Attributes specified in the "
             "AttributeName[] parameter. SetResult returns the "
             "results of invoking this method for each specified "
             "attribute value. Each array element of SetResult "
             "contains the result of setting the new value that "
             "corresponds with each respective BIOS Attribute "
             "value specified by the AttributeValue[] parameter. "
             "If the BIOSAttribute.CurrentValue property is set "
             "to the new value, 2 (Set CurrentValue Property) "
             "shall be returned. If the "
             "BIOSAttribute.PendingValue property is set to the "
             "new value, 3 (Set PendingValue Property) shall be "
             "returned. If an unspecified error occurred while "
             "setting the value, 4 (Error Setting Value) shall "
             "be returned. If there was no attempt to set the "
             "value due to a prior unspecified error, 5 (No "
             "Attempt to Set Value due to Error) shall be "
             "returned. If a previously set value was "
             "rolled-back to its original value due to a prior "
             "unspecified error, 6 (Value Rolled-Back) shall be "
             "returned." ), 
          ValueMap { "2", "3", "4", "5", "6", "..", "32768..65535" }, 
          Values { "Set CurrentValue Property", 
             "Set PendingValue Property", "Error Setting Value", 
             "No Attempt to Set Value due to Error", 
             "Value Rolled-Back", "DMTF Reserved", 
             "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { "CIM_BIOSAttribute.CurrentValue", 
             "CIM_BIOSAttribute.PendingValue", 
             "CIM_BIOSService.SetBIOSAttributes.AttributeName", 
             "CIM_BIOSService.SetBIOSAttributes.AttributeValue" }]
      uint32 SetResult[]);

};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "A class derived from SettingData that provides the container "
       "to arrange all the BootSourceSetting instances in an ordered "
       "sequence. There can be one or more of the BootConfigSetting "
       "instances associated to a ComputerSystem. For example, one "
       "such BootConfigSetting could be a default boot configuration "
       "supplied by the manufacturer, a second one could be a "
       "configuration recommended by the IT Administrator. A third one "
       "could be the one actually to be used on next system boot." )]
class CIM_BootConfigSetting : CIM_SettingData {


      [Description ( 
          "This method is called to change the boot order within a "
          "boot configuration. An ordered array of "
          "BootSourceSetting instances is passed to this method. "
          "Each BootSourceSetting instance MUST already be "
          "associated with this BootConfigSetting instance via an "
          "instance of OrderedComponent. If not, the implementation "
          "MUST return a value of \"Invalid Parameter\" Upon "
          "execution of this method, the value of the "
          "AssignedSequence property on each instance of "
          "OrderedComponent will be updated such that the values "
          "are monotonically increasing in correlation with the "
          "position of the referenced BootSourceSetting instance in "
          "the source input parameter. That is, the first position "
          "in the array will have the lowest value for "
          "AssignedSequence. The second position will have the "
          "second lowest value, and so on. For BootSourceSetting "
          "instances which are associated with the "
          "BootConfigSetting instance via OrderedComponent and not "
          "present in the input array, the AssignedSequence "
          "property on the OrderedComponent association will be "
          "assigned a value of 0." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 ChangeBootOrder(
         [IN, Description ( 
             "An ordered array of BootSourceSettings." )]
      CIM_BootSourceSetting REF Source[], 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "This method validates all settings associated with the "
          "BootConfigSetting. This is to make sure that all the "
          "settings of the newly created BootConfigSetting are "
          "consistent with the system configuration. This method "
          "returns True or False. True would only mean that the "
          "instrumentation has made a consistency check based on "
          "its current knowledge of the system, and does not "
          "actually guarantee the success of boot process." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Settings Validated OK", "Conflicting Settings", 
          "Unknown/Unspecified Error", "Busy", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 ValidateSettings(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BootSAP 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "A representation of the access points of a BootService." )]
class CIM_BootSAP : CIM_ServiceAccessPoint {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClusteringSAP 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A representation of the access points of a ClusteringService." )]
class CIM_ClusteringSAP : CIM_ServiceAccessPoint {


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A class derived from System that is a special collection of "
       "ManagedSystemElements. This collection is related to the "
       "providing of compute capabilities and MAY serve as an "
       "aggregation point to associate one or more of the following "
       "elements: FileSystem, OperatingSystem, Processor and Memory "
       "(Volatile and/or NonVolatile Storage)." )]
class CIM_ComputerSystem : CIM_System {

      [Override ( "NameFormat" ), 
       Description ( 
          "The ComputerSystem object and its derivatives are Top "
          "Level Objects of CIM. They provide the scope for "
          "numerous components. Having unique System keys is "
          "required. The NameFormat property identifies how the "
          "ComputerSystem Name is generated. The NameFormat "
          "ValueMap qualifier defines the various mechanisms for "
          "assigning the name. Note that another name can be "
          "assigned and used for the ComputerSystem that better "
          "suit a business, using the inherited ElementName property.\n"
          "If the NameFormat is set to \"UUID\", then the Name "
          "property shall be a UUID in its canonical form "
          "consisting of 32 hexadecimal digits in 5 groups "
          "separated by hyphens, in the form 8-4-4-4-12 for a total "
          "of 36 characters (32 digits and 4 hyphens). For the "
          "first three fields, the most significant digit is on the "
          "left. The last two fields are treated as eight separate "
          "bytes, each having their most significant digit on the "
          "left, and they follow each other from left to right." ), 
       ValueMap { "Other", "IP", "Dial", "HID", "NWA", "HWA", "X25", 
          "ISDN", "IPX", "DCC", "ICD", "E.164", "SNA", "OID/OSI", 
          "WWN", "NAA", "UUID" }]
   string NameFormat;

      [Description ( 
          "Enumeration indicating the purpose(s) to which the "
          "ComputerSystem is dedicated, if any, and what "
          "functionality is provided. For example, one could "
          "specify that the System is dedicated to \"Print\" "
          "(value=11) or acts as a \"Hub\" (value=8). \n"
          "Also, one could indicate that this is a general purpose "
          "system by indicating \'Not Dedicated\' (value=0) but "
          "that it also hosts \'Print\' (value=11) or mobile phone "
          "\'Mobile User Device\' (value=17) services. \n"
          "A clarification is needed with respect to the value 17 "
          "(\"Mobile User Device\"). An example of a dedicated user "
          "device is a mobile phone or a barcode scanner in a store "
          "that communicates via radio frequency. These systems are "
          "quite limited in functionality and programmability, and "
          "are not considered \'general purpose\' computing "
          "platforms. Alternately, an example of a mobile system "
          "that is \'general purpose\' (i.e., is NOT dedicated) is "
          "a hand-held computer. Although limited in its "
          "programmability, new software can be downloaded and its "
          "functionality expanded by the user. \n"
          "A value of \"Management\" indicates this instance is "
          "dedicated to hosting system management software.\n"
          "A value of \"Management Controller\" indicates this "
          "instance represents specialized hardware dedicated to "
          "systems management (i.e., a Baseboard Management "
          "Controller (BMC) or service processor).\n"
          "The management scope of a \"Management Controller\" is "
          "typically a single managed system in which it is contained.\n"
          "A value of \"Chassis Manager\" indicates this instance "
          "represents a system dedicated to management of a blade "
          "chassis and its contained devices. This value would be "
          "used to represent a Shelf Controller. A \"Chassis "
          "Manager\" is an aggregation point for management and may "
          "rely on subordinate management controllers for the "
          "management of constituent parts. A value of \"Host-based "
          "RAID Controller\" indicates this instance represents a "
          "RAID storage controller contained within a host "
          "computer. A value of \"Storage Device Enclosure\" "
          "indicates this instance represents an enclosure that "
          "contains storage devices. A \"Virtual Tape Library\" is "
          "the emulation of a tape library by a Virtual Library "
          "System. A \"Virtual Library System\" uses disk storage "
          "to emulate tape libraries.A \"FC Switch\" indicates this "
          "instance is dedicated to switching layer 2 fibre channel "
          "frames. An \"Ethernet Switch\" indicates this instance "
          "is dedicated to switching layer 2 ethernet frames." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "..", "32568..65535" }, 
       Values { "Not Dedicated", "Unknown", "Other", "Storage", 
          "Router", "Switch", "Layer 3 Switch", 
          "Central Office Switch", "Hub", "Access Server", 
          "Firewall", "Print", "I/O", "Web Caching", "Management", 
          "Block Server", "File Server", "Mobile User Device", 
          "Repeater", "Bridge/Extender", "Gateway", 
          "Storage Virtualizer", "Media Library", "ExtenderNode", 
          "NAS Head", "Self-contained NAS", "UPS", "IP Phone", 
          "Management Controller", "Chassis Manager", 
          "Host-based RAID controller", "Storage Device Enclosure", 
          "Desktop", "Laptop", "Virtual Tape Library", 
          "Virtual Library System", "Network PC/Thin Client", 
          "FC Switch", "Ethernet Switch", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       MappingStrings { "MIB.IETF|MIB-II.sysServices", 
          "FC-GS.INCITS-T11 | Platform | PlatformType" }, 
       ModelCorrespondence { 
          "CIM_ComputerSystem.OtherDedicatedDescriptions" }]
   uint16 Dedicated[];

      [Description ( 
          "A string describing how or why the system is dedicated "
          "when the Dedicated array includes the value 2, \"Other\"." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_ComputerSystem.Dedicated" }]
   string OtherDedicatedDescriptions[];

      [Description ( 
          "If enabled (value = 4), the ComputerSystem can be reset "
          "via hardware (e.g. the power and reset buttons). If "
          "disabled (value = 3), hardware reset is not allowed. In "
          "addition to Enabled and Disabled, other Values for the "
          "property are also defined - \"Not Implemented\" (5), "
          "\"Other\" (1) and \"Unknown\" (2)." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Disabled", "Enabled", 
          "Not Implemented" }, 
       MappingStrings { "MIF.DMTF|System Hardware Security|001.4" }]
   uint16 ResetCapability;

      [Deprecated { 
          "CIM_PowerManagementCapabilities.PowerCapabilities" }, 
       Description ( 
          "An enumerated array describing the power management "
          "capabilities of the ComputerSystem. The use of this "
          "property has been deprecated. Instead, the Power "
          "Capabilites property in an associated PowerManagement "
          "Capabilities class should be used." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Not Supported", "Disabled", "Enabled", 
          "Power Saving Modes Entered Automatically", 
          "Power State Settable", "Power Cycling Supported", 
          "Timed Power On Supported" }, 
       MappingStrings { "MIF.DMTF|System Power Controls|001.2" }]
   uint16 PowerManagementCapabilities[];


      [Deprecated { "CIM_PowerManagementService.SetPowerState" }, 
       Description ( 
          "Sets the power state of the computer. The use of this "
          "method has been deprecated. Instead, use the "
          "SetPowerState method in the associated "
          "PowerManagementService class." )]
   uint32 SetPowerState(
         [IN, Description ( 
             "The Desired state for the COmputerSystem." ), 
          ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
          Values { "Full Power", "Power Save - Low Power Mode", 
             "Power Save - Standby", "Power Save - Other", 
             "Power Cycle", "Power Off", "Hibernate", "Soft Off" }]
      uint32 PowerState, 
         [IN, Description ( 
             "Time indicates when the power state should be set, "
             "either as a regular date-time value or as an "
             "interval value (where the interval begins when the "
             "method invocation is received." )]
      datetime Time);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00774" type ="change">Remove reference to
// UnitaryComputerSystem. </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemPackage
// ==================================================================
   [Association, Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "Similar to the way that LogicalDevices are \'Realized\' by "
       "PhysicalElements, ComputerSystem may be realized realized in "
       "one or more PhysicalPackages. The ComputerSystemPackage "
       "association explicitly defines this relationship." )]
class CIM_ComputerSystemPackage : CIM_SystemPackaging {

      [Override ( "Antecedent" ), 
       Description ( 
          "The PhysicalPackage(s) that realize a Unitary ComputerSystem."
           )]
   CIM_PhysicalPackage REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The UnitaryComputerSystem." )]
   CIM_ComputerSystem REF Dependent;

      [Description ( 
          "A Gloabally Unique Identifier for the System\'s Package." )]
   string PlatformGUID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceAccessedByFile 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "Specifies the LogicalDevice that is associated with, and "
       "accessed using the referenced DeviceFile." )]
class CIM_DeviceAccessedByFile : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The DeviceFile." )]
   CIM_DeviceFile REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The Device that is accessed using the DeviceFile." )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "The CIM_DiagnosticService class provides the ability to start "
       "a service that functions to participate in a problem "
       "determination process. Specific diagnostic services SHOULD be "
       "defined by subclassing this class. Examples of a diagnostic "
       "service are tests, information retrievers, exercisers, and "
       "ports to external executives." )]
class CIM_DiagnosticService : CIM_Service {


      [Description ( 
          "The RunDiagnostic method executes this test for the "
          "specified ManagedSystemElement (defined using the "
          "SystemElement input parameter). The capabilities for the "
          "diagnostic service indicate where the results from the "
          "test job are stored. How the test should execute, i.e. "
          "its settings, is defined in a DiagnosticSetting object "
          "(or by a subclass of DiagnosticSetting). A reference to "
          "a Setting object is specified using the Setting input "
          "parameter. If a reference is not passed into the method, "
          "then a default DiagnosticSetting SHALL be used. \n"
          "When RunDiagnostic starts execution, the settings, which "
          "are time sensitive, SHOULD be evaluated and captured. "
          "This is suggested since the DiagnosticSetting object MAY "
          "be modified at any time, and therefore the current test "
          "settings could be lost. \n"
          "If 0 is returned, the function completed successfully "
          "and no ConcreteJob instance is created. If 0x1000 a "
          "ConcreteJob will be started." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x1000", 
          "..", "0x8000.." }, 
       Values { "Job completed with no error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "DMTF Reserved", 
          "Method parameters checked - job started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RunDiagnostic(
         [IN, Description ( 
             "Specifies the element upon which the "
             "DiagnosticService SHOULD be run." )]
      CIM_ManagedElement REF ManagedElement, 
         [IN, Description ( 
             "Specifies the desired settings that SHOULD be "
             "applied to the Diagnostic. If null, then the "
             "Diagnostic\'s defaults MAY be used." )]
      CIM_DiagnosticSetting REF DiagSetting, 
         [IN, Description ( 
             "Specifies the desired settings that SHOULD be "
             "applied to the resulting Job. If null and a "
             "resulting Job is required (i.e., the Diagnostic is "
             "long running), then the test\'s defaults MAY be "
             "used." )]
      CIM_JobSettingData REF JobSetting, 
         [IN ( false ), OUT, Description ( 
             "Returns a handle to the resulting Job." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "The RunDiagnosticService method is invoked to commence "
          "execution of a diagnostic program on a specific managed "
          "element. The input parameters specify this managed "
          "element and the settings to be applied to the diagnostic "
          "and the resultant job. The method returns a reference to "
          "the ConcreteJob instance created. \n"
          "Prior to invoking this method, clients examine defaults "
          "and appropriate capabilities and create valid "
          "DiagnosticSettingData and JobSettingData instances to "
          "apply as input parameters. The RunDiagnosticService "
          "method SHALL evaluate and capture the attributes of "
          "DiagnosticSettingData in an instance of "
          "DiagnosticSettingDataRecord for use in post-mortem "
          "analysis of diagnostic results. \n"
          "A job SHALL be instantiated as a means for monitoring "
          "the diagnostic as it runs and to provide useful "
          "accounting and status information once the diagnostic "
          "has completed. \n"
          "The \"Busy\" return code indicates that the method "
          "cannot be invoked \"at this time\". It is not an error "
          "condition, but signals that the provider is doing "
          "something else and cannot respond." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "0x1000..0x7FFF", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Busy", "DMTF Reserved", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RunDiagnosticService(
         [IN, Description ( 
             "Specifies the element upon which the "
             "DiagnosticService SHOULD be run." )]
      CIM_ManagedElement REF ManagedElement, 
         [IN, Description ( 
             "A string containing an encoding of the "
             "DiagnosticSettingData instance to be applied to "
             "the diagnostic. If null, the diagnostic\'s "
             "defaults are used." ), 
          EmbeddedInstance ( "CIM_DiagnosticSettingData" )]
      string DiagnosticSettings, 
         [IN, Description ( 
             "A string containing an encoding of the "
             "JobSettingData instance to be applied to the "
             "resulting job. If null, the job\'s defaults are "
             "used." ), 
          EmbeddedInstance ( "CIM_JobSettingData" )]
      string JobSettings, 
         [IN ( false ), OUT, Description ( 
             "Returns a reference to the resulting Job." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "The CIM_DiagnosticTest class represents the framework for "
       "running diagnostic tests. Specific diagnostic tests may be "
       "defined by subclassing and/or instantiating this object. To "
       "provide more detail for a type of test(s) (i.e, additional "
       "properties and methods), subclassing is appropriate. \n"
       "When a DiagnosticTest can be simultaneously executed against "
       "several elements, then DiagnosticTest may launch a ConcreteJob "
       "to represent each execution." )]
class CIM_DiagnosticTest : CIM_DiagnosticService {

      [Description ( 
          "The descriptions for each Characteristic are below: \n"
          "\n"
          "* \"Is Exclusive\" (value=2) is specified for the test "
          "module only if the diagnostic cannot run more than one "
          "test at a time, regardless of how many SystemElements "
          "are supported. Typically, this occurs when hardware or "
          "software constraints prevent the test from running as "
          "multiple, concurrent instances. If the diagnostic can be "
          "run against multiple SystemElements, but only once per "
          "Element, then set the IsExclusiveForMSE boolean property "
          "on the appropriate instances of DiagnosticTestForMSE. \n"
          "\n"
          "* If \"Is Interactive\" (value=3) is set, then the "
          "diagnostic displays a message either before, during or "
          "after testing. \n"
          "\n"
          "* Set \"Is Destructive\" (value=4) if the diagnostic "
          "will destroy data, or reconfigure the Element that is "
          "being tested. \n"
          "\n"
          "* \"Is Risky\" (value=5) indicates that data loss may "
          "occur if the test is interrupted. Some tests make copies "
          "of data, perform the test, and restore the data "
          "returning the tested entity to its previous "
          "configuration. If the test is interrupted, then loss of "
          "data or reconfiguration of the tested "
          "ManagedSystemElement may occur. \n"
          "\n"
          "* If \"Is Package\" (value=6) is set, this test is "
          "actually a set of lower level diagnostics, that are "
          "packaged together by the test. This packaging is "
          "implemented by the diagnostic test, not aggregated by "
          "CIM. Information and results associated with the "
          "individual tests in the package may be requested by "
          "using the \"Subtests\" value in the "
          "DiagnosticSetting.LogOptions array. \n"
          "\n"
          "(value=7) was \"Supports PercentOfTestCoverage\" in "
          "Version 2.6. Value = 7 is being deprecated. Instead, it "
          "should be described in DiagnosticServiceCapabilities. \n"
          "\n"
          "\"Is Synchronous\" (value=8) indicates that this "
          "diagnostic service will complete before the "
          "RunDiagnostic method returns to the caller. A Job is "
          "still created that can be accessed by the client for "
          "accounting purposes, but the ability to track progress "
          "and status of the Job are lost. Additionally, in certain "
          "environments, the client may be \"blocked\" from further "
          "action until the service completes. \n"
          "\"Media Required\" (value=9) indicates that this "
          "diagnostic service requires that media be inserted into "
          "the device in order to perform the service. \"Additional "
          "Hardware Required\" (value=10) indicates that this "
          "diagnostic service requires that some additional "
          "hardware is installed (e.g., wrap plug) in order to "
          "perform the service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "Unknown", "Other", "Is Exclusive", 
          "Is Interactive", "Is Destructive", "Is Risky", 
          "Is Package", "Reserved", "Is Synchronous", 
          "Media Required", "Additional Hardware Required" }, 
       ModelCorrespondence { 
          "CIM_DiagnosticTest.OtherCharacteristicsDescriptions" }]
   uint16 Characteristics[];

      [Deprecated { 
          "CIM_DiagnosticTest.OtherCharacteristicsDescriptions" }, 
       Description ( 
          "Provides additional information for the Characteristic "
          "when its value is set to 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_DiagnosticTest.Characteristics" }]
   string OtherCharacteristicDescription;

      [Description ( 
          "OtherCharacteristicsDescriptions is a Bag array that "
          "contains an element with additional information for each "
          "Characteristics element with a value of 1 (\"Other\")." ), 
       ModelCorrespondence { "CIM_DiagnosticTest.Characteristics" }]
   string OtherCharacteristicsDescriptions[];

      [Deprecated { "CIM_Service.Started" }, 
       Description ( 
          "This property is being deprecated. The boolean Started "
          "property inherited from CIM_Service should be used "
          "instead. \n"
          "If this test is currently being performed, the InUse "
          "property is set to TRUE. To determine which "
          "ManagedSystem Element is being tested, query the "
          "DiagnosticResult objects associated with this test "
          "(query DiagnosticResultForTest), and for which the "
          "TestState equals 4 (\"In Progress\"). The "
          "DiagnosticResult object is associated with the System "
          "Element under test, using DiagnosticResultForMSE." )]
   boolean IsInUse;

      [Deprecated { "CIM_ServiceAffectsElement" }, 
       Description ( 
          "This property is being deprecated and replaced with a "
          "more general method for indicating Managed Elements that "
          "are affected by this Test. The DiagnosticService parent "
          "has a ServiceAffectsElement association to a Managed "
          "Element for this purpose. \n"
          "The \"Expensive\" qualifier can be applied to this class "
          "and its RunTest method. If so, the ResourcesUsed "
          "property describes the resources that are capitalized, "
          "based on a default setup for the test. Multiple "
          "resources can be specified since the property is an "
          "array." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28" }, 
       Values { "CPU", "Memory", "Hard Disk", "CDROM", "Floppy", 
          "PCI Bus", "USB Bus", "1394 Bus", "SCSI Bus", "IDE Bus", 
          "Network", "ISA Bus", "EISA Bus", "VESA Bus", 
          "PCMCIA Bus", "CardBus", "Access.bus", "NuBus", "AGP", 
          "VME Bus", "Sbus IEEE 1396-1993", "MCA Bus", "GIO Bus", 
          "XIO Bus", "HIO Bus", "PMC Bus", "SIO Bus" }]
   uint16 ResourcesUsed[];

      [Description ( 
          "The descriptions for each test type are below: \n"
          "\n"
          "* If \"Functional\" (value=2) is set, this tests one, "
          "more or all the functionality of the element. \n"
          "\n"
          "* If \"Stress\" (value=3) is set, this test is a stress "
          "test or exerciser for the element. \n"
          "\n"
          "* If \"Health Check\" (value=4) is set, this test "
          "validates the current health of the element. \n"
          "\n"
          "* If \"Access Test\" (value=5) is set, this test "
          "verifies the element is accessible to the system and "
          "user. This would include access through the OS as a user "
          "would access the element. \n"
          "\n"
          "* If \"Media Verify\" (value=6) is set, this test "
          "verifies the media for the element. This does not "
          "validate that specific data is correctly written on the "
          "media or even if data can be written to the media, but "
          "verifies that the media itself has no faults." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "Functional", "Stress", 
          "Health Check", "Access Test", "Media Verify", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticTest.OtherTestTypesDescriptions" }]
   uint16 TestTypes[];

      [Description ( 
          "OtherTestTypesDescriptions is an array that contains an "
          "element with additional information for each TestTypes "
          "element with a value of 1 (\"Other\")." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_DiagnosticTest.TestTypes" }]
   string OtherTestTypesDescriptions[];


      [Deprecated { "CIM_DiagnosticService.RunDiagnostic" }, 
       Description ( 
          "This method is being deprecated and replaced by the "
          "RunDiagnostic method in the DiagnosticService class. \n"
          "The RunTest method executes this test for the specified "
          "ManagedSystemElement. The use of this method has been "
          "deprecated. Instead, the RunDiagnostic method (inherited "
          "from DiagnosticService) should be used. \n"
          "The RunTest method executes this test for the specified "
          "ManagedSystemElement (defined using the SystemElement "
          "input parameter). Results of the test are stored in a "
          "Diagnostic Result object, a reference to which is "
          "returned as the Result output parameter. How the test "
          "should execute, i.e. its settings, is defined in a "
          "DiagnosticSetting object (or by a subclass of "
          "DiagnosticSetting). A reference to a Setting object is "
          "specified using the Setting input parameter. If a "
          "reference is not passed into the method, then a default "
          "DiagnosticSetting may be used. This default Setting is "
          "associated with the DiagnoticTest using the "
          "DefaultSetting relationship of the Core Model. \n"
          "When RunTest starts execution, the settings, which are "
          "time sensitive, should be evaluated and captured. This "
          "is suggested since the DiagnosticSetting object can be "
          "modified at any time, and therefore the current test "
          "settings could be lost. \n"
          "The method\'s return codes are expected to adhere to the "
          "XML return codes as they are introduced. Currently, the "
          "standard return values are: \n"
          "0 = OK (function succeeded, but the test itself may have "
          "failed \n"
          "1 = Unspecified Error (function failed for unspecified "
          "reasons) \n"
          "2 = Not Implemented (function is not implemented for "
          "this instance) \n"
          "3 = Out Of Resources (component could not allocate "
          "required resources, e.g. memory, disk space, etc.) \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 RunTest(
         [IN, Description ( 
             "The ManagedSystemElement on which the test will run."
              )]
      CIM_ManagedSystemElement REF SystemElement, 
         [IN, Description ( 
             "How the test should execute, i.e. its settings, is "
             "defined in a DiagnosticSetting object (or by a "
             "subclass of DiagnosticSetting). A reference to a "
             "Setting object is specified using the Setting "
             "input parameter. If a reference is not passed into "
             "the method, then a default DiagnosticSetting may "
             "be used. This default Setting is associated with "
             "the DiagnoticTest using the DefaultSetting "
             "relationship of the Core Model." )]
      CIM_DiagnosticSetting REF Setting, 
         [IN ( false ), OUT, Description ( 
             "Results of the test are stored in a "
             "DiagnosticResult object, a reference to which is "
             "returned as the Result output parameter." )]
      CIM_DiagnosticResult REF Result);

      [Deprecated { "CIM_Log.ClearLog" }, 
       Description ( 
          "This method is deprecated in favor of using the "
          "corresponding functionality contained in the Log class, "
          "this is consistant with the deprecation of the Result "
          "class in favor of Log. \n"
          "Execution of this method will delete all instances of "
          "the DiagnosticResultForMSE object, for this "
          "DiagnosticTest and the specified ManagedSystemElement "
          "(defined using the SystemElement input parameter). The "
          "DiagnosticResults referenced in the "
          "DiagnosticResultForMSE instances will be deleted. Also "
          "the association DiagnosticResultForTest that refers to "
          "the DiagnosticResult object, and this test will be "
          "deleted. \n"
          "One output parameter is defined - ResultsNotCleared - "
          "which is a string array that lists the keys of the "
          "DiagnosticResults which could not be deleted. This "
          "information enables those Results to be revisited and "
          "either manually removed, or other corrective action "
          "taken. \n"
          "The method\'s return codes are expected to adhere to the "
          "XML return codes as they are introduced. Currently, the "
          "standard return values are: \n"
          "0 = OK (function succeeded, but the test itself may have "
          "failed) \n"
          "1 = Unspecified Error (function failed for unspecified "
          "reasons) \n"
          "2 = Not Implemented (function is not implemented for "
          "this instance) \n"
          "3 = Out Of Resources (component could not allocate "
          "required resources, e.g. memory, disk space, etc.) \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 ClearResults(
         [IN, Description ( 
             "The Managed System Element for which results will be cleared."
              )]
      CIM_ManagedSystemElement REF SystemElement, 
         [IN ( false ), OUT, Description ( 
             "A string array that lists the keys of the "
             "DiagnosticResults which could not be deleted." )]
      string ResultsNotCleared[]);

      [Deprecated { "CIM_ConcreteJob.RequestStateChange" }, 
       Description ( 
          "After invocation of this method and its completion, the "
          "specified test(s) will be discontinued for the indicated "
          "ManagedSystemElement (defined by the SystemElement input "
          "parameter). The test to discontinue is specified using "
          "the Result input parameter. If all instances of this "
          "test should be stopped for the SystemElement, then the "
          "Result reference should be NULL. Upon completion of the "
          "method, test status and other information (such as "
          "PercentComplete) will be stored in the DiagnosticResult "
          "instance defined by the Result input parameter. The "
          "output parameter, TestingStopped, is used as follows: \n"
          "Set to TRUE if testing was successfully stopped. \n"
          "Set to FALSE if the current test(s) can not be stopped. \n"
          "If set to FALSE, testing will stop when the diagnostic "
          "is able to do so safely. To determine if/when the "
          "testing is stopped, check the TestState property in the "
          "DiagnosticResult instance defined by the Result "
          "parameter. TestState will change from \"In Progress\" to "
          "\"Stopped\" (from 4 to 5). \n"
          "The method\'s return codes are expected to adhere to the "
          "XML return codes as they are introduced. Currently, the "
          "standard return values are: \n"
          "0 = OK (function succeeded, but the test itself may have "
          "failed \n"
          "1 = Unspecified Error (function failed for unspecified "
          "reasons) \n"
          "2 = Not Implemented (function is not implemented for "
          "this instance) \n"
          "3 = Out Of Resources (component could not allocate "
          "required resources, e.g. memory, disk space, etc.) \n"
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 DiscontinueTest(
         [IN, Description ( 
             "Testing will be discontinued for the indicated "
             "ManagedSystemElement defined by the SystemElement "
             "input parameter." )]
      CIM_ManagedSystemElement REF SystemElement, 
         [IN, Description ( 
             "The test to discontinue is specified using the "
             "Result input parameter." )]
      CIM_DiagnosticResult REF Result, 
         [IN ( false ), OUT, Description ( 
             "TestingStopped, is set to TRUE if testing was "
             "successfully stopped. It is set to FALSE if the "
             "current test(s) can not be stopped. If set to "
             "FALSE, testing will stop when the diagnostic is "
             "able to do so safely. To determine if/when the "
             "testing is stopped, check the TestState property "
             "in the DiagnosticResult instance defined by the "
             "Result parameter. TestState will change from \"In "
             "Progress\" to \"Stopped\" (from 4 to 5)." )]
      boolean TestingStopped);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticTestInPackage 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class is being deprecated. Tests should be grouped at the "
       "test level, not in the model. Therefore, the association is "
       "not appropriate. /n This is an association class that "
       "identifies a Diagnostic Test as made up of lower level Tests. "
       "In this case, the test identified as the GroupComponent "
       "reference (i.e, the higher level test) would have the \"Is "
       "Package\" enumerated value specified in DiagnosticTest. "
       "Characteristics." )]
class CIM_DiagnosticTestInPackage : CIM_Component {

      [Deprecated { "No value" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The DiagnosticTest object that acts as the container for "
          "all the tests of the package." )]
   CIM_DiagnosticTest REF GroupComponent;

      [Deprecated { "No value" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "The DiagnosticTest object that is one of the elements of "
          "the package." )]
   CIM_DiagnosticTest REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileSystem 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A file or dataset store local to a System (such as a "
       "ComputerSystem or an ApplicationSystem) or remotely mounted "
       "from a file server." )]
class CIM_FileSystem : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The scoping System\'s CreationClassName. Note that this "
          "class was originally defined in the scope of a "
          "ComputerSystem, and was later allowed to be scoped by "
          "any System (for example, a computer or application "
          "system). Unfortunately, the property name, "
          "CSCreationClassName, could not be changed (for example, "
          "to SystemCreationClass Name) without deprecating the "
          "class. This change was not deemed critical to the "
          "semantics and therefore did not merit deprecation. So, "
          "the property name remains." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( 
          "The scoping System\'s Name. Note that this class was "
          "originally defined in the scope of a ComputerSystem, and "
          "was later allowed to be scoped by any System (for "
          "example, a computer or application system). "
          "Unfortunately, the property name, CSName, could not be "
          "changed (for example, to SystemName) without deprecating "
          "the class. This change was not deemed critical to the "
          "semantics and therefore did not merit deprecation. So, "
          "the property name remains." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string CSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as key of a FileSystem "
          "instance within a ComputerSystem." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "Path name or other information defining the root of the "
          "FileSystem." ), 
       MappingStrings { 
          "MIB.IETF|HOST-RESOURCES-MIB.hrFSMountPoint", 
          "MIF.DMTF|Host File System|001.2" }]
   string Root;

      [Description ( 
          "FileSystems can read/write data in blocks which are "
          "defined independently of the underlying StorageExtents. "
          "This property captures the FileSystem\'s block size for "
          "data storage and retrieval." ), 
       Units ( "Bytes" )]
   uint64 BlockSize;

      [Description ( 
          "The FileSystemSize property stores the total size of the "
          "File System in bytes. If unknown, enter 0." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Host File System|001.13" }]
   uint64 FileSystemSize;

      [Description ( 
          "AvailableSpace indicates the total amount of free space "
          "for the FileSystem, in bytes. If unknown, enter 0." ), 
       Units ( "Bytes" ), 
       Gauge, MappingStrings { "MIF.DMTF|Host File System|001.14", 
          "MIF.DMTF|Partition|002.4" }]
   uint64 AvailableSpace;

      [Description ( 
          "Indicates that the FileSystem is designated as read only." ), 
       MappingStrings { "MIB.IETF|HOST-RESOURCES-MIB.hrFSAccess", 
          "MIF.DMTF|Host File System|001.5" }]
   boolean ReadOnly;

      [Description ( 
          "A free form string indicating the algorithm or tool used "
          "to encrypt the FileSystem. If it is not possible or not "
          "desired to describe the encryption scheme (perhaps for "
          "security reasons), recommend using the following words: "
          "\"Unknown\" to represent that it is not known whether "
          "the FileSystem is encrypted or not, \"Encrypted\" to "
          "represent that the File System is encrypted but either "
          "its encryption scheme is not known or not disclosed, and "
          "\"Not Encrypted\" to represent that the FileSystem is "
          "not encrypted." ), 
       MappingStrings { "MIF.DMTF|Partition|002.8" }]
   string EncryptionMethod;

      [Description ( 
          "A free form string indicating the algorithm or tool used "
          "to compress the FileSystem. If it is not possible or not "
          "desired to describe the compression scheme (perhaps "
          "because it is not known), recommend using the following "
          "words: \"Unknown\" to represent that it is not known "
          "whether the FileSystem is compressed or not, "
          "\"Compressed\" to represent that the File System is "
          "compressed but either its compression scheme is not "
          "known or not disclosed, and \"Not Compressed\" to "
          "represent that the FileSystem is not compressed." ), 
       MappingStrings { "MIF.DMTF|Partition|002.7" }]
   string CompressionMethod;

      [Description ( 
          "Indicates that case sensitive file names are supported." )]
   boolean CaseSensitive;

      [Description ( 
          "Indicates that the case of file names are preserved." )]
   boolean CasePreserved;

      [Description ( 
          "Array defining the character sets or encoding supported "
          "by the FileSystem. For example, the values, \"ASCII\" "
          "(2) or \"ISO2022\" (4), may be specified." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "ASCII", "Unicode", "ISO2022", 
          "ISO8859", "Extended UNIX Code", "UTF-8", "UCS-2" }]
   uint16 CodeSet[];

      [Description ( 
          "Integer indicating the maximum length of a file name "
          "within the FileSystem. 0 indicates that there is no "
          "limit on file name length." )]
   uint32 MaxFileNameLength;

      [Description ( 
          "The minimum file allocation size (an integral number of "
          "blocks), imposed by the FileSystem. (The size of a block "
          "is specified in the BlockSize property for the "
          "FileSystem.) Minimum allocation size is the smallest "
          "amount of storage allocated to a LogicalFile by the "
          "FileSystem. This is not a mandatory minimum allocation "
          "for all FileSystems. Under stress conditions, some "
          "FileSystems may allocate storage in amounts smaller than "
          "the ClusterSize." )]
   uint32 ClusterSize;

      [Description ( 
          "String describing the type of FileSystem and therefore, "
          "its conventions. For example, \"NTFS\" or \"S5\" may be "
          "listed as well as any additional information on the "
          "FileSystem\'s implementation. Since various flavors of "
          "FileSystems (like S5) exist, this property is defined as "
          "a string." ), 
       MappingStrings { "MIF.DMTF|Partition|002.6", 
          "MIF.DMTF|Host File System|001.4" }]
   string FileSystemType;

      [Description ( 
          "An enumerated value representing the FileSystem\'s "
          "perception of its own persistence characteristics. This "
          "property would typically be set at the time the "
          "FileSystem is instantiated and would not be changed by "
          "external actions. A value of \"Persistent\" indicates "
          "that the FileSystem is persistent, will be preserved "
          "through an orderly shutdown and should be protected. A "
          "value of \"Temporary\" indicates that the FileSystem is "
          "non-persistent, should not be protected and may not "
          "survive a shutdown. A value of \"External\" indicates "
          "that the FileSystem is controlled outside of the scope "
          "of the operating environment and may need to be "
          "protected by specialized means. A value of \"Other\" is "
          "provided to allow for additional persistence types, to "
          "be described in the OtherPersistenceType attribute, and "
          "is expected to be rarely, if ever, used. A value of "
          "\"Unknown\" indicates that the persistence of the "
          "FileSystem can not be determined." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Persistent", "Temporary", 
          "External" }, 
       ModelCorrespondence { "CIM_FileSystem.OtherPersistenceType" }]
   uint16 PersistenceType;

      [Description ( 
          "A string describing the persistence characteristics when "
          "PersistenceType is \"Other\"." ), 
       ModelCorrespondence { "CIM_FileSystem.PersistenceType" }]
   string OtherPersistenceType;

      [Description ( 
          "The number of files contained in the FileSystem." )]
   uint64 NumberOfFiles;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HelpService 
// ==================================================================
   [Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Help" ), 
    Description ( 
       "HelpService provides the ability for a managed element to "
       "describe and provide access to its Help information. Support "
       "for various delivery mechanisms and data formats can be "
       "specified so that the most suitable data representation can be "
       "chosen. In adddition, a request can be made to launch a \"Help\" "
       "program, if available." )]
class CIM_HelpService : CIM_Service {

      [Description ( 
          "Defines the delivery methods supported by this help "
          "service./n \"File Contents\" indicates that the contents "
          "of the Help file is returned by the GetHelp method. \n"
          "\"File Pointer\" indicates that a fully specified path "
          "to the Help file is returned by the GetHelp method. \n"
          "\"Associated File\" indicates that associations to "
          "CIM_LogicalFile instance(s) is available. \n"
          "\"URL\" indicates that a URL to a website is returned by "
          "the GetHelp method. \n"
          "\"Program\" indicates that a Help program is launched "
          "(on the local system) by the GetHelp method." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "File Contents", "File Pointer", 
          "Associated File", "URL", "Program" }, 
       ModelCorrespondence { 
          "CIM_HelpService.OtherDeliveryOptionDescription", 
          "CIM_HelpServiceAvailableToFile" }]
   uint16 DeliveryOptions[];

      [Description ( 
          "Describes the nature of the delivery method when "
          "DeliveryOptions = \"Other\" is specified." ), 
       ModelCorrespondence { "CIM_HelpService.DeliveryOptions" }]
   string OtherDeliveryOptionDescription;

      [Description ( 
          "List of all of the document names/ids that are available "
          "via this help service and NOT exposed by the "
          "HelpServiceAvailableToFile association." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_HelpService.DocumentDescriptions", 
          "CIM_HelpService.DocumentFormat" }]
   string DocumentsAvailable[];

      [Description ( 
          "List of descriptions for the corresponding documents." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_HelpService.DocumentsAvailable", 
          "CIM_HelpService.DocumentFormat" }]
   string DocumentDescriptions[];

      [Description ( 
          "List of document formats for the corresponding documents." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "XML", "HTML", "Binary", 
          "Executable", ".hlp" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_HelpService.OtherDocumentFormatDescription", 
          "CIM_HelpService.DocumentDescriptions", 
          "CIM_HelpService.DocumentsAvailable" }]
   uint16 DocumentFormat[];

      [Description ( 
          "Describes the format of the document when "
          "DocumentFormat= \"Other\" is specified." ), 
       ModelCorrespondence { "CIM_HelpService.DocumentFormat" }]
   string OtherDocumentFormatDescription;


      [Description ( 
          "The GetHelp method produces, as an OUT parameter, a "
          "string containing document information as specified by "
          "the input parameters. The input parameters are expected "
          "to be valid sets of values from the corresponding "
          "indexed properties of this class." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x1000", 
          "0x1001", "0x1002..0x7FFF", "0x8000..0xFFFF" }, 
       Values { "Document returned with no error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "DMTF Reserved", "Busy", 
          "Requested Document not found", "Method Reserved", 
          "Vendor Reserved" }]
   uint32 GetHelp(
         [IN, Description ( 
             "The name/id of the requested document or the "
             "reference to the associated document." ), 
          ModelCorrespondence { 
             "CIM_HelpService.DocumentsAvailable", 
             "CIM_HelpServiceAvailableToFile.UserOfService" }]
      string RequestedDocument, 
         [IN, OUT, Description ( 
             "The requested document format is passed in. The "
             "actual document format is returned." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
          Values { "Don\'t Care", "Other", "XML", "HTML", 
             "Binary", "Executable", ".hlp" }, 
          ModelCorrespondence { "CIM_HelpService.DocumentFormat" }]
      uint16 Format, 
         [IN, Description ( "The requested delivery mechanism." ), 
          ValueMap { "1", "2", "3", "5", "6" }, 
          Values { "Other", "File Contents", "File Pointer", 
             "URL", "Program" }, 
          ModelCorrespondence { "CIM_HelpService.DeliveryOptions" }]
      uint16 RequestedDelivery, 
         [IN ( false ), OUT, Description ( 
             "If RequestedDelivery = \n"
             "File Contents, then the string contains the "
             "contents. \n"
             "File Pointer, then the string contains a pointer "
             "to the file. \n"
             "File Reference, then the string contains a REF to "
             "a CIM_LogicalFile instance. \n"
             "URL, then then the string contains a URL to the "
             "help site. \n"
             "Program, then the string is empty; the program was "
             "launched." )]
      string DocumentInfo);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HelpServiceAvailableToFile 
// ==================================================================
   [Association, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Help" ), 
    Description ( 
       "CIM_HelpServiceAvailableToFile indicates that the service is "
       "available for accessing the help file." )]
class CIM_HelpServiceAvailableToFile : CIM_ServiceAvailableToElement {

      [Override ( "ServiceProvided" ), 
       Description ( "The Service that is available." )]
   CIM_HelpService REF ServiceProvided;

      [Override ( "UserOfService" ), 
       Description ( "The file that make use of this Service." )]
   CIM_LogicalFile REF UserOfService;

      [Description ( "Document format for the associated file." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "XML", "HTML", "Binary", 
          "Executable", ".hlp" }, 
       ModelCorrespondence { 
          "CIM_HelpServiceAvailableToFile.OtherDocumentFormatDescription" }]
   uint16 DocumentFormat;

      [Description ( 
          "Describes the format of the file when DocumentFormat= "
          "\"Other\" is specified." ), 
       ModelCorrespondence { 
          "CIM_HelpServiceAvailableToFile.DocumentFormat" }]
   string OtherDocumentFormatDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedFileSystem 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A link between the System (such as a Computer or Application "
       "System) and the FileSystem that is a part of it." )]
class CIM_HostedFileSystem : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The System that hosts the FileSystem." )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "The FileSystem that is part of the System and hosted on it."
           )]
   CIM_FileSystem REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_JobDestination 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "JobDestination is an EnabledLogicalElement representing where "
       "a Job is submitted for processing. It can refer to a queue "
       "that contains zero or more Jobs, such as a print queue "
       "containing print Jobs. JobDestinations are hosted on Systems, "
       "similar to the way that Services are hosted on Systems. Also, "
       "they may be enabled/disabled similar to Services." )]
class CIM_JobDestination : CIM_EnabledLogicalElement {

      [Key, Description ( "The scoping System\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as key of a JobDestination "
          "instance in a System." ), 
       MaxLen ( 256 )]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_JobDestinationJobs 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "An association describing where a Job is submitted for "
       "processing, ie to which JobDestination." )]
class CIM_JobDestinationJobs : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The JobDestination, possibly a queue." )]
   CIM_JobDestination REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Job that is in the Job queue/Destination." )]
   CIM_Job REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "Status and configuration of a JobQueue. Jobs are held on a "
       "queue, and can move from queue to queue until being processed." )]
class CIM_JobQueue : CIM_JobDestination {

      [Description ( 
          "Provides queue-specific status information, beyond the "
          "ManagedSystemElement.OperationalStatus property. This "
          "property further qualifies the status of the queue, or "
          "indicates a secondary condition (e.g. queue full)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "No Additional Status", 
          "Queue Full" }, 
       ModelCorrespondence { "CIM_JobQueue.QueueStatusInfo" }]
   uint16 QueueStatus;

      [Description ( 
          "Provides a textual explanation for the status of the "
          "queue. Information about both QueueStatus and the "
          "OperationalStatus property (inherited from "
          "ManagedSystemElement) may be described in "
          "QueueStatusInfo. Note, however, that OperationalStatus\' "
          "Descriptions (if available) MUST be provided in the "
          "StatusDescriptions array, inherited from "
          "ManagedSystemElement. This is where management clients "
          "will expect to locate this information." ), 
       ModelCorrespondence { "CIM_JobQueue.QueueStatus" }]
   string QueueStatusInfo;

      [Write, Description ( 
          "Specifies the priority that will be assigned to a new "
          "Job being submitted to this queue, if the Job does not "
          "explicitly specify a priority. Note that lower numbers "
          "indicate higher priorities. The default value of "
          "0xFFFFFFFF is the lowest priority." )]
   uint32 DefaultJobPriority = 65535;

      [Write, Description ( 
          "Specifies the maximum time (using a datetime interval "
          "format) that a Job can remain on this Queue before "
          "completing. If the MaxTimeOnQueue property is exceeded, "
          "then the Job SHOULD be removed from the Queue. A value "
          "of 0 (the default) indicates that there is no time "
          "limit." )]
   datetime MaxTimeOnQueue = "00000000000000.000000:000";

      [Write, Description ( 
          "Specifies the maximum number of Jobs that can reside on "
          "this Queue. A value of 0 (the default) indicates that "
          "there is no maximum queue depth." )]
   uint32 MaxJobsOnQueue = 0;

      [Write, Description ( 
          "Specifies the maximum number of milliseconds of CPU time "
          "that a Job queued to this destination can consume to "
          "complete its execution." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint32 MaxJobCPUTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LocalFileSystem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A class derived from FileSystem that represents the file store "
       "controlled by a ComputerSystem through local means (e.g., "
       "direct device driver access). In this case, the file store is "
       "managed directly by the ComputerSystem without the need for "
       "another computer to act as a file server. This definition does "
       "not breakdown in the case of a Clustered File System. In this "
       "scenario, the FileSystem is a LocalFileSystem, weak to the "
       "Cluster." )]
class CIM_LocalFileSystem : CIM_FileSystem {


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "Log represents any type of event, error or informational "
       "register or chronicle. The object describes the existence of "
       "the log and its characteristics. Log does not dictate the form "
       "of the data represented or how records/messages are stored in "
       "the log and/or accessed. Subclasses will define the "
       "appropriate methods and behavior." )]
class CIM_Log : CIM_EnabledLogicalElement {

      [Description ( 
          "Maximum number of records that can be captured in the "
          "Log. If undefined, a value of zero should be specified." )]
   uint64 MaxNumberOfRecords;

      [Description ( "Current number of records in the Log." ), 
       Gauge]
   uint64 CurrentNumberOfRecords;

      [Description ( 
          "OverwritePolicy is an integer enumeration that indicates "
          "whether the log, represented by the CIM_Log subclasses, "
          "can overwrite its entries.Unknown (0) indicates the "
          "log\'s overwrite policy is unknown. \n"
          "Wraps when Full (2) indicates that the log overwrites "
          "its entries with new entries when the log has reached "
          "its maximum capacity. \n"
          "Never Overwrites (7) indicates that the log never "
          "overwrites its entries by the new entries." ), 
       ValueMap { "0", "2", "7", "..", "32768..65535" }, 
       Values { "Unknown", "Wraps When Full", "Never Overwrites", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 OverwritePolicy = 0;

      [Description ( 
          "LogState is an integer enumeration that indicates the "
          "current state of a log represented by CIM_Log "
          "subclasses. LogState is to be used in conjunction with "
          "the EnabledState property to fully describe the current "
          "state of the log. The following text briefly summarizes "
          "the various log states: \n"
          "Unknown (0) indicates the state of the log is unknown. \n"
          "Normal (2) indicates that the log is or could be "
          "executing logging commands, will process any queued log "
          "entries, and will queue new logging requests. \n"
          "Erasing (3) indicates that the log is being erased. \n"
          "Not Applicable (4) indicates the log does not support "
          "representing a log state." ), 
       ValueMap { "0", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Normal", "Erasing", "Not Applicable", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_EnabledLogicalElement.EnabledState" }]
   uint16 LogState = 4;


      [Description ( 
          "Requests that the Log be cleared of all entries. \n"
          "The return value should be 0 if the request was "
          "successfully executed, 1 if the request is not "
          "supported, and some other value, as indicated by the "
          "ValueMap/Values qualifiers, if an error occurred." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..0x0FFF", 
          "0x1000..0x7FFF", "0x8000.." }, 
       Values { "Completed with no error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "DMTF_Reserved", "Method_Reserved", 
          "Vendor_Reserved" }]
   uint32 ClearLog(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogManagesRecord 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "LogManagesRecord describes the aggregation or location of "
       "Records managed by a Log." )]
class CIM_LogManagesRecord {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Log." )]
   CIM_Log REF Log;

      [Key, Description ( "The record managed by the Log." )]
   CIM_RecordForLog REF Record;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CoreCR00880.004" type="change"> Change OverwritePolicy
// to be inherited and overridden.</change>
// ==================================================================
//  CIM_MessageLog 
// ==================================================================
   [Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "MessageLog represents any type of event, error or "
       "informational register or chronicle. The object describes the "
       "existence of the log and its characteristics. Several methods "
       "are defined for retrieving, writing and deleting log entries, "
       "and maintaining the log. This type of log uses iterators to "
       "access the log records, whereas its peer class, RecordLog, "
       "uses more abstracted access mechanisms." )]
class CIM_MessageLog : CIM_Log {

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as part of the key (a unique "
          "identifier) for the MessageLog instance." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "An array of integers indicating the Log capabilities. "
          "Information such as \"Write Record Supported\" (value= "
          "2) or \"Variable Length Records Supported\" (8) is "
          "specified in this property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "Unknown", "Other", "Write Record Supported", 
          "Delete Record Supported", "Can Move Backward in Log", 
          "Freeze Log Supported", "Clear Log Supported", 
          "Supports Addressing by Ordinal Record Number", 
          "Variable Length Records Supported", 
          "Variable Formats for Records", 
          "Can Flag Records for Overwrite" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_MessageLog.CapabilitiesDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings providing more detailed "
          "explanations for any of the Log features indicated in "
          "the Capabilities array. Note, each entry of this array "
          "is related to the entry in the Capabilities array that "
          "is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_MessageLog.Capabilities" }]
   string CapabilitiesDescriptions[];

      [Description ( 
          "The maximum size, in bytes, to which the Log can grow. "
          "If there is no maximum, then MaxLogSize should be set to "
          "0." ), 
       Units ( "Bytes" )]
   uint64 MaxLogSize;

      [Description ( 
          "The size of the Log header, in bytes, if one is present. "
          "If there is no Log header, then this property should be "
          "set to 0. Headers may include general information about "
          "the Log such as the current number of records, time of "
          "last update, or a pointer to the location of the first "
          "Log entry. Note that this property is NOT the size of "
          "the header for an individual Log entry. The latter is "
          "described by the property, SizeOfRecordHeader." ), 
       Units ( "Bytes" )]
   uint64 SizeOfHeader;

      [Description ( 
          "If the SizeOfHeader property is non-zero, this property "
          "describes the structure and format of the Log header. It "
          "is a free-form string. If the SizeOfHeader property is "
          "0, then the information in this property is undefined." )]
   string HeaderFormat;

      [Description ( 
          "Maximum size, in bytes, to which an individual Log entry "
          "(record) can grow - if the Capabilities array includes a "
          "value of 7 (\"Variable Length Records Supported\"). If "
          "the Capabilities array does not include a 7, then the "
          "Log only supports fixed length entries. The size of "
          "these entries is described by this property." ), 
       Units ( "Bytes" )]
   uint64 MaxRecordSize;

      [Description ( 
          "The size of the header for the Log\'s individual "
          "entries, in bytes, if record headers are defined. If "
          "there are no record headers, then this property should "
          "be set to 0. Record headers may include information such "
          "as the type of the Log entry, the date/time that the "
          "entry was last updated, or a pointer to the start of "
          "optional data. Note that this property defines the "
          "header size for individual records in the Log, while the "
          "SizeOfHeader property describes the Log\'s overall "
          "header, typically located at the start of the "
          "MessageLog." ), 
       Units ( "Bytes" )]
   uint64 SizeOfRecordHeader;

      [Description ( 
          "If the SizeOfRecordHeader property is non-zero, this "
          "property describes the structure and format of the "
          "record headers. It is a free-form string. If the "
          "SizeOfRecordHeader property is 0, then the information "
          "in this property is undefined." )]
   string RecordHeaderFormat;

      [Override ( "OverwritePolicy" ), 
       Description ( 
          "An enumeration describing the behavior of the Log, when "
          "it becomes full or near full. For example, the Log may "
          "wrap (value=2) or may simply stop recording entries "
          "(value =7). \n"
          "\n"
          "Some of the property\'s possible values need further "
          "explanation: \n"
          "3=\"Clear When Near Full\" indicates that all of the "
          "Log\'s entries will be deleted when a specified record "
          "capacity is reached. The capacity is specified in "
          "percentage, using the property, PercentageNearFull. "
          "\'Near Full\' may be less than 100% if the Log takes "
          "time to clear, and a position should always be available "
          "for new records. \n"
          "4=\"Overwrite Outdated When Needed\" describes that Log "
          "entries (timestamped later than the date/time specified "
          "in the property, TimeWhenOutdated) can be overwritten. \n"
          "5=\"Remove Outdated Records\" specifies that records "
          "(timestamped later than the date/time specified in the "
          "property, TimeWhenOutdated) are logically and/or "
          "physically removed from the Log. \n"
          "6=\"Overwrite Specific Records\" indicates that "
          "specially flagged records may be overwritten. This "
          "property only makes sense when the Capabilities array "
          "includes a value of 10, \"Can Flag Records for "
          "Overwrite\"." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Wraps When Full", 
          "Clear When Near Full", "Overwrite Outdated When Needed", 
          "Remove Outdated Records", "Overwrite Specific Records", 
          "Never Overwrite" }, 
       ModelCorrespondence { 
          "CIM_MessageLog.OtherPolicyDescription", 
          "CIM_MessageLog.TimeWhenOutdated", 
          "CIM_MessageLog.PercentageNearFull" }]
   uint16 OverwritePolicy;

      [Description ( 
          "When the OverwritePolicy specifies a value of 1 "
          "(\"Other\"), the Log\'s behavior can be explained using "
          "this property. If OverwritePolicy is not 1, then this "
          "property\'s contents are undefined." ), 
       ModelCorrespondence { "CIM_MessageLog.OverwritePolicy" }]
   string OtherPolicyDescription;

      [Description ( 
          "If the OverwritePolicy is based on \'outdated\' records "
          "(values 4 or 5), this property defines when a Log entry "
          "is considered to be outdated - either by time interval "
          "or at a specific date and time." ), 
       ModelCorrespondence { "CIM_MessageLog.OverwritePolicy" }]
   datetime TimeWhenOutdated;

      [Description ( 
          "If the OverwritePolicy is based on clearing records when "
          "the Log is near full (value=3), this property defines "
          "the record capacity (in percentage) that is considered "
          "to be \'near full\'." ), 
       Units ( "Percent" ), 
       ModelCorrespondence { "CIM_MessageLog.OverwritePolicy" }]
   uint8 PercentageNearFull;

      [Description ( 
          "An enumeration describing the last change to the MessageLog."
           ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Add", "Delete", "Modify", "Log Cleared" }]
   uint16 LastChange;

      [Description ( 
          "When a change is made to the Log, the date/time of that "
          "modification is captured. This property could be used to "
          "event against any update to the MessageLog." )]
   datetime TimeOfLastChange;

      [Description ( 
          "When a change is made to the Log, the record number that "
          "was modified is captured." )]
   uint64 RecordLastChanged;

      [Description ( 
          "Boolean indicating that the Log is currently frozen and "
          "modifications are not allowed." )]
   boolean IsFrozen;

      [Description ( 
          "An enumeration describing the character set used to "
          "record data in the individual Log entries. For example, "
          "the Log records may contain ASCII data (value=2), or be "
          "raw octet strings (value=10)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "ASCII", "Unicode", "ISO2022", 
          "ISO8859", "Extended UNIX Code", "UTF-8", "UCS-2", 
          "Bitmapped Data", "OctetString", 
          "Defined by Individual Records" }]
   uint16 CharacterSet;


      [Description ( 
          "Requests that an iteration of the MessageLog be "
          "established and that the iterator be set to the first "
          "entry in the Log. An identifier for the iterator is "
          "returned as an output parameter of the method. \n"
          "\n"
          "Regarding iteration, you have 2 choices: 1) Embed "
          "iteration data in the method call, and allow "
          "implementations to track/ store this data manually; or, "
          "2) Iterate using a separate object (for example, class "
          "ActiveIterator) as an iteration agent. The first "
          "approach is used here for interoperability. The second "
          "requires an instance of the Iterator object for EACH "
          "iteration in progress. 2\'s functionality could be "
          "implemented underneath 1. \n"
          "\n"
          "The return value from PositionToFirstRecord should be 0 "
          "if the request was successfully executed, 1 if the "
          "request is not supported and some other value if an "
          "error occurred. In a subclass, the set of possible "
          "return codes could be specified, using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 PositionToFirstRecord(
         [IN ( false ), OUT, Description ( 
             "An identifier for the iterator." )]
      string IterationIdentifier);

      [Description ( 
          "Requests that the Log\'s iteration identifier be "
          "advanced or retreated a specific number of records, or "
          "set to the entry at a specified numeric location. These "
          "two different behaviors are accomplished using the input "
          "parameters of the method. Advancing or retreating is "
          "achieved by setting the MoveAbsolute boolean to FALSE, "
          "and then specifying the number of entries to advance or "
          "retreat as positive or negative values in the "
          "RecordNumber parameter. Moving to a specific record "
          "number is accomplished by setting the MoveAbsolute input "
          "parameter to TRUE, and then placing the record number "
          "into the RecordNumber parameter. This can only be done "
          "if the Capabilities array includes a value of 7, "
          "\"Supports Addressing by Ordinal Record Number\". \n"
          "\n"
          "After the method completes and if ordinal record numbers "
          "are supported (the Capabilities array includes a 7), the "
          "current record number is returned in the RecordNumber "
          "output parameter. Otherwise, the value of the parameter "
          "is undefined. \n"
          "\n"
          "IterationIdentifier is defined as an Input/Output method "
          "parameter to allow the Log to embed state information in "
          "the Identifier and potentially let the identifier be "
          "maintained by the using application. \n"
          "\n"
          "The return value from PositionAtRecord should be 0 if "
          "the request was successfully executed, 1 if the request "
          "is not supported and some other value if an error "
          "occurred. If the request is not supported, check the "
          "Capabilities array regarding support for ordinal record "
          "number addressing and backward movement in the Log "
          "(values 7 and 4, respectively). \n"
          "\n"
          "Note: In a subclass, the set of possible return codes "
          "could be described using a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "\'translated\' may also be specified in the subclass as "
          "a Values array qualifier." )]
   uint32 PositionAtRecord(
         [IN, OUT, Description ( 
             "An identifier for the iterator." )]
      string IterationIdentifier, 
         [IN, Description ( 
             "Advancing or retreating the IterationIdentifier is "
             "achieved by setting the MoveAbsolute boolean to "
             "FALSE, and specifying the number of entries to "
             "advance or retreat as positive or negative values "
             "in the RecordNumber parameter. Moving to a "
             "specific record number is accomplished by setting "
             "the MoveAbsolute parameter to TRUE, and placing "
             "the record number into the RecordNumber parameter." )]
      boolean MoveAbsolute, 
         [IN, OUT, Description ( 
             "The relative or absolute record number." )]
      sint64 RecordNumber);

      [Description ( 
          "Requests that the record indicated by the "
          "IterationIdentifier be retrieved from the MessageLog. "
          "After retrieval, the IterationIdentifier may be advanced "
          "to the next record by setting the PositionToNext input "
          "parameter to TRUE. Two output parameters are defined for "
          "the method - RecordData which holds the contents of the "
          "Log entry (as an array of bytes that can be recast to an "
          "appropriate format), and RecordNumber which returns the "
          "current record number addressed via the Iteration "
          "Identifier. The RecordNumber parameter is only "
          "defined/valid when the Capabilities array indicates that "
          "ordinal record number addressing is supported (a value "
          "of 7). \n"
          "\n"
          "IterationIdentifier is defined as an Input/Output method "
          "parameter to allow the Log to embed state information in "
          "the Identifier and potentially let the identifier be "
          "maintained by the using application. \n"
          "\n"
          "The return value from GetRecord should be 0 if the "
          "request was successfully executed, 1 if the request is "
          "not supported, and some other value if an error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' may also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 GetRecord(
         [IN, OUT, Description ( 
             "An identifier for the iterator." )]
      string IterationIdentifier, 
         [IN, Description ( 
             "Boolean indicating that the Iteration Identifier "
             "should be advanced to the next record, after "
             "retrieving the current Log entry." )]
      boolean PositionToNext, 
         [IN ( false ), OUT, Description ( "The record number." )]
      uint64 RecordNumber, 
         [IN ( false ), OUT, Description ( "The record data." )]
      uint8 RecordData[]);

      [Description ( 
          "Requests that the record indicated by the "
          "IterationIdentifier be deleted from the MessageLog. "
          "After deletion, the Iteration Identifier may be advanced "
          "to the next record by setting the PositionToNext input "
          "parameter to TRUE. If set to FALSE, then the "
          "IterationIdentifier will be positioned at the previous "
          "record. Two output parameters are defined for the method "
          "- RecordData which holds the contents of the deleted Log "
          "entry (as an array of bytes that can be recast to an "
          "appropriate format or discarded), and RecordNumber which "
          "returns the current record number addressed via the "
          "IterationIdentifier. The RecordNumber parameter is only "
          "defined/valid when the Capabilities array indicates that "
          "ordinal record number addressing is supported (a value "
          "of 7). \n"
          "\n"
          "IterationIdentifier is defined as an Input/Output method "
          "parameter to allow the Log to embed state information in "
          "the Identifier and potentially let the identifier be "
          "maintained by the using application. \n"
          "\n"
          "The return value from DeleteRecord should be 0 if the "
          "request was successfully executed, 1 if the request is "
          "not supported, and some other value if an error "
          "occurred. If the request is not supported, check the "
          "Capabilities array that a value of 3 (\"Delete Record "
          "Supported\") is specified. \n"
          "\n"
          "Note: In a subclass, the set of possible return codes "
          "could be described using a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "\'translated\' may also be specified in the subclass as "
          "a Values array qualifier." )]
   uint32 DeleteRecord(
         [IN, OUT, Description ( 
             "An identifier for the iterator." )]
      string IterationIdentifier, 
         [IN, Description ( 
             "Boolean that when set to TRUE requests the "
             "IterationIdentifier to be advanced to the next "
             "record, after the current entry is deleted. If set "
             "to FALSE, IterationIdentifier is set to the "
             "previous record." )]
      boolean PositionToNext, 
         [IN ( false ), OUT, Description ( "The record number." )]
      uint64 RecordNumber, 
         [IN ( false ), OUT, Description ( "The record data." )]
      uint8 RecordData[]);

      [Description ( 
          "Requests that a record be inserted at the Log position "
          "indicated by the IterationIdentifier. The entry\'s data "
          "is provided in the RecordData input parameter. After "
          "insertion, the IterationIdentifier may be advanced to "
          "the next record by setting the PositionToNext input "
          "parameter to TRUE. The output parameter, RecordNumber, "
          "returns the current record number addressed via the "
          "IterationIdentifier. This parameter is only "
          "defined/valid when the Capabilities array indicates that "
          "ordinal record number addressing is supported (a value "
          "of 7). \n"
          "\n"
          "IterationIdentifier is defined as an Input/Output method "
          "parameter to allow the Log to embed state information in "
          "the Identifier and potentially let the identifier be "
          "maintained by the using application. \n"
          "\n"
          "The return value from WriteRecord should be 0 if the "
          "request was successfully executed, 1 if the request is "
          "not supported, and some other value if an error "
          "occurred. If the request is not supported, check the "
          "Capabilities array that a value of 2 (\"Write Record "
          "Supported\") is specified. \n"
          "\n"
          "Note: In a subclass, the set of possible return codes "
          "could be described using a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "\'translated\' may also be specified in the subclass as "
          "a Values array qualifier." )]
   uint32 WriteRecord(
         [IN, OUT, Description ( 
             "An identifier for the iterator." )]
      string IterationIdentifier, 
         [IN, Description ( 
             "Boolean indicating that the Iteration Identifier "
             "should be advanced to the next record, after "
             "writing the Log entry." )]
      boolean PositionToNext, 
         [IN, Description ( "The record data." )]
      uint8 RecordData[], 
         [IN ( false ), OUT, Description ( "The record number." )]
      uint64 RecordNumber);

      [Description ( 
          "Requests that an iteration of the Log, identified by the "
          "IterationIdentifier input parameter, be stopped. The "
          "return value from CancelIteration should be 0 if the "
          "request was successfully executed, 1 if the request is "
          "not supported and some other value if an error occurred. "
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 CancelIteration(
         [IN, Description ( "An identifier for the iterator." )]
      string IterationIdentifier);

      [Description ( 
          "Requests that the MessageLog be placed in a frozen state "
          "(\"Freeze\" input parameter = TRUE) or \'unfrozen\' (= "
          "FALSE). If frozen, modifications to the Log will not be "
          "allowed. If successful, the Log\'s IsFrozen boolean "
          "property will be updated to reflect the desired state. \n"
          "\n"
          "The method\'s return code should be 0 if the request was "
          "successfully executed, 1 if the request is not supported "
          "and some other value if an error occurred. If the "
          "request is not supported, check the Capabilities array "
          "that a value of 5 (\"Freeze Log Supported\") is "
          "specified. \n"
          "\n"
          "Note: In a subclass, the set of possible return codes "
          "could be described using a ValueMap qualifier on the "
          "method. The strings to which the ValueMap contents are "
          "\'translated\' may also be specified in the subclass as "
          "a Values array qualifier." )]
   uint32 FreezeLog(
         [IN, Description ( 
             "If TRUE then freeze the log, if FALSE \'unfreeze\' the log."
              )]
      boolean Freeze);

      [Description ( 
          "Requests that the record indicated by the "
          "IterationIdentifier be flagged as overwriteable. This "
          "method is only supported when the Capabilities array "
          "includes a value of 10, \"Can Flag Records for "
          "Overwrite\". After updating the entry, the "
          "IterationIdentifier may be advanced to the next record "
          "by setting the PositionToNext input parameter to TRUE. "
          "One output parameter is defined for the method "
          "RecordNumber. It returns the current record number "
          "addressed via the Iteration Identifier. This parameter "
          "is only defined/valid when the Capabilities array "
          "indicates that ordinal record number addressing is "
          "supported (a value of 7). \n"
          "\n"
          "IterationIdentifier is defined as an Input/Output method "
          "parameter to allow the Log to embed state information in "
          "the Identifier and potentially let the identifier be "
          "maintained by the using application. \n"
          "\n"
          "The return value from FlagRecordForOverwrite should be 0 "
          "if the request was successfully executed, 1 if the "
          "request is not supported, and some other value if an "
          "error occurred. In a subclass, the set of possible "
          "return codes could be specified, using a ValueMap "
          "qualifier on the method. The strings to which the "
          "ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 FlagRecordForOverwrite(
         [IN, OUT, Description ( 
             "An identifier for the iterator." )]
      string IterationIdentifier, 
         [IN, Description ( 
             "Boolean indicating that the Iteration Identifier "
             "should be advanced to the next record, after "
             "updating the current Log entry." )]
      boolean PositionToNext, 
         [IN ( false ), OUT, Description ( "The record number." )]
      uint64 RecordNumber);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Mount 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "An association between a FileSystem and a Directory which "
       "indicates that the Directory is being attached to the "
       "FileSystem. The semantics of this relationship require that "
       "the mounted Directory be contained by a FileSystem (via the "
       "FileStorage association) that is different from the FileSystem "
       "referenced as the Dependent. The Directory\'s containing "
       "FileSystem could be either local or remote. For example, a "
       "LocalFileSystem on a Solaris ComputerSystem can mount a "
       "Directory from the FileSystem accessed via the machine\'s "
       "CDROM drive, i.e., another LocalFile System. On the other "
       "hand, in a \'remote\' case, the Directory is first exported by "
       "its FileSystem, which is hosted on another ComputerSystem "
       "acting (for example) as a file server. In order to distinguish "
       "these two types of Mount, it is recommended that a CIM_Export "
       "association always be defined for the remotely "
       "accessed/mounted Directories." )]
class CIM_Mount : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The Directory mounted." )]
   CIM_Directory REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The FileSystem the Directory is mounted on." )]
   CIM_FileSystem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OOBAlertService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "This Service is implemented by a LogicalDevice (e.g. a "
       "NetworkAdapter or Modem) that is capable of sending alert "
       "messages to a remote destination. The alert messages reflect "
       "the state of one or more ManagedSystemElements. The Elements "
       "for which alert messages are forwarded, are defined by "
       "enumerating the ProvidesServiceToElement association for the "
       "Service. Out of Band (OOB) refers to the mechanisms in use "
       "when normal OS-based management mechanisms are not possible. "
       "This occurs when the OS is down or not functioning properly." )]
class CIM_OOBAlertService : CIM_Service {

      [Description ( 
          "The type of the alert destination. For example, the "
          "alert may be received by an application listening on a "
          "UDP Port on a remote destination, or could be sent to a "
          "pager (values 4 or 2, respectively)." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Pager", "TCP Port", "UDP Port" }, 
       ModelCorrespondence { 
          "CIM_OOBAlertService.OtherDestinationTypeDescription" }]
   uint16 DestinationType;

      [Description ( 
          "The description of the alert DestinationType. This is "
          "used when the DestinationType is set to \"Other\" "
          "(value=1)." ), 
       ModelCorrespondence { "CIM_OOBAlertService.DestinationType" }]
   string OtherDestinationTypeDescription;

      [Description ( 
          "The address where this Service sends the alerts. The "
          "format of this address depends on the DestinationType. "
          "For example, if the DestinationType is a UDP Port "
          "(value=4), then this property contains a string "
          "identifying the IP address of the Port (for example, "
          "111.222.333.444:4567). If DestinationType is a pager "
          "(value=2), then the address is a Pager number (for "
          "example, 18002257654)." )]
   string DestinationAddress;

      [Description ( 
          "The format of the Alert Message sent by the Service." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Numeric", "AlphaNumeric", 
          "Free Form Text", "Platform Event Trap" }, 
       ModelCorrespondence { 
          "CIM_OOBAlertService.OtherMessageFormatDescription" }]
   uint16 MessageFormat;

      [Description ( 
          "The description of the format of the alert message used "
          "by the Service when the AlertMessageFormat property is "
          "set to \"Other\" (value=1)." ), 
       ModelCorrespondence { "CIM_OOBAlertService.MessageFormat" }]
   string OtherMessageFormatDescription;

      [Description ( 
          "If the AlertService only uses a fixed message to send an "
          "alert, then this flag should be set to TRUE." )]
   boolean OnlySendsFixedMessage;

      [Description ( 
          "The AlertService may require some fixed data to send as "
          "part of the message. This may include things like the "
          "address or name of the System. This string contains the "
          "complete message when the property, "
          "OnlySendsFixedMessage, is set to TRUE." )]
   string FixedPartOfMessage;

      [Description ( 
          "If the destination is capable of sending an "
          "acknowledgement to the alert, then this flag is set to "
          "TRUE. The format of the acknowledgement is determined by "
          "the DestinationType and the MessageFormat." )]
   boolean DestinationIsAckCapable;

      [Description ( 
          "The AlertService may retry and send an alert more than "
          "once. The RetryCount identifies how often the operation "
          "will be repeated. If DestinationIsAckCapable is set to "
          "TRUE, then the retry will only be done if an Ack is not "
          "received. Otherwise, the retries are done "
          "unconditionally." )]
   uint16 RetryCount;

      [Description ( 
          "The interval between each successive retry, in seconds. "
          "If DestinationIsAckCapable is set to TRUE, then this "
          "interval is used as a timeout interval, before the next "
          "retry is done." ), 
       Units ( "Seconds" )]
   uint16 RetryInterval;

      [Description ( 
          "If the OOB Alerting service is capable of sending "
          "Presence heart beat messages." ), 
       Read]
   boolean PresenceHeartbeatCapable;

      [Description ( 
          "When set to true causes the OOBAlertService to send "
          "Presence heart beat messages." ), 
       ModelCorrespondence { 
          "CIM_OOBAlertService.PresenceHeartbeatCapable" }]
   boolean EnablePresenceHeartbeats;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::System::OperatingSystem" ), 
    Description ( 
       "An OperatingSystem is software/firmware that makes a "
       "ComputerSystem\'s hardware usable, and implements and/or "
       "manages the resources, file systems, processes, user "
       "interfaces, services, ... available on the ComputerSystem." )]
class CIM_OperatingSystem : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string CSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The inherited Name serves as key of an OperatingSystem "
          "instance within a ComputerSystem." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|Operating System|001.2" }]
   string Name;

      [Description ( 
          "A integer indicating the type of OperatingSystem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110" }, 
       Values { "Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", 
          "DECNT", "Tru64 UNIX", "OpenVMS", "HPUX", "AIX", 
          //10 
          "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", 
          "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", 
          //20 
          "NCR3000", "NetWare", "OSF", "DC/OS", 
          "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", 
          "Sequent", "IRIX", "Solaris", //30 
          "SunOS", 
          "U6000", "ASERIES", "HP NonStop OS", "HP NonStop OSS", 
          "BS2000", "LINUX", "Lynx", "XENIX", "VM", 
          //40 
          "Interactive UNIX", "BSDUNIX", "FreeBSD", 
          "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", 
          "QNX", "EPOC", //50 
          "IxWorks", "VxWorks", 
          "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", 
          "Rhapsody", "Windows 2000", "Dedicated", 
          //60 
          "OS/390", "VSE", "TPF", "Windows (R) Me", 
          "Caldera Open UNIX", "OpenBSD", "Not Applicable", 
          "Windows XP", "z/OS", "Microsoft Windows Server 2003", 
          //70
          "Microsoft Windows Server 2003 64-Bit", 
          "Windows XP 64-Bit", "Windows XP Embedded", 
          "Windows Vista", "Windows Vista 64-Bit", 
          "Windows Embedded for Point of Service", 
          "Microsoft Windows Server 2008", 
          "Microsoft Windows Server 2008 64-Bit", "FreeBSD 64-Bit", 
          "RedHat Enterprise Linux", 
          //80
          "RedHat Enterprise Linux 64-Bit", 
          "Solaris 64-Bit", "SUSE", "SUSE 64-Bit", "SLES", 
          "SLES 64-Bit", "Novell OES", "Novell Linux Desktop", 
          "Sun Java Desktop System", "Mandriva", 
          //90
          "Mandriva 64-Bit", "TurboLinux", 
          "TurboLinux 64-Bit", "Ubuntu", "Ubuntu 64-Bit", "Debian", 
          "Debian 64-Bit", "Linux 2.4.x", "Linux 2.4.x 64-Bit", 
          "Linux 2.6.x", //100
          "Linux 2.6.x 64-Bit", 
          "Linux 64-Bit", "Other 64-Bit", 
          "Microsoft Windows Server 2008 R2", "VMware ESXi", 
          "Microsoft Windows 7", "CentOS 32-bit", "CentOS 64-bit", 
          "Oracle Enterprise Linux 32-bit", 
          "Oracle Enterprise Linux 64-bit", 
          //110 
          "eComStation 32-bitx" }, 
       ModelCorrespondence { 
          "CIM_OperatingSystem.OtherTypeDescription", 
          "CIM_SoftwareElement.TargetOperatingSystem" }]
   uint16 OSType;

      [Description ( 
          "A string describing the manufacturer and OperatingSystem "
          "type - used when the OperatingSystem property, OSType, "
          "is set to 1 or 59 (\"Other\" or \"Dedicated\"). The "
          "format of the string inserted in OtherTypeDescription "
          "should be similar in format to the Values strings "
          "defined for OSType. OtherTypeDescription should be set "
          "to NULL when OSType is any value other than 1 or 59." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_OperatingSystem.OSType" }]
   string OtherTypeDescription;

      [Description ( 
          "A string describing the Operating System\'s version "
          "number. The format of the version information is as "
          "follows: <Major Number>.<Minor Number>.<Revision> or "
          "<Major Number>.<Minor Number>.<Revision Letter>." ), 
       MappingStrings { "MIF.DMTF|Operating System|001.3" }]
   string Version;

      [Description ( 
          "Time when the OperatingSystem was last booted." ), 
       MappingStrings { "MIF.DMTF|General Information|001.5" }]
   datetime LastBootUpTime;

      [Description ( 
          "OperatingSystem\'s notion of the local date and time of day."
           ), 
       MappingStrings { "MIB.IETF|HOST-RESOURCES-MIB.hrSystemDate", 
          "MIF.DMTF|General Information|001.6" }]
   datetime LocalDateTime;

      [Description ( 
          "CurrentTimeZone indicates the number of minutes the "
          "OperatingSystem is offset from Greenwich Mean Time. "
          "Either the number is positive, negative or zero." ), 
       Units ( "Minutes" )]
   sint16 CurrentTimeZone;

      [Description ( 
          "Number of user licenses for the OperatingSystem. If "
          "unlimited, enter 0." )]
   uint32 NumberOfLicensedUsers;

      [Description ( 
          "Number of user sessions for which the OperatingSystem is "
          "currently storing state information." ), 
       Gauge, MappingStrings { "MIF.DMTF|Host System|001.4", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemNumUsers" }]
   uint32 NumberOfUsers;

      [Description ( 
          "Number of process contexts currently loaded or running "
          "on the OperatingSystem." ), 
       Gauge, MappingStrings { "MIF.DMTF|Host System|001.5", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemProcesses" }]
   uint32 NumberOfProcesses;

      [Description ( 
          "Maximum number of process contexts the OperatingSystem "
          "can support. If there is no fixed maximum, the value "
          "should be 0. On systems that have a fixed maximum, this "
          "object can help diagnose failures that occur when the "
          "maximum is reached." ), 
       MappingStrings { "MIF.DMTF|Host System|001.6", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemMaxProcesses" }]
   uint32 MaxNumberOfProcesses;

      [Description ( 
          "Total swap space in Kbytes. This value may be NULL "
          "(unspecified) if swap space is not distinguished from "
          "page files. However, some Operating Systems distinguish "
          "these concepts. For example, in UNIX, whole processes "
          "can be \'swapped out\' when the free page list falls and "
          "remains below a specified amount." ), 
       Units ( "KiloBytes" )]
   uint64 TotalSwapSpaceSize;

      [Description ( 
          "Number of Kbytes of virtual memory. For example, this "
          "may be calculated by adding the amount of total RAM to "
          "the amount of paging space (ie, adding the amount of "
          "memory in/aggregated by the ComputerSystem to the "
          "property, SizeStoredInPagingFiles." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|System Memory Settings|001.5" }]
   uint64 TotalVirtualMemorySize;

      [Description ( 
          "Number of Kbytes of virtual memory currently unused and "
          "available. For example, this may be calculated by adding "
          "the amount of free RAM to the amount of free paging "
          "space (ie, adding the properties, FreePhysicalMemory and "
          "FreeSpace InPagingFiles)." ), 
       Units ( "KiloBytes" ), 
       Gauge, MappingStrings { 
          "MIF.DMTF|System Memory Settings|001.6" }]
   uint64 FreeVirtualMemory;

      [Description ( 
          "Number of Kbytes of physical memory currently unused and "
          "available." ), 
       Units ( "KiloBytes" ), 
       Gauge, MappingStrings { 
          "MIF.DMTF|System Memory Settings|001.2", 
          "MIF.UNIX|Host Physical Memory|6.1" }]
   uint64 FreePhysicalMemory;

      [Description ( 
          "The total amount of physical memory (in Kbytes) "
          "available to the OperatingSystem. This value does not "
          "necessarily indicate the true amount of physical memory, "
          "but what is reported to the OperatingSystem as available "
          "to it." ), 
       Units ( "KiloBytes" )]
   uint64 TotalVisibleMemorySize;

      [Description ( 
          "The total number of KBytes that can be stored in the "
          "OperatingSystem\'s paging files. 0 indicates that there "
          "are no paging files." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { "MIF.DMTF|System Memory Settings|001.3" }]
   uint64 SizeStoredInPagingFiles;

      [Description ( 
          "The total number of KBytes that can be mapped into the "
          "OperatingSystem\'s paging files without causing any "
          "other pages to be swapped out. 0 indicates that there "
          "are no paging files." ), 
       Units ( "KiloBytes" ), 
       Gauge, MappingStrings { 
          "MIF.DMTF|System Memory Settings|001.4" }]
   uint64 FreeSpaceInPagingFiles;

      [Description ( 
          "Maximum number of Kbytes of memory that can be allocated "
          "to a Process. For Operating Systems with no virtual "
          "memory, this value is typically equal to the total "
          "amount of physical Memory minus memory used by the BIOS "
          "and OS. For some Operating Systems, this value may be "
          "infinity - in which case, 0 should be entered. In other "
          "cases, this value could be a constant - for example, 2G "
          "or 4G." ), 
       Units ( "KiloBytes" )]
   uint64 MaxProcessMemorySize;

      [Description ( 
          "Boolean indicating whether the OperatingSystem is "
          "distributed across several ComputerSystem nodes. If so, "
          "these nodes should be grouped as a Cluster." )]
   boolean Distributed;

      [Description ( 
          "A value that indicates the maximum processes that a user "
          "can have associate with it." )]
   uint32 MaxProcessesPerUser;


      [Description ( 
          "Requests a reboot of the OperatingSystem. The return "
          "value should be 0 if the request was successfully "
          "executed, 1 if the request is not supported and some "
          "other value if an error occurred. In a subclass, the set "
          "of possible return codes could be specified, using a "
          "ValueMap qualifier on the method. The strings to which "
          "the ValueMap contents are \'translated\' may also be "
          "specified in the subclass as a Values array qualifier." )]
   uint32 Reboot(
);

      [Description ( 
          "Requests a shutdown of the OperatingSystem. The return "
          "value should be 0 if the request was successfully "
          "executed, 1 if the request is not supported and some "
          "other value if an error occurred. It is up to the "
          "implementation or subclass of OperatingSystem to "
          "establish dependencies between the Shutdown and Reboot "
          "methods, and for example, to provide more sophisticated "
          "capabilities such as scheduled shutdown/ reboot, etc. In "
          "a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 Shutdown(
);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Watchdog" ), 
    Description ( 
       "PlatformWatchdogService is class derived from Service that "
       "provides the controls to manage the watchdog timer service of "
       "a managed element. A PlatformWatchdogService monitors the "
       "ability of a monitored entity to reset a countdown timer "
       "before it expires. If the timer expires, the service may take "
       "specific action upon expiration. The monitored entity may be "
       "the Operating System, BIOS, or a software component that is "
       "installed on the computer system." )]
class CIM_PlatformWatchdogService : CIM_Service {

      [Description ( 
          "The type of entity that is monitored by the "
          "PlatformWatchdogService. This property is used to "
          "identify the type of entity that is responsible for "
          "re-arming, or whose information is used to re-arm, the "
          "watchdog at periodic intervals. A value set to 2 = "
          "\"Operating System\" shall indicate that the entity is "
          "an operating system. A value set to 3 = \"Operating "
          "System Boot Process\" shall indicate that the entity is "
          "one which handles the process of booting an operating "
          "system. A value set to 4 = \"Operating System Shutdown "
          "Process\" shall indicate that the entity is one which "
          "handles process of shutting down of an operating system. "
          "A value set to 5 = \"Firmware Boot Process\" shall "
          "indicate that the entity is one which handles process of "
          "booting firmware. A value set to 6 = \"BIOS Boot "
          "Process\" shall indicate that the entity is one which "
          "handles process of booting the system BIOS. A value set "
          "to 7 = \"Application\" shall indicate that the entity is "
          "an application. A value set to 8 = \"Service Processor\" "
          "shall indicate that the entity is an service processor." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Operating System", 
          "Operating System Boot Process", 
          "Operating System Shutdown Process", 
          "Firmware Boot Process", "BIOS Boot Process", 
          "Application", "Service Processor" }, 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.OtherMonitoredEntityTypeDescription" }]
   uint16 MonitoredEntityType;

      [Description ( 
          "A string that describes the type of monitored entity "
          "when MonitoredEntityType is set to 1 (Other)." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.MonitoredEntityType" }]
   string OtherMonitoredEntityTypeDescription;

      [Description ( 
          "The timeout interval that is used by the watchdog." )]
   datetime TimeoutInterval;

      [Description ( 
          "TimerExpired indicates when the watchdog timer has "
          "expired. A value of False shall indicate the watchdog "
          "timer did not expire the last time it was active, or "
          "this information is unknown. A value of True shall "
          "indicate the watchdog timer expired the last time it was "
          "active. If CurrentTimerValue is supported it also "
          "expresses this same information when it has the value "
          "00000000000000.000000:000 expressed in the interval "
          "notation of the datetime type." )]
   boolean TimerExpired;

      [Description ( 
          "The resolution of the timer used by the watchdog. The "
          "timer can expire anytime between (TimeoutInterval - "
          "TimerResolution) or (TimeoutInterval + TimerResolution)." )]
   datetime TimerResolution;

      [Description ( 
          "The amount of time remaining before the watchdog timer "
          "expires. A value of NULL shall mean unknown." )]
   datetime CurrentTimerValue;

      [Description ( 
          "The time of the last watchdog timer expiration." )]
   datetime TimeOfLastExpiration;

      [Description ( 
          "ActionOnExpiration specifies the action that should "
          "happen upon the expiration of the watchdog timer. A "
          "value set to 1 = \"Other\" shall indicate that the "
          "action described in OtherActionOnExpiration is to be "
          "taken. A value set to 2 = \"None - Status Only\" shall "
          "indicate that no action is to be taken. A value set to 3 "
          "= \"System Reset\" shall indicate that the action is to "
          "reset the system. A value set to 4 = \"System Power Off\" "
          "shall indicate that the action is to power off the "
          "system. A value set to 5 = \"System Power Off, then On\" "
          "shall indicate that the action is to power off the "
          "system, followed by a power-on of the system. A value "
          "set to 6 = \"Generate System NonMaskableInterrupt (NMI)\" "
          "shall indicate that the action is to generate a "
          "non-maskable interrupt on the system. A value set to 7 = "
          "\"Generate System Management Interrupt (SMI)\" shall "
          "indicate that the action is to generate a management "
          "interrupt on the system. A value set to 8 = \" Reset "
          "Monitored Entity \" shall indicate that the action is to "
          "reset the monitored entity." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "None - Status Only", 
          "System Reset", "System Power Off", 
          "System Power Off, then On", 
          "Generate System NonMaskableInterrupt (NMI)", 
          "Generate System Management Interrupt (SMI)", 
          "Reset Monitored Entity" }, 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.OtherActionOnExpiration" }]
   uint16 ActionOnExpiration;

      [Description ( 
          "This property shall have a value if ActionOnExpiration "
          "contains the value 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_PlatformWatchdogService.ActionOnExpiration" }]
   string OtherActionOnExpiration;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01424.002" type ="modify">Unix Process Priority Correction</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Process 
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "Each instance of the CIM_Process class represents a single "
       "instance of a running program. A user of the OperatingSystem "
       "will typically see a Process as an application or task. Within "
       "an OperatingSystem, a Process is defined by a workspace of "
       "memory resources and environmental settings that are allocated "
       "to it. On a multitasking System, this workspace prevents "
       "intrusion of resources by other Processes. Additionally, a "
       "Process can execute as multiple Threads, all which run within "
       "the same workspace." )]
class CIM_Process : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_OperatingSystem.CSCreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_OperatingSystem.CSName" )]
   string CSName;

      [Key, Description ( 
          "The scoping OperatingSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_OperatingSystem.CreationClassName" )]
   string OSCreationClassName;

      [Key, Description ( "The scoping OperatingSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_OperatingSystem.Name" )]
   string OSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A string used to identify the Process. A Process ID is a "
          "kind of Process Handle." ), 
       MaxLen ( 256 ), 
       MappingStrings { "MIF.DMTF|Process Information|001.1" }]
   string Handle;

      [Override ( "Name" ), 
       Description ( "The name of the process." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.6" }]
   string Name;

      [Description ( 
          "Priority indicates the urgency or importance of "
          "execution of a Process. Lower values reflect more "
          "favorable process scheduling. If a priority is not "
          "defined for a Process, a value of 0 should be used." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.10" }]
   uint32 Priority;

      [Description ( 
          "Indicates the current operating condition of the "
          "Process. Values include ready (2), running (3), and "
          "blocked (4), among others. The majority of the "
          "enumerated values are obvious. However, a few require "
          "additional explanation: \n"
          "7 (Terminated) describes that a process has naturally "
          "completed \n"
          "8 (Stopped) describes that a process has been "
          "prematurely \'stopped\' by a user or other request \n"
          "10 (Ready but Relinquished Processor) describes that a "
          "process is in the Ready state, but has voluntarily "
          "relinquished execution time to other processes. For "
          "example, this state may indicate a problem when the "
          "relinquishing process is not handling items on its "
          "queues. If these semantics cannot be detected, the "
          "process should report its state as 2 (\"Ready\"). \n"
          "11 (Hung) indicates that a process is not responding and "
          "should therefore not be given further execution time." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "Unknown", "Other", "Ready", "Running", "Blocked", 
          "Suspended Blocked", "Suspended Ready", "Terminated", 
          "Stopped", "Growing", "Ready But Relinquished Processor", 
          "Hung" }, 
       MappingStrings { "MIF.DMTF|Process Information|001.9", 
          "MIF.UNIX|Process Information|13.9" }]
   uint16 ExecutionState;

      [Description ( 
          "A string describing the state - used when the instance\'s "
          "ExecutionState property is set to 1 (\"Other\"). Other "
          "ExecutionDescription should be set to NULL when the "
          "Execution State property is any value other than 1." )]
   string OtherExecutionDescription;

      [Description ( "Time that the Process began executing." )]
   datetime CreationDate;

      [Description ( 
          "Time that the Process was stopped or terminated." )]
   datetime TerminationDate;

      [Description ( 
          "Time in kernel mode, in milliseconds. If this "
          "information is not available, or if the operating system "
          "does not distinguish between time in kernel and in user "
          "mode, a value of 0 should be used." ), 
       Units ( "MilliSeconds" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.13" }]
   uint64 KernelModeTime;

      [Description ( 
          "Time in user mode, in milliseconds. If this information "
          "is not available, a value of 0 should be used. If the "
          "operating system does not distinguish between time in "
          "kernel mode and user mode, the time should be returned "
          "in this property." ), 
       Units ( "MilliSeconds" ), 
       MappingStrings { "MIF.DMTF|Process Information|001.14" }]
   uint64 UserModeTime;

      [Description ( 
          "The amount of memory in bytes that a Process needs to "
          "execute efficiently, for an OperatingSystem that uses "
          "page-based memory management. If an insufficient amount "
          "of memory is available (< working set size), thrashing "
          "will occur. If this information is not known, NULL or 0 "
          "should be entered. If this data is provided, it could be "
          "monitored to understand a Process\' changing memory "
          "requirements as execution proceeds." ), 
       Units ( "Bytes" ), 
       Gauge]
   uint64 WorkingSetSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProcessExecutable 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "A link between a Process and a DataFile indicating that the "
       "File participates in the execution of the Process." )]
class CIM_ProcessExecutable : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The DataFile participating in the execution of the Process."
           )]
   CIM_DataFile REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Process." )]
   CIM_Process REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProcessOfJob 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "ProcessOfJob describes that the referenced Process is the "
       "result of the execution of the Job. A Job may cause multiple "
       "Processes to run, perhaps on different operating systems. This "
       "is allowed by the \'*\' cardinality of the Process reference. "
       "Note that a Process can result from only one Job - hence, the "
       "\'0..1\' cardinality on Job." )]
class CIM_ProcessOfJob : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "Execution of the Job results in the creation of the "
          "Process referenced as PartComponent. The Job aggregates "
          "the Process(es) that are created when it is executed." )]
   CIM_Job REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The Process that results from the execution of the Job." )]
   CIM_Process REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RecordInLog 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "RecordInLog describes the aggregation or location of Log "
       "entries within a MessageLog." )]
class CIM_RecordInLog {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Message Log." )]
   CIM_MessageLog REF MessageLog;

      [Key, Weak, Description ( 
          "The Log entry contained within the MessageLog." )]
   CIM_LogRecord REF LogRecord;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "RecordLog serves as an aggregation point for LogRecord "
       "objects. This class presents a higher level view of a log than "
       "its peer class MessageLog (which uses iterators) and "
       "introduces a new key structure. Access to records in this log "
       "is achieved through the use of the standard CIM Operations "
       "defined as part of WBEM." )]
class CIM_RecordLog : CIM_Log {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "Within the scope of the instantiating Namespace, "
          "InstanceID opaquely and uniquely identifies an instance "
          "of this class. \n"
          "In order to ensure uniqueness within the NameSpace, the "
          "value of InstanceID SHOULD be constructed using the "
          "following \'preferred\' algorithm: \n"
          "<OrgID>:<LocalID> \n"
          "Where <OrgID> and <LocalID> are separated by a colon "
          "\':\', and where <OrgID> MUST include a copyrighted, "
          "trademarked or otherwise unique name that is owned by "
          "the business entity creating/defining the InstanceID, or "
          "is a registered ID that is assigned to the business "
          "entity by a recognized global authority (This is similar "
          "to the <Schema Name>_<Class Name> structure of Schema "
          "class names.) In addition, to ensure uniqueness <OrgID> "
          "MUST NOT contain a colon (\':\'). When using this "
          "algorithm, the first colon to appear in InstanceID MUST "
          "appear between <OrgID> and <LocalID>. \n"
          "<LocalID> is chosen by the business entity and SHOULD "
          "not be re-used to identify different underlying "
          "(real-world) elements. If the above \'preferred\' "
          "algorithm is not used, the defining entity MUST assure "
          "that the resultant InstanceID is not re-used across any "
          "InstanceIDs produced by this or other providers for this "
          "instance\'s NameSpace. \n"
          "For DMTF defined instances, the \'preferred\' algorithm "
          "MUST be used with the <OrgID> set to \'CIM\'." )]
   string InstanceID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RemoteFileSystem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A class derived from FileSystem that represents access of the "
       "FileSystem via a network-related service. In this case, the "
       "file store is hosted by a computer, acting as a file server. "
       "For example, the file store for an NFS FileSystem is typically "
       "NOT on a ComputerSystem\'s locally controlled media, nor is it "
       "directly accessed through a device driver. Subclasses of "
       "RemoteFileSystem contain client-side configuration information "
       "related to the access of the FileSystem." )]
class CIM_RemoteFileSystem : CIM_FileSystem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ResidesOnExtent 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "An association between a LogicalElement and the StorageExtent "
       "where it is located. Typically, a FileSystem ResidesOn a "
       "LogicalDisk. However, it is possible for a logical file or "
       "other internal data store to reside directly on a "
       "StorageExtent or appropriate subclass." )]
class CIM_ResidesOnExtent : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalElement that is located on the StorageExtent." )]
   CIM_LogicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RunningOS 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::OperatingSystem" ), 
    Description ( 
       "RunningOS indicates the currently executing OperatingSystem. "
       "At most one OperatingSystem can execute at any time on a "
       "ComputerSystem. \'At most one\' is specified, since the "
       "Computer System may not be currently booted, or its "
       "OperatingSystem may be unknown." )]
class CIM_RunningOS : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The OperatingSystem currently running on the ComputerSystem."
           )]
   CIM_OperatingSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00866" type="change">Drop extraneous 
// sentence from class description.</change>
// ==================================================================
//  CIM_ServiceProcess 
// ==================================================================
   [Association, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "CIM_ServiceProcess is an association used to establish "
       "relationships between Services and Processes. It is used to "
       "indicate if a Service is running in a particular Process. It "
       "is also used to indicate, via the ExecutionType property, if "
       "the Service started and is wholly responsible for the Process, "
       "or if the Service is running in an existing Process, perhaps "
       "with other unrelated Services, which is owned or started by a "
       "different entity." )]
class CIM_ServiceProcess {

      [Key, Description ( 
          "The Service whose Process is described by this association."
           )]
   CIM_Service REF Service;

      [Key, Description ( 
          "The Process which represents or hosts the executing Service."
           )]
   CIM_Process REF Process;

      [Description ( 
          "Enumeration indicating how the Service runs in the "
          "context of, or owns the Process. \"Unknown\" indicates "
          "that the ExecutionType is not known. \"Other\" indicates "
          "that the ExecutionType does not match any of the values "
          "in the ExecutionType enumeration. \"Executes in Existing "
          "Process\" indicates that the Service is hosted in a "
          "Process that already exists in the system. The lifecycle "
          "of the Service is separate from that of the Process. "
          "\"Exeutes as Independent Process\" indicates that the "
          "Service is responsible for the lifecycle of the Process. "
          "When the Service is started, the Process is created. For "
          "example, ServletEngines can run \"InProcess\" within the "
          "existing Apache processes or \"OutOfProcess\" in its own "
          "servlet engine process. In this case the Apache process "
          "would communicate with the servlet engine process based "
          "on the content of the request. The association may be "
          "many to many." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Executes in Existing Process", 
          "Executes as Independent Process" }]
   uint16 ExecutionType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemResource 
// ==================================================================
   [Abstract, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An entity managed by BIOS, an OperatingSystem or other "
       "software, which is available for use by application software "
       "and/or LogicalDevices. Resources are individually identified "
       "and allocated entities, that are assignable, reservable, "
       "counted/ tracked, releasable, reset-able, etc. Examples of "
       "software Resources are message queues, shared memory segments "
       "(identified by a key value), and named pipes, while examples "
       "of hardware Resources (in an x86 environment) are IRQs, DMA "
       "channels and memory mapped I/O." )]
class CIM_SystemResource : CIM_EnabledLogicalElement {

      [Description ( 
          "Boolean indicating whether the Resource can be shared." )]
   boolean Shareable;

      [Description ( 
          "Indicates whether the Resource is implemented in "
          "hardware, software or both." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Hardware Only", "Software Only", 
          "Hardware and Software" }]
   uint16 ImplementationInfo;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Thread 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "Threads represent the ability to execute units of a Process or "
       "task in parallel. A Process can have many Threads, each of "
       "which is weak to the Process." )]
class CIM_Thread : CIM_EnabledLogicalElement {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CSCreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CSName" )]
   string CSName;

      [Key, Description ( 
          "The scoping OperatingSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.OSCreationClassName" )]
   string OSCreationClassName;

      [Key, Description ( "The scoping OperatingSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.OSName" )]
   string OSName;

      [Key, Description ( "The scoping Process\' CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.CreationClassName" )]
   string ProcessCreationClassName;

      [Key, Description ( "The scoping Process\' Handle." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_Process.Handle" )]
   string ProcessHandle;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allow all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( "A string used to identify the Thread." ), 
       MaxLen ( 256 )]
   string Handle;

      [Description ( 
          "Priority indicates the urgency or importance of "
          "execution of a Thread. A Thread may have a different "
          "priority than its owning Process. If this information is "
          "not available for a Thread, a value of 0 should be used." )]
   uint32 Priority;

      [Description ( 
          "Indicates the current operating condition of the Thread. "
          "Values include ready (2), running (3), and blocked (4), "
          "among others. The majority of the enumerated values are "
          "obvious. However, a few require additional explanation: \n"
          "7 (Ready but Relinquished Processor) describes that a "
          "thread is in the Ready state, but has voluntarily "
          "relinquished execution time to other threads. For "
          "example, this state may indicate a problem when the "
          "relinquishing thread is not handling items on its "
          "queues. If these semantics cannot be detected, the "
          "thread should report its state as 2 (\"Ready\"). \n"
          "8 (Hung) indicates that a thread is not responding." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Ready", "Running", "Blocked", 
          "Suspended Blocked", "Suspended Ready", 
          "Ready But Relinquished Processor", "Hung" }]
   uint16 ExecutionState;

      [Description ( 
          "Time in kernel mode, in milliseconds. If this "
          "information is not available, a value of 0 should be "
          "used." ), 
       Units ( "MilliSeconds" )]
   uint64 KernelModeTime;

      [Description ( 
          "Time in user mode, in milliseconds. If this information "
          "is not available, a value of 0 should be used." ), 
       Units ( "MilliSeconds" )]
   uint64 UserModeTime;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00903" type="add">Deprecate class.</change>
// ==================================================================
//  CIM_UnitaryComputerSystem 
// ==================================================================
   [Deprecated { "CIM_ComputerSystem" }, 
    Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A class derived from ComputerSystem that represents a Desktop, "
       "Mobile, NetPC, Server or other type of a single node Computer "
       "System." )]
class CIM_UnitaryComputerSystem : CIM_ComputerSystem {

      [Deprecated { "CIM_BootSourceSetting" }, 
       Description ( 
          "This object contains the data needed to find either the "
          "initial load device (its key) or the boot service to "
          "request the operating system to start up. In addition, "
          "the load parameters (ie, a pathname and parameters) may "
          "also be specified." )]
   string InitialLoadInfo[];

      [Deprecated { "CIM_BootSourceSetting" }, 
       Description ( 
          "This object contains the data identifying either the "
          "initial load device (its key) or the boot service that "
          "requested the last operating system load. In addition, "
          "the load parameters (ie, a pathname and parameters) may "
          "also be specified." ), 
       MappingStrings { 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemInitialLoadDevice", 
          "MIB.IETF|HOST-RESOURCES-MIB.hrSystemInitialLoadParameters", 
          "MIF.DMTF|Host System|001.3" }]
   string LastLoadInfo;

      [Deprecated { "CIM_PowerManagementCapabilities" }, 
       Description ( 
          "When TRUE, indicates that the computer can be power "
          "managed. The use of this property has been deprecated. "
          "Instead, the existence of an associated "
          "PowerManagementCapabilities class (associated using the "
          "ElementCapabilites relationship) indicates that power "
          "management is supported." )]
   boolean PowerManagementSupported;

      [Deprecated { "CIM_AssociatedPowerManagementService.PowerState" }, 
       Description ( 
          "Indicates the current power state of the ComputerSystem "
          "and its associated OperatingSystem. This property is "
          "being deprecated. Instead, the PowerState property in "
          "the AssociatedPowerManagementService class SHOULD be "
          "used. Regarding the Power Save states, these are defined "
          "as follows: Value 4 (\"Power Save - Unknown\") indicates "
          "that the System is known to be in a power save mode, but "
          "its exact status in this mode is unknown; \n"
          "Value 2 (\"Power Save - Low Power Mode\") indicates that "
          "the System is in a power save state but still "
          "functioning, and may exhibit degraded performance; \n"
          "Value 3 (\"Power Save - Standby\") describes that the "
          "System is not functioning but could be brought to full "
          "power \'quickly\'; value 7 (\"Power Save - Warning\") "
          "indicates that the ComputerSystem is in a warning state, "
          "though also in a power save mode. \n"
          "Values 8 and 9 describe the ACPI \"Hibernate\" and \"Soft "
          "Off\" states." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown", "Full Power", 
          "Power Save - Low Power Mode", "Power Save - Standby", 
          "Power Save - Unknown", "Power Cycle", "Power Off", 
          "Power Save - Warning", "Power Save - Hibernate", 
          "Power Save - Soft Off" }]
   uint16 PowerState;

      [Deprecated { "No Value" }, 
       Description ( 
          "The event that caused the System to power up. This "
          "information is available in SMBIOS, in the Type 1 "
          "structure, the Wake Up Type attribute." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Reserved", "Other", "Unknown", "APM Timer", 
          "Modem Ring", "LAN Remote", "Power Switch", "PCI PME#", 
          "A/C Power Restored" }]
   uint16 WakeUpType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixLocalFileSystem 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "A class derived from LocalFileSystem that represents the Unix "
       "environment view of a file store controlled by a "
       "ComputerSystem through local means (e.g., direct device driver "
       "access). In this case, the file store is managed directly by "
       "the ComputerSystem without the need for another computer to "
       "act as a file server. This definition does not breakdown in "
       "the case of a Clustered File System. In this scenario, the "
       "FileSystem is a LocalFileSystem, weak to the Cluster." )]
class CIM_UnixLocalFileSystem : CIM_LocalFileSystem {

      [Description ( 
          "The number of free inodes present in the file system. "
          "This value is only valid if TotalSlots is non-zero." ), 
       MappingStrings { "MIF.DMTF|Host File System|001.12" }, 
       ModelCorrespondence { "CIM_UnixLocalFileSystem.TotalInodes" }]
   uint64 FreeInodes;

      [Description ( 
          "The total number of inodes available in the file system. "
          "A value of zero for TotalInodes indicates that this file "
          "system does not have a preset limit." ), 
       MappingStrings { "MIF.DMTF|Host File System|001.11" }]
   uint64 TotalInodes;

      [Description ( 
          "The reserve data capacity of the file system in bytes." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Host File System|001.15" }]
   uint64 FSReservedCapacity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixProcess 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "Each instance of the CIM_UnixProcess class represents a single "
       "instance of a running program. A user of the Operating System "
       "will typically see a Process as an application or task. Within "
       "an OperatingSystem, a Process is defined by a workspace of "
       "memory resources and environmental settings that are allocated "
       "to it. On a multitasking System, this workspace prevents "
       "intrusion of resources by other Processes. Additionally, a "
       "Process can execute as multiple Threads, all which run within "
       "the same workspace." )]
class CIM_UnixProcess : CIM_Process {

      [Required, Description ( 
          "The parent process ID of this executing process." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.2" }]
   string ParentProcessID;

      [Required, Description ( 
          "The Real User ID of this currently executing process." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.4" }]
   uint64 RealUserID;

      [Required, Description ( 
          "The Group ID of this currently executing process." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.2" }]
   uint64 ProcessGroupID;

      [Description ( 
          "If part of a group of processes are under the control of "
          "a session leader, this property holds the session ID for "
          "the group." )]
   uint64 ProcessSessionID;

      [Description ( 
          "The TTY currently associated with this process." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.5" }]
   string ProcessTTY;

      [Description ( "The executing process\'s command path." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.7" }]
   string ModulePath;

      [Description ( 
          "The operating system parameters provided to the "
          "executing process. These are the argv[] values." ), 
       MappingStrings { "MIF.DMTF|Process Information|001.8" }]
   string Parameters[];

      [Description ( 
          "The process\'s \'nice\' value. Used to compute its priority."
           ), 
       MappingStrings { "MIF.DMTF|Process Information|001.11" }]
   uint32 ProcessNiceValue;

      [Description ( 
          "A description of the event this process is currently "
          "sleeping for. The precise nature of this string is "
          "implementation defined, but is typically the address of "
          "a system data structure that will be modified when the "
          "event occurs. This string only has meaning when the "
          "ExecutionState is \"Blocked\" or \"SuspendedBlocked\"." ), 
       ModelCorrespondence { "CIM_Process.ExecutionState" }]
   string ProcessWaitingForEvent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixProcessStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "CIM_UnixProcessStatistics is an association that relates a "
       "CIM_UnixProcess to its StatisticalInformation." )]
class CIM_UnixProcessStatistics : CIM_Statistics {

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The Process for which statistical or metric data is defined."
           )]
   CIM_UnixProcess REF Element;

      [Override ( "Stats" ), 
       Weak, Description ( 
          "The UNIX Process statistical information/object." )]
   CIM_UnixProcessStatisticalInformation REF Stats;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UnixThread 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Unix" ), 
    Description ( 
       "Threads represent the ability to execute units of a Process or "
       "task in parallel. A UnixThread inherits from the superclass, "
       "CIM_Thread, which is weak to the Process. The values used are "
       "defined in sched.h and psched.h." )]
class CIM_UnixThread : CIM_Thread {

      [Description ( 
          "Indicates the thread\'s scheduling policy. Set to "
          "\"Other\" when using OtherSchedPolicy to specifiy "
          "additional values. \"Other\" represents SCHED_OTHER as "
          "defined in sched.h." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "SCHED_FIFO", "SCHED_RR" }, 
       ModelCorrespondence { "CIM_UnixThread.OtherSchedPolicy" }]
   uint16 SchedPolicy;

      [Description ( 
          "Indicates the thread\'s scheduling policy when "
          "SchedPolicy is set to \"Other\"." ), 
       ModelCorrespondence { "CIM_UnixThread.SchedPolicy" }]
   string OtherSchedPolicy;

      [Description ( 
          "Indicates the size of the guard area for a created thread\'s stack."
           )]
   string GuardSize;

      [Description ( "Indicates the creation state of the thread." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "PTHREAD_CREATE_DETACHED", 
          "PTHREAD_CREATE_JOINABLE" }]
   uint16 DetachState;

      [Description ( 
          "Indicates how the scheduling attributes are to be set." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "PTHREAD_INHERIT_SCHED", 
          "PTHREAD_EXPLICIT_SCHED" }]
   uint16 InheritSched;

      [Description ( "Indicates the contention scope of the thread." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "PTHREAD_SCOPE_SYSTEM", 
          "PTHREAD_SCOPE_PROCESS" }]
   uint16 ContentionScope;

      [Description ( 
          "Indicates the size of storage to be used for the thread\'s stack."
           )]
   string StackSize;

      [Description ( "Indicates the thread\'s concurrency level." )]
   uint64 ConcurrencyLevel;

      [Description ( "Indicates the thread\'s cancelability state." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "PTHREAD_CANCEL_ENABLE", 
          "PTHREAD_CANCEL_DISABLE" }]
   uint16 CancelState;

      [Description ( "Indicates the thread\'s cancelability type." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "PTHREAD_CANCEL_DEFERRED", 
          "PTHREAD_CANCEL_ASYNCHRONOUS" }]
   uint16 CancelType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UseOfLog 
// ==================================================================
   [Association, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "ManagedSystemElements may record their event, error or "
       "informational data within Logs. The use of a Log to hold a "
       "ManagedSystemElement\'s data is described by this association. "
       "The type of Element data captured by the Log can be specified "
       "using the RecordedData string property." )]
class CIM_UseOfLog : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Log." )]
   CIM_Log REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ManagedSystemElement whose information is recorded in the Log."
           )]
   CIM_ManagedSystemElement REF Dependent;

      [Description ( 
          "A free-form string describing the use of the Log by the "
          "ManagedSystemElement." )]
   string RecordedData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UseOfMessageLog 
// ==================================================================
   [Association, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "ManagedSystemElements may record their event, error or "
       "informational data within MessageLogs. The use of a Log to "
       "hold a ManagedSystemElement\'s data is described by this "
       "association. \n"
       "UseOfMessageLog has the same semantics as UseOfLog. Users "
       "SHOULD reference UseOfLog in lieu of this association." )]
class CIM_UseOfMessageLog : CIM_UseOfLog {

      [Override ( "Antecedent" ), 
       Description ( "The MessageLog." )]
   CIM_MessageLog REF Antecedent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VirtualComputerSystem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A class derived from ComputerSystem that represents the "
       "ability to virtualize or emulate another ComputerSystem." )]
class CIM_VirtualComputerSystem : CIM_ComputerSystem {

      [Description ( 
          "A string describing the type of System or hardware "
          "platform that is virtualized. OperatingSystem "
          "information is obtained via the RunningOS inherited from "
          "ComputerSystem." )]
   string VirtualSystem;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WakeUpService 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "WakeUpService allows a UnitaryComputerSystem to be woken up "
       "from a low power sleep state. This Service is implemented by a "
       "LogicalDevice (e.g. NetworkAdapter or Modem) that is capable "
       "of receiving wakeup messages, and notifying the System." )]
class CIM_WakeUpService : CIM_Service {

      [Description ( "The Type of the WakeUp Service." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Wake On LAN - Magic Packet", 
          "Wake on LAN - Packet Filtering", "Wake On Ring" }, 
       ModelCorrespondence { 
          "CIM_WakeUpService.OtherWakeUpTypeDescription" }]
   uint16 WakeUpType;

      [Description ( 
          "A description of the type of WakeUpService used when "
          "WakeUpType is set to \"Other\" (value=1)." ), 
       ModelCorrespondence { "CIM_WakeUpService.WakeUpType" }]
   string OtherWakeUpTypeDescription;

      [Description ( 
          "The filter type on the packets/messages that trigger the "
          "WakeUpService. This field is only used when the WakeUp "
          "Type is set to \"Wake On LAN - Packet Filtering\" (value "
          "=3)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "ARP Broadcast", 
          "Neighbor Discovery Multicast", 
          "IP Packet with Directed MAC Address", 
          "IPX Diagnostic Responder", "NBT Name Query", 
          "Binary Match" }, 
       ModelCorrespondence { 
          "CIM_WakeUpService.OtherFilterTypeDescription" }]
   uint16 FilterType;

      [Description ( 
          "The binary data that is used to compare the contents of "
          "the received packet. This is used when the FilterType is "
          "set to \"Binary Match\" (value=7). This could also be "
          "used when the FilterType is set to \"Other\" (value=1)." ), 
       OctetString]
   uint8 FilterData[];

      [Description ( 
          "The description of the format of the FilterType used by "
          "the Service when the FilterType is set to \"Other\" "
          "(value=1)." ), 
       ModelCorrespondence { "CIM_WakeUpService.FilterType" }]
   string OtherFilterTypeDescription;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "CIM_Account is the information held by a SecurityService to "
       "track identity and privileges managed by that service. Common "
       "examples of an Account are the entries in a UNIX /etc/passwd "
       "file. Several kinds of security services use various "
       "information from those entries - the /bin/login program uses "
       "the account name (\'root\') and hashed password to "
       "authenticate users, and the file service, for instance, uses "
       "the UserID field (\'0\') and GroupID field (\'0\') to record "
       "ownership and determine access control privileges on files in "
       "the file system. This class is defined so as to incorporate "
       "commonly-used LDAP attributes to permit implementations to "
       "easily derive this information from LDAP-accessible "
       "directories. \n"
       "\n"
       "The semantics of Account overlap with that of the class, "
       "CIM_Identity. However, aspects of Account - such as its "
       "specific tie to a System - are valuable and have been widely "
       "implemented. For this reason, the Account and Identity classes "
       "are associated using a subclass of LogicalIdentity "
       "(AccountIdentity), instead of deprecating the Account class in "
       "the CIM Schema. When an Account has been authenticated, the "
       "corresponding Identity\'s TrustEstablished Boolean would be "
       "set to TRUE. Then, the Identity class can be used as defined "
       "for authorization purposes." )]
class CIM_Account : CIM_EnabledLogicalElement {

      [Key, Description ( "The scoping System\'s CCN." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.CreationClassName" )]
   string SystemCreationClassName;

      [Key, Description ( "The scoping System\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_System.Name" )]
   string SystemName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Override ( "Name" ), 
       Description ( 
          "The Name property defines the label by which the object "
          "is known. The value of this property may be set to be "
          "the same as that of the UserID property or, in the case "
          "of an LDAP-derived instance, the Name property value may "
          "be set to the distinguishedName of the LDAP-accessed "
          "object instance." ), 
       MaxLen ( 1024 )]
   string Name;

      [Description ( 
          "UserID is the value used by the SecurityService to "
          "represent identity. For an authentication service, the "
          "UserID may be the name of the user, or for an "
          "authorization service the value which serves as a handle "
          "to a mapping of the identity." ), 
       MaxLen ( 256 )]
   string UserID;

      [Description ( 
          "In the case of an LDAP-derived instance, the ObjectClass "
          "property value(s) may be set to the objectClass "
          "attribute values." )]
   string ObjectClass[];

      [Description ( 
          "The Descriptions property values may contain "
          "human-readable descriptions of the object. In the case "
          "of an LDAP-derived instance, the description attribute "
          "may have multiple values that, therefore, cannot be "
          "placed in the inherited Description property." ), 
       MaxLen ( 1024 )]
   string Descriptions[];

      [Description ( 
          "Based on RFC1274, the host name of the system(s) for "
          "which the account applies. The host name may be a "
          "fully-qualified DNS name or it may be an unqualified "
          "host name." )]
   string Host[];

      [Description ( 
          "This property contains the name of a locality, such as a "
          "city, county or other geographic region." )]
   string LocalityName[];

      [Required, Description ( 
          "The name of the organization related to the account." )]
   string OrganizationName[];

      [Description ( 
          "The name of an organizational unit related to the account."
           )]
   string OU[];

      [Description ( 
          "In the case of an LDAP-derived instance, the SeeAlso "
          "property specifies distinguished name of other Directory "
          "objects which may be other aspects (in some sense) of "
          "the same real world object." )]
   string SeeAlso[];

      [Description ( 
          "Based on inetOrgPerson and for directory compatibility, "
          "the UserCertificate property may be used to specify a "
          "public key certificate for the person." ), 
       OctetString]
   string UserCertificate[];

      [Description ( 
          "In the case of an LDAP-derived instance, the "
          "UserPassword property may contain an encrypted password "
          "used to access the person\'s resources in a directory." ), 
       OctetString]
   string UserPassword[];

      [Description ( 
          "The encryption algorithm (if any) used by the client to "
          "produce the value in the UserPassword property when "
          "creating or modifying an instance of CIM_Account. The "
          "original password is encrypted using the algorithm "
          "specified in this property, and UserPassword contains "
          "the resulting encrypted value. In response to an "
          "operation request that would return the value of the "
          "UserPassword property to a client, an implementation "
          "shall instead return an array of length zero.\n"
          "The value of UserPasswordEncryptionAlgorithm in an "
          "instance of CIM_Account shall be 0 (\"None\") unless the "
          "SupportedUserPasswordEncryptionAlgorithms[] property in "
          "the CIM_AccountManagementCapabilities instance "
          "associated with the CIM_AccountManagementService "
          "instance associated with the CIM_Account instance "
          "contains a non-null entry other than 0 (\"None\").\n"
          "This property does not prevent the use of encryption at "
          "the transport, network, or data-link layer to protect "
          "communications between a management client and the "
          "server, nor is it meant to encourage communications "
          "without such encryption.\n"
          "The supported values for this property are:\n"
          "- 0 (\"None\"): Indicates that the contents of "
          "UserPassword are not encrypted.\n"
          "- 1 (\"Other\"): Indicates that the contents of "
          "UserPassword are encrypted using an algorithm not "
          "specifically identified in the value map for this "
          "property, and that this algorithm is described in OtherUserPasswordEncryptionAlgorithm.\n"
          "- 2 (\"HTTP Digest MD5(A1)\"): The MD5 hash algorithm, "
          "applied to the string A1 defined in RFC2617 as the "
          "concatenation username-value \":\" realm-value \":\" "
          "passwd, where username-value is provided by the client "
          "as the value of the UserID property. passwd is the "
          "underlying user password. realm-value is the HTTP digest "
          "realm value, and is provided by the server. The "
          "semantics of the HTTP digest realm are specified in RFC "
          "2617. The server may surface the realm-value in the "
          "UserPasswordEncryptionSalt property of "
          "CIM_AccountManagementCapabilities." ), 
       ValueMap { "0", "1", "2", ".." }, 
       Values { "None", "Other", "HTTP Digest MD5(A1)", 
          "DMTF Reserved" }, 
       ModelCorrespondence { "CIM_Account.UserPassword", 
          "CIM_Account.OtherUserPasswordEncryptionAlgorithm", 
          "CIM_AccountManagementCapabilities.SupportedUserPasswordEncryptionAlgorithms", 
          "CIM_AccountManagementCapabilities.UserPasswordEncryptionSalt" }]
   uint16 UserPasswordEncryptionAlgorithm;

      [Description ( 
          "If the UserPasswordEncryptionAlgorithm property is set "
          "to 1 (\"Other\") this property contains a free form "
          "string that provides more information about the "
          "encryption algorithm. If UserPasswordEncryptionAlgorithm "
          "is not set to 1 (\"Other\") this property has no "
          "meaning." ), 
       ModelCorrespondence { 
          "CIM_Account.UserPasswordEncryptionAlgorithm" }]
   string OtherUserPasswordEncryptionAlgorithm;

      [Description ( 
          "ComplexPasswordRulesEnforced indicates the rules for "
          "constructing a complex password enforced by the Account.\n"
          "Minimum Length a minimum length is enforced for "
          "passwords for the account.\n"
          "Preclude User ID inclusion precluding the password from "
          "including the user ID is supported. \n"
          "Maximum Repeating Characters a limit will be enforced on "
          "the number of times a character can occur consecutively. \n"
          "Lower Case Alpha at least one lower case alpha character "
          "is required. \n"
          "Upper Case Alpha at least one upper case alpha character "
          "is required. \n"
          "Numeric Character at least one numeric character is "
          "required. \n"
          "Special Character at least one special character is "
          "required." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "0x8000..0xFFFF" }, 
       Values { "Minimum Length", "Preclude User ID Inclusion", 
          "Maximum Repeating Characters", "Lower Case Alpha", 
          "Upper Case Alpha", "Numeric Character", 
          "Special Character", "DMTF Reserved", "Vendor Reserved" }]
   uint16 ComplexPasswordRulesEnforced[];

      [Description ( 
          "InactivityTimeout specifies the interval after which if "
          "an account has been inactive, it shall be Disabled. The "
          "value may be expressed in interval format, as an "
          "absolute date-time, or be NULL.\n"
          "An absolute date-time shall indicate when the password "
          "will be disabled due to inactivity.\n"
          "An interval value shall indicate the time remaining "
          "before the password is disabled due to inactivity.\n"
          "A value of NULL shall indicate that the Account will not "
          "be disabled due to inactivity." )]
   datetime InactivityTimeout;

      [Description ( 
          "LastLogin shall be an absolute date-time that specifies "
          "the last successful authentication that occurred for "
          "this Account.A value of 99990101000000.000000+000 shall "
          "indicate the Account has never been used. A value of "
          "NULL shall indicate the last successful login is "
          "unknown." )]
   datetime LastLogin;

      [Description ( 
          "MaximumSuccessiveLoginFailures indicates the number of "
          "successive failed login attempts that shall result in "
          "the Account being disabled. A value of zero shall "
          "indicate that the Account will not be disabled due to "
          "successive failed login attempts." )]
   uint16 MaximumSuccessiveLoginFailures;

      [Description ( 
          "PasswordExpiration indicates the maximum password age "
          "enforced for the Account. The value may be expressed as "
          "an absolute date-time as an interval, or may be NULL.\n"
          "An absolute date-time shall indicate the date and time "
          "when the password will expire.\n"
          "An interval value shall indicate the time remaining "
          "until the password expires.\n"
          "A value of NULL shall indicate the password never "
          "expires." )]
   datetime PasswordExpiration;

      [Description ( 
          "PasswordHistoryDepth indicates the number of previous "
          "passwords that shall be maintained for the Account. The "
          "Account shall preclude the selection of a password if it "
          "occurs in the password history. A value of zero shall "
          "indicate that a password history is not maintained." )]
   uint16 PasswordHistoryDepth;

      [Description ( 
          "UserPasswordEncoding specifies encoding used for the "
          "UserPassword property.\r\n"
          "\"kbd\" denotes a string in hexadecimal format "
          "containing keyboard scan code input. An example of a "
          "UserPassword structured in this format would be "
          "\"321539191E1F1F11181320\", which is the representation "
          "of \"my password\" in US English keyboard scan codes.\n"
          "\"\rascii\" denotes clear text that complies with the "
          "ASCII character set. An example would be \"my password\".\n"
          "\"pin\" denotes that only numeric input in ASCII text is "
          "allowed for the UserPassword. An example would be \"1234\".\n"
          "\"UTF-8\" denotes that the UserPassword is a Unicode "
          "string that is encoded using UTF-8 character set.\n"
          "\"UTF-16\" denotes that the UserPassword is a Unicode "
          "string that is encoded using UTF-16 character set. The "
          "byte order mark (BOM) shall be the first character of "
          "the string.\n"
          "\"UTF-16LE\" denotes that the UserPassword is a Unicode "
          "string that is encoded using UTF-16 character set in "
          "little-endian byte order.\n"
          "\"UTF-16BE\" denotes that the UserPassword is a Unicode "
          "string that is encoded using UTF-16 character set in "
          "big-endian byte order.\n"
          "\"UCS-2\" denotes that the UserPassword is a Unicode "
          "string that is encoded using UCS-2 character set." ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", "..", 
          "65536..4294967295" }, 
       Values { "ascii", "kbd", "pin", "UTF-8", "UTF-16", 
          "UTF-16LE", "UTF-16BE", "UCS-2", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint32 UserPasswordEncoding;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AccountIdentity 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "CIM_AccountIdentity relates a system Account with the Identity "
       "that is established. Since Account also carries Identity "
       "semantics, the LogicalIdentity association is defined as the "
       "superclass of this association." )]
class CIM_AccountIdentity : CIM_LogicalIdentity {

      [Override ( "SystemElement" ), 
       Description ( "The Account that establishes Identity." )]
   CIM_Account REF SystemElement;

      [Override ( "SameElement" ), 
       Description ( "The Identity established by the Account." )]
   CIM_Identity REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AccountMapsToAccount 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "This relationship may be used to associate an Account used by "
       "an AuthenticationService to an Account used for Authorization. "
       "For instance, this mapping occurs naturally in the UNIX "
       "/etc/passwd file, where the AuthenticationService Account "
       "(\'root\') is mapped to the AuthorizationService Account "
       "(\'0\'). The two are separate accounts, as evidenced by the "
       "ability to have another AuthenticationService Account which "
       "ALSO maps to the AuthorizationService Account (\'0\') without "
       "ambiguity. This association may be used for other account "
       "mappings as well such as for coordinating single signon for "
       "multiple accounts for the same user." )]
class CIM_AccountMapsToAccount : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "An Account." )]
   CIM_Account REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "A related Account." )]
   CIM_Account REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AccountOnSystem 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "A system (e.g., ApplicationSystem, ComputerSystem, "
       "AdminDomain) aggregates Accounts and scopes the uniqueness of "
       "the Account names (i.e., userids)." )]
class CIM_AccountOnSystem : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The aggregating system also provides name scoping for the Account."
           )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( "The subordinate Account." )]
   CIM_Account REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectionInSystem 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_CollectionInSystem is an association used to establish a "
       "parent-child relationship between a collection and an \'owning\' "
       "System such as an AdminDomain or ComputerSystem. A single "
       "collection should not have both a CollectionInOrganization and "
       "a CollectionInSystem association." )]
class CIM_CollectionInSystem {

      [Key, Aggregate, Max ( 1 ), 
       Description ( 
          "The parent system responsible for the collection." )]
   CIM_System REF Parent;

      [Key, Description ( "The collection." )]
   CIM_Collection REF Child;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CredentialManagementSAP 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_CredentialManagementSAP represents the ability to utilize "
       "or invoke a CredentialManagementService." )]
class CIM_CredentialManagementSAP : CIM_ServiceAccessPoint {

      [Description ( "The URL for the access point." )]
   string URL;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedACI 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AccessControl" ), 
    Description ( 
       "CIM_HostedACI is an association used to provide the namespace "
       "scoping of AccessControlInformation. Since the referenced "
       "class, AccessControlInformation, is deprecated, this Weak "
       "association is similarly deprecated. Also, although "
       "Privileges/access control can be defined in the context of a "
       "System, this is not a mandatory association nor does it "
       "provide any additional semantics for the Privilege. Therefore, "
       "HostedACI is deprecated with no replacement association." )]
class CIM_HostedACI : CIM_HostedDependency {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting system." )]
   CIM_System REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The hosted AccessControlInformation." )]
   CIM_AccessControlInformation REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedAuthenticationRequirement 
// ==================================================================
   [Association, Deprecated { "CIM_PolicyRuleInSystem" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AuthenticationReqmt" ), 
    Description ( 
       "CIM_HostedAuthenticationRequirement is an association used to "
       "provide the namespace scoping of AuthenticationRequirement. "
       "The hosted requirements may or may not apply to resources on "
       "the hosting system. Since the AuthenticationRequirement class "
       "is deprecated in lieu of explicit policy rules, this class is "
       "similarly deprecated to its \'policy\' equivalent." )]
class CIM_HostedAuthenticationRequirement : CIM_HostedDependency {

      [Deprecated { "CIM_PolicyRuleInSystem.Antecedent" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting system." )]
   CIM_System REF Antecedent;

      [Deprecated { "CIM_PolicyRuleInSystem.Dependent" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The hosted AuthenticationRequirement." )]
   CIM_AuthenticationRequirement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MorePersonInfo 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_MorePersonInfo is an association used to extend the "
       "information in a CIM_Person class instance." )]
class CIM_MorePersonInfo : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Person which has more information." )]
   CIM_Person REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "Additional data concerning the Person." )]
   CIM_OtherPersonInformation REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SecurityService 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( "A service providing security functionaity." )]
class CIM_SecurityService : CIM_Service {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SecurityServiceUsesAccount 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "This relationship associates SecurityService instances to the "
       "Accounts they use in the course of their work." )]
class CIM_SecurityServiceUsesAccount : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "Account used by the SecurityService." )]
   CIM_Account REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Service using the Account." )]
   CIM_SecurityService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemAdministrator 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Org" ), 
    Description ( 
       "CIM_SystemAdministrator is an association used to identify the "
       "UserEntity as a system administrator of a CIM_System." )]
class CIM_SystemAdministrator : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The administered system." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The UserEntity that provides the admininstrative "
          "function for the associated system." )]
   CIM_UserEntity REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemAdministratorGroup 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Group" ), 
    Description ( 
       "CIM_SystemAdministratorGroup is an association used to "
       "identify a Group that has system administrator "
       "responsibilities for a CIM_System." )]
class CIM_SystemAdministratorGroup : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The administered system." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Group of administrators." )]
   CIM_Group REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemAdministratorRole 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Role" ), 
    Description ( 
       "CIM_SystemAdministratorRole is an association used to identify "
       "a system administrator Role for a CIM_System." )]
class CIM_SystemAdministratorRole : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The administered system." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The system administration role." )]
   CIM_Role REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UsersAccount 
// ==================================================================
   [Association, Deprecated { "CIM_AccountIdentity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "This relationship associates UsersAccess with the Accounts "
       "with which they\'re able to interact. This association is "
       "deprecated in lieu of AccountIdentity, which defines similar "
       "semantics. This was done since the UsersAccess reference in "
       "UsersAccount has been deprecated and replaced by the more "
       "specific semantics of CIM_Identity." )]
class CIM_UsersAccount : CIM_Dependency {

      [Deprecated { "CIM_AccountIdentity.SystemElement" }, 
       Override ( "Antecedent" ), 
       Description ( "The user\'s Account." )]
   CIM_Account REF Antecedent;

      [Deprecated { "CIM_AccountIdentity.SameElement" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The User as identified by their UsersAccess instance." )]
   CIM_UsersAccess REF Dependent;


};

// Copyright (c) 2009 DMTF.  All Rights Reserved.
   [Abstract, Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "A CIM_Action is an operation that is part of a process to "
       "either create a SoftwareElement in its next state or to "
       "eliminate the SoftwareElement in its current state. A "
       "CIM_ComputerSystem object represents the environment in which "
       "CIM_SoftwareElements are already deployed/installed or into "
       "which the elements will be deployed/installed. For the case in "
       "which an element is already installed, the "
       "CIM_InstalledSoftwareElement association identifies the "
       "CIM_ComputerSystem object that represents the \"environment\". "
       "When a SoftwareElement is being deployed for installation on a "
       "ComputerSystem, that system is the target of the Action and is "
       "identified using the TargetSystem reference of the "
       "InvokeOnSystem method." )]
class CIM_Action : CIM_ManagedElement {

      [Key, Description ( 
          "The name used to identify the SoftwareElement that is "
          "being acted upon." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SoftwareElement.Name" )]
   string Name;

      [Key, Description ( 
          "The version of the SoftwareElement being acted upon." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_SoftwareElement.Version" )]
   string Version;

      [Key, Description ( 
          "The SoftwareElementState of the SoftwareElement being acted upon."
           ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Deployable", "Installable", "Executable", "Running" }, 
       Propagated ( "CIM_SoftwareElement.SoftwareElementState" )]
   uint16 SoftwareElementState;

      [Key, Description ( 
          "This is an identifier for the SoftwareElement being acted upon."
           ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SoftwareElement.SoftwareElementID" )]
   string SoftwareElementID;

      [Key, Description ( 
          "The Target Operating System of the SoftwareElement being "
          "acted upon." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110" }, 
       Values { "Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", 
          "DECNT", "Tru64 UNIX", "OpenVMS", "HPUX", "AIX", 
          //10 
          "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", 
          "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", 
          //20 
          "NCR3000", "NetWare", "OSF", "DC/OS", 
          "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", 
          "Sequent", "IRIX", "Solaris", //30 
          "SunOS", 
          "U6000", "ASERIES", "HP NonStop OS", "HP NonStop OSS", 
          "BS2000", "LINUX", "Lynx", "XENIX", "VM", 
          //40 
          "Interactive UNIX", "BSDUNIX", "FreeBSD", 
          "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", 
          "QNX", "EPOC", //50 
          "IxWorks", "VxWorks", 
          "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", 
          "Rhapsody", "Windows 2000", "Dedicated", 
          //60 
          "OS/390", "VSE", "TPF", "Windows (R) Me", 
          "Caldera Open UNIX", "OpenBSD", "Not Applicable", 
          "Windows XP", "z/OS", "Microsoft Windows Server 2003", 
          //70
          "Microsoft Windows Server 2003 64-Bit", 
          "Windows XP 64-Bit", "Windows XP Embedded", 
          "Windows Vista", "Windows Vista 64-Bit", 
          "Windows Embedded for Point of Service", 
          "Microsoft Windows Server 2008", 
          "Microsoft Windows Server 2008 64-Bit", "FreeBSD 64-Bit", 
          "RedHat Enterprise Linux", 
          //80
          "RedHat Enterprise Linux 64-Bit", 
          "Solaris 64-Bit", "SUSE", "SUSE 64-Bit", "SLES", 
          "SLES 64-Bit", "Novell OES", "Novell Linux Desktop", 
          "Sun Java Desktop System", "Mandriva", 
          //90
          "Mandriva 64-Bit", "TurboLinux", 
          "TurboLinux 64-Bit", "Ubuntu", "Ubuntu 64-Bit", "Debian", 
          "Debian 64-Bit", "Linux 2.4.x", "Linux 2.4.x 64-Bit", 
          "Linux 2.6.x", //100
          "Linux 2.6.x 64-Bit", 
          "Linux 64-Bit", "Other 64-Bit", 
          "Microsoft Windows Server 2008 R2", "VMware ESXi", 
          "Microsoft Windows 7", "CentOS 32-bit", "CentOS 64-bit", 
          "Oracle Enterprise Linux 32-bit", 
          "Oracle Enterprise Linux 64-bit", 
          //110 
          "eComStation 32-bitx" }, 
       Propagated ( "CIM_SoftwareElement.TargetOperatingSystem" )]
   uint16 TargetOperatingSystem;

      [Key, Description ( 
          "The ActionID property is a unique identifier assigned to "
          "a particular Action for a SoftwareElement." ), 
       MaxLen ( 256 )]
   string ActionID;

      [Description ( 
          "The Direction property is used to indicate whether this "
          "Action is part of a sequence to transition the "
          "SoftwareElement to its next state (\"Install\") or to "
          "remove the element (\"Uninstall\")." ), 
       ValueMap { "0", "1" }, 
       Values { "Install", "Uninstall" }]
   uint16 Direction;


      [Description ( 
          "The Invoke method takes this Action. The details of how "
          "the Action is implemented are described by specific "
          "subclasses of CIM_Action. When the SoftwareElement being "
          "transitioned or eliminated is already installed, the "
          "CIM_InstalledSoftwareElement association identifies the "
          "CIM_ComputerSystem in whose context the Invoke is "
          "executed. If this association is not in place, then the "
          "InvokeOnSystem method should be used - since it "
          "identifies the TargetSystem as a parameter of the "
          "method. \n"
          "The results of the Invoke method are based on the return "
          "value. A zero is returned if the Action is satisfied. A "
          "one is returned if the method is not supported. Any "
          "other value indicates the Action is not satisfied." )]
   uint32 Invoke(
);

      [Description ( 
          "The InvokeOnSystem method takes this Action. The details "
          "of how the Action is implemented are described by "
          "specific subclasses of CIM_Action. The method\'s "
          "TargetSystem input parameter specifies the "
          "ComputerSystem in whose context the method is invoked. \n"
          "The results of the InvokeOnSystem method are based on "
          "the return value. A zero is returned if the Action is "
          "satisfied. A one is returned if the method is not "
          "supported. Any other value indicates the Action is not "
          "satisfied." )]
   uint32 InvokeOnSystem(
         [IN, Description ( 
             "Reference to target system in whose context the "
             "method is to be invoked." )]
      CIM_ComputerSystem REF TargetSystem);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ActionSequence 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The CIM_ActionSequence association defines a series of "
       "operations that either transition a SoftwareElement, "
       "referenced by the CIM_SoftwareElementActions association, to "
       "the next state or removes the element from its current state. "
       "The Action classes participating in this association must have "
       "the same value for the Action.Direction property - since they "
       "are either part of a sequence to transition a SoftwareElement "
       "into its next state or to uninstall it. The next-state and "
       "uninstall Actions associated with a particular SoftwareElement "
       "must be a continuous sequence. \n"
       "ActionSequence is an association that loops on the Action "
       "classes with roles for the \'prior\' and \'next\' Actions in "
       "the sequence. The need for a continuous sequence imples: "
       "(1)Within the set of next-state or uninstall Actions, there is "
       "one and only one Action that does not have an instance of "
       "ActionSequence referencing it in the \'next\' role. This is "
       "the first Action in the sequence. (2) Within the set of "
       "next-state or uninstall Actions, there is one and only one "
       "Action that does not have an instance of ActionSequence "
       "referencing it in the \'prior\' role. This is the last Action "
       "in the sequence. (3) All other Actions within the set of "
       "next-state and uninstall Actions must participate in two "
       "instances of ActionSequence, one in a \'prior\' role and the "
       "other in the \'next\' role." )]
class CIM_ActionSequence {

      [Key, Max ( 1 ), 
       Description ( "The next Action in the sequence." )]
   CIM_Action REF Next;

      [Key, Max ( 1 ), 
       Description ( "The previous Action in the sequence." )]
   CIM_Action REF Prior;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ApplicationSystem 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The ApplicationSystem class represents an application or a "
       "software system that supports a particular business function "
       "and that can be managed as an independent unit. Such a system "
       "can be decomposed into its functional components using the "
       "CIM_SoftwareFeature class. The Features for a particular "
       "application or software system are located using the "
       "CIM_ApplicationSystemSoftwareFeature association. The features "
       "are part of the deployment-oriented aspects of the application "
       "system. \n"
       "With regard to the application runtime aspects, the "
       "ApplicationSystem class also represents the core class of the "
       "Application Systems\' sub-model which of the application "
       "runtime model. Its role in the systems sub-model is a) the "
       "root node of the containment hierarchy of the application "
       "elements (at runtime) as services, components, sub-systems, "
       "etc., b) the place for runtime overview information such as "
       "response time or system status, c) runtime control of the "
       "entire application (e.g., start/stop), and d) the main entry "
       "point to the navigation through and drill-down into the "
       "runtime model. \n"
       "The lifetime of an instance of this class is not limited to "
       "the application instance it represents. Even if the "
       "application is not running, the ApplicationSystem object can "
       "report properties that have values (e.g., the name of the "
       "application or the current status). Note that it is also "
       "possible to define the lifetime of the objects through the "
       "lifetime of the application instances. \n"
       "Through ApplicationSystemDependency, non-containment "
       "relationships can be expressed." )]
class CIM_ApplicationSystem : CIM_System {

      [Description ( 
          "Distribution describes how the application system is "
          "distributed with respect to its underlying servers. In "
          "general, the application system is distributed or local. "
          "This property indicates whether the application system "
          "is running on one or multiple servers. This can be "
          "determined without having to query for associated "
          "servers represented by ComputerSystems. Distributed "
          "systems also introduce a virtual notion to themselves. "
          "Note that a distributed application system is not "
          "tangible but virtual. Only its contained local systems "
          "can be found as processes or threads, and can therefore "
          "be regarded as tangible. The distributed system remains "
          "a named, virtual entity, that scopes strongly bound "
          "constituents and allows the application to be managed in "
          "its entirety. \n"
          "The property is needed to help root cause analysis and "
          "operations, especially when these are automated, in "
          "order to clearly know that more than one executed "
          "application - most likely the local application systems "
          "- is affected by the management task. This is "
          "particularly true if the contained application systems "
          "provide uniform functionality like webserver or "
          "application server farms. \n"
          "To express constraints between distributed and local "
          "system, this class must be derived and appropriate "
          "associations must be defined. \n"
          "This property should not be confused with the Roles[] "
          "property defined in System. The latter is reserved for "
          "administrator assigned roles." ), 
       ValueMap { "0", "1", "2", "3..32767", "32768..65535" }, 
       Values { "Unknown", "Distributed", "Local", "DMTF Reserved", 
          "Vendor Specific" }]
   uint16 Distribution;

      [Override ( "EnabledState" ), 
       Description ( 
          "EnabledState is an integer enumeration that indicates "
          "the enabled/disabled states of an element. It can also "
          "indicate the transitions between these requested states. "
          "For example, shutting down and starting are transient "
          "states between enabled and disabled. \n"
          "In contrast to the original version defined higher in "
          "the inheritance hierarchy (EnabledLogicalElement), "
          "EnabledState is simplified. It reflects the notion of an "
          "execution status tailored to applications and represents "
          "a summary of the original property. It allows simplified "
          "and efficient determination of whether the application "
          "is started, stopped or in transition between either of "
          "these states. The property does not show any errors. "
          "Errors MUST be described in MSE.OperationalStatus, and "
          "MAY also be described in logs or other data sources. \n"
          "The mapping to MSE.OperationalStatus is as follows: \n"
          "ExecutionStatus <- MSE.OperationalStatus \n"
          "Unknown <- Unknown, No Contact, Lost Communication, \n"
          "Either of the values <- Other \n"
          "Enabled (started) <- OK, Degraded, Stressed, Predictive "
          "Failure, In Service, Dormant, Supporting Entity in "
          "Error, Completed \n"
          "Enabled or Disabled (Started or Stopped) <- Error, "
          "Non-Recoverable Error \n"
          "Starting <- Starting \n"
          "Shutting Down (Stopping) <- Stopping \n"
          "Disabled (Stopped) <- Stopped, Aborted. \n"
          "The mapping to the original EnabledState property is as "
          "follows: \n"
          "Unknown <- Unknown, Not Applicable \n"
          "Either of the values <-Other \n"
          "Enabled <- Enabled, Enabled but Offline, In Test, "
          "Deferred, Quiesce \n"
          "Disabled <- Disabled \n"
          "ShuttingDown <- ShuttingDown \n"
          "Starting <- Starting." ), 
       ValueMap { "0", "2", "3", "4", "10", "11..32767", 
          "32768..65535" }, 
       Values { "Unknown", "Enabled", "Disabled", "Shutting Down", 
          "Starting", "DMTF Reserved", "Vendor Reserved" }]
   uint16 EnabledState = 0;

      [Description ( 
          "The point in time (date and time) when the application "
          "system was last started. If the application system is in "
          "a state other the state Enabled (i.e., started and "
          "running) this value is not meaningful and the property "
          "value MUST be set to all zeros. \n"
          "StartupTime is preferably the point in time when the "
          "application is available to the user. Instead, if the "
          "provider and/or the instrumentation cannot determine the "
          "point in time the application becomes available, the "
          "point in time can be used at which the underlying "
          "operating system reports successful launch of the "
          "application. If no value can be provided the property "
          "value MUST be set to all zeros." )]
   datetime StartupTime;

      [Description ( 
          "ServingStatus is a summary of MSE.OperationalStatus. It "
          "allows simplified and efficient determination of whether "
          "the application is providing service or has stopped "
          "doing so for various reasons like errors, shutdown, "
          "abort, etc. Therefore, no transitional values are "
          "provided. The property does not show any errors. Errors "
          "MUST be described in MSE.OperationalStatus, and MAY also "
          "be described in logs or other data sources. Therefore, "
          "ServingStatus is suited to provide summary information "
          "for monitoring purposes and service level management. \n"
          "The mapping to MSE.OperationalStatus is as follows: \n"
          "ServingStatus <- MSE.OperationalStatus \n"
          "Unknown <- Unknown, No Contact, Lost Communication \n"
          "Either of the values <- Other \n"
          "Serving <- OK, Degraded, Stressed, Predictive Failure, "
          "Completed \n"
          "Not Serving <- Error, Non-Recoverable Error, Starting, "
          "Stopping, Stopped, In Service, Aborted, Dormant, "
          "Supporting Entity in Error." ), 
       ValueMap { "0", "1", "2", "5..4096", "4097..65535" }, 
       Values { "Unknown", "Serving", "Not Serving", 
          "DMTF Reserved", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_ManagedSystemElement.OperationalStatus" }]
   uint16 ServingStatus;

      [Description ( 
          "The point in time at which the ServingStatus property "
          "was last updated." ), 
       ModelCorrespondence { "CIM_ApplicationSystem.ServingStatus" }]
   datetime LastServingStatusUpdate;


      [Description ( 
          "StartApplication() starts an application system. The "
          "ApplicationSystem object must have been created prior to "
          "the invocation of this method. It is up to the "
          "implementation of the method to define which of the "
          "contained or dependent sub-elements are to be started "
          "and in which order their startup may occur. \n"
          "Since a system startup can extend over long periods of "
          "time (several minutes is not unusual for complex "
          "distributed applications), the method can be implemented "
          "synchronously or asynchronously. In both cases "
          "EnabledState and RequestedState reflect the current "
          "state of the application and the desired state (Enabled) "
          "respectively. The exact nature of the errors during the "
          "startup cannot be determined in the asynchronous case. "
          "The method must return one of the following values: \n"
          "Unspecified Error: If no return code can be identified \n"
          "Completed with No Error: successful invocation \n"
          "Start Already in Progress: application still being "
          "started \n"
          "Failed:Indicates errors upon execution." ), 
       ValueMap { "0", "1", "2", "3", "4..4096", "4097..32767", 
          "32768..65535" }, 
       Values { "Unspecified Error", "Completed with No Error", 
          "Start Already in Progress", "Failed", "DMTF Reserved", 
          "Method Reserved", "Vendor Specific" }, 
       ModelCorrespondence { "CIM_ApplicationSystem.EnabledState", 
          "CIM_ApplicationSystem.RequestedState" }]
   uint16 StartApplication(
);

      [Description ( 
          "StopApplication() allows for stopping/shutting down an "
          "application system. It is up to the implementation of "
          "the method to define which of the contained or dependent "
          "sub-elements are to be stopped and in which order their "
          "stop has to occur. \n"
          "Since a system shutdown can last considerable time "
          "(several minutes is not necessarily unusual for complex "
          "distributed applications), the method can be implemented "
          "synchronously or asynchronously. In both cases "
          "EnabledState and RequestedState reflect the current "
          "state of the application and the desired state "
          "(Disabled) respectively. The exact nature of the errors "
          "during the stop cannot be determined in the asynchronous "
          "case. The method must return one of the following: \n"
          "Unspecified Error: If no return code can be identified \n"
          "Completed with No Error: successful invocation \n"
          "Stop Already in Process: application is shutting down \n"
          "Failed: Indicates errors upon execution." ), 
       ValueMap { "0", "1", "2", "3", "4..4096", "4097..32767", 
          "32768..65535" }, 
       Values { "Unspecified Error", "Completed with No Error", 
          "Stop Already in Process", "Failed", "DMTF Reserved", 
          "Method Reserved", "Vendor Specific" }, 
       ModelCorrespondence { "CIM_ApplicationSystem.EnabledState", 
          "CIM_ApplicationSystem.RequestedState" }]
   uint16 StopApplication(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ApplicationSystemDependency 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::AppRuntime" ), 
    Description ( 
       "This dependency expresses use-relationships or other logical "
       "interactions between application systems. At the business "
       "level, the relationship could be due to a distributed business "
       "process. Viewed from the technical level, the relationship is "
       "to be interpreted as communication between application "
       "systems. ApplicationSystemDependency primarily expresses "
       "\'horizontal\' relationships, i.e., relationships between "
       "distributed or local application systems." )]
class CIM_ApplicationSystemDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "Antecedent represents the independent application system "
          "in this association." )]
   CIM_ApplicationSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "Dependent represents the application system dependent on "
          "the Antecedent." )]
   CIM_ApplicationSystem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ApplicationSystemDirectory 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "CIM_ApplicationSystemDirectory is an association used to "
       "establish a relationship between an ApplicationSystem and the "
       "Directories that it uses. This is used to identify the single "
       "root installation directory for an ApplicationSystem, as well "
       "as the logical purpose of other directories utilized by the "
       "ApplicationSystem. Note: This class is intended to be a "
       "subclass of CIM_Dependency but the current specification "
       "prohibits the extension of parent keys in a subclass. This "
       "will be revisited when the specification changes to make the "
       "intended inheritance possible." )]
class CIM_ApplicationSystemDirectory {

      [Key, Description ( 
          "A Directory which is used by the associated ApplicationSystem."
           )]
   CIM_Directory REF Antecedent;

      [Key, Description ( 
          "An ApplicationSystem which depends upon the associated Directory."
           )]
   CIM_ApplicationSystem REF Dependent;

      [Key, Description ( 
          "Name is a string representing a meaningful identifier "
          "for referring to the associated Directory in the context "
          "of the ApplicationSystem. As an example, this might be "
          "the name of the environment variable used to hold the "
          "same directory information." ), 
       MaxLen ( 1024 )]
   string Name;

      [Required, Description ( 
          "ApplicationDirectoryUse is an enumerated array which "
          "indicates the purpose(s) of the associated directory "
          "within the context of the ApplicationSystem. A value of "
          "\"Root\" indicates that the associated directory is the "
          "one and only root directory for the ApplicationSystem. "
          "This would typically be the directory path in which the "
          "application is installed. For applications which are "
          "installed in multiple directories, this would represent "
          "the directory from which initial program and "
          "configuration files are loaded. A value of \"Program\" "
          "indicates that the directory contains supplemental "
          "program files used by the ApplicationSystem. A value of "
          "\"Data\" indicates that the directory is used for data "
          "storage. A value of \"Log\" indicates that the directory "
          "is used to contain log files for the ApplicationSystem. "
          "It is considered invalid for multiple associations from "
          "the same ApplicationSystem to have a value of \"Root\". "
          "The \"Unknown\" state is expected to be short-lived and "
          "would typically be seen only in the installation phase "
          "of an ApplicationSystem, if at all. A value of \"Temp\" "
          "indicates that the associated directory is used to "
          "contain temporary files created by the "
          "ApplicationSystem. The \"Other\" state should only be "
          "used in cases where none of the designated values are "
          "appropriate. This is intended to enable use of the model "
          "for unanticipated purposes and would usually signal a "
          "need to extend this enumeration through the standards "
          "process." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "Root", "Program", "Data", 
          "Log", "Temp" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ApplicationSystemDirectory.OtherUseDescriptions" }]
   uint16 ApplicationDirectoryUses[];

      [Description ( 
          "A string describing how the ApplicationSystem utilizes "
          "the associated directory when the corresponding entry in "
          "ApplicationDirectoryUses is set to 1, \"Other\". This "
          "attribute is meaningless and should be null when the "
          "corresponding entry in ApplicationDirectoryUses is set "
          "to any value other than 1." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_ApplicationSystemDirectory.ApplicationDirectoryUses" }]
   string OtherUseDescriptions[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ApplicationSystemHierarchy 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::AppRuntime" ), 
    Description ( 
       "Application systems may have arbitrarily complex structures. "
       "It may be necessary to build application system hierarchies "
       "including the two-step hierarchy of distributed and local "
       "systems. ApplicationSystemHierarchy allows building "
       "containment trees (only one parent at a time). It should not "
       "be used to express use-relationships; use "
       "CIM_ApplicationSystemDependency instead." )]
class CIM_ApplicationSystemHierarchy : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The parent ApplicationSystem in the association." )]
   CIM_ApplicationSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The child ApplicationSystem in the association." )]
   CIM_ApplicationSystem REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ApplicationSystemSoftwareFeature 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "The ApplicationSystemSoftwareFeature association identifies "
       "the Features that make up a particular ApplicationSystem. The "
       "SoftwareFeatures can be scoped by different Products." )]
class CIM_ApplicationSystemSoftwareFeature : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The ApplicationSystem that aggregates the Features." )]
   CIM_ApplicationSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The Features in an ApplicationSystem." )]
   CIM_SoftwareFeature REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedAppSystemOverviewStatistics 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::AppRuntime" ), 
    Description ( 
       "The link to the runtime overview statistics of an application system."
        )]
class CIM_AssociatedAppSystemOverviewStatistics : CIM_ElementStatisticalData {

      [Override ( "ManagedElement" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The application system for which the overview is defined." )]
   CIM_ApplicationSystem REF ManagedElement;

      [Override ( "Stats" ), 
       Max ( 1 ), 
       Description ( 
          "The application system runtime statistical overview." )]
   CIM_StatisticalRuntimeOverview REF Stats;


};

// Copyright (c) 2009 DMTF.  All Rights Reserved.
   [Abstract, Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "A CIM_Check is a condition or characteristic that is expected "
       "to be true in an environment defined or scoped by an instance "
       "of a CIM_ComputerSystem. The Checks associated with a "
       "particular SoftwareElement are organized into one of two "
       "groups using the Phase property of the "
       "CIM_SoftwareElementChecks association. Conditions that are "
       "expected to be true when a SoftwareElement is in a particular "
       "state and environment are known as \'in-state\' conditions. "
       "Conditions that need to be satisfied in order to transition "
       "the SoftwareElement to its next state are known as "
       "\'next-state\' conditions. \n"
       "A CIM_ComputerSystem object represents the environment in "
       "which CIM_SoftwareElements are already deployed/installed or "
       "into which the elements will be deployed/installed. For the "
       "case in which an element is already installed, the "
       "CIM_InstalledSoftwareElement association identifies the "
       "CIM_ComputerSystem object that represents the \"environment\". "
       "When a SoftwareElement is being deployed for installation on a "
       "ComputerSystem, that system is the target of the Check and is "
       "identified using the TargetSystem reference of the "
       "InvokeOnSystem method." )]
class CIM_Check : CIM_ManagedElement {

      [Key, Description ( 
          "The name used to identify the SoftwareElement that is "
          "being checked." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SoftwareElement.Name" )]
   string Name;

      [Key, Description ( 
          "The version of the SoftwareElement being checked." ), 
       MaxLen ( 64 ), 
       Propagated ( "CIM_SoftwareElement.Version" )]
   string Version;

      [Key, Description ( 
          "The SoftwareElementState of the SoftwareElement being checked."
           ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Deployable", "Installable", "Executable", "Running" }, 
       Propagated ( "CIM_SoftwareElement.SoftwareElementState" )]
   uint16 SoftwareElementState;

      [Key, Description ( 
          "This is an identifier for the SoftwareElement being checked."
           ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_SoftwareElement.SoftwareElementID" )]
   string SoftwareElementID;

      [Key, Description ( 
          "The Target Operating System of the SoftwareElement being checked."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110" }, 
       Values { "Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", 
          "DECNT", "Tru64 UNIX", "OpenVMS", "HPUX", "AIX", 
          //10 
          "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", 
          "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", 
          //20 
          "NCR3000", "NetWare", "OSF", "DC/OS", 
          "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", 
          "Sequent", "IRIX", "Solaris", //30 
          "SunOS", 
          "U6000", "ASERIES", "HP NonStop OS", "HP NonStop OSS", 
          "BS2000", "LINUX", "Lynx", "XENIX", "VM", 
          //40 
          "Interactive UNIX", "BSDUNIX", "FreeBSD", 
          "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", 
          "QNX", "EPOC", //50 
          "IxWorks", "VxWorks", 
          "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", 
          "Rhapsody", "Windows 2000", "Dedicated", 
          //60 
          "OS/390", "VSE", "TPF", "Windows (R) Me", 
          "Caldera Open UNIX", "OpenBSD", "Not Applicable", 
          "Windows XP", "z/OS", "Microsoft Windows Server 2003", 
          //70
          "Microsoft Windows Server 2003 64-Bit", 
          "Windows XP 64-Bit", "Windows XP Embedded", 
          "Windows Vista", "Windows Vista 64-Bit", 
          "Windows Embedded for Point of Service", 
          "Microsoft Windows Server 2008", 
          "Microsoft Windows Server 2008 64-Bit", "FreeBSD 64-Bit", 
          "RedHat Enterprise Linux", 
          //80
          "RedHat Enterprise Linux 64-Bit", 
          "Solaris 64-Bit", "SUSE", "SUSE 64-Bit", "SLES", 
          "SLES 64-Bit", "Novell OES", "Novell Linux Desktop", 
          "Sun Java Desktop System", "Mandriva", 
          //90
          "Mandriva 64-Bit", "TurboLinux", 
          "TurboLinux 64-Bit", "Ubuntu", "Ubuntu 64-Bit", "Debian", 
          "Debian 64-Bit", "Linux 2.4.x", "Linux 2.4.x 64-Bit", 
          "Linux 2.6.x", //100
          "Linux 2.6.x 64-Bit", 
          "Linux 64-Bit", "Other 64-Bit", 
          "Microsoft Windows Server 2008 R2", "VMware ESXi", 
          "Microsoft Windows 7", "CentOS 32-bit", "CentOS 64-bit", 
          "Oracle Enterprise Linux 32-bit", 
          "Oracle Enterprise Linux 64-bit", 
          //110 
          "eComStation 32-bitx" }, 
       Propagated ( "CIM_SoftwareElement.TargetOperatingSystem" )]
   uint16 TargetOperatingSystem;

      [Key, Description ( 
          "An identifier used in conjunction with other keys to "
          "uniquely identify the Check." ), 
       MaxLen ( 256 )]
   string CheckID;

      [Description ( 
          "The CheckMode property is used to indicate whether the "
          "condition is expected to exist or not exist in the "
          "environment. When the value is True, the condition is "
          "expected to exist (e.g., a file is expected to be on a "
          "system), so the Invoke methods are expected to return "
          "True. When the value is False, the condition is not "
          "expected to exist (e.g., a file is not to be on a "
          "system), so the Invoke methods are expected to return "
          "False." )]
   boolean CheckMode;


      [Description ( 
          "The Invoke method evaluates this Check. The details of "
          "the evaluation are described by the specific subclasses "
          "of CIM_Check. When the SoftwareElement being checked is "
          "already installed, the CIM_InstalledSoftwareElement "
          "association identifies the CIM_ComputerSystem in whose "
          "context the Invoke is executed. If this association is "
          "not in place, then the InvokeOnSystem method should be "
          "used - since it identifies the TargetSystem as an input "
          "parameter of the method. \n"
          "The results of the Invoke method are based on the return "
          "value. A zero is returned if the condition is satisfied. "
          "A one is returned if the method is not supported. Any "
          "other value indicates the condition is not satisfied." )]
   uint32 Invoke(
);

      [Description ( 
          "The InvokeOnSystem method evaluates this Check. The "
          "details of the evaluation are described by the specific "
          "subclasses of CIM_Check. The method\'s TargetSystem "
          "input parameter specifies the ComputerSystem in whose "
          "context the method is invoked. \n"
          "The results of the InvokeOnSystem method are based on "
          "the return value. A zero is returned if the condition is "
          "satisfied. A one is returned if the method is not "
          "supported. Any other value indicates the condition is "
          "not satisfied." )]
   uint32 InvokeOnSystem(
         [IN, Description ( 
             "Reference to ComputerSystem in whose context the "
             "method is to be invoked." )]
      CIM_ComputerSystem REF TargetSystem);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticTestSoftware 
// ==================================================================
   [Association, Deprecated { "CIM_ElementSoftwareIdentity" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::SystemSoftware" ), 
    Description ( 
       "This class is being deprecated to promote its usage to the "
       "DiagnosticService level. \n"
       "This is an association class relating DiagnosticTest to the "
       "SoftwareElements that provide this test. SoftwareElement "
       "describes vendor/version information and other deployment "
       "data." )]
class CIM_DiagnosticTestSoftware : CIM_Dependency {

      [Deprecated { "CIM_ElementSoftwareIdentity.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "This reference is deprecated and replaced (in "
          "ServiceSoftwareIdentity) with a reference to the "
          "SoftwareIdentity class, which has been determined to be "
          "a better choice for diagnostics services. It defines "
          "vendor/version and other information about the software "
          "that runs as the DiagnosticTest." )]
   CIM_SoftwareElement REF Antecedent;

      [Deprecated { "CIM_ElementSoftwareIdentity.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The DiagnosticTest whose software is described." )]
   CIM_DiagnosticTest REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DirectoryAction 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "DirectoryAction is an abstract class used to manage "
       "directories. The creation of directories is handled by "
       "CreateDirectoryAction and removal is handled by "
       "RemoveDirectoryAction." )]
class CIM_DirectoryAction : CIM_Action {

      [Description ( "The name of the directory being managed." ), 
       MaxLen ( 1024 )]
   string DirectoryName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DirectorySpecification 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The CIM_DirectorySpecification class captures the major "
       "directory structure of a SoftwareElement. This class is used "
       "to organize the files of a SoftwareElement into manageable "
       "units that can be relocated on a computer system." )]
class CIM_DirectorySpecification : CIM_Check {

      [Description ( 
          "The DirectoryType property characterizes the type of "
          "directory being described." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17" }, 
       Values { "Product base directory", 
          "Product executable directory", 
          "Product library directory", 
          "Product configuration directory", 
          "Product include directory", "Product working directory", 
          "Product log directory", "Shared base directory", 
          "Shared executable directory", "Shared library directory", 
          "Shared include directory", "System base directory", 
          "System executable directory", "System library directory", 
          "System configuration directory", 
          "System include directory", "System log directory", "Other" }, 
       MappingStrings { "MIF.DMTF|Location|001.2" }]
   uint16 DirectoryType;

      [Description ( 
          "The DirectoryPath property is used to capture the name "
          "of a directory. The value supplied by an application "
          "provider is actually a default or recommended path name. "
          "The value can be changed for a particular environment." ), 
       MaxLen ( 1024 )]
   string DirectoryPath;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "DiskSpaceCheck describes the amount of disk space that needs "
       "to be available on the computer system. The amount is "
       "specified in the AvailableDiskSpace property. The details of "
       "this Check are compared with the value of the CIM_FileSystem. "
       "AvailableSpace property - where the CIM_FileSystem object is "
       "related (using HostedFileSystem) to the CIM_Computer System "
       "instance that describes the environment. When the value of the "
       "AvailableSpace property is greater than or equal to the value "
       "specified in AvailableDiskSpace, the Check is satisfied." )]
class CIM_DiskSpaceCheck : CIM_Check {

      [Description ( 
          "The AvailableDiskSpace property specifies the minimum "
          "amount of disk space that needs to be available on the "
          "target system." ), 
       Units ( "KiloBytes" ), 
       ModelCorrespondence { "CIM_FileSystem.AvailableSpace" }, 
       PUnit ( "byte * 10^3" )]
   uint64 AvailableDiskSpace;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ExecuteProgram 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "ExecuteProgram causes programs to be executed on the computer "
       "system that defines the Action\'s environment." )]
class CIM_ExecuteProgram : CIM_Action {

      [Description ( 
          "The location or \'path\' where the program is found." ), 
       MaxLen ( 1024 )]
   string ProgramPath;

      [Description ( 
          "A string that can be executed and invokes program(s), "
          "from a system\'s command line." )]
   string CommandLine;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileAction 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "FileAction locates files that already exist on the CIM_ "
       "ComputerSystem that defines the Action\'s environment. These "
       "files are removed or moved/copied to a new location." )]
class CIM_FileAction : CIM_Action {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "FileSpecification identifies a file that is either to be on or "
       "off the system. The file is to be located in the directory "
       "identified in FileName, or by the CIM_Directory "
       "SpecificationFile association. When the Invoke methods are "
       "executed, it is expected that they will use a combination of "
       "information to check for file existence. Therefore, any of the "
       "properties with a NULL value are not checked. So, if only the "
       "FileName and MD5Checksum properties have values, they are the "
       "only ones considered by the Invoke methods." )]
class CIM_FileSpecification : CIM_Check {

      [Description ( 
          "Either the name of the file or the name of the file with "
          "a directory prefix." ), 
       MaxLen ( 1024 )]
   string FileName;

      [Description ( "The creation date and time of the file." )]
   datetime CreateTimeStamp;

      [Description ( "The size of the file in Kilobytes." ), 
       Units ( "KiloBytes" ), 
       PUnit ( "byte * 10^3" )]
   uint64 FileSize;

      [Description ( 
          "A checksum calculated as the 16-bit sum of the first 32 "
          "bytes of the file." ), 
       MappingStrings { "MIF.DMTF|Software Signature|002.4" }]
   uint32 CheckSum;

      [Description ( 
          "The CRC1 property is the CRC value calculated using the "
          "middle 512K bytes of the file." ), 
       MappingStrings { "MIF.DMTF|Software Signature|002.5" }]
   uint32 CRC1;

      [Description ( 
          "The CRC2 property is the CRC value for the middle 512K "
          "bytes of the file, modulo 3." ), 
       MappingStrings { "MIF.DMTF|Software Signature|002.6" }]
   uint32 CRC2;

      [Description ( 
          "The MD5 algorithm is a well-known algorithm for "
          "computing a 128-bit checksum for any file or object. For "
          "purposes of MOF specification of the MD5Checksum "
          "property, the MD5 algorithm always generates a 32 "
          "character string. For example: The string "
          "abcdefghijklmnopqrstuvwxyz generates the string "
          "c3fcd3d76192e4007dfb496cca67e13b. See http: "
          "//www.ietf.org - RFC1321 for details on the // "
          "implementation of the MD5 algorithm." ), 
       MaxLen ( 32 )]
   string MD5Checksum;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FromDirectoryAction 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The FromDirectoryAction association identifies the source "
       "directory for a FileAction. When this association is used, the "
       "assumption is that the source directory was created by a "
       "previous Action. This association cannot co-exist with a "
       "FromDirectorySpecification association, since a FileAction can "
       "only involve a single source directory." )]
class CIM_FromDirectoryAction {

      [Key, Max ( 1 ), 
       Description ( "The source directory of the Action." )]
   CIM_DirectoryAction REF SourceDirectory;

      [Key, Description ( "The Action against the directory." )]
   CIM_FileAction REF FileName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FromDirectorySpecification 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The FromDirectorySpecification association identifies the "
       "source directory for a FileAction. When this association is "
       "used, the assumption is that the source directory already "
       "exists. This association cannot co-exist with a "
       "FromDirectoryAction association, since a FileAction can only "
       "involve a single source directory." )]
class CIM_FromDirectorySpecification {

      [Key, Max ( 1 ), 
       Description ( "The source directory of the Action." )]
   CIM_DirectorySpecification REF SourceDirectory;

      [Key, Description ( "The Action against the directory." )]
   CIM_FileAction REF FileName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InstalledSoftwareElement 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::SystemSoftware" ), 
    Description ( 
       "The InstalledSoftwareElement association allows the "
       "identification of the ComputerSystem on which a particular "
       "SoftwareElement is installed." )]
class CIM_InstalledSoftwareElement {

      [Key, Description ( 
          "Reference to the Software Element that is installed." )]
   CIM_SoftwareElement REF Software;

      [Key, Max ( 1 ), 
       Description ( 
          "Reference to the ComputerSystem hosting a particular "
          "SoftwareElement." )]
   CIM_ComputerSystem REF System;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeApplication 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeApplication identifies a J2EE application that resides "
       "on a J2ee Server." )]
class CIM_J2eeApplication : CIM_ApplicationSystem {

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE Application. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }]
   string Name;

      [Description ( 
          "Contains the original XML deployment descriptor that was "
          "created for this application during the deployment "
          "process." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.3.5.0.1 deploymentDescriptor|V1.0" }]
   string DeploymentDescriptor;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeDeployedObject 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeDeployedObject class is an abstract class that is "
       "used to define CIM_J2eeModule objects that are deployed in the "
       "CIM_J2eeServer. The Deployed Objects are hosted by a J2ee "
       "Server and should hence be associated to a J2eeServer instance "
       "through the CIM_HostedService association. The scoping keys in "
       "the instance are provided by the J2eeServer hosting the "
       "deployed object." )]
class CIM_J2eeDeployedObject : CIM_Service {

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE deployed object. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }]
   string Name;

      [Description ( 
          "Contains the original XML deployment descriptor that was "
          "created for this module during the deployment process." ), 
       MappingStrings { 
          "JSR77.JCP|JSR77.3.5.0.1 deploymentDescriptor|V1.0" }]
   string DeploymentDescriptor;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeEJB 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeEJB class is base class that represents different "
       "types of deployed Enterprise JavaBean components. The EJB is "
       "hosted by a J2ee Server and should hence be associated to a "
       "J2eeServer instance through the CIM_HostedService association. "
       "The scoping keys in the instance are provided by the "
       "J2eeServer hosting the EJB." )]
class CIM_J2eeEJB : CIM_Service {

      [Override ( "Name" ), 
       Description ( 
          "The name of an EJB. The name MUST be constructed using "
          "the form specified in JSR77.3.1.1.1 in order to avoid "
          "the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeEntityBean 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "Identifies a deployed entity bean within an EJB module." )]
class CIM_J2eeEntityBean : CIM_J2eeEJB {


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeJCAConnectionFactory class identifies individual "
       "JCA connection factories." )]
class CIM_J2eeJCAConnectionFactory : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2ee "
          "JCAConnectionFactory. In order to ensure uniqueness, the "
          "value of InstanceID MUST be constructed using the form "
          "specified in JSR77.3.1.1.1 in order to avoid the need "
          "for manual key propagation." ), 
       ModelCorrespondence { "CIM_J2eeJCAConnectionFactory.Name" }]
   string InstanceID;

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE JCAConnectionFactory. The name MUST "
          "be constructed using the form specified in JSR77.3.1.1.1 "
          "in order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeJCAConnectionFactory.InstanceID" }]
   string Name;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "This class identifies JCA managed connection factories." )]
class CIM_J2eeJCAManagedConnectionFactory : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2ee "
          "JCAManagedConnectionFactory. In order to ensure "
          "uniqueness, the value of InstanceID MUST be constructed "
          "using the form specified in JSR77.3.1.1.1 in order to "
          "avoid the need for manual key propagation." ), 
       ModelCorrespondence { 
          "CIM_J2eeJCAManagedConnectionFactory.Name" }]
   string InstanceID;

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE JCAManagedConnectionFactory. The name "
          "MUST be constructed using the form specified in "
          "JSR77.3.1.1.1 in order to avoid the need for manual key "
          "propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeJCAManagedConnectionFactory.InstanceID" }]
   string Name;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeJDBCDataSource class contains instances that "
       "identify physical JDBC data sources." )]
class CIM_J2eeJDBCDataSource : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2ee "
          "JDBCDataSource. In order to ensure uniqueness, the value "
          "of InstanceID MUST be constructed using the form "
          "specified in JSR77.3.1.1.1 in order to avoid the need "
          "for manual key propagation." ), 
       ModelCorrespondence { "CIM_J2eeJDBCDataSource.Name" }]
   string InstanceID;

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE JDBCDataSource. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeJDBCDataSource.InstanceID" }]
   string Name;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeJDBCDriver class identifies individual JDBC drivers."
        )]
class CIM_J2eeJDBCDriver : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2ee "
          "JDBCDriver. In order to ensure uniqueness, the value of "
          "InstanceID MUST be constructed using the form specified "
          "in JSR77.3.1.1.1 in order to avoid the need for manual "
          "key propagation." ), 
       ModelCorrespondence { "CIM_J2eeJDBCDriver.Name" }]
   string InstanceID;

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE JDBCDriver. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeJDBCDriver.InstanceID" }]
   string Name;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeJVM class identifies a Java VM that is utilized by "
       "a J2EE server. For each Java VM that is running threads "
       "associated with the J2EE server, its containers or resources, "
       "there must be an instance in this class. The instance must be "
       "removed when the Java VM is no longer running. The reason this "
       "class subclasses from a class as high up in the hierarchy as "
       "CIM_EnabledLogicalElement is the absence of a class that "
       "models Interpreters, Emulators and the like. The JVM is not an "
       "OS, but then neither is it just a process. In v2.9, we hope to "
       "plug this hole by introducing a class that will model "
       "interpreters and emulators. At this point, the JVM class can "
       "be pushed down in the hierarchy." )]
class CIM_J2eeJVM : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2ee JVM In "
          "order to ensure uniqueness, the value of InstanceID MUST "
          "be constructed using the form specified in JSR77.3.1.1.1 "
          "in order to avoid the need for manual key propagation." ), 
       ModelCorrespondence { "CIM_J2eeJVM.Name" }]
   string InstanceID;

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE JVM. The name MUST be constructed "
          "using the form specified in JSR77.3.1.1.1 in order to "
          "avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeJVM.InstanceID" }]
   string Name;

      [Description ( 
          "The Java Runtime Environment version of the JVM." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.4.1.1 javaVersion|V1.0" }]
   string JavaVersion;

      [Description ( 
          "The Java Runtime Environment vendor of the JVM." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.4.1.2 javaVendor|V1.0" }]
   string JavaVendor;

      [Description ( "The node (machine) this JVM is running on." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.4.1.3 node|V1.0" }]
   string Node;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeManagedObject is a class for defining operations that "
       "may supported by all J2EE managed objects. It contains the "
       "attributes and methods that are common to all J2EE managed "
       "objects. The J2EE Managed objects - for eg. J2eeServer should "
       "participate in instances of the CIM_LogicalIdentity "
       "association with the corresponding instance of the "
       "J2eeManagedObject class. The start and stop methods of JSR77\'s "
       "J2eeManagedObject find an equivalent in the RequestStateChange "
       "method inherited from EnabledLogicalElement. Using "
       "Enabled/Disabled as inputs to RequestStateChange, one can "
       "effect start and stop." )]
class CIM_J2eeManagedObject : CIM_EnabledLogicalElement {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2EE "
          "ManagedObject\'s Capabilities in a given namespace. In "
          "order to ensure uniqueness, the value of InstanceID MUST "
          "be constructed using the form specified in JSR77.3.1.1.1 "
          "in order to avoid the need for manual key propagation." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeManagedObject.ElementName" }]
   string InstanceID;

      [Override ( "ElementName" ), 
       Description ( 
          "The name of a J2EE managed object. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeManagedObject.InstanceID" }]
   string ElementName;

      [Override ( "OperationalStatus" ), 
       Description ( 
          "The current state of the entity for J2ee managed objects "
          "that support state management. If the StateManageable "
          "property is FALSE, the value of this property MUST be "
          "set to 0 - Unknown. The mapping from the J2ee management "
          "states to OperationalStatus is as follows - "
          "j2ee.state.starting - Starting, j2ee.state.running - OK, "
          "j2ee.state.stopping - Stopping, j2ee.state.stopped - "
          "Stopped, and j2ee.state.failed - Error." ), 
       ValueMap { "0", "2", "6", "8", "9", "10" }, 
       Values { "Unknown", "OK", "Error", "Starting", "Stopping", 
          "Stopped" }, 
       MappingStrings { "JSR77.JCP|JSR77.5.1.1.1 state|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeManagedObjectCapabilities.StateManageable" }]
   uint16 OperationalStatus[];

      [Description ( 
          "The time that the J2EE managed object was started, "
          "represented as a datetime interval measured as the time "
          "interval since January 1, 1970, 00:00:00. If the "
          "StateManageable property of the "
          "CIM_J2eeManagedObjectCapabilities class is false, this "
          "value MUST be set to a zero time interval." ), 
       MappingStrings { "JSR77.JCP|JSR77.5.1.1.2 startTime|V1.0" }, 
       ModelCorrespondence { 
          "CIM_J2eeManagedObjectCapabilities.StateManageable" }]
   datetime StartTime = "00000000000000.000000:000";


      [Description ( 
          "Starts the J2EE managed object. This operation can only "
          "be invoked in when State is Stopped. This method, causes "
          "State to become Starting initially, and eventually "
          "becomes the RUNNING state. Additionally, "
          "StartRecursive() is called on all the child "
          "StateManageable instances that are registered with this "
          "entity and are in the Stopped state. The method returns "
          "0 on success and non-zero for failure." ), 
       MappingStrings { "JSR77.JCP|JSR77.5.1.2.2 startRecursive|V1.0" }]
   uint32 StartRecursive(
);

      [Description ( 
          "This method starts the J2EE managed object. This "
          "operation can only be invoked when the OperationalStatus "
          "is Stopped. Note that StartService() will not be called "
          "on any of the child StateManageable instances that are "
          "registered with this instance. It is the responsibility "
          "of the calling application to start the child if "
          "required. The method returns 0 on success and non-zero "
          "for failure." ), 
       MappingStrings { "JSR77.JCP|JSR77.5.1.2.1 start|V1.0" }]
   uint32 Start(
);

      [Description ( 
          "This method stops the J2EE managed object and all "
          "dependent objects that can be identified by following "
          "the Dependency/Component associations this object\'s "
          "identity participates in." ), 
       MappingStrings { "JSR77.JCP|JSR77.5.1.2.3 stop|V1.0" }]
   uint32 Stop(
);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeMessageDrivenBean 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "Identifies a deployed message driven bean within an EJB module." )]
class CIM_J2eeMessageDrivenBean : CIM_J2eeEJB {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeModule 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeModule class is an abstract class from which all "
       "J2EE module type classes extend. These represent EAR, JAR, "
       "WAR, and RAR files that have been deployed." )]
class CIM_J2eeModule : CIM_J2eeDeployedObject {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeModuleUsesJVM 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeModuleUsesJVM association identifies the JVM that "
       "a specific Module runs in." )]
class CIM_J2eeModuleUsesJVM : CIM_HostedDependency {

      [Override ( "Dependent" ), 
       Description ( "The Module that uses a Java Virtual Machine." )]
   CIM_J2eeModule REF Dependent;

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The Java VM on which the module is running." )]
   CIM_J2eeJVM REF Antecedent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Abstract, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The J2eeResource class is a base class for all managed object "
       "types that represent J2EE resources. J2EE resources are "
       "resources that are utilized by the J2EE server to provide the "
       "J2EE standard services required by the J2EE platform "
       "architecture. The J2EEResource class has several subclasses "
       "that do not add any new properties. The option of using a type "
       "property to identify the different resource types while doing "
       "away with the numerous empty subclasses was not chosen because "
       "the subclasses, when enhanced by vendor specific extensions "
       "are significantly different from each other." )]
class CIM_J2eeResource : CIM_SystemResource {

      [Key, Override ( "InstanceID" ), 
       Description ( 
          "InstanceID identifies a unique instance of a J2ee "
          "Resource. In order to ensure uniqueness, the value of "
          "InstanceID MUST be constructed using the form specified "
          "in JSR77.3.1.1.1 in order to avoid the need for manual "
          "key propagation." ), 
       ModelCorrespondence { "CIM_J2eeResource.Name" }]
   string InstanceID;

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE Resource. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }, 
       ModelCorrespondence { "CIM_J2eeResource.InstanceID" }]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeResourceAdapter 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "Identifies a deployed Resource Adapter within a Resource "
       "Adapter Module. The resource adapter is hosted by a J2ee "
       "Server and should hence be associated to a J2eeServer instance "
       "through the CIM_HostedService association. The scoping keys in "
       "the instance are provided by the J2eeServer hosting the "
       "resource adapter." )]
class CIM_J2eeResourceAdapter : CIM_Service {

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE Resource Adapter. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeResourceAdapterModule 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeResourceAdapterModule identifies a deployed Resource "
       "Adapter Module and is a container for resource adapters." )]
class CIM_J2eeResourceAdapterModule : CIM_J2eeModule {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeRMI_IIOPResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeRMI_IIOPResource identifies an RMI_IIOP resource." )]
class CIM_J2eeRMI_IIOPResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeServer 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeServer class represents the J2EE Server core of "
       "one instance of a J2EE platform product as described in the "
       "Java 2 Enterprise Edition Platform specification." )]
class CIM_J2eeServer : CIM_ApplicationSystem {

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE Server. The name MUST be constructed "
          "using the form specified in JSR77.3.1.1.1 in order to "
          "avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }]
   string Name;

      [Description ( "The name of the server\'s vendor." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.3.1.4 serverVendor|V1.0" }]
   string Vendor;

      [Description ( 
          "The J2EE implementation version of the J2EE server." ), 
       MappingStrings { "JSR77.JCP|JSR77.3.3.1.5 serverVersion|V1.0" }]
   string Version;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeServerUsesJVM 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The association between a J2EE server and the Java virtual "
       "machine on which the J2EE server has running threads." )]
class CIM_J2eeServerUsesJVM : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The Java VM that is used by the J2ee Server." )]
   CIM_J2eeJVM REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The J2ee Server that has threads running on the JVM." )]
   CIM_J2eeServer REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeServlet 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "Identifies a deployed servlet component. The Servlet is hosted "
       "by a J2ee Server and should hence be associated to a "
       "J2eeServer instance through the CIM_HostedService association. "
       "The scoping keys in the instance are provided by the "
       "J2eeServer hosting the servlet." )]
class CIM_J2eeServlet : CIM_Service {

      [Override ( "Name" ), 
       Description ( 
          "The name of a J2EE Servlet. The name MUST be constructed "
          "using the form specified in JSR77.3.1.1.1 in order to "
          "avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1 objectName|V1.0" }]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeSessionBean 
// ==================================================================
   [Abstract, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeSessionBean class is a base class that represents "
       "specific types of deployed Session beans." )]
class CIM_J2eeSessionBean : CIM_J2eeEJB {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeStatefulSessionBean 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "Identifies a deployed stateful session bean within an EJB module."
        )]
class CIM_J2eeStatefulSessionBean : CIM_J2eeSessionBean {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeStatelessSessionBean 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "Identifies a deployed stateless session bean within an EJB module."
        )]
class CIM_J2eeStatelessSessionBean : CIM_J2eeSessionBean {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeURLResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( "CIM_J2eeURLResource identifies a URL resource." )]
class CIM_J2eeURLResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeWebModule 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeWebModule identifies a deployed WAR module and is a "
       "container for Servlets." )]
class CIM_J2eeWebModule : CIM_J2eeModule {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "MemoryCheck specifies a condition for the minimum amount of "
       "memory that needs to be available on a system. The amount is "
       "specified in the MemorySize property. The details of this "
       "Check are compared with the value of the CIM_OperatingSystem. "
       "FreePhysicalMemory property - where the CIM_OperatingSystem "
       "object is related (using InstalledOS) to the CIM_Computer "
       "System instance that describes the environment. When the value "
       "of the FreePhysicalMemory property is greater than or equal to "
       "the value specified in MemorySize, the Check is satisfied." )]
class CIM_MemoryCheck : CIM_Check {

      [Description ( 
          "The amount of memory that needs to exist on a computer "
          "system for a SoftwareElement to execute properly." ), 
       Units ( "KiloBytes" ), 
       ModelCorrespondence { "CIM_OperatingSystem.FreePhysicalMemory" }, 
       PUnit ( "byte * 2^10" )]
   uint64 MemorySize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ModifySettingAction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "This class specifies the information used to modify a "
       "\'setting\' file, for a specific entry in the file. The new "
       "\'setting\' value is created as a new entry or appends to, "
       "replaces, removes from, or deletes the specified entry. All "
       "additions are assumed to be case sensitive. Removes are "
       "assumed to be case insensitive." )]
class CIM_ModifySettingAction : CIM_Action {

      [Description ( 
          "This is the key or label of the section of the file to "
          "be modified." ), 
       MaxLen ( 256 )]
   string SectionKey;

      [Description ( "Name of setting entry to be modified." ), 
       MaxLen ( 256 )]
   string EntryName;

      [Description ( 
          "This is the value to add, append, or replace the "
          "specified setting." )]
   string EntryValue;

      [Description ( "File name of the \'setting\' file." ), 
       MaxLen ( 1024 )]
   string FileName;

      [Description ( 
          "Type of Action to be performed on the specified setting "
          "entry. \n"
          "0=Create - Creates the specified entry. \n"
          "1=Delete - Deletes the specified entry. \n"
          "2=Append - Appends to the end of the specified entry. \n"
          "3=Remove - Removes the value from the specified entry." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Create", "Delete", "Append", "Remove" }]
   uint16 ActionType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OperatingSystemSoftwareFeature 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::SystemSoftware" ), 
    Description ( 
       "Indicates the SoftwareFeatures that make up the Operating "
       "System. The SoftwareFeatures can be part of different "
       "Products." )]
class CIM_OperatingSystemSoftwareFeature : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The OperatingSystem." )]
   CIM_OperatingSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The SoftwareFeatures that make up the OperatingSystem." )]
   CIM_SoftwareFeature REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSVersionCheck 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The OSVersionCheck class specifies the versions of the "
       "operating system that can support/execute this Software "
       "Element. The operating system itself (whose version should be "
       "validated) is defined in the TargetOperatingSystem property of "
       "the Check\'s scoping SoftwareElement. \n"
       "This Check can be for a specific, minimum, maximum or a range "
       "of releases of an OS. To identify a specific version of the "
       "OS, the minimum and maximum versions must be the same. To "
       "specify a minimum, only the minimum version needs to be "
       "defined. To specify a maximum version, only the maximum "
       "version needs to be defined. To specify a range, both minimum "
       "and maximum versions need to be defined. \n"
       "The data gathered from the Check and SoftwareElement objects "
       "are compared with the corresponding details found in the "
       "CIM_OperatingSystem object (referenced by the InstalledOS "
       "association), for the CIM_ComputerSystem object that defines "
       "the environment. The OSType property of CIM_OperatingSystem "
       "must match the value of CIM_SoftwareElement.TargetOperating "
       "System. Also, the OS\' version information should be within "
       "the range of CIM_OSVersionCheck.Minimum/MaximumValue "
       "properties. Note that all the operating systems on the "
       "relevant computer do not need to satisfy the Check." )]
class CIM_OSVersionCheck : CIM_Check {

      [Description ( 
          "Minimum version of the required operating system. The "
          "value is encoded as <major>.<minor>.<revision> or "
          "<major>.<minor><letter revision>." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_OperatingSystem.Version" }]
   string MinimumVersion;

      [Description ( 
          "Maximum version of the required operating system. The "
          "value is encoded as <major>.<minor>.<revision> or "
          "<major>.<minor><letter revision>." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_OperatingSystem.Version" }]
   string MaximumVersion;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RebootAction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "RebootAction causes a reboot of the computer system that "
       "defines the Action\'s environment." )]
class CIM_RebootAction : CIM_Action {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RemoveDirectoryAction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "RemoveDirectoryAction removes directories from the computer "
       "system that defines the Action\'s environment." )]
class CIM_RemoveDirectoryAction : CIM_DirectoryAction {

      [Description ( 
          "Boolean property indicating that the directory must be "
          "empty in order to be removed. If this condition is not "
          "satisfied, then the Invoke methods return an error." )]
   boolean MustBeEmpty;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RemoveFileAction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( "The RemoveFileAction uninstalls files." )]
class CIM_RemoveFileAction : CIM_FileAction {

      [Description ( "The file to be removed." ), 
       MaxLen ( 1024 )]
   string File;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SettingCheck 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "This class specifies information needed to verify a particular "
       "\'setting\' file, for a specific entry in the file. The file "
       "entry is checked whether it contains or matches the value "
       "defined in EntryValue. All compares are assumed to be case "
       "insensitive." )]
class CIM_SettingCheck : CIM_Check {

      [Description ( 
          "Key or label for the section of the file containing the "
          "settings to be checked." ), 
       MaxLen ( 256 )]
   string SectionKey;

      [Description ( "Name of the setting entry to be checked." ), 
       MaxLen ( 256 )]
   string EntryName;

      [Description ( "Value to be compared for the named entry." )]
   string EntryValue;

      [Description ( 
          "CheckType specifies how the setting value should be compared."
           ), 
       ValueMap { "0", "1" }, 
       Values { "Matches", "Contains" }]
   uint16 CheckType;

      [Description ( 
          "File name of the \'setting\' file to be checked." ), 
       MaxLen ( 1024 )]
   string FileName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareElementActions 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "This association identifies the Actions for a Software Element." )]
class CIM_SoftwareElementActions {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The element that scopes the Action." )]
   CIM_SoftwareElement REF Element;

      [Key, Weak, Description ( 
          "The software Action to move or uninstall a SoftwareElement."
           )]
   CIM_Action REF Action;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareElementChecks 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "This association ties a SoftwareElement to a specific Check to "
       "validate its state or its movement to the next state. Note "
       "that SoftwareElements in a running state cannot transition to "
       "another state. Therefore, the value of the Phase property is "
       "restricted to 0 (\"In-State\") for SoftwareElements in the "
       "running state." )]
class CIM_SoftwareElementChecks {

      [Key, Aggregate, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The SoftwareElement being checked." )]
   CIM_SoftwareElement REF Element;

      [Key, Weak, Description ( "The Check for the element." )]
   CIM_Check REF Check;

      [Description ( 
          "The Phase property indicates whether the referenced "
          "Check is an in-state or a next-state Check." ), 
       ValueMap { "0", "1" }, 
       Values { "In-State", "Next-State" }]
   uint16 Phase;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareElementSAPImplementation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "An association between a ServiceAccessPoint and how it is "
       "implemented by one or more executable SoftwareElements. Note "
       "that this association is restricted to \'executable\' "
       "Elements. In earlier phases of deployment, the Software "
       "FeatureSAPImplementation association is adequate and "
       "recommended. \n"
       "The relationship between this association and Software "
       "FeatureSAPImplementation is more fully described here. "
       "SoftwareElementSAPImplementation allows the description of "
       "greater granularity than SoftwareFeatureSAPImplementation, "
       "when a SoftwareFeature is fully deployed and results in "
       "several executable Elements. These Elements may implement "
       "several different ServiceAccessPoints. \n"
       "Since SoftwareFeatures decompose into SoftwareElements, it is "
       "possible to describe how software implements a SAP by using "
       "either this association or the SoftwareFeatureSAP "
       "Implementation relationship. One or the other should be "
       "chosen. Both associations should not be used for a particular "
       "AccessPoint, since their information is redundant. \n"
       "This relationship is especially important when the "
       "SoftwareFeature and Product aspects are not described for a "
       "SoftwareElement (ie, when the acquisition and deployment of "
       "the software is not detailed). In this case, the Software "
       "ElementSAPImplementation association is the only one available "
       "to describe how an AccessPoint is implemented in software. "
       "Since SoftwareFeatures are not instantiated, it is not "
       "possible to use the SoftwareFeatureSAP Implementation "
       "association. \n"
       "The cardinality of this association is many-to-many. A "
       "ServiceAccessPoint may be provided by more than one Software "
       "Element. (If this is true, it is assumed that the Software "
       "Elements operate in conjunction.) And, any SoftwareElement may "
       "provide more than one SAP." )]
class CIM_SoftwareElementSAPImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The executable SoftwareElement implementing the SAP." )]
   CIM_SoftwareElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ServiceAccessPoint implemented by the SoftwareElement."
           )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareElementServiceImplementation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "An association between a Service and how it is implemented by "
       "one or more executable SoftwareElements. Note that this "
       "association is restricted to \'executable\' Elements. In "
       "earlier phases of deployment, the SoftwareFeatureService "
       "Implementation association is adequate and recommended. \n"
       "The relationship between this association and Software "
       "FeatureServiceImplementation is more fully described here. "
       "SoftwareElementServiceImplementation allows the description of "
       "greater granularity than SoftwareFeatureService "
       "Implementation, when a SoftwareFeature is fully deployed and "
       "results in several executable Elements. These Elements may "
       "implement several different Services. \n"
       "Since SoftwareFeatures decompose into SoftwareElements, it is "
       "possible to describe how software implements a Service by "
       "using either this association or the SoftwareFeature "
       "ServiceImplementation relationship. One or the other should be "
       "chosen. Both associations should not be used for a single "
       "Service instance, since their information is redundant. \n"
       "This relationship is especially important when the "
       "SoftwareFeature and Product aspects are not described for a "
       "SoftwareElement (ie, when the acquisition and deployment of "
       "the software is not detailed). In this case, the Software "
       "ElementServiceImplementation association is the only one "
       "available to describe how a Service is implemented in "
       "software. Since SoftwareFeatures are not instantiated, it is "
       "not possible to use the SoftwareFeatureService Implementation "
       "association. \n"
       "The cardinality of this association is many-to-many. A Service "
       "may be provided by more than one SoftwareElement. If this is "
       "true, it is assumed that the SoftwareElements operate in "
       "conjunction. And, any SoftwareElement may provide more than "
       "one Service." )]
class CIM_SoftwareElementServiceImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The executable SoftwareElement implementing the Service." )]
   CIM_SoftwareElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Service implemented by the SoftwareElement." )]
   CIM_Service REF Dependent;


};

// Copyright (c) 2009 DMTF.  All Rights Reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "SoftwareElementVersionCheck specifies the release of a "
       "SoftwareElement that must exist in the environment. This Check "
       "can be for a specific, minimum, maximum or a range of "
       "versions. To specify a specific version, the lower and upper "
       "versions must be the same. To specify a minimum, only the "
       "lower version needs to be defined. To specify a maximum "
       "version, only the upper version needs to be defined. To "
       "specify a range, both upper and lower versions need to be "
       "defined. The details of this Check are compared with the "
       "corresponding details found in a CIM_SoftwareElement object, "
       "associated to the CIM_ComputerSystem instance that describes "
       "the environment (related by the association, "
       "CIM_InstalledSoftwareElement). There should be at least one "
       "CIM_SoftwareElement that satisfies the details of the Check. "
       "In other words, all the SoftwareElements on the relevant "
       "computer system do not need to satisfy the Check." )]
class CIM_SoftwareElementVersionCheck : CIM_Check {

      [Description ( 
          "The name of the SoftwareElement being checked." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_SoftwareElement.Name" }]
   string SoftwareElementName;

      [Description ( 
          "The minimum version of the SoftwareElement being checked." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_SoftwareElement.Version" }]
   string LowerSoftwareElementVersion;

      [Description ( 
          "The maximum version of the SoftwareElement being checked." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_SoftwareElement.Version" }]
   string UpperSoftwareElementVersion;

      [Description ( 
          "The state of the SoftwareElement being checked." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Deployable", "Installable", "Executable", "Running" }, 
       ModelCorrespondence { 
          "CIM_SoftwareElement.SoftwareElementState" }]
   uint16 SoftwareElementStateDesired;

      [Description ( 
          "The target operating system of the SoftwareElement being checked."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110" }, 
       Values { "Unknown", "Other", "MACOS", "ATTUNIX", "DGUX", 
          "DECNT", "Tru64 UNIX", "OpenVMS", "HPUX", "AIX", 
          //10 
          "MVS", "OS400", "OS/2", "JavaVM", "MSDOS", 
          "WIN3x", "WIN95", "WIN98", "WINNT", "WINCE", 
          //20 
          "NCR3000", "NetWare", "OSF", "DC/OS", 
          "Reliant UNIX", "SCO UnixWare", "SCO OpenServer", 
          "Sequent", "IRIX", "Solaris", //30 
          "SunOS", 
          "U6000", "ASERIES", "HP NonStop OS", "HP NonStop OSS", 
          "BS2000", "LINUX", "Lynx", "XENIX", "VM", 
          //40 
          "Interactive UNIX", "BSDUNIX", "FreeBSD", 
          "NetBSD", "GNU Hurd", "OS9", "MACH Kernel", "Inferno", 
          "QNX", "EPOC", //50 
          "IxWorks", "VxWorks", 
          "MiNT", "BeOS", "HP MPE", "NextStep", "PalmPilot", 
          "Rhapsody", "Windows 2000", "Dedicated", 
          //60 
          "OS/390", "VSE", "TPF", "Windows (R) Me", 
          "Caldera Open UNIX", "OpenBSD", "Not Applicable", 
          "Windows XP", "z/OS", "Microsoft Windows Server 2003", 
          //70
          "Microsoft Windows Server 2003 64-Bit", 
          "Windows XP 64-Bit", "Windows XP Embedded", 
          "Windows Vista", "Windows Vista 64-Bit", 
          "Windows Embedded for Point of Service", 
          "Microsoft Windows Server 2008", 
          "Microsoft Windows Server 2008 64-Bit", "FreeBSD 64-Bit", 
          "RedHat Enterprise Linux", 
          //80
          "RedHat Enterprise Linux 64-Bit", 
          "Solaris 64-Bit", "SUSE", "SUSE 64-Bit", "SLES", 
          "SLES 64-Bit", "Novell OES", "Novell Linux Desktop", 
          "Sun Java Desktop System", "Mandriva", 
          //90
          "Mandriva 64-Bit", "TurboLinux", 
          "TurboLinux 64-Bit", "Ubuntu", "Ubuntu 64-Bit", "Debian", 
          "Debian 64-Bit", "Linux 2.4.x", "Linux 2.4.x 64-Bit", 
          "Linux 2.6.x", //100
          "Linux 2.6.x 64-Bit", 
          "Linux 64-Bit", "Other 64-Bit", 
          "Microsoft Windows Server 2008 R2", "VMware ESXi", 
          "Microsoft Windows 7", "CentOS 32-bit", "CentOS 64-bit", 
          "Oracle Enterprise Linux 32-bit", 
          "Oracle Enterprise Linux 64-bit", 
          //110 
          "eComStation 32-bitx" }, 
       ModelCorrespondence { 
          "CIM_SoftwareElement.TargetOperatingSystem" }]
   uint16 TargetOperatingSystemDesired;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareFeatureSAPImplementation 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "An association between a ServiceAccessPoint and how it is "
       "implemented in software. The cardinality of this association "
       "is many-to-many. A SAP may be provided by more than one "
       "SoftwareFeature. When multiple SoftwareFeatures are associated "
       "with a single SAP, it is assumed that these elements operate "
       "in conjunction to provide the AccessPoint. Note that any "
       "SoftwareFeature may provide more than one ServiceAccessPoint. \n"
       "If different implementations of a SAP exist, each of these "
       "implementations would result in individual instantiations of "
       "the ServiceAccessPoint object. These individual instantiations "
       "would then have their own associations to the unique "
       "implementations." )]
class CIM_SoftwareFeatureSAPImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The SoftwareFeature implementing the SAP." )]
   CIM_SoftwareFeature REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The AccessPoint being implemented." )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SoftwareFeatureServiceImplementation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::DeploymentModel" ), 
    Description ( 
       "An association between a Service and how it is implemented in "
       "software. The cardinality of this association is many-to "
       "-many. A Service may be provided by more than one "
       "SoftwareFeature. When multiple SoftwareFeatures are associated "
       "with a single Service, it is assumed that these elements "
       "operate in conjunction to provide the Service. Note that any "
       "SoftwareFeature may provide more than one Service. \n"
       "If different implementations of a Service exist, each of these "
       "implementations would result in individual instantiations of "
       "the Service object. These individual instantiations would then "
       "have their own associations to the unique implementations." )]
class CIM_SoftwareFeatureServiceImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The SoftwareFeature implementing the Service." )]
   CIM_SoftwareFeature REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Service being implemented." )]
   CIM_Service REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "SwapSpaceCheck specifies the amount of swap space that needs "
       "to be available on the computer system. The amount is "
       "specified in the SwapSpaceSize property. The details of this "
       "Check are compared with the value of the CIM_OperatingSystem. "
       "TotalSwapSpaceSize property - where the CIM_OperatingSystem "
       "object is related (using RunningOS) to the CIM_Computer System "
       "instance that describes the environment. When the value of "
       "TotalSwapSpaceSize property is greater than or equal to the "
       "value specified in SwapSpaceSize, the Check is satisfied." )]
class CIM_SwapSpaceCheck : CIM_Check {

      [Description ( 
          "The SwapSpaceSize property specifies the minimum number "
          "of KiloBytes of swap space that needs to be available on "
          "the target system." ), 
       Units ( "KiloBytes" ), 
       ModelCorrespondence { "CIM_OperatingSystem.TotalSwapSpaceSize" }, 
       PUnit ( "byte * 10^3" )]
   uint64 SwapSpaceSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemBIOS 
// ==================================================================
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Application::BIOS" ), 
    Description ( 
       "SystemBIOS associates a UnitaryComputerSystem\'s BIOS with the "
       "System itself." )]
class CIM_SystemBIOS : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem that boots from the BIOS." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The System\'s BIOS." )]
   CIM_BIOSElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VersionCompatibilityCheck 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The VersionCompatibilityCheck class specifies whether it is "
       "permissible to create the next state of a SoftwareElement." )]
class CIM_VersionCompatibilityCheck : CIM_Check {

      [Description ( 
          "The AllowDownVersion property indicates that this "
          "Software Element can transition to its next state even "
          "if a higher or later version of the element already "
          "exists in the environment." )]
   boolean AllowDownVersion;

      [Description ( 
          "The AllowMultipleVersions option controls the ability to "
          "configure multiple versions of a SoftwareElement on a "
          "system." )]
   boolean AllowMultipleVersions;

      [Description ( 
          "The Reinstall property indicates that this "
          "SoftwareElement can transition to its next state even if "
          "an element of the same version already exists in the "
          "environment." )]
   boolean Reinstall;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00711.001" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AdminDomain
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "This is a special grouping of ManagedSystemElements. The "
       "grouping is viewed as a single entity, reflecting that all of "
       "its components are administered similarly, either by the same "
       "user, group of users, or policy. It serves as an aggregation "
       "point to associate one or more of the following elements: "
       "network devices, such as routers and switches, servers, and "
       "other resources that can be accessed by end systems. This "
       "grouping of devices plays an essential role in ensuring that "
       "the same administrative policy and actions are applied to all "
       "of the devices in the grouping. The specific behavior and/or "
       "semantics of the AdminDomain can be identified through its "
       "aggregated and associated entities." )]
class CIM_AdminDomain : CIM_System {

      [Override ( "NameFormat" ), 
       Description ( 
          "The NameFormat property identifies how the Name of the "
          "AdminDomain is generated, using the heuristic specified "
          "in the CIM V2 System Model specification. The property "
          "assumes that to determine and assign a Name the "
          "documented rules are traversed in order. The NameFormat "
          "Values list defines the precedence order for assigning "
          "the Name of the AdminDomain. \n"
          "\n"
          "\"FC\" has been deprecated and replaced by \"WWN\" to be "
          "consistent with the other ValueMaps." ), 
       ValueMap { "Other", "AS", "NAP", "NOC", "POP", "RNP", "IP", 
          "IPX", "SNA", "Dial", "WAN", "LAN", "ISDN", "Frame Relay", 
          "ATM", "E.164", "IB", "FC", "Policy Repository", "WWN" }, 
       Values { "Other", "Autonomous System", 
          "Network Access Provider", "Network Operations Center", 
          "Point of Presence", "Regional Network Provider", "IP", 
          "IPX", "SNA", "Dial", "WAN", "LAN", "ISDN", "Frame Relay", 
          "ATM", "E.164", "Infiniband", "Fibre Channel", 
          "Policy Repository", "Fibre Channel Worldwide Name" }, 
       ModelCorrespondence { "CIM_AdminDomain.Name" }]
   string NameFormat;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BasedOn 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::StorageExtent" ), 
    Description ( 
       "BasedOn is an association describing how StorageExtents can be "
       "assembled from lower level Extents. For example, "
       "ProtectedSpaceExtents are parts of PhysicalExtents, while "
       "VolumeSets are assembled from one or more Physical or "
       "ProtectedSpaceExtents. As another example, CacheMemory can be "
       "defined independently and realized in a PhysicalElement or can "
       "be \'based on\' Volatile or NonVolatileStorageExtents." )]
class CIM_BasedOn : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The lower level StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The higher level StorageExtent." )]
   CIM_StorageExtent REF Dependent;

      [Description ( 
          "StartingAddress indicates where in lower level storage, "
          "the higher level Extent begins." )]
   uint64 StartingAddress;

      [Description ( 
          "EndingAddress indicates where in lower level storage, "
          "the higher level Extent ends. This property is useful "
          "when mapping non-contiguous Extents into a higher level "
          "grouping." )]
   uint64 EndingAddress;

      [Description ( 
          "If there is an order to the BasedOn associations that "
          "describe how a higher level StorageExtent is assembled, "
          "the OrderIndex property indicates this. When an order "
          "exists, the instances of BasedOn with the same Dependent "
          "value (i.e., the same higher level Extent) should place "
          "unique values in the OrderIndex property. The lowest "
          "value implies the first member of the collection of "
          "lower level Extents, and increasing values imply "
          "successive members of the collection. If there is no "
          "ordered relationship, a value of zero should be "
          "specified. An example of the use of this property is to "
          "define a RAID-0 striped array of 3 disks. The resultant "
          "RAID array is a StorageExtent that is dependent on "
          "(BasedOn) the StorageExtents that describe each of the 3 "
          "disks. The OrderIndex of each BasedOn association from "
          "the disk Extents to the RAID array could be specified as "
          "1, 2 and 3 to indicate the order in which the disk "
          "Extents are used to access the RAID data." )]
   uint16 OrderIndex;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01378.002" type ="deprecate">Deprecate
// class.</change>
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConfigurationForSystem
// ==================================================================
   [Association, Deprecated { "CIM_ScopedSetting", 
       "CIM_SettingForSystem" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "Note: The use of this element is deprecated. Deprecated "
       "description: CIM_ConfigurationForSystem defines a "
       "Configuration in the context of the System on which it is "
       "located. Because the Configuration class is deprecated, this "
       "association is similarly deprecated." )]
class CIM_ConfigurationForSystem : CIM_HostedDependency {

      [Deprecated { "CIM_ScopedSetting.Antecedent", 
          "CIM_SettingForSystem.Antecedent" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The hosting System." )]
   CIM_System REF Antecedent;

      [Deprecated { "CIM_ScopedSetting.Dependent", 
          "CIM_SettingForSystem.Dependent" }, 
       Override ( "Dependent" ), 
       Weak, Description ( 
          "Note: The use of this element is deprecated. The "
          "Configuration that is defined for the System." )]
   CIM_SystemConfiguration REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ContainedDomain 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "A relationship that aggregates one or more lower-level "
       "AdminDomain instances into a higher-level AdminDomain." )]
class CIM_ContainedDomain : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "An AdminDomain that aggregates other AdminDomains." )]
   CIM_AdminDomain REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "An AdminDomain aggregated by another AdminDomain." )]
   CIM_AdminDomain REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00709.002" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceSAPImplementation
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Device" ), 
    Description ( 
       "An association between a ServiceAccessPoint (SAP) and how it "
       "is implemented. The cardinality of this association is "
       "many-to-many. A SAP can be provided by more than one "
       "LogicalDevice, operating in conjunction. And, any Device can "
       "provide more than one ServiceAccessPoint. When many "
       "LogicalDevices are associated with a single SAP, it is assumed "
       "that these elements operate in conjunction to provide the "
       "AccessPoint. If different implementations of a SAP exist, each "
       "of these implementations would result in individual "
       "instantiations of the ServiceAccessPoint object. These "
       "individual instantiations would then have associations to the "
       "unique implementations." )]
class CIM_DeviceSAPImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The LogicalDevice." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ServiceAccessPoint implemented using the LogicalDevice."
           )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00709.002" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceServiceImplementation
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Device" ), 
    Description ( 
       "An association between a Service and how it is implemented. "
       "The cardinality of this association is many-to-many. A Service "
       "can be provided by more than one Logical Device, operating in "
       "conjunction. And, any Device can provide more than one "
       "Service. When multiple Devices are associated with a single "
       "Service, it is assumed that these elements operate in "
       "conjunction to provide the Service. If different "
       "implementations of a Service exist, each of these "
       "implementations would result in individual instantiations of "
       "the Service object. These individual instantiations would then "
       "have associations to the unique implementations." )]
class CIM_DeviceServiceImplementation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The LogicalDevice." )]
   CIM_LogicalDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Service implemented using the Logical Device." )]
   CIM_Service REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "DeviceStatistics relates the DeviceStatisticalInformation "
       "class to the LogicalDevice to which it applies." )]
class CIM_DeviceStatistics : CIM_Statistics {

      [Override ( "Stats" ), 
       Weak, Description ( "The statistical object." )]
   CIM_DeviceStatisticalInformation REF Stats;

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Device to which the statistics apply." )]
   CIM_LogicalDevice REF Element;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00717.001" type ="add">Deprecated</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ExtentRedundancyComponent
// ==================================================================
   [Association, Deprecated { "CIM_MemberOfCollection" }, 
    Aggregation, Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::Core::Redundancy" ), 
    Description ( 
       "Describes the StorageExtents participating in a Storage "
       "RedundancyGroup. \n"
       "The use of this class is being deprecated in lieu of using "
       "MemberOfCollection in conjunction with StorageRedundancySet." )]
class CIM_ExtentRedundancyComponent : CIM_RedundancyComponent {

      [Deprecated { "CIM_MemberOfCollection.Collection" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( "The StorageRedundancyGroup." )]
   CIM_StorageRedundancyGroup REF GroupComponent;

      [Deprecated { "CIM_MemberOfCollection.Member" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "The StorageExtent participating in the RedundancyGroup." )]
   CIM_StorageExtent REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedAccessPoint
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_HostedAccessPoint is an association between a Service "
       "AccessPoint and the System on which it is provided. The "
       "cardinality of this association is one-to-many and is weak "
       "with respect to the System. Each System can host many "
       "ServiceAccessPoints. Heuristic: If the implementation of the "
       "ServiceAccessPoint is modeled, it must be implemented by a "
       "Device or SoftwareFeature that is part of the System that is "
       "hosting the ServiceAccessPoint." )]
class CIM_HostedAccessPoint : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The SAPs that are hosted on this System." )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00707.002" type ="add">CPUBS corrections to CoreCollection.mof</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedCollection 
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Collection" ), 
    Description ( 
       "HostedCollection defines a SystemSpecificCollection in the "
       "context of a scoping System. It represents a Collection that "
       "has meaning only in the context of a System, a Collection "
       "whose elements are restricted by the definition of the System, "
       "or both of these types of Collections." )]
class CIM_HostedCollection : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The scoping system." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The collection defined in the context of a system." )]
   CIM_SystemSpecificCollection REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Aggregation, Composition, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "HostedResourcePool is a specialization of the SystemComponent "
       "association that establishes that the ResourcePool is defined "
       "in the context of the System" )]
class CIM_HostedResourcePool : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The parent system in the association" )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The ResourcePool that is a component of the system" )]
   CIM_ResourcePool REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedService
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_HostedService is an association between a Service and the "
       "System on which the functionality is located. The cardinality "
       "of this association is one-to-many. A System can host many "
       "Services. Services are weak with respect to their hosting "
       "System. Heuristic: A Service is hosted on the System where the "
       "LogicalDevices or SoftwareFeatures that implement the Service "
       "are located. The model does not represent Services hosted "
       "across multiple systems. The model is as an ApplicationSystem "
       "that acts as an aggregation point for Services that are each "
       "located on a single host." )]
class CIM_HostedService : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( "The Service hosted on the System." )]
   CIM_Service REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InstalledSoftwareIdentity 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Core::Software" ), 
    Description ( 
       "The InstalledSoftwareIdentity association identifies the "
       "System on which a SoftwareIdentity is installed. This class is "
       "a corollary to InstalledSoftwareElement, but deals with the "
       "asset aspects of software (as indicated by SoftwareIdentity), "
       "versus the deployment aspects (as indicated by "
       "SoftwareElement)." )]
class CIM_InstalledSoftwareIdentity {

      [Key, Description ( 
          "The system on which the software is installed." )]
   CIM_System REF System;

      [Key, Description ( "The SoftwareIdentity that is installed." )]
   CIM_SoftwareIdentity REF InstalledSoftware;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    Description ( 
       "The CIM_LastAppliedSnapshot association associates an instance "
       "of the CIM_VirtualSystemSettingData class representing a "
       "virtual system snapshot that was most recently applied to a "
       "virtual system, and the instance of the CIM_ComputerSystem "
       "class representing the related virtual system.\n"
       "An instance of this assocation indicates that the referenced "
       "snapshot is the snapshot the was last applied to the virtual "
       "system from the set of snapshots taken from that virtual "
       "system. For each virtual system at any time there is at most "
       "one snapshot the last applied snapshot." )]
class CIM_LastAppliedSnapshot : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( 
          "Reference to the instance of the "
          "CIM_VirtualSystemSettingData class representing the "
          "virtual system snapshot that was last applied to the "
          "virtual system." )]
   CIM_VirtualSystemSettingData REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( 
          "Reference to the instance of the CIM_ComputerSystem "
          "class representing the virtual system upon which the "
          "virtual system snapshot represented by the instance of "
          "the CIM_VirtualSystemSettingData class referenced by the "
          "Antecedent property was most recently applied." )]
   CIM_ComputerSystem REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::OpaqueManagementData" ), 
    Description ( 
       "A class derived from StorageExtent that describes opaque "
       "management data in managed systems. The structure and "
       "semantics of opaque management data, which may be standardized "
       "or proprietary, are assumed to be known by at least one "
       "management client, but need not be known by the CIM server. "
       "The UntransformedDataFormat property identifies the structure "
       "and semantics of the data.\n"
       "Opaque management data are typically stored in non-volatile "
       "memory that is accessible to the server. Management clients "
       "are able to read and write opaque data, to manage their "
       "lifetime, and to configure the access rights associated with "
       "them. The non-volatile storage is often used as a mailbox, "
       "with local management agents producing data for consumption by "
       "remote management clients, or vice versa.\n"
       "This class is not intended as a general-purpose opaque "
       "alternative to any existing or planned CIM classes. It is "
       "expressly intended for the mailbox usage model described "
       "above." )]
class CIM_OpaqueManagementData : CIM_StorageExtent {

      [Description ( 
          "The maximum number of bytes of opaque management data "
          "that the instance may contain." ), 
       PUnit ( "byte" )]
   uint64 MaxSize;

      [Description ( 
          "The date and time when the opaque management data was "
          "last accessed. Any operation on the OpaqueManagementData "
          "instance constitutes access. This property shall be NULL "
          "if it is not supported by the implementation." )]
   datetime LastAccessed;

      [Description ( 
          "Indicates whether the data are stored on a medium that "
          "has a limited number of write/erase cycles (e.g., flash "
          "memory)." ), 
       ValueMap { "0", "1", "2", ".." }, 
       Values { "Unknown", "Not write-limited", "Write-limited", 
          "DMTF Reserved" }]
   uint16 WriteLimited;

      [Description ( 
          "Describes the format of the opaque management data. A "
          "free-form string that shall only be set by an authorized "
          "client, and shall not be changed by the implementation." )]
   string DataFormat;

      [Description ( 
          "The number of bytes of opaque management data in the instance."
           ), 
       PUnit ( "byte" )]
   uint64 DataSize;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.1" ), 
    UMLPackagePath ( "CIM::Core::OpaqueManagementData" ), 
    Description ( 
       "A class derived from Service that contains global properties "
       "of the opaque management data functionality in the CIM server, "
       "and provides methods for using this functionality." )]
class CIM_OpaqueManagementDataService : CIM_Service {

      [Description ( 
          "The number of bytes of opaque management data storage "
          "available from the CIM_OpaqueManagementDataService. The "
          "value of AvailableStorage shall not exceed the value of "
          "MaxAvailableStorage in the associated "
          "CIM_OpaqueManagementDataCapabilities." ), 
       ModelCorrespondence { 
          "CIM_OpaqueManagementDataCapabilities.MaxAvailableStorage" }, 
       PUnit ( "byte" )]
   uint64 AvailableStorage;

      [Description ( 
          "The amount of time a lock on a CIM_OpaqueManagementData "
          "instance shall remain in effect without execution of any "
          "CIM_OpaqueManagementDataService extrinsic methods on "
          "that CIM_OpaqueManagementData instance by the Identity "
          "that holds the lock. Locks on CIM_OpaqueManagementData "
          "are created by Lock(). The intent of the timeout is to "
          "ensure that a lock is released if the lock holder "
          "neglects to release it or is unable to release it. The "
          "value of LockTimeout shall be a duration." )]
   datetime LockTimeout;

      [Description ( 
          "MaxCreateSize shall contain the maximum value that the "
          "implementation will currently accept in the MaxSize "
          "property of the OpaqueManagementDataTemplate embedded "
          "instance parameter in a call to Create(). This value may "
          "change over time for any reason, including but not "
          "limited to fragmentation of the storage resources "
          "managed by the service." ), 
       ModelCorrespondence { "CIM_OpaqueManagementData.MaxSize" }, 
       PUnit ( "byte" )]
   uint64 MaxCreateSize;


      [Description ( 
          "Grants or removes access to the referenced "
          "CIM_OpaqueManagementData instance by the referenced "
          "CIM_Identity instance." ), 
       ValueMap { "0", "1", "2", "3..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 AssignAccess(
         [Required, IN, Description ( 
             "Reference to the CIM_Identity instance that is the "
             "subject of the access rights modified by this "
             "method." )]
      CIM_Identity REF Identity, 
         [Required, IN, Description ( 
             "Reference to the CIM_OpaqueManagementData instance "
             "that is the target of the access rights modified "
             "by this method." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [Required, IN, Description ( 
             "The subset of values from the value map that shall "
             "be contained in the resulting Activities property "
             "of the CIM_AssociatedPrivilege between the "
             "CIM_Identity instance referenced by the Identity "
             "parameter and the CIM_OpaqueManagementData "
             "instance referenced by the OpaqueManagementData "
             "parameter. If such an instance of "
             "CIM_AssociatedPrivilege does not exist before the "
             "method is invoked, the method shall create it." ), 
          ValueMap { "5", "6" }, 
          Values { "Read", "Write" }, 
          ModelCorrespondence { 
             "CIM_AssociatedPrivilege.Activities" }]
      uint16 Activities[]);

      [Description ( 
          "Create() creates an instance of CIM_OpaqueManagementData "
          "using the property values in the OpaqueManagementData "
          "parameter, and allocates the number of bytes of storage "
          "specified in the MaxSize property of the "
          "OpaqueManagementData parameter. It also optionally "
          "allows the client to specify an existing "
          "CIM_StorageExtent instance as the basis (storage "
          "location) of the new CIM_OpaqueManagementData instance." ), 
       ValueMap { "0", "1", "2", "3..4095", "4096", "4097..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 Create(
         [Required, IN, Description ( 
             "The requested value of the MaxSize property in the "
             "CIM_OpaqueManagementData instance created by this "
             "method. The actual property value shall not be "
             "less than this value." ), 
          ModelCorrespondence { "CIM_OpaqueManagementData.MaxSize" }]
      uint64 MaxSize, 
         [IN, Description ( 
             "The value of the DataFormat property in the "
             "CIM_OpaqueManagementData instance created by this "
             "method." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementData.DataFormat" }]
      string DataFormat, 
         [IN, Description ( 
             "The value of the ElementName property in the "
             "CIM_OpaqueManagementData instance created by this "
             "method." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementData.ElementName" }]
      string ElementName, 
         [Required, IN, Description ( 
             "Specifies the instance of CIM_Identity or its "
             "subclass that shall be the owner of the new "
             "CIM_OpaqueManagementData instance. Create() shall "
             "associate the new CIM_OpaqueManagementData "
             "instance with this CIM_Identity instance using a "
             "new instance of CIM_AssociatedPrivilege." )]
      CIM_Identity REF Owner, 
         [IN, Description ( 
             "Specifies the instance of CIM_StorageExtent on "
             "which the new instance of CIM_OpaqueManagementData "
             "shall be based (i.e., in which it shall be "
             "stored). If this parameter is NULL, the choice of "
             "storage location shall be left to the "
             "implementation." )]
      CIM_StorageExtent REF BasedOnExtent, 
         [IN ( false ), OUT, Description ( 
             "Reference to the instance of "
             "CIM_OpaqueManagementData created when the method "
             "returns a value of 0." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "ExportToURI() copies all or some of the bytes of opaque "
          "management data in the extent represented by the "
          "referenced instance of CIM_OpaqueManagementData to the "
          "Uniform Resource Identifier (URI) specified in the "
          "ExportURI parameter. The URI scheme implies the protocol "
          "that shall be used. Typically, the URI will be a Uniform "
          "Resource Locator (URL), but a Uniform Resource Name "
          "(URN) is not prohibited.\n"
          "If 0 is returned, the function completed successfully "
          "and no ConcreteJob instance was required. If 4096/0x1000 "
          "is returned, a ConcreteJob shall be started to to "
          "perform the operation. The Job\'s reference shall be "
          "returned in the output parameter Job." ), 
       ValueMap { "0", "1", "2", "3..4095", "4096", "4097..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 ExportToURI(
         [Required, IN, Description ( 
             "The CIM_OpaqueManagementData instance that "
             "represents the extent that is the target of the "
             "operation." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [Required, IN, Description ( 
             "Offset specifies the byte offset at which to start reading."
              ), 
          PUnit ( "byte" )]
      uint64 Offset, 
         [Required, IN, OUT, Description ( 
             "On entry, Length contains the number of bytes to "
             "be read, starting at the byte offset in the Offset "
             "property. On return, Length contains the number of "
             "bytes that were actually read." ), 
          PUnit ( "byte" )]
      uint64 Length, 
         [Required, IN, Description ( 
             "On entry, ExportURI contains a URI based on RFC "
             "3986 that indicates the location to which the "
             "service shall copy the specified bytes of opaque "
             "management data and from which the client "
             "subsequently retrieves them." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementDataCapabilities.SupportedExportURISchemes" }]
      string ExportURI, 
         [IN, Description ( 
             "A token that represents a Lock placed on the data "
             "in the extent referenced by the "
             "OpaqueManagementData parameter, using the Lock() "
             "method." ), 
          OctetString]
      uint8 LockToken[], 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "ImportFromURI() modifies all or some of the bytes in the "
          "referenced instance of CIM_OpaqueManagementData. The "
          "imported data for the operation is copied from the URI "
          "specified in the ImportURI parameter. The URI scheme "
          "implies the protocol that shall be used. Typically, the "
          "URI will be a Uniform Resource Locator (URL), but a "
          "Uniform Resource Name (URN) is not prohibited.\n"
          "Any data already present in the instance outside the "
          "range specified by Offset and Length is unchanged.\n"
          "If 0 is returned, the function completed successfully "
          "and no ConcreteJob instance was required. If 4096/0x1000 "
          "is returned, a ConcreteJob shall be started to perform "
          "the operation. The Job\'s reference shall be returned in "
          "the output parameter Job." ), 
       ValueMap { "0", "1", "2", "3..4095", "4096", "4097..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 ImportFromURI(
         [Required, IN, Description ( 
             "The CIM_OpaqueManagementData instance that "
             "represents the extent that is the target of the "
             "operation." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [Required, IN, Description ( 
             "Offset specifies the byte offset at which to start writing."
              ), 
          PUnit ( "byte" )]
      uint64 Offset, 
         [Required, IN, OUT, Description ( 
             "On entry, Length contains the number of bytes to "
             "be written, starting at the byte offset in the "
             "Offset. property. On return, Length contains the "
             "number of bytes that were actually written." ), 
          PUnit ( "byte" )]
      uint64 Length, 
         [IN, Description ( 
             "If the value of the DataSize property of the "
             "instance referenced by the OpaqueManagementData "
             "parameter is greater than Offset + Length, then a "
             "value of TRUE shall indicate that the DataSize "
             "property value shall be reduced by this operation "
             "to Offset + Length, and a value of FALSE shall "
             "indicate that the DataSize property value shall "
             "remain unchanged by this operation. If the value "
             "of the DataSize property is not greater than "
             "Offset + Length, then this parameter shall be "
             "ignored." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementData.DataSize" }]
      boolean Truncate, 
         [Required, IN, Description ( 
             "On entry, ImportURI contains a URI based on RFC "
             "3986 that shall be used by the service to retrieve "
             "the bytes of opaque management data to be written "
             "into the extent represented by the "
             "OpaqueManagementData parameter." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementDataCapabilities.SupportedImportURISchemes" }]
      string ImportURI, 
         [IN, Description ( 
             "A token that represents a Lock placed on the data "
             "in the extent referenced by the "
             "OpaqueManagementData parameter, using the Lock() "
             "method." ), 
          OctetString]
      uint8 LockToken[], 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Lock() allows a management client to atomically read or "
          "write an opaque management data storage extent larger "
          "than MaxReadLength or MaxWriteLength, respectively. A "
          "server that supports this method shall support the "
          "following pattern:\n"
          "1. Issue Lock() with Lock set to true to lock the "
          "CIM_OpaqueManagementData instance.\n"
          "2. Repeat Read() or Write() as many times as necessary "
          "to complete the transfer\n"
          "3. Issue Lock() with Lock set to false to unlock the "
          "CIM_OpaqueManagementData instance\n"
          "If Lock() with Lock set to true completes successfully, "
          "the server shall return a LockToken to the client. Until "
          "the lock is removed or expires, the server shall deny "
          "OpaqueManagementDataService method requests on the same "
          "CIM_OpaqueManagementData instance that do not contain "
          "the same LockToken value.\n"
          "Lock() shall not lock the properties of the "
          "OpaqueManagementData instance. The method shall return 0 "
          "if successful, 1 if not supported, and any other value "
          "if an error occurred." ), 
       ValueMap { "0", "1", "2", "3..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 Lock(
         [Required, IN, Description ( 
             "The CIM_OpaqueManagementData instance that "
             "represents the extent that is the target of the "
             "operation." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [Required, IN, Description ( 
             "If true, lock the data from access by another "
             "management client. If false, release the data." )]
      boolean Lock, 
         [IN, OUT, Description ( 
             "A token that shall be returned to the client as "
             "output if Lock is True, and supplied by the client "
             "as input if Lock is False. In this way, only the "
             "client that set the Lock may remove it or delegate "
             "such responsibility to another client." ), 
          OctetString]
      uint8 LockToken[]);

      [Description ( 
          "Read() returns all or some of the bytes of opaque "
          "management data in the extent represented by the "
          "referenced instance of CIM_OpaqueManagementData." ), 
       ValueMap { "0", "1", "2", "3..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 Read(
         [Required, IN, Description ( 
             "The CIM_OpaqueManagementData instance that "
             "represents the extent that is the target of the "
             "operation." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [Required, IN, Description ( 
             "Offset specifies the byte offset at which to start reading."
              ), 
          PUnit ( "byte" )]
      uint64 Offset, 
         [Required, IN, OUT, Description ( 
             "On entry, Length shall contain the number of bytes "
             "to be read, starting at the byte offset in the "
             "Offset property. On return, Length shall contain "
             "the number of bytes that were actually read." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementDataCapabilities.MaxReadLength" }, 
          PUnit ( "byte" )]
      uint64 Length, 
         [IN ( false ), OUT, Description ( 
             "On return, Data shall contain the bytes of opaque "
             "management data read from the extent represented "
             "by the OpaqueManagementData parameter." ), 
          OctetString]
      uint8 Data[], 
         [IN, Description ( 
             "A token that represents a Lock placed on the data "
             "in the extent referenced by the "
             "OpaqueManagementData parameter, using the Lock() "
             "method. Parameter shall be NULL if data is not "
             "locked." ), 
          OctetString]
      uint8 LockToken[]);

      [Description ( 
          "Transfers ownership of a CIM_OpaqueManagementData "
          "instance to the CIM_Identity instance referenced by the "
          "Identity parameter." ), 
       ValueMap { "0", "1", "2", "3..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 ReassignOwnership(
         [Required, IN, Description ( 
             "Reference to the CIM_Identity instance that will "
             "become the new owner of the "
             "CIM_OpaqueManagementData instance referenced by "
             "the OpaqueManagementData parameter." )]
      CIM_Identity REF NewOwner, 
         [Required, IN, Description ( 
             "Reference to the CIM_OpaqueManagementData instance "
             "that is the target of ownership reassignment." )]
      CIM_OpaqueManagementData REF OpaqueManagementData);

      [Description ( 
          "Write() modifies all or some of the bytes in the extent "
          "represented by the referenced instance of "
          "CIM_OpaqueManagementData. Any data already present in "
          "the extent outside the range specified by Offset and "
          "Length shall remain unchanged by this operation." ), 
       ValueMap { "0", "1", "2", "3..4095", "4096", "4097..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 Write(
         [Required, IN, Description ( 
             "The CIM_OpaqueManagementData instance that "
             "represents the extent that is the target of the "
             "operation." )]
      CIM_OpaqueManagementData REF OpaqueManagementData, 
         [Required, IN, Description ( 
             "Offset specifies the byte offset at which to start writing."
              ), 
          PUnit ( "byte" )]
      uint64 Offset, 
         [Required, IN, OUT, Description ( 
             "On entry, Length contains the number of bytes to "
             "be written, starting at the byte offset in the "
             "Offset. property. On return, Length contains the "
             "number of bytes that were actually written." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementDataCapabilities.MaxWriteLength" }, 
          PUnit ( "byte" )]
      uint64 Length, 
         [IN, Description ( 
             "If the value of the DataSize property of the "
             "instance referenced by the OpaqueManagementData "
             "parameter is greater than Offset + Length, then a "
             "value of TRUE shall indicate that the DataSize "
             "property value shall be reduced by this operation "
             "to Offset + Length, and a value of FALSE shall "
             "indicate that the DataSize property value shall "
             "remain unchanged by this operation. If the value "
             "of the DataSize property is not greater than "
             "Offset + Length, then this parameter shall be "
             "ignored." ), 
          ModelCorrespondence { 
             "CIM_OpaqueManagementData.DataSize" }]
      boolean Truncate, 
         [Required, IN, Description ( 
             "On entry, Data contains the bytes of opaque "
             "management data to be written into the extent "
             "represented by the OpaqueManagementData parameter." ), 
          OctetString]
      uint8 Data[], 
         [IN, Description ( 
             "A token that represents a Lock placed on the data "
             "in the extent referenced by the "
             "OpaqueManagementData parameter, using the Lock() "
             "method." ), 
          OctetString]
      uint8 LockToken[], 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2008 DMTF.  All Rights Reserved.
   [Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Core::PowerMgmt" ), 
    Description ( 
       "A class derived from Service that describes power management "
       "functionality, hosted on a System. Whether this service might "
       "be used to affect the power state of a particular element is "
       "defined by the CIM_ServiceAvailable ToElement association." )]
class CIM_PowerManagementService : CIM_Service {


      [Deprecated { 
          "CIM_PowerManagementService.RequestPowerStateChange" }, 
       Description ( 
          "The CIM_PowerManagementService.RequestPowerStateChange "
          "method should be used instead of SetPowerState method, "
          "which is deprecated. SetPowerState defines the desired "
          "power state of the managed element and when the element "
          "should be put into that state. The SetPowerState method "
          "has three input parameters, no output parameters, and a "
          "result. \n"
          "- PowerState indicates the desired power state. \n"
          "- ManagedElement indicates the element whose state is "
          "set. This element should be associated with the service "
          "using the ServiceAvailableToElement relationship. \n"
          "- Time indicates when the power state should be set, "
          "either as a regular date-time value or as an interval "
          "value (where the interval begins when the method "
          "invocation is received). \n"
          "Note that when the PowerState parameter is equal to 5, "
          "\"Power Cycle (Off -Soft)\", the Time parameter "
          "indicates when the managed element should be powered on "
          "again. Power-off is immediate. \n"
          "SetPowerState should return 0 if successful, 1 if the "
          "specified State and Time request is not supported for "
          "the element, and some other value if any other error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' can also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 SetPowerState(
         [IN, Description ( "The power state for ManagedElement." ), 
          ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
          Values { "On", "Sleep - Light", "Sleep -Deep", 
             "Vendor Specific", "Power Cycle (Off - Soft)", 
             "Off - Hard", "Hibernate (Off - Soft)", "Off - Soft" }, 
          MappingStrings { "IEEE P1621 | 3.2" }]
      uint16 PowerState, 
         [IN, Description ( 
             "ManagedElement indicates the element whose state is set."
              )]
      CIM_ManagedElement REF ManagedElement, 
         [IN, Description ( 
             "Time indicates when the power state should be set, "
             "either as a regular date-time value or as an "
             "interval value (where the interval begins when the "
             "method invocation is received." )]
      datetime Time);

      [Description ( 
          "RequestPowerStateChange defines the desired power state "
          "of the managed element, and when the element should be "
          "put into that state. The RequestPowerStateChange method "
          "has five input parameters and a result code. \n"
          "- PowerState indicates the desired power state. \n"
          "- ManagedElement indicates the element whose state is "
          "set. This element SHOULD be associated to the service "
          "using the AssociatedPowerManagementService relationship. \n"
          "- Time indicates when the power state should be set, "
          "either as a regular date-time value or as an interval "
          "value (where the interval begins when the method "
          "invocation is received). \n"
          "- Job is a reference to the job if started. \n"
          "- TimeOutPeriod indicates the maximum amount of time a "
          "client is expects the transition to take. \n"
          "See CIM_PowerStateCapabilities for descriptions of "
          "PowerState parameter enumerations." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", 
          "Cannot complete within Timeout Period", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Invalid State Transition", 
          "Use of Timeout Parameter Not Supported", "Busy", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RequestPowerStateChange(
         [IN, Description ( "The power state for ManagedElement." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "13", "14", "15", "16" }, 
          Values { "Power On", "Sleep - Light", "Sleep - Deep", 
             "Power Cycle (Off Soft)", "Power Off - Hard", 
             "Hibernate", "Power Off - Soft", 
             "Power Cycle (Off Hard)", "Master Bus Reset", 
             "Diagnostic Interrupt (NMI)", 
             "Power Off - Soft Graceful", 
             "Power Off - Hard Graceful", 
             "Master Bus Reset Graceful", 
             "Power Cycle (Off - Soft Graceful)", 
             "Power Cycle (Off - Hard Graceful)" }]
      uint16 PowerState, 
         [IN, Description ( 
             "ManagedElement indicates the element whose state is set."
              )]
      CIM_ManagedElement REF ManagedElement, 
         [IN, Description ( 
             "Time indicates when the power state should be set, "
             "either as a regular date-time value or as an "
             "interval value (where the interval begins when the "
             "method invocation is received." )]
      datetime Time, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (can be null if the task is completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "A timeout period that specifies the maximum amount "
             "of time that the client expects the transition to "
             "the new state to take. The interval format must be "
             "used to specify the TimeoutPeriod. A value of 0 or "
             "a null parameter indicates that the client has no "
             "time requirements for the transition. \n"
             "If this property does not contain 0 or null and "
             "the implementation does not support this "
             "parameter, a return code of \'Use Of Timeout "
             "Parameter Not Supported\' must be returned." )]
      datetime TimeoutPeriod);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.23.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "PowerUtilizationManagementService represents the ability of a "
       "platform or component to perform autonomic management of its "
       "power utilization." )]
class CIM_PowerUtilizationManagementService : CIM_Service {

      [Description ( 
          "PowerUtilizationMode indicates the current power "
          "utilization mode implemented by the service. The mode "
          "selection is a generally made infrequently as part of "
          "element configuration. \n"
          "A value of \"None\" shall indicate that no effort is "
          "being made to reduce the power consumed by the system "
          "below nominal. \n"
          "A value of \"Dynamic\" shall indicate the "
          "PowerUtilizationManagementService is actively modifying "
          "the configuration of one or more system components in "
          "order to reduce the power consumed. \n"
          "A value of \"Static\" shall indicate the system whose "
          "power utilization functionality is represented by the "
          "PowerUtilizationManagementService is operating with a "
          "fixed configuration resulting in a lower level of power "
          "consumption than nominal. Static mode differs from "
          "dynamic in that the mode corresponds to a single fixed "
          "configuration, while dynamic mode implies frequent "
          "changes in system configuration." ), 
       ValueMap { "2", "3", "4", "..", "32768..65535" }, 
       Values { "None", "Dynamic", "Static", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_PowerUtilizationManagementCapabilities.PowerUtilizationModesSupported" }]
   uint16 PowerUtilizationMode = 2;


      [Description ( 
          "Applies the Power Allocation Settings that "
          "represents.the power aspect of the system. When applied "
          "to a system\'s Power Allocation settings, a system\'s "
          "power allocation settingsmay be modified.Upon "
          "successfull execution if the limit property of the power "
          "aspectis modified the power cap is modified" ), 
       ValueMap { "0", "1", "2", "4096", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Job Started", "DMTF Reserved", "Vendor Reserved" }]
   uint32 ApplyPowerAllocationSettings(
         [Required, In, Description ( 
             "An embedded instance of class "
             "CIM_PowerAllocationSettingData that describes "
             "modifications to the existing power allocation "
             "aspects of a computer system. The embedded "
             "instance must have a valid InstanceID in order to "
             "identify the power allocation setting to be "
             "modified." ), 
          EmbeddedInstance ( "CIM_PowerAllocationSettingData" )]
      string PowerAllocationSettings, 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job be returned." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProductServiceComponent 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Core::ProductFRU" ), 
    Description ( 
       "Indicates that the referenced Service is acquired as part of a "
       "Product. Examples of Services that may be acquired are "
       "outsourced storage and networking services, or support and "
       "warranty services. Expanding on the examples, Services "
       "represent generic functionality - so, it is possible to model "
       "the existence of storage volume management or warranty "
       "services as individual instances of subclasses of CIM_Service. "
       "These \'Services\' may be enabled/disabled, started/stopped, "
       "signal an error, etc. (They behave as standard "
       "ManagedSystemElements.) Specific requests against the Services "
       "- for example, a request for warranty service or increased "
       "storage space - are NOT new instances of Service, but may be "
       "requested via the methods of the Service subclass, or be "
       "instantiated as specific subclasses of ManagedElement." )]
class CIM_ProductServiceComponent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The Product." )]
   CIM_Product REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The Service which is a part of the Product." )]
   CIM_Service REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00896" type ="add">Add enumerations
// "Telnet", "SSH", "SM CLP", "SMTP", "LDAP", "RDP", and "HTTPS"
// to ProtocolIfType.</
// ==================================================================
//  CIM_ProtocolEndpoint
// ==================================================================
   [Version ( "2.15.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "A communication point from which data can be sent or received. "
       "ProtocolEndpoints link system or computer interfaces to "
       "LogicalNetworks." )]
class CIM_ProtocolEndpoint : CIM_ServiceAccessPoint {

      [Override ( "Description" ), 
       MappingStrings { "MIB.IETF|IF-MIB.ifDescr" }]
   string Description;

      [Override ( "OperationalStatus" ), 
       MappingStrings { "MIB.IETF|IF-MIB.ifOperStatus" }]
   uint16 OperationalStatus[];

      [Override ( "EnabledState" ), 
       MappingStrings { "MIB.IETF|IF-MIB.ifAdminStatus" }]
   uint16 EnabledState;

      [Override ( "TimeOfLastStateChange" ), 
       MappingStrings { "MIB.IETF|IF-MIB.ifLastChange" }]
   datetime TimeOfLastStateChange;

      [Override ( "Name" ), 
       Description ( 
          "A string that identifies this ProtocolEndpoint with "
          "either a port or an interface on a device. To ensure "
          "uniqueness, the Name property should be prepended or "
          "appended with information from the Type or "
          "OtherTypeDescription properties. The method selected is "
          "described in the NameFormat property of this class." ), 
       MaxLen ( 256 )]
   string Name;

      [Description ( 
          "NameFormat contains the naming heuristic that is "
          "selected to ensure that the value of the Name property "
          "is unique. For example, you might choose to prepend the "
          "name of the port or interface with the Type of "
          "ProtocolEndpoint (for example, IPv4) of this instance "
          "followed by an underscore." ), 
       MaxLen ( 256 )]
   string NameFormat;

      [Deprecated { "CIM_ProtocolEndpoint.ProtocolIFType" }, 
       Description ( 
          "Note: This property is deprecated in lieu of the "
          "ProtocolIFType enumeration. This deprecation was done to "
          "have better alignment between the IF-MIB of the IETF and "
          "this CIM class. \n"
          "Deprecated description: ProtocolType is an enumeration "
          "that provides information to categorize and classify "
          "different instances of this class. For most instances, "
          "information in this enumeration and the definition of "
          "the subclass overlap. However, there are several cases "
          "where a specific subclass of ProtocolEndpoint is not "
          "required (for example, there is no Fibre Channel "
          "subclass of ProtocolEndpoint). Therefore, this property "
          "is needed to define the type of Endpoint." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27" }, 
       Values { "Unknown", "Other", "IPv4", "IPv6", "IPX", 
          "AppleTalk", "DECnet", "SNA", "CONP", "CLNP", "VINES", 
          "XNS", "ATM", "Frame Relay", "Ethernet", "TokenRing", 
          "FDDI", "Infiniband", "Fibre Channel", 
          "ISDN BRI Endpoint", "ISDN B Channel Endpoint", 
          "ISDN D Channel Endpoint", 
          // 22                          
          "IPv4/v6", 
          "BGP", "OSPF", "MPLS", "UDP", "TCP" }, 
       ModelCorrespondence { 
          "CIM_ProtocolEndpoint.OtherTypeDescription" }]
   uint16 ProtocolType;

      [Description ( 
          "ProtocolIFType is an enumeration that is synchronized "
          "with the IANA ifType MIB. The ifType MIB is maintained "
          "at the URL, "
          "http://www.iana.org/assignments/ianaiftype-mib. Also, "
          "additional values defined by the DMTF are included. The "
          "property is used to categorize and classify instances of "
          "the ProtocolEndpoint class. Note that if the "
          "ProtocolIFType is set to 1 (Other), then the type "
          "information should be provided in the "
          "OtherTypeDescription string property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82", "83", "84", "85", "86", "87", "88", "89", "90", 
          "91", "92", "93", "94", "95", "96", "97", "98", "99", 
          "100", "101", "102", "103", "104", "105", "106", "107", 
          "108", "109", "110", "111", "112", "113", "114", "115", 
          "116", "117", "118", "119", "120", "121", "122", "123", 
          "124", "125", "126", "127", "128", "129", "130", "131", 
          "132", "133", "134", "135", "136", "137", "138", "139", 
          "140", "141", "142", "143", "144", "145", "146", "147", 
          "148", "149", "150", "151", "152", "153", "154", "155", 
          "156", "157", "158", "159", "160", "161", "162", "163", 
          "164", "165", "166", "167", "168", "169", "170", "171", 
          "172", "173", "174", "175", "176", "177", "178", "179", 
          "180", "181", "182", "183", "184", "185", "186", "187", 
          "188", "189", "190", "191", "192", "193", "194", "195", 
          "196", "197", "198", "199", "200", "201", "202", "203", 
          "204", "205", "206", "207", "208", "209", "210", "211", 
          "212", "213", "214", "215", "216", "217", "218", "219", 
          "220", "221", "222", "223", "224", "225..4095", "4096", 
          "4097", "4098", "4099", "4100", "4101", "4102", "4103", 
          "4104", "4105", "4106", "4107", "4108", "4109", "4110", 
          "4111", "4112", "4113", "4114", "4115", "4200", "4201", 
          "4202", "4203", "4204", "4205", "4300", "4400", "4401", 
          "4402", "4403", "4404", "4405", "4406", "..", "32768.." }, 
       Values { "Unknown", "Other", "Regular 1822", "HDH 1822", 
          "DDN X.25", "RFC877 X.25", "Ethernet CSMA/CD", 
          "ISO 802.3 CSMA/CD", "ISO 802.4 Token Bus", 
          "ISO 802.5 Token Ring", "ISO 802.6 MAN", "StarLAN", 
          "Proteon 10Mbit", "Proteon 80Mbit", "HyperChannel", 
          "FDDI", "LAP-B", "SDLC", "DS1", "E1", "Basic ISDN", 
          "Primary ISDN", "Proprietary Point-to-Point Serial", 
          "PPP", "Software Loopback", "EON", "Ethernet 3Mbit", 
          "NSIP", "SLIP", "Ultra", "DS3", "SIP", "Frame Relay", 
          "RS-232", "Parallel", "ARCNet", "ARCNet Plus", "ATM", 
          "MIO X.25", "SONET", "X.25 PLE", "ISO 802.211c", 
          "LocalTalk", "SMDS DXI", "Frame Relay Service", "V.35", 
          "HSSI", "HIPPI", "Modem", "AAL5", "SONET Path", 
          "SONET VT", "SMDS ICIP", "Proprietary Virtual/Internal", 
          "Proprietary Multiplexor", "IEEE 802.12", "Fibre Channel", 
          "HIPPI Interface", "Frame Relay Interconnect", 
          "ATM Emulated LAN for 802.3", 
          "ATM Emulated LAN for 802.5", "ATM Emulated Circuit", 
          "Fast Ethernet (100BaseT)", "ISDN", "V.11", "V.36", 
          "G703 at 64K", "G703 at 2Mb", "QLLC", 
          "Fast Ethernet 100BaseFX", "Channel", "IEEE 802.11", 
          "IBM 260/370 OEMI Channel", "ESCON", 
          "Data Link Switching", "ISDN S/T Interface", 
          "ISDN U Interface", "LAP-D", "IP Switch", 
          "Remote Source Route Bridging", "ATM Logical", "DS0", 
          "DS0 Bundle", "BSC", "Async", "Combat Net Radio", 
          "ISO 802.5r DTR", "Ext Pos Loc Report System", 
          "AppleTalk Remote Access Protocol", 
          "Proprietary Connectionless", "ITU X.29 Host PAD", 
          "ITU X.3 Terminal PAD", "Frame Relay MPI", "ITU X.213", 
          "ADSL", "RADSL", "SDSL", "VDSL", "ISO 802.5 CRFP", 
          "Myrinet", "Voice Receive and Transmit", 
          "Voice Foreign Exchange Office", 
          "Voice Foreign Exchange Service", "Voice Encapsulation", 
          "Voice over IP", "ATM DXI", "ATM FUNI", "ATM IMA", 
          "PPP Multilink Bundle", "IP over CDLC", "IP over CLAW", 
          "Stack to Stack", "Virtual IP Address", "MPC", 
          "IP over ATM", "ISO 802.5j Fibre Token Ring", "TDLC", 
          "Gigabit Ethernet", "HDLC", "LAP-F", "V.37", "X.25 MLP", 
          "X.25 Hunt Group", "Transp HDLC", "Interleave Channel", 
          "FAST Channel", "IP (for APPN HPR in IP Networks)", 
          "CATV MAC Layer", "CATV Downstream", "CATV Upstream", 
          "Avalon 12MPP Switch", "Tunnel", "Coffee", 
          "Circuit Emulation Service", "ATM SubInterface", 
          "Layer 2 VLAN using 802.1Q", "Layer 3 VLAN using IP", 
          "Layer 3 VLAN using IPX", "Digital Power Line", 
          "Multimedia Mail over IP", "DTM", "DCN", "IP Forwarding", 
          "MSDSL", "IEEE 1394", "IF-GSN/HIPPI-6400", 
          "DVB-RCC MAC Layer", "DVB-RCC Downstream", 
          "DVB-RCC Upstream", "ATM Virtual", "MPLS Tunnel", "SRP", 
          "Voice over ATM", "Voice over Frame Relay", "ISDL", 
          "Composite Link", "SS7 Signaling Link", 
          "Proprietary P2P Wireless", "Frame Forward", 
          "RFC1483 Multiprotocol over ATM", "USB", 
          "IEEE 802.3ad Link Aggregate", "BGP Policy Accounting", 
          "FRF .16 Multilink FR", "H.323 Gatekeeper", "H.323 Proxy", 
          "MPLS", "Multi-Frequency Signaling Link", "HDSL-2", 
          "S-HDSL", "DS1 Facility Data Link", 
          "Packet over SONET/SDH", "DVB-ASI Input", 
          "DVB-ASI Output", "Power Line", 
          "Non Facility Associated Signaling", "TR008", "GR303 RDT", 
          "GR303 IDT", "ISUP", "Proprietary Wireless MAC Layer", 
          "Proprietary Wireless Downstream", 
          "Proprietary Wireless Upstream", "HIPERLAN Type 2", 
          "Proprietary Broadband Wireless Access Point to Mulipoint", 
          "SONET Overhead Channel", 
          "Digital Wrapper Overhead Channel", 
          "ATM Adaptation Layer 2", "Radio MAC", "ATM Radio", 
          "Inter Machine Trunk", "MVL DSL", "Long Read DSL", 
          "Frame Relay DLCI Endpoint", "ATM VCI Endpoint", 
          "Optical Channel", "Optical Transport", "Proprietary ATM", 
          "Voice over Cable", "Infiniband", "TE Link", "Q.2931", 
          "Virtual Trunk Group", "SIP Trunk Group", "SIP Signaling", 
          "CATV Upstream Channel", "Econet", "FSAN 155Mb PON", 
          "FSAN 622Mb PON", "Transparent Bridge", "Line Group", 
          "Voice E&M Feature Group", "Voice FGD EANA", "Voice DID", 
          "MPEG Transport", "6To4", "GTP", "Paradyne EtherLoop 1", 
          "Paradyne EtherLoop 2", "Optical Channel Group", 
          "HomePNA", "GFP", "ciscoISLvlan", "actelisMetaLOOP", 
          "Fcip", "IANA Reserved", "IPv4", "IPv6", "IPv4/v6", "IPX", 
          "DECnet", "SNA", "CONP", "CLNP", "VINES", "XNS", 
          "ISDN B Channel Endpoint", "ISDN D Channel Endpoint", 
          "BGP", "OSPF", "UDP", "TCP", "802.11a", "802.11b", 
          "802.11g", "802.11h", "NFS", "CIFS", "DAFS", "WebDAV", 
          "HTTP", "FTP", "NDMP", "Telnet", "SSH", "SM CLP", "SMTP", 
          "LDAP", "RDP", "HTTPS", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "MIB.IETF|IF-MIB.ifType" }, 
       ModelCorrespondence { 
          "CIM_ProtocolEndpoint.OtherTypeDescription" }]
   uint16 ProtocolIFType;

      [Description ( 
          "A string that describes the type of ProtocolEndpoint "
          "when the Type property of this class (or any of its "
          "subclasses) is set to 1 (Other). This property should be "
          "set to null when the Type property is any value other "
          "than 1." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_ProtocolEndpoint.ProtocolType", 
          "CIM_ProtocolEndpoint.ProtocolIFType" }]
   string OtherTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProvidesServiceToElement
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAvailableToElement" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "Note: The use of the CIM_ProvidesServiceToElement class has "
       "been deprecated. Instead, ServiceAvailableToElement conveys "
       "the semantics of use, while the subclasses of "
       "ProvidesServiceToElement (or the ConcreteDependency "
       "association) describe dependency relationships. "
       "CIM_ProvidesServiceToElement was meant to generalize the "
       "ServiceServiceDependency association. This method indicates "
       "that ManagedElements can use the functionality provided by one "
       "or more Services. An example of the association is that a "
       "Processor and an enclosure (a PhysicalElement) can use "
       "AlertOnLAN Services to signal an incomplete or erroneous boot. "
       "In reality, AlertOnLAN is simply a HostedService on a computer "
       "system that is generally available for use and is not a "
       "dependency of the processor or enclosure. To describe that the "
       "use of the service might be restricted or have limited "
       "availability or applicability, the "
       "CIM_ServiceAvailableToElement association would be "
       "instantiated." )]
class CIM_ProvidesServiceToElement : CIM_Dependency {

      [Deprecated { "CIM_ServiceAvailableToElement.ServiceProvided" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The Service provided." )]
   CIM_Service REF Antecedent;

      [Deprecated { "CIM_ServiceAvailableToElement.UserOfService" }, 
       Override ( "Dependent" ), 
       Description ( 
          "Note: The use of this element is deprecated. Deprecated "
          "description: The ManagedElement that is dependent on the "
          "Service." )]
   CIM_ManagedElement REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "RemoteServiceAccessPoint describes access or addressing "
       "information or a combination of this information for a remote "
       "connection that is known to a local network element. This "
       "information is scoped or contained by the local network "
       "element, because this is the context in which the connection "
       "is remote. \n"
       "The relevance of the remote access point and information on "
       "its use are described by subclassing RemoteServiceAccessPoint "
       "or by associating to it." )]
class CIM_RemoteServiceAccessPoint : CIM_ServiceAccessPoint {

      [Description ( 
          "Access or addressing information or a combination of "
          "this information for a remote connection. This "
          "information can be a host name, network address, or "
          "similar information." ), 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.InfoFormat" }]
   string AccessInfo;

      [Description ( 
          "An enumerated integer that describes the format and "
          "interpretation of the AccessInfo property.\n"
          "206\'Parameterized URL\'- a URL containing "
          "${parameterName} strings. Those strings are intended to "
          "be replaced in their entirety by the value of the named "
          "parameter. The interpretation of such parameters is not "
          "defined by this subclass. \n"
          "As an example use: If a parameter named \'CompanyURL\' "
          "has a value of \'www.DMTF.org\' and the value of "
          "AccessInfo was \'http:\\${CompanyURL}\', then the "
          "resultant URL is intended to be \'http:\\www.dmtf.org\'." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "100", "101", "102", "103", "104", 
          "200", "201", "202", "203", "204", "205", "206", "..", 
          "32768..65535" }, 
       Values { "Other", "Host Name", "IPv4 Address", 
          "IPv6 Address", "IPX Address", "DECnet Address", 
          "SNA Address", "Autonomous System Number", "MPLS Label", 
          "IPv4 Subnet Address", "IPv6 Subnet Address", 
          "IPv4 Address Range", "IPv6 Address Range", "Dial String", 
          "Ethernet Address", "Token Ring Address", "ATM Address", 
          "Frame Relay Address", "URL", "FQDN", "User FQDN", 
          "DER ASN1 DN", "DER ASN1 GN", "Key ID", 
          "Parameterized URL", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.OtherInfoFormatDescription" }]
   uint16 InfoFormat;

      [Description ( 
          "Describes the format when the property InfoFormat is set "
          "to 1 (Other)." ), 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.InfoFormat" }]
   string OtherInfoFormatDescription;

      [Description ( 
          "The AccessContext property identifies the role this "
          "RemoteServiceAccessPoint is playing in the hosting "
          "system." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Default Gateway", "DNS Server", 
          "SNMP Trap Destination", "MPLS Tunnel Destination", 
          "DHCP Server", "SMTP Server", "LDAP Server", 
          "Network Time Protocol (NTP) Server", 
          "Management Service", 
          "internet Storage Name Service (iSNS)", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.OtherAccessContext" }]
   uint16 AccessContext = 0;

      [Description ( 
          "When the AccessContext property contains a value of 1, "
          "\"Other\" then this is a free form string providing more "
          "information about the role of RemoteServiceAccessPoint "
          "in the hosting system." ), 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.AccessContext" }]
   string OtherAccessContext;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Resource" ), 
    Description ( 
       "This service provides for active management of Resource Pools. "
       "It allows jobs to be started for the creation and deletion of "
       "ResourcePools as well as addition and subtraction of host "
       "resources from ResourcePools" )]
class CIM_ResourcePoolConfigurationService : CIM_Service {


      [Description ( 
          "Starts a job to create a root ResourcePool. The "
          "ResourcePool will be scoped to the same System as this "
          "Service. If 0 is returned, then the task completed "
          "successfully and the use of ConcreteJob was not "
          "required. If the task will take some time to complete, a "
          "ConcreteJob will be created and its reference returned "
          "in the output parameter Job. The resulting pool will be "
          "a root pool with no parent pool." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "..", 
          "4096", "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "Incorrect ResourceType for the Pool", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 CreateResourcePool(
         [IN, Description ( 
             "A end user relevant name for the pool being "
             "created. If NULL, then a system supplied default "
             "name can be used. The value will be stored in the "
             "\'ElementName\' property for the created pool." )]
      string ElementName, 
         [IN, Description ( 
             "Array of zero or more devices that are used to "
             "create the Pool or modify the source extents. All "
             "elements in the array must be of the same type." )]
      CIM_LogicalDevice REF HostResources[], 
         [IN, Description ( 
             "The type of resources the created poolwill manage. "
             "If HostResources contains elements, this property "
             "must mach their type." )]
      string ResourceType, 
         [IN ( false ), OUT, Description ( 
             "On success, a reference to the resulting "
             "ResourcePool is returned. When a Job is returned, "
             "this may be NULL, in which case, the client must "
             "use the Job to find the resulting ResourcePool "
             "once the Job completes." )]
      CIM_ResourcePool REF Pool, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Start a job to create a sub-pool from a parent pool "
          "using the specified allocation settings If 0 is "
          "returned, the function completed successfully and no "
          "ConcreteJob instance was required. If 4096/0x1000 is "
          "returned, a ConcreteJob will be started to create the "
          "sub-pool. The Job\'s reference will be returned in the "
          "output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "4096", "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "Incorrect ResourceType for the Pool", 
          "Insufficient Resources", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 CreateChildResourcePool(
         [IN, Description ( 
             "A end user relevant name for the pool being "
             "created. If NULL, then a system supplied default "
             "name can be used. The value will be stored in the "
             "\'ElementName\' property for the created element." )]
      string ElementName, 
         [IN, Description ( 
             "String containing a representation of a "
             "CIM_SettingData instance that is used to specify "
             "the settings for the child Pool." ), 
          EmbeddedInstance ( "CIM_ResourceAllocationSettingData" ), 
          ModelCorrespondence { 
             "CIM_ResourcePoolConfigurationService.CreateChildResourcePool.ParentPool" }]
      string Settings[], 
         [IN, Description ( 
             "The Pool(s) from which to create the new Pool." ), 
          ModelCorrespondence { 
             "CIM_ResourcePoolConfigurationService.CreateChildResourcePool.Settings" }]
      CIM_ResourcePool REF ParentPool[], 
         [IN ( false ), OUT, Description ( 
             "A reference to the resulting pool." )]
      CIM_ResourcePool REF Pool, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Start a job to delete a ResourcePool. No allocations may "
          "be outstanding or the delete will fail with \"In Use.\" "
          "If the resource pool is a root resource pool, any host "
          "resources are returned back to the underlying system. If "
          "0 is returned, the function completed successfully, and "
          "no ConcreteJob was required. If 4096/0x1000 is returned, "
          "a ConcreteJob will be started to delete the "
          "ResourcePool. A reference to the Job is returned in the "
          "Job parameter." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "..", 
          "4096", "4097..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "Incorrect ResourceType for the Pool", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 DeleteResourcePool(
         [IN, Description ( "Reference to the pool to delete." )]
      CIM_ResourcePool REF Pool, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Starts a job to add resources to a ResourcePool. If 0 is "
          "returned, then the task completed successfully and the "
          "use of ConcreteJob was not required. If the task will "
          "take some time to complete, a ConcreteJob will be "
          "created and its reference returned in the output "
          "parameter Job. The resulting pool will be a root pool "
          "with no parent pool." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "..", 
          "4096", "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "Incorrect ResourceType for the Pool", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 AddResourcesToResourcePool(
         [IN, Description ( 
             "Array of CIM_LogicalDevice instances to add to the Pool."
              )]
      CIM_LogicalDevice REF HostResources[], 
         [IN, Description ( "The pool to add the resources to." )]
      CIM_ResourcePool REF Pool, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Starts a job to remove resources from a ResourcePool. If "
          "0 is returned, then the task completed successfully and "
          "the use of ConcreteJob was not required. If the task "
          "will take some time to complete, a ConcreteJob will be "
          "created and its reference returned in the output "
          "parameter Job. The resulting pool will be a root pool "
          "with no parent pool." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "..", 
          "4096", "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "Incorrect ResourceType for the Pool", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 RemoveResourcesFromResourcePool(
         [IN, Description ( 
             "Array of CIM_LogicalDevice instances to remove from the Pool."
              )]
      CIM_LogicalDevice REF HostResources[], 
         [IN, Description ( 
             "The pool to remove the resources from." )]
      CIM_ResourcePool REF Pool, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Start a job to change a parent pool using the specified "
          "allocation settings If 0 is returned, the function "
          "completed successfully and no ConcreteJob instance was "
          "required. If 4096/0x1000 is returned, a ConcreteJob will "
          "be started to change the parent pool. The Job\'s "
          "reference will be returned in the output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "..", 
          "4096", "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "Incorrect ResourceType for the Pool", 
          "Insufficient Resources", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 ChangeParentResourcePool(
         [IN, Description ( "Reference to the child pool." )]
      CIM_ResourcePool REF ChildPool, 
         [IN, Description ( "Reference to the parent pool(s)." )]
      CIM_ResourcePool REF ParentPool[], 
         [IN, Description ( 
             "Optional string containing a representation of a "
             "CIM_SettingData instance that is used to specify "
             "the settings for the Parent Pool." ), 
          EmbeddedInstance ( "CIM_ResourceAllocationSettingData" ), 
          ModelCorrespondence { 
             "CIM_ResourcePoolConfigurationService.ChangeParentResourcePool.Settings" }]
      string Settings[], 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              ), 
          ModelCorrespondence { 
             "CIM_ResourcePoolConfigurationService.ChangeParentResourcePool.ParentPool" }]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SAPAvailableForElement
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_SAPAvailableForElement conveys the semantics of a Service "
       "Access Point that is available for a ManagedElement. When "
       "CIM_SAPAvailableForElement is not instantiated, then the SAP "
       "is assumed to be generally available. If instantiated, the SAP "
       "is available only for the associated ManagedElements. For "
       "example, a device might provide management access through a "
       "URL. This association allows the URL to be advertised for the "
       "device." )]
class CIM_SAPAvailableForElement {

      [Key, Description ( 
          "The Service Access Point that is available." )]
   CIM_ServiceAccessPoint REF AvailableSAP;

      [Key, Description ( 
          "The ManagedElement for which the SAP is available." )]
   CIM_ManagedElement REF ManagedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SAPSAPDependency
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_SAPSAPDependency is an association between one "
       "ServiceAccessPoint and another ServiceAccessPoint that "
       "indicates that the latter is required for the former to "
       "utilize or connect with its Service. For example, to print to "
       "a network printer, local Print Access Points must utilize "
       "underlying network-related SAPs, or ProtocolEndpoints, to send "
       "the print request." )]
class CIM_SAPSAPDependency : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The required ServiceAccessPoint." )]
   CIM_ServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ServiceAccessPoint that is dependent on an underlying SAP."
           )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SAPStatistics 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Core::Statistics" ), 
    Description ( 
       "SAPStatistics relates the SAPStatisticalInformation class to "
       "the ServiceAccessPoint to which it applies." )]
class CIM_SAPStatistics : CIM_Statistics {

      [Override ( "Stats" ), 
       Weak, Description ( "The statistical object." )]
   CIM_SAPStatisticalInformation REF Stats;

      [Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The ServiceAccessPoint to which the statistics apply." )]
   CIM_ServiceAccessPoint REF Element;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceAccessBySAP
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceAccessBySAP is an association that identifies the "
       "access points for a Service. For example, a printer might be "
       "accessed by NetWare, MacIntosh or Windows ServiceAccessPoints, "
       "which might all be hosted on different Systems." )]
class CIM_ServiceAccessBySAP : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Service." )]
   CIM_Service REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "An Access Point for a Service. Access points are "
          "dependent in this relationship because they have no "
          "function without a corresponding Service." )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2005 - 2007 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00943" type="add">Update description and add enumeration.</change>
// ==================================================================
//  CIM_ServiceServiceDependency
// ==================================================================
   [Association, Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "CIM_ServiceServiceDependency is an association between a "
       "Service and another Service, which indicates that the latter "
       "cooperates with the former, is required to be present, "
       "required to have completed, or must be absent for the former "
       "Service to provide its functionality. For example, Boot "
       "Services might be dependent upon underlying system "
       "initialization Services. In the case of the initialization "
       "Services, the Boot Service might be dependent on the "
       "completion of the init Services. \n"
       "When examining the ServiceServiceDependency class definition, "
       "note that its superclass ProvidesServiceToElement is "
       "deprecated. Unfortunately, ProvidesServiceToElement cannot be "
       "removed from the object hierarchy without a major Schema "
       "release. When or if a major release occurs, the "
       "ProvidesServiceToElement superclass will be removed, and "
       "ServiceServiceDependency will subclass from CIM_Dependency "
       "directly." )]
class CIM_ServiceServiceDependency : CIM_ProvidesServiceToElement {

      [Override ( "Antecedent" ), 
       Description ( "The required Service." )]
   CIM_Service REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Service that is dependent on an underlying Service." )]
   CIM_Service REF Dependent;

      [Description ( 
          "The nature of the Service-to-Service dependency. 2 - "
          "Antecedent Service shall have completed before Dependent "
          "service\'s functionality is available.\n"
          "3 - Antecedent Service shall have started before "
          "Dependent service\'s functionality is available.\n"
          "4 - Antecedent Service shall not be started in order for "
          "Dependent service\'s functionality to be available.\n"
          "5 - The two Services cooperate and augment each other\'s "
          "function. There is no requirement implied by this value "
          "regarding the execution of the Antecedent service in "
          "order for the Dependent service to operate." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Service Must Have Completed", 
          "Service Must Be Started", "Service Must Not Be Started", 
          "Cooperate" }]
   uint16 TypeOfDependency;

      [Description ( 
          "This property describes that the Antecedent Service must "
          "be restarted after the Dependent operation is complete." )]
   boolean RestartService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00728.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SettingForSystem
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Settings" ), 
    Description ( 
       "CIM_SettingForSystem defines a Setting in the context of the "
       "System on which it is located." )]
class CIM_SettingForSystem : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( "The Setting defined for the System." )]
   CIM_SystemSetting REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    Description ( 
       "The CIM_SnapshotOfVirtuaSystem association associates an "
       "instance of the CIM_ComputerSystem class representing a "
       "virtual system, and an instance of the "
       "CIM_VirtualSystemSettingData class representing a snapshot "
       "that was captured from the virtual system." )]
class CIM_SnapshotOfVirtualSystem : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( 
          "Reference to the instance of the CIM_ComputerSystem "
          "class representing a virtual system." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "Reference to the instance of the "
          "CIM_VirtualSystemSettingData class representing a "
          "snapshot that was captured from the virtual system." )]
   CIM_VirtualSystemSettingData REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Virtualization" ), 
    Description ( 
       "Service to define and manipulate virtual systems and their components"
        )]
class CIM_VirtualSystemManagementService : CIM_Service {


      [Description ( 
          "Adds resources to a virtual system configuration\n"
          ".When applied to a \"state\" virtual system "
          "configuration, as a side effect resources are added to "
          "the active virtual system." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 AddResourceSettings(
         [Description ( 
             "Reference to the affected virtual system configuration."
              )]
      CIM_VirtualSystemSettingData REF AffectedConfiguration, 
         [Description ( 
             "Array of strings each containing one embedded "
             "instance of class "
             "CIM_ResourceAllocationSettingData that describes "
             "the virtual aspects of a virtual resource to be "
             "added to the virtual system." ), 
          EmbeddedInstance ( "CIM_ResourceAllocationSettingData" ), 
          ArrayType ( "Indexed" )]
      string ResourceSettings[], 
         [In ( false ), Out, Description ( 
             "Array of references to instances of class "
             "CIM_ResourceAllocationSettingData representing "
             "virtual aspects of the added virtual resources." ), 
          ArrayType ( "Indexed" )]
      CIM_ResourceAllocationSettingData REF ResultingResourceSettings[], 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned. In this case, the instances "
             "of class CIM_ResourceAllocationSettingData "
             "representing the added resource settings are "
             "available via association CIM_ConreteComponent "
             "from the instance of class "
             "CIM_VirtualSystemSettingData representing the "
             "affected virtual system configuration." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Defines a virtual system.\n"
          "Input that is not completely specified may be filled out "
          "with default values." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 DefineSystem(
         [Description ( 
             "String containing an embedded instance of class "
             "CIM_VirtualSystemSettingData that is used to "
             "define attributes of the virtual system to be "
             "created." ), 
          EmbeddedInstance ( "CIM_VirtualSystemSettingData" )]
      string SystemSettings, 
         [Description ( 
             "Array of strings each containing an embedded "
             "instance of class "
             "CIM_ResourceAllocationSettingData that describes "
             "the virtual aspects of a virtual resource to be "
             "created in the scope of the new virtual system." ), 
          EmbeddedInstance ( "CIM_ResourceAllocationSettingData" ), 
          ArrayType ( "Indexed" )]
      string ResourceSettings[], 
         [Description ( 
             "Reference to an instance of class "
             "CIM_VirtualSystemSettingData object that is the "
             "top level object of a reference virtual system "
             "configuration. The reference configuration is used "
             "to complement the configuration of the new virtual "
             "system if parameters SystemSettings and "
             "ResourceSettings did not provide respective "
             "information." )]
      CIM_VirtualSystemSettingData REF ReferenceConfiguration, 
         [In ( false ), Out, Description ( 
             "If a virtual computer system is successfully "
             "defined, a reference to an instance of class "
             "CIM_ComputerSystem that represents the newly "
             "defined virtual computer system is returned." )]
      CIM_ComputerSystem REF ResultingSystem, 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned. In this case, the instance "
             "of class CIM_ComputerSystem representing the new "
             "virtual systemis presented via association "
             "CIM_AffectedJobElementwith property "
             "AffectedElement refering to the new instance of "
             "class CIM_ComputerSystem and property "
             "ElementEffects set to 5 (Create)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Destroys a virtual system.\n"
          "The referenced virtual system is destroyed, including "
          "any elements scoped by it. Virtual resources are "
          "returned to their resource pools, which may imply the "
          "destruction of those resources (implementation "
          "dependent). If the virtual system is active when the "
          "operation is invoked, it is first deactivated and then "
          "destroyed. If snapshots were created from the virtual "
          "system, these are destroyed as well." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 DestroySystem(
         [Description ( 
             "Reference to an instance of class "
             "CIM_ComputerSystem representing the virtual "
             "computer system that it to be destroyed." )]
      CIM_ComputerSystem REF AffectedSystem, 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Modifies virtual resource settings.\n"
          "When applied to parts of a \"current\" virtual system "
          "configuration, as a side effect resources of the active "
          "virtual system may be modified." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "Incompatible Parameters", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ModifyResourceSettings(
         [Description ( 
             "Array of strings each containing an embedded "
             "instance of class "
             "CIM_ResourceAllocationSettingData that describes "
             "modifications to the virtual aspects of an "
             "existing virtual resource. All instances must have "
             "a valid InstanceID in order to identify the "
             "virtual resource setting to be modified." ), 
          EmbeddedInstance ( "CIM_ResourceAllocationSettingData" ), 
          ArrayType ( "Indexed" )]
      string ResourceSettings[], 
         [In ( false ), Out, Description ( 
             "Array of references to instances of class "
             "Cim_ResourceAllocationSettingData representing "
             "virtual aspects of the modified virtual resources." ), 
          ArrayType ( "Indexed" )]
      CIM_ResourceAllocationSettingData REF ResultingResourceSettings[], 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job be returned. In this case, the instances of "
             "class CIM_ResourceAllocationSettingData "
             "representing the modified resource settings are "
             "available via association CIM_ConreteComponent "
             "from the instance of class "
             "CIM_VirtualSystemSettingData representing the "
             "affected virtual system configuration." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Modifies virtual system settings.\n"
          "When applied to the system settings of a \"current\" "
          "virtual system configuration, as a side effect the "
          "virtual system instance may be modified." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "Incompatible Parameters", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ModifySystemSettings(
         [Description ( 
             "String containing an instance of class "
             "CIM_VirtualSystemSettingData that is used to "
             "modify the settings of the virtual system. The "
             "instance must have a valid InstanceID in order to "
             "identify the virtual system setting to be "
             "modified." ), 
          EmbeddedInstance ( "CIM_VirtualSystemSettingData" )]
      string SystemSettings, 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Removes virtual resource settings from a virtual system configuration.\n"
          "When applied to parts of a \"current\" virtual system "
          "configuration, as a side effect resources of the active "
          "virtual system may be removed." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RemoveResourceSettings(
         [Description ( 
             "Array of references to instances of class "
             "CIM_ResourceAllocationSettingData where each "
             "instance represents the settings of a virtual "
             "resource within a virtual system configuration "
             "that are to be removed." )]
      CIM_ResourceAllocationSettingData REF ResourceSettings[], 
         [In ( false ), Out, Description ( 
             "If the operation is long running, then optionally "
             "a job my be returned." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Virtualization" ), 
    Description ( 
       "Service to create, apply and destroy snapshots of virtual systems."
        )]
class CIM_VirtualSystemSnapshotService : CIM_Service {


      [Description ( "Creates a snapshot of a virtual system." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "Invalid Type", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateSnapshot(
         [In, Description ( 
             "Reference to the affected virtual system." )]
      CIM_ComputerSystem REF AffectedSystem, 
         [In, Description ( "Parameter settings." ), 
          EmbeddedInstance ( "CIM_SettingData" )]
      string SnapshotSettings, 
         [In, Description ( 
             "Requested snapshot type:\n"
             "Full Snapshot: Complete snapshot of the virtual system.\n"
             "Disk Snapshot: Snapshot of virtual system disks." ), 
          ValueMap { "2", "3", "..", "32768..65535" }, 
          Values { "Full Snapshot", "Disk Snapshot", 
             "DMTF Reserved", "Vendor Specific" }, 
          ModelCorrespondence { 
             "CIM_VirtualSystemSnapshotCapabilities.SnapshotTypesEnabled", 
             "CIM_VirtualSystemSnapshotServiceCapabilities.SnapshotTypesSupported" }]
      uint16 SnapshotType, 
         [In, Out, Description ( 
             "Resulting virtual system snapshot" )]
      CIM_VirtualSystemSettingData REF ResultingSnapshot, 
         [In, Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned. In this case, the instance "
             "of the CIM_VirtualSystemSettingData class "
             "representing the new virtual system snapshot is "
             "presented via the CIM_AffectedJobElement "
             "association with the value of the AffectedElement "
             "property referring to the new instance of the "
             "CIM_VirtualSystemSettingData class representing "
             "the virtual system snapshot and and the value of "
             "the ElementEffects set to 5 (Create)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Destroy an existing virtual system snapshot.This method "
          "may as a side effect destroy other snapshots that are "
          "dependent on the affected snapshot." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "Invalid Type", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 DestroySnapshot(
         [In, Description ( 
             "Reference to the affected virtual system snapshot." )]
      CIM_VirtualSystemSettingData REF AffectedSnapshot, 
         [In, Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "Apply a virtual system snapshot to the virtual system "
          "that it was created from." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Timeout", "Invalid Parameter", "Invalid State", 
          "Invalid Type", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ApplySnapshot(
         [In, Description ( 
             "Reference to the virtual system snapshot." )]
      CIM_VirtualSystemSettingData REF Snapshot, 
         [In, Out, Description ( 
             "If the operation is long running, then optionally "
             "a job may be returned." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "Databases as modeled by instances of the CommonDatabase class "
       "are comprised of a collection of logical storage areas that "
       "are represented by instances of the DatabaseStorageArea class. \n"
       "Database storage areas allow the administrator to logically "
       "organize the content of the database. This class extends from "
       "FileSystem and uses the inherited associations to represent "
       "the internal structure of the database." )]
class CIM_DatabaseStorageArea : CIM_FileSystem {

      [Description ( 
          "A Boolean value that indicates the ownership of this "
          "StorageArea. A value of true indicates that this "
          "StorageArea is owned by the DatabaseSystem and contains "
          "system information. A value of false indicates that this "
          "is a user StorageArea that contains data." )]
   boolean IsSystemArea;

      [Description ( 
          "A timestamp that represents the date and time of the "
          "last successful backup of the DatabaseStorageArea. This "
          "property should be set to a value of 0, in interval "
          "format (00000000000000.000000:000), if it is not known "
          "whether a backup has ever been completed." )]
   datetime LastBackup;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "A database environment is composed of a database system (the "
       "application system represented by this class), one or more "
       "database services, and one or more databases. See the "
       "descriptions of CIM_DatabaseService and CIM_CommonDatabase for "
       "get more detailed information about database services and "
       "databases. \n"
       "Each separately manageable database system should have an "
       "instance in this class. This class can be used: \n"
       "- to determine the software that belongs to the database "
       "system. \n"
       "- to perform database system-wide management operations, such "
       "as stopping all the databases that were created by the "
       "database system for maintenance purposes. \n"
       "- to view runtime statistics in the context of a database "
       "system. \n"
       "Many of the management capabilities that are needed to "
       "represent a database system as an application system have "
       "already been modeled in the CIM_ApplicationSystem class from "
       "which CIM_DatabaseSystem extends. CIM_DatabaseSystem provides "
       "a logical entity to define the relationships that are specific "
       "to the database management domain." )]
class CIM_DatabaseSystem : CIM_ApplicationSystem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AdapterActiveConnection
// ==================================================================
   [Association, Deprecated { "CIM_PortActiveConnection" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_AdapterActiveConnection class has "
       "been deprecated, because NetworkAdapter is deprecated. Instead "
       "use the CIM_PortActiveConnection class. \n"
       "Deprecated description: The AdapterActiveConnection "
       "relationship indicates that a NetworkAdapter is using the "
       "referenced PhysicalConnector to output to the network. This "
       "relationship is important when the Adapter can choose to "
       "output from one of several Connectors. The Connectors can be "
       "associated with the NetworkAdapter in a Realizes relationship "
       "but this is not required. This association provides additional "
       "information (such as, \'in use for communication\') different "
       "from Realizes." )]
class CIM_AdapterActiveConnection : CIM_Dependency {

      [Deprecated { "CIM_PortActiveConnection.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The PhysicalConnector." )]
   CIM_PhysicalConnector REF Antecedent;

      [Deprecated { "CIM_PortActiveConnection.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The NetworkAdapter that "
          "transmits using the Connector." )]
   CIM_NetworkAdapter REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AggregatePSExtentBasedOnAggregatePExtent 
// ==================================================================
   [Association, Deprecated { "CIM_ProtectedExtentBasedOn" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "This association is deprecated in lieu of "
       "ProtectedSpaceBasedOn, since AggregatePExtents and "
       "AggregatePSExtents are themselves deprecated. The association "
       "describes that AggregatePSExtents are BasedOn a single "
       "AggregatePExtent." )]
class CIM_AggregatePSExtentBasedOnAggregatePExtent : CIM_BasedOn {

      [Deprecated { "CIM_ProtectedExtentBasedOn.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The AggregatePExtent." )]
   CIM_AggregatePExtent REF Antecedent;

      [Deprecated { "CIM_ProtectedExtentBasedOn.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The AggregatePSExtent which is built on the Aggregate PExtent."
           )]
   CIM_AggregatePSExtent REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AggregatePSExtentBasedOnPExtent 
// ==================================================================
   [Association, Deprecated { "CIM_ProtectedExtentBasedOn" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "This association is deprecated in lieu of "
       "ProtectedSpaceBasedOn, since PhysicalExtents and "
       "AggregatePSExtents are themselves deprecated. The association "
       "describes that AggregatePSExtents are BasedOn a single "
       "PhysicalExtent." )]
class CIM_AggregatePSExtentBasedOnPExtent : CIM_BasedOn {

      [Deprecated { "CIM_ProtectedExtentBasedOn.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The PhysicalExtent." )]
   CIM_PhysicalExtent REF Antecedent;

      [Deprecated { "CIM_ProtectedExtentBasedOn.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The AggregatePSExtent which is built on the PhysicalExtent."
           )]
   CIM_AggregatePSExtent REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AggregateRedundancyComponent 
// ==================================================================
   [Association, Deprecated { "CIM_ExtentRedundancyComponent" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Describes the AggregatePExtent in a StorageRedundancyGroup. "
       "However, there is no need for the specificity of this "
       "association. It is deprecated in lieu of the generic "
       "ExtentRedundancyComponent relationship, its superclass." )]
class CIM_AggregateRedundancyComponent : CIM_ExtentRedundancyComponent {

      [Deprecated { "CIM_ExtentRedundancyComponent.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( "The StorageRedundancyGroup." )]
   CIM_StorageRedundancyGroup REF GroupComponent;

      [Deprecated { "CIM_ExtentRedundancyComponent.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "The AggregatePExtent participating in the RedundancyGroup."
           )]
   CIM_AggregatePExtent REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AGPVideoController 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of an AGPVideoController." )]
class CIM_AGPVideoController : CIM_VideoController {

      [Deprecated { "CIM_VideoController.AcceleratorCapabilities" }, 
       Description ( 
          "This property has been incorporated into the inherited "
          "AcceleratorCapabilities property. Capabilities of the "
          "AGP Graphics Controller. For example, the Device may "
          "support multiple monitors, PCI Mastering and large "
          "memory addresses. In this case, the values 3, 4 and 6 "
          "would be written to the Capabilities array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "PCI Fast Write", 
          "MultiMonitor Support", "PCI Mastering", 
          "Second Monochrome Adapter Support", 
          "Large Memory Address Support" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_AGPVideoController.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( "Size of the non-local video memory in KB." ), 
       Units ( "KiloBytes" )]
   uint32 NonlocalVideoMemorySize;

      [Description ( 
          "Width of the internal bus in the graphics Controller, in bits."
           ), 
       Units ( "Bits" )]
   uint32 LocalBusWidth;

      [Description ( 
          "An integer enumeration indicating the usage model of the "
          "graphics Controller. Usage model indicates how the "
          "Controller does manipulations of graphics surfaces, "
          "textures, etc. in memory. DMA indicates that the "
          "graphics Controller brings structures from the system "
          "memory to its local memory to perform needed "
          "manipulations or renderings. Execute specifies that the "
          "graphics Controller can directly access a specified "
          "region in main memory (called the graphics aperture) "
          "using GART - Graphics Aperture Remapping Table. It then "
          "performs manipulations in that range as if that whole "
          "graphics aperture were part of its local memory. A value "
          "of \"Both\" DMA and Execute models may also be "
          "specified." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Execute", "DMA", "Both" }]
   uint16 UsageModel;

      [Description ( 
          "An integer enumeration indicating the data transfer rate "
          "of the graphics Controller." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "1X", "2X", "4X" }]
   uint16 DataTransferRate;

      [Description ( 
          "An integer enumeration indicating the addressing mode of "
          "the graphics Controller." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Sideband", "Pipeline" }]
   uint16 AddressingMode;

      [Description ( 
          "The maximum number of AGP Transaction requests that the "
          "master (AGP Graphics Controller) is allowed to enqueue "
          "into the target." )]
   uint32 MaximumAGPCommandQueuePath;

      [Description ( 
          "The number of AGP Transaction that the core logic "
          "(chipset) can accept into its transaction request queue "
          "from the Controller." )]
   uint32 MaxNumberOfPipelinedAGPTransactions;

      [Description ( "Size of the graphics aperture in KB." ), 
       Units ( "KiloBytes" )]
   uint32 GraphicsApertureSize;

      [Description ( 
          "A string containing the AGP specification version to "
          "which this graphics Controller conforms." )]
   string AGPSpecificationVersionConformance;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AllocatedFromStoragePool 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "AllocatedFromStoragePool is an association describing how "
       "LogicalElements are allocated from underlying StoragePools. "
       "These elements typically would be subclasses of StorageExtents "
       "or StoragePools." )]
class CIM_AllocatedFromStoragePool : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The StoragePool." )]
   CIM_StoragePool REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The subsidiary element." )]
   CIM_LogicalElement REF Dependent;

      [Required, Description ( 
          "Space consumed from this Pool, in bytes. This value MUST "
          "be maintained so that, relative to the Antecedent "
          "StoragePool, it is possible to compute TotalManagedSpace "
          "as StoragePool.RemainingManagedSpace plus the sum of "
          "SpaceConsumed from all of the AllocatedFromStoragePool "
          "references from the antecedent StoragePool." ), 
       Units ( "Bytes" ), 
       ModelCorrespondence { "CIM_StoragePool.TotalManagedSpace", 
          "CIM_StoragePool.RemainingManagedSpace" }]
   uint64 SpaceConsumed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedBattery
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "A LogicalDevice might use or require one or more Batteries. "
       "This relationship is described by the AssociatedBattery "
       "dependency. It is also possible to model the individual "
       "Batteries that comprise a UPS, using this association." )]
class CIM_AssociatedBattery : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Battery." )]
   CIM_Battery REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDevice that needs or is associated with the Battery."
           )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2008 DMTF.  All Rights Reserved.
   [Association, Aggregation, Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This association defines the capacity, expressed in "
       "StorageExtents, that together represents the entire capacity "
       "collected in a StoragePool. The capacity represented by "
       "StorageExtents may represent capacity that is allocated or "
       "unallocated. \n"
       "StorageExtents associated to a StoragePool using this "
       "association shall not be also be associated to that "
       "StoragePool using the CIM_AssociatedRemainingExtent "
       "association." )]
class CIM_AssociatedComponentExtent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent StoragePool in the association." )]
   CIM_StoragePool REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The component StorageExtent in the association." )]
   CIM_StorageExtent REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "The CIM_AssociatedCooling relationship indicates what "
       "ManagedSystemElement(s) the fan or cooling device is "
       "providingcooling for." )]
class CIM_AssociatedCooling : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The CoolingDevice." )]
   CIM_CoolingDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The ManagedSystemElement being cooled." )]
   CIM_ManagedSystemElement REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Association, Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::LED" ), 
    Description ( 
       "ManagedSystemElements may have zero or more IndicatorLEDs "
       "associated with them, in order to indicate problem situations. "
       "This relationship is indicated by the AssociatedIndicatorLED "
       "dependency." )]
class CIM_AssociatedIndicatorLED : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The ManagedSystemElement that has an associated LED." )]
   CIM_ManagedSystemElement REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The LED." )]
   CIM_IndicatorLED REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedLabelReader 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "A LogicalDevice may use or require one or more LabelReaders, "
       "to scan barcodes or otherwise identify entities. This "
       "relationship is described by the AssociatedLabelReader "
       "dependency." )]
class CIM_AssociatedLabelReader : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The LabelReader." )]
   CIM_LabelReader REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Device that is dependent on the Reader Device." )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedMemory 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "LogicalElements may have Memory installed on them or otherwise "
       "associated with them - such as CacheMemory. This is made "
       "explicit in this association." )]
class CIM_AssociatedMemory : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "Memory installed on or associated with a Device." )]
   CIM_Memory REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The LogicalElement." )]
   CIM_LogicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_AssociatedProcessorMemory 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "Associates the Processor and system Memory, or a Processor\'s Cache."
        )]
class CIM_AssociatedProcessorMemory : CIM_AssociatedMemory {

      [Override ( "Dependent" ), 
       Description ( 
          "The Processor that accesses the Memory or uses the Cache." )]
   CIM_Processor REF Dependent;

      [Description ( 
          "Speed of the bus, in MHertz, between the Processor and Memory."
           ), 
       Units ( "MegaHertz" ), 
       PUnit ( "hertz * 10^6" )]
   uint32 BusSpeed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedProtocolController 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "This association is used to define a hierarchy relationship "
       "between ProtocolControllers. This subclass is provided so that "
       "an enumeration of related ProtocolControllers can be performed "
       "without retrieving any connected StorageVolumes, "
       "MediaAccessDevices or LogicalPorts." )]
class CIM_AssociatedProtocolController : CIM_ProtocolControllerForDevice {

      [Override ( "Antecedent" ), 
       Description ( 
          "The \'upstream\', Antecedent ProtocolController." )]
   CIM_ProtocolController REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The \'downstream\' Dependent ProtocolController." )]
   CIM_ProtocolController REF Dependent;


};

// Copyright (c) 2008 DMTF. All Rights Reserved
   [Association, Aggregation, Version ( "2.18.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This association defines that capacity of the StoragePool that "
       "is not yet allocated from the StoragePool. This capacity is "
       "remaining in the StoragePool for future "
       "allocation.StorageExtents associated to a StoragePool using "
       "this association shall be BasedOn StorageExtents that are "
       "associated to that StoragePool using "
       "CIM_AssociatedComponentExtent, but shall not be associated to "
       "that StoragePool using the CIM_AssociatedComponentExtent "
       "association." )]
class CIM_AssociatedRemainingExtent : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( "The parent StoragePool in the association." )]
   CIM_StoragePool REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The component StorageExtent in the association." )]
   CIM_StorageExtent REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.1" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The CIM_AssociatedCooling relationship indicates what "
       "ManagedSystemElement(s) the fan or cooling device is "
       "providingcooling for." )]
class CIM_AssociatedSensor : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Sensor." )]
   CIM_Sensor REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ManagedSystemElement for which information is "
          "measured by the Sensor." )]
   CIM_ManagedSystemElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BinarySensor 
// ==================================================================
   [Deprecated { "CIM_Sensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "A BinarySensor provides a boolean output. The use of this "
       "class is being deprecated in lieu of creating a Sensor with "
       "two PossibleStates." )]
class CIM_BinarySensor : CIM_Sensor {

      [Deprecated { "CIM_Sensor.SensorType" }, 
       Description ( "The current value indicated by the Sensor." )]
   boolean CurrentReading;

      [Deprecated { "CIM_Sensor.SensorType" }, 
       Description ( 
          "ExpectedReading indicates the \'normal\' value for the Sensor."
           )]
   boolean ExpectedReading;

      [Deprecated { "CIM_Sensor.PossibleStates" }, 
       Description ( 
          "InterpretationOfTrue is a string indicating what a "
          "\'True\' value from the BinarySensor means. This "
          "information could be displayed to a user." ), 
       MaxLen ( 64 )]
   string InterpretationOfTrue;

      [Deprecated { "CIM_Sensor.PossibleStates" }, 
       Description ( 
          "InterpretationOfFalse is a string indicating what a "
          "\'False\' value from the BinarySensor means. This "
          "information could be displayed to a user." ), 
       MaxLen ( 64 )]
   string InterpretationOfFalse;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BIOSLoadedInNV 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "A link between BIOSElement and Memory where the BIOS is loaded." )]
class CIM_BIOSLoadedInNV : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The memory storage." )]
   CIM_Memory REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The BIOS stored in the memory." )]
   CIM_BIOSElement REF Dependent;

      [Description ( 
          "The starting address where the BIOS is located in "
          "non-volatile storage." )]
   uint64 StartingAddress;

      [Description ( 
          "The ending address where the BIOS is located in "
          "non-volatile storage." )]
   uint64 EndingAddress;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageStatistics" ), 
    Description ( 
       "A subclass of StatisticsService that provides services for "
       "filtering and retrieving statistics from a "
       "StatisticsManifestCollection that contains instances of "
       "BlockStatisticalData." )]
class CIM_BlockStatisticsService : CIM_StatisticsService {


      [Description ( 
          "Retrieves statistics in a well-defined bulk format. The "
          "collection of statistics returned is determined by the "
          "list of element types passed in to the method and the "
          "manifests for those types contained in the supplied "
          "BlockStatisticsManifestCollection. If both the Elements "
          "and BlockStatisticsManifestCollection parameters are "
          "supplied, then the types of elements returned is an "
          "intersection of the element types listed in the Elements "
          "parameter and the types for which "
          "BlockStatisticsManifest instances exist in the supplied "
          "BlockStatisticsManifestCollection. The statistics are "
          "returned through a well-defined array of strings, whose "
          "format is specified by the StatisticsFormat parameter, "
          "that can be parsed to retrieve the desired statistics as "
          "well as limited information about the elements that "
          "those metrics describe." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097", "4098", "4099..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "Method Reserved", 
          "Method Parameters Checked - Job Started", 
          "Element Not Supported", 
          "Statistics Format Not Supported", "Method Reserved", 
          "Vendor Specific" }]
   uint32 GetStatisticsCollection(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "Element types for which statistics should be "
             "returned. If not supplied (i.e. parameter is null) "
             "this parameter is not considered when filtering "
             "the instances of StatisticalData that will "
             "populate the Statistics output parameter. If the "
             "array is not null, but is empty, then no "
             "statistics will be returned by this method. A "
             "client SHOULD NOT specify this parameter if it is "
             "not meaningful (i.e. the service only provides "
             "statistics for a single type of element)." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "..", "0x8000.." }, 
          Values { "Computer System", 
             "Front-end Computer System", "Peer Computer System", 
             "Back-end Computer System", "Front-end Port", 
             "Back-end Port", "Volume", "Extent", "Disk Drive", 
             "Arbitrary LUs", "Remote Replica Group", 
             "DMTF Reserved", "Vendor Specific" }, 
          ModelCorrespondence { 
             "CIM_BlockStorageStatisticalData.ElementType" }]
      uint16 ElementTypes[], 
         [IN, Description ( 
             "The BlockStatisticsManifestCollection that "
             "contains the manifests that list the metrics to be "
             "returned for each element type. If not supplied "
             "(i.e. parameter is null), then all available "
             "statistics will be returned unfiltered. Only "
             "elements that match the element type properties "
             "(if meaningful) of the BlockStatisticsManifest "
             "instances contained within the "
             "BlockStatisticsManifestCollection will have data "
             "returned by this method. If the supplied "
             "BlockStatisticsManifestCollection does not contain "
             "any BlockStatisticsManifest instances, then no "
             "statistics will be returned by this method." )]
      CIM_BlockStatisticsManifestCollection REF ManifestCollection, 
         [IN, Description ( 
             "Specifies the format of the Statistics output "
             "parameter. \n"
             "- CSV = Comma Separated Values." ), 
          ValueMap { "0", "1", "2", "..", "0x8000.." }, 
          Values { "Unknown", "Other", "CSV", "DMTF Reserved", 
             "Vendor Specific" }]
      uint16 StatisticsFormat, 
         [OUT, Description ( 
             "The statistics for all the elements as determined "
             "by the Elements, ManifestCollection parameters, "
             "and StatisticsFormat parameters." ), 
          ModelCorrespondence { 
             "CIM_BlockStatisticsService.GetStatisticsCollection(ElementTypes)", 
             "CIM_BlockStatisticsService.GetStatisticsCollection(ManifestCollection)", 
             "CIM_BlockStatisticsService.GetStatisticsCollection(StatisticsFormat)" }]
      string Statistics[]);

      [Description ( 
          "Creates a new BlockStatisticsManifestCollection "
          "instance, whose members can serve as a filter for "
          "metrics retrieved through the GetStatisticsCollection "
          "method." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..32767", 
          "32768..65535" }, 
       Values { "Ok", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Method Reserved", 
          "Vendor Specific" }]
   uint32 CreateManifestCollection(
         [IN, Description ( 
             "The collection of statistics that will be filtered "
             "using the new BlockStatisticsManifestCollection." )]
      CIM_StatisticsCollection REF Statistics, 
         [IN, Description ( 
             "Client-defined name for the new "
             "BlockStatisticsManifestCollection." )]
      string ElementName, 
         [OUT, Description ( 
             "Reference to the new BlockStatisticsManifestCollection."
              )]
      CIM_BlockStatisticsManifestCollection REF ManifestCollection);

      [Description ( 
          "Method that creates or modifies a "
          "BlockStatisticsManifest for this statistics service. A "
          "client supplies a BlockStatisticsManifestCollection in "
          "which the new BlockStatisticsManifest will be placed or "
          "an existing BlockStatisticsManifest will be modified, "
          "the element type of the statistics that the "
          "BlockStatisticsManifest will filter, and a list of "
          "metrics, which serves as a filter for statistical data "
          "of that element type." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097", "4098", "4099..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Method Reserved", 
          "Element Not Supported", "Metric not supported", 
          "ElementType Parameter Missing", "Method Reserved", 
          "Vendor Specific" }]
   uint32 AddOrModifyManifest(
         [IN, Description ( 
             "BlockStatisticsManifestCollection that the "
             "BlockStatisticsManifest is or should be a member "
             "of." )]
      CIM_BlockStatisticsManifestCollection REF ManifestCollection, 
         [IN, Description ( 
             "The type of elements whose statistics the "
             "BlockStatisticsManifest will filter." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "..", "0x8000.." }, 
          Values { "Computer System", 
             "Front-end Computer System", "Peer Computer System", 
             "Back-end Computer System", "Front-end Port", 
             "Back-end Port", "Volume", "Extent", "Disk Drive", 
             "Arbitrary LUs", "Remote Replica Group", 
             "DMTF Reserved", "Vendor Specific" }, 
          ModelCorrespondence { 
             "CIM_BlockStatisticsManifest.ElementType" }]
      uint16 ElementType, 
         [IN, Description ( 
             "A client-defined string that identifies the "
             "BlockStatisticsManifest created or modified by "
             "this method." )]
      string ElementName, 
         [IN, Description ( 
             "The metrics that will be included by the filter. "
             "The metrics supplied here are the properties of "
             "CIM_StatisticalData or one of its subclasses that "
             "will remain after the BlockStatisticsManifest "
             "filter is applied." )]
      string StatisticsList[], 
         [OUT, Description ( 
             "The BlockStatisticsManifest that is created or "
             "modified on successful execution of the method." )]
      CIM_BlockStatisticsManifest REF Manifest);

      [Description ( 
          "Extrinsic method that removes manifests from a "
          "BlockStatisticsManifestCollection." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Method Reserved", 
          "Manifest not found", "Method Reserved", "Vendor Specific" }]
   uint32 RemoveManifests(
         [IN, Description ( 
             "BlockStatisticsManifestCollection from which the "
             "BlockStatisticsManifests will be removed." )]
      CIM_BlockStatisticsManifestCollection REF ManifestCollection, 
         [IN, Description ( 
             "List of BlockStatisticsManifests to be removed "
             "from the BlockStatisticsManifestCollection." )]
      CIM_BlockStatisticsManifest REF Manifests[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_CacheMemory 
// ==================================================================
   [Deprecated { "CIM_AssociatedCacheMemory" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "Capabilities and management of Cache Memory. Cache memory is "
       "dedicated or allocated RAM that a Processor searches first for "
       "data, before going to \'regular\' memory. CacheMemory is used "
       "to speed up the delivery of data to a Processor. It is usually "
       "described by its closeness to the Processor (for example, "
       "Primary or Secondary Cache). \n"
       "If a DiskDrive includes RAM allocated for holding the disk\'s "
       "most recently read and/or adjacent data (in order to speed up "
       "retrieval), this also would be modeled as CacheMemory. Note "
       "that CacheMemory is NOT operating system or application level "
       "buffers but actual RAM allocated for caching data for a "
       "Processor, from a hard disk, etc." )]
class CIM_CacheMemory : CIM_Memory {

      [Deprecated { "CIM_AssociatedCacheMemory.Level" }, 
       Description ( 
          "Defines whether this is the Primary (value=3), Secondary "
          "(value=4) or Tertiary (value=5) Cache. Also, \"Other\" "
          "(1), \"Unknown\" (2) and \"Not Applicable\" (6) can be "
          "defined." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Primary", "Secondary", 
          "Tertiary", "Not Applicable" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.2" }]
   uint16 Level;

      [Deprecated { "CIM_AssociatedCacheMemory.WritePolicy" }, 
       Description ( 
          "Defines whether this is write-back (value=3) or "
          "write-through (value=4) Cache, or whether this "
          "information \"Varies with Address\" (5) or is defined "
          "individually for each I/O (6). Also, \"Other\" (1) and "
          "\"Unknown\" (2) can be specified." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Write Back", "Write Through", 
          "Varies with Address", "Determination Per I/O" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.5" }]
   uint16 WritePolicy;

      [Deprecated { "CIM_AssociatedCacheMemory.CacheType" }, 
       Description ( 
          "Defines whether this is for instruction caching "
          "(value=3), data caching (value=4) or both (value=5, "
          "\"Unified\"). Also, \"Other\" (1) and \"Unknown\" (2) "
          "can be defined." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Instruction", "Data", "Unified" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.9" }]
   uint16 CacheType;

      [Deprecated { "CIM_AssociatedCacheMemory.LineSize" }, 
       Description ( 
          "Size, in bytes, of a single cache bucket or line." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|System Cache|006.10" }, 
       PUnit ( "byte" )]
   uint32 LineSize;

      [Deprecated { "CIM_AssociatedCacheMemory.ReplacementPolicy" }, 
       Description ( 
          "An integer enumeration describing the algorithm to "
          "determine which cache lines or buckets should be "
          "re-used." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Other", "Unknown", "Least Recently Used (LRU)", 
          "First In First Out (FIFO)", "Last In First Out (LIFO)", 
          "Least Frequently Used (LFU)", 
          "Most Frequently Used (MFU)", 
          "Data Dependent Multiple Algorithms" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.12" }]
   uint16 ReplacementPolicy;

      [Deprecated { "CIM_AssociatedCacheMemory.ReadPolicy" }, 
       Description ( 
          "Policy that shall be employed by the Cache for handling "
          "read requests. For example, \"Read\", \"Read-Ahead\" or "
          "both can be specified using the values, 3, 4 or 5, "
          "respectively. If the read policy is determined "
          "individually (ie, for each request), then the value 6 "
          "(\"Determination per I/O\") should be specified. \"Other\" "
          "(1) and \"Unknown\" (2) are also valid values." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Read", "Read-Ahead", 
          "Read and Read-Ahead", "Determination Per I/O" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.13" }]
   uint16 ReadPolicy;

      [Deprecated { "CIM_AssociatedCacheMemory.FlushTimer" }, 
       Description ( 
          "Maximum amount of time, in seconds, dirty lines or "
          "buckets may remain in the Cache before they are flushed. "
          "A value of zero indicated that a cache flush is not "
          "controlled by a flushing timer." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIF.DMTF|System Cache|006.14" }, 
       PUnit ( "second" )]
   uint32 FlushTimer;

      [Deprecated { "CIM_AssociatedCacheMemory.Associativity" }, 
       Description ( 
          "An integer enumeration defining the system cache "
          "associativity. For example, 6 indicates a fully "
          "associative cache." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Other", "Unknown", "Direct Mapped", 
          "2-way Set-Associative", "4-way Set-Associative", 
          "Fully Associative", "8-way Set-Associative", 
          "16-way Set-Associative" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.15" }]
   uint16 Associativity;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_CallBasedModem
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "CIM_CallBasedModem is the superclass for grouping the numerous "
       "types of call-based modems. The POTSModem is a type of call- "
       "based Modem." )]
class CIM_CallBasedModem : CIM_Modem {

      [Description ( 
          "Indicates whether online fallback is enabled so that it "
          "can be negotiated by the Modem." )]
   boolean FallbackEnabled;

      [Description ( 
          "An array that enumerates all the compression protocols "
          "that are supported by the Modem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown", "Other", "No Compression", "MNP 5", 
          "V.42bis", "MNP 3", "MNP 4", "V.58", "PEP", "HST" }, 
       ModelCorrespondence { 
          "CIM_CallBasedModem.OtherCompressionDescription" }]
   uint16 CompressionSupported[];

      [Description ( 
          "Description of the compression type when \"Other \" "
          "(value=1) is defined in the CompressionSupported array. "
          "If there are multiple \"Other\" types, then combine "
          "their descriptions into a single string." ), 
       ModelCorrespondence { 
          "CIM_CallBasedModem.CompressionSupported" }]
   string OtherCompressionDescription;

      [Description ( 
          "Describes the current data compression characteristics "
          "of the Modem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown", "Other", "No Compression", "MNP 5", 
          "V.42bis", "MNP 3", "MNP 4", "V.58", "PEP", "HST" }, 
       ModelCorrespondence { 
          "CIM_CallBasedModem.CompressionSupported", 
          "CIM_CallBasedModem.OtherCompressionInfoDescription" }]
   uint16 CompressionInfo;

      [Description ( 
          "Description of the current compression type when \"Other\" "
          "(value=1) is specified in the CompressionInfo property." ), 
       ModelCorrespondence { "CIM_CallBasedModem.CompressionInfo" }]
   string OtherCompressionInfoDescription;

      [Description ( 
          "An array that enumerates all the modulation protocols "
          "that are supported by the Modem. The beginning entries "
          "in the Values qualifier array are mapped from the "
          "CIM_POTSModem ModulationScheme property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29" }, 
       Values { "Unknown", "Other", "Not Supported", "Bell 103", 
          "Bell 212A", "V.22bis", "V.32", "V.32bis", "V.terbo", 
          "V.FC", "V.34", "V.34bis", "V.17 (G3 Fax Call)", "V.21", 
          "V.22", "V.23 Constant Carrier (1200/75)", 
          "V.23 Switched Carrier (Half Duplex)", "V.26bis", 
          "V.26ter", "V.27ter (G3 Fax Call)", 
          "V.29 HD (G3 Fax Call)", "V.34 HD (G3 Fax Call)", 
          "V.90 Issue 1 (Asymmetric)", "V.90 Issue 2 (Symmetric)", 
          "V.58", "X2", "K56FLEX", "V.Fast", "PEP", "HST" }, 
       ModelCorrespondence { 
          "CIM_CallBasedModem.OtherModulationDescription" }]
   uint16 ModulationSupported[];

      [Description ( 
          "Description of the current modulation type when \"Other\" "
          "(value=1) is specified in the ModulationSupported "
          "property. If there are multiple \"Other\" types, then "
          "combine their descriptions into a single string." ), 
       ModelCorrespondence { "CIM_CallBasedModem.ModulationSupported" }]
   string OtherModulationDescription;

      [Description ( 
          "Describes the current modulation scheme of the Modem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29" }, 
       Values { "Unknown", "Other", "Not Supported", "Bell 103", 
          "Bell 212A", "V.22bis", "V.32", "V.32bis", "V.terbo", 
          "V.FC", "V.34", "V.34bis", "V.17 (G3 Fax Call)", "V.21", 
          "V.22", "V.23 Constant Carrier (1200/75)", 
          "V.23 Switched Carrier (Half Duplex)", "V.26bis", 
          "V.26ter", "V.27ter (G3 Fax Call)", 
          "V.29 HD (G3 Fax Call)", "V.34 HD (G3 Fax Call)", 
          "V.90 Issue 1 (Asymmetric)", "V.90 Issue 2 (Symmetric)", 
          "V.58", "X2", "K56FLEX", "V.Fast", "PEP", "HST" }, 
       ModelCorrespondence { 
          "CIM_CallBasedModem.ModulationSupported", 
          "CIM_CallBasedModem.OtherSchemeDescription" }]
   uint16 ModulationScheme;

      [Description ( 
          "Description of the current modulation type when \"Other\" "
          "(value=1) is specified in the ModulationScheme property." ), 
       ModelCorrespondence { "CIM_CallBasedModem.ModulationScheme" }]
   string OtherSchemeDescription;

      [Description ( 
          "An array that enumerates the error control protocols "
          "that are supported by the Modem. The beginning entries "
          "in the Values qualifier array are mapped from the "
          "CIM_POTSModem ErrorControlInfo property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13" }, 
       Values { "Unknown", "Other", "No Error Correction", "MNP 4", 
          "LAPM", "V.58", "ECP Enhanced Cellular Protocol", 
          "ETC Enhanced Throughput Cellular", "MNP 1", "MNP 2", 
          "MNP 3", "MNP10", "PEP", "HST" }, 
       ModelCorrespondence { 
          "CIM_CallBasedModem.OtherErrorControlDescription" }]
   uint16 ErrorControlSupported[];

      [Description ( 
          "Description of the error control type when \"Other\" "
          "(value= 1) is specified in the ErrorControlSupported "
          "property. If there are multiple \"Other\" types, then "
          "combine their descriptions into a single string." ), 
       ModelCorrespondence { 
          "CIM_CallBasedModem.ErrorControlSupported" }]
   string OtherErrorControlDescription;

      [Description ( 
          "Describes the current error correction characteristics "
          "of the Modem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13" }, 
       Values { "Unknown", "Other", "No Error Correction", "MNP 4", 
          "LAPM", "V.58", "ECP Enhanced Cellular Protocol", 
          "ETC Enhanced Throughput Cellular", "MNP 1", "MNP 2", 
          "MNP 3", "MNP10", "PEP", "HST" }, 
       ModelCorrespondence { 
          "CIM_CallBasedModem.ErrorControlSupported", 
          "CIM_CallBasedModem.OtherErrorControlInfoDescription" }]
   uint16 ErrorControlInfo;

      [Description ( 
          "Description of the error control when \"Other\" "
          "(value=1) is defined as the value of the "
          "ErrorControlInfo property." ), 
       ModelCorrespondence { "CIM_CallBasedModem.ErrorControlInfo" }]
   string OtherErrorControlInfoDescription;

      [Description ( "Time of the last reset of the Modem." )]
   datetime TimeOfLastReset;

      [Description ( 
          "The rate at which the receiver and transmitter are or "
          "were last cooperating, on a call, before disconnection." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 CallSpeed;

      [Description ( 
          "Status of the Modem. For example, information regarding "
          "modem negotiation or whether the modem is connected "
          "(values 8 and 9, respectively) can be conveyed in this "
          "property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "Unknown", "Other", "Offline", "On Hook", "Dialing", 
          "Waiting for Answer", "Ringing", "Modem Detected", 
          "Negotiating", "Online", "Error" }]
   uint16 CallStatus;

      [Description ( 
          "Total number of characters sent by the Device on the "
          "last or current call. A call in-progress is indicated by "
          "the CallStatus property." ), 
       Counter]
   uint32 CharsSent;

      [Description ( 
          "Total number of characters received by the Device on the "
          "last or current call. A call in-progress is indicated by "
          "the CallStatus property." ), 
       Counter]
   uint32 CharsReceived;

      [Description ( 
          "Total number of characters lost by the Device on the "
          "last or current call. A call in-progress is indicated by "
          "the CallStatus property." ), 
       Counter]
   uint32 CharsLost;

      [Description ( 
          "Total number of blocks sent by the Device on the last or "
          "current call. A call in-progress is indicated by the "
          "CallStatus property." ), 
       Counter]
   uint32 BlocksSent;

      [Description ( 
          "Total number of blocks resent by the Device on the last "
          "or current call. A call in-progress is indicated by the "
          "CallStatus property." ), 
       Counter]
   uint32 BlocksResent;

      [Description ( 
          "Total number of blocks received by the Device on the "
          "last or current call. A call in-progress is indicated by "
          "the CallStatus property." ), 
       Counter]
   uint32 BlocksReceived;

      [Description ( 
          "Total number of block errors seen by the Device on the "
          "last or current call. A call in-progress is indicated by "
          "the CallStatus property." ), 
       Counter]
   uint32 BlockErrors;

      [Description ( 
          "Length of the last or current call. A call in-progress "
          "is indicated by the CallStatus property. The \'interval\' "
          "format of the datetime data type should be used for the "
          "property value." )]
   datetime CallLength;

      [Description ( 
          "Last or current number dialed to which the statistics "
          "apply, or NULL if the call was incoming." )]
   string NumberDialed;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CDROMDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and managment of a CDROMDrive, a subtype of "
       "MediaAccessDevice." )]
class CIM_CDROMDrive : CIM_MediaAccessDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_ChangerDevice 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "ChangerDevices represent hardware that moves PhysicalMedia "
       "within a System, such as a StorageLibrary." )]
class CIM_ChangerDevice : CIM_MediaTransferDevice {

      [Description ( 
          "The maximum time in seconds between a PickerElement pick "
          "and place. It should be reported as the transit time "
          "between the two most physically distant StorageMedia "
          "Locations in a System. The maximum time interval for "
          "moving a Media from one point to another is the sum of "
          "the PickerElement\'s MaxPickTime, the ChangerDevice\'s "
          "Max TransitTime and the PickerElement\'s MaxPutTime." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 MaxTransitTime;

      [Description ( 
          "Boolean set to TRUE if the Changer supports media "
          "flipping. Media needs to be flipped when multi-sided "
          "PhysicalMedia are placed into a MediaAccessDevice that "
          "does NOT support dual sided access." )]
   boolean MediaFlipSupported;

      [Description ( 
          "Boolean set to TRUE if an audit is currently being "
          "performed by the Changer." )]
   boolean AuditInProgress;

      [Description ( 
          "A count of the number of audits performed by the Changer." ), 
       Counter]
   uint64 AuditsPerformed;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.0" ), 
    ClassConstraint { "inv: self.Dependent.IsComposite = true" }, 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "This specialization defines how data is striped across "
       "StorageExtents. Additionally, it includes information on "
       "distribution of check data so that the \'usual case\' RAID "
       "devices can be created in one step." )]
class CIM_CompositeExtentBasedOn : CIM_BasedOn {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The underlying StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The StorageExtent which is built on the StorageExtent." )]
   CIM_StorageExtent REF Dependent;

      [Required, Override ( "OrderIndex" ), 
       Description ( 
          "Order matters to composite extents. An example of the "
          "use of this property is when defining a RAID-0 striped "
          "array of 3 disks. The resultant RAID array is a "
          "composite extent that is dependent on (as described by "
          "CompositeExtentBasedOn) the StorageExtents that "
          "represent each of the 3 disks. The OrderIndex of each "
          "CompositeExtentBasedOn association from the disk Extents "
          "to the RAID array could be specified as 1, 2 and 3 to "
          "indicate the order in which the disk Extents are used to "
          "access the RAID data." ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.1" }]
   uint16 OrderIndex;

      [Description ( 
          "True if logical blocks in the underlying StorageExtents "
          "are mapped in decrementing order. This property "
          "corresponds to the INCDEC value in the SCSI SCC-2 Volume "
          "Set PS_Extent Descriptor." )]
   boolean LBAsMappedByDecrementing;

      [Description ( 
          "True if the logical block mapping algorithm includes "
          "check data bytes. This property corresponds to the "
          "NOCHKSKIP attribute in the SCC-2 Volume Set PS_Extent "
          "Descriptor." )]
   boolean LBAMappingIncludesCheckData;

      [Description ( 
          "The total number of blocks that will be consumed on the "
          "Dependent Extent. This is limited by the Antecedent\'s "
          "NumberOfBlocks, but is included explicitly to provide "
          "for the DMTF MIF mapping. In SCSI SCC, this is "
          "equivalent to the NUMBER OF LBA_PS(s) field in the "
          "Volume Set PS_Extent Descriptor." ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.3" }, 
       ModelCorrespondence { "CIM_StorageExtent.NumberOfBlocks" }]
   uint64 NumberOfBlocks;

      [Description ( 
          "The Dependent\'s BlockSize is limited by the "
          "Antecedent\'s. In SCSI SCC, this is equivalent to the "
          "NUMBER OF BYTES PER LBA_PS field in the RedundancyGroup "
          "P_Extent Descriptor." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.4" }, 
       ModelCorrespondence { "CIM_StorageExtent.BlockSize" }, 
       PUnit ( "byte" )]
   uint64 BlockSize;

      [Description ( 
          "Number of bytes which form the stripe size for the "
          "Dependent StorageExtent. If the CompositeExtent is "
          "concatenated instead of striped, then "
          "UserDataStripeDepth should be set to zero." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.6" }, 
       PUnit ( "byte" )]
   uint64 UserDataStripeDepth;

      [Description ( 
          "Number of bytes of user data to skip before starting the "
          "check data interleave." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.6" }, 
       PUnit ( "byte" )]
   uint64 UnitsBeforeCheckDataInterleave;

      [Description ( 
          "Number of bytes to be reserved for check data." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.7" }, 
       PUnit ( "byte" )]
   uint64 UnitsOfCheckData;

      [Description ( "Number of bytes to be reserved for user data." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.8" }, 
       PUnit ( "byte" )]
   uint64 UnitsOfUserData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemMemory 
// ==================================================================
   [Association, Deprecated { "CIM_SystemDevice" }, 
    Aggregation, Composition, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "The use of this association has be deprecated in lieu of "
       "SystemDevice. Association indicating that memory is installed "
       "and required for the UnitaryComputerSystem to operate. Note "
       "that this relationship inherits from the SystemDevice "
       "association, and therefore, the Memory StorageExtent is weak "
       "to the aggregating UnitaryComputerSystem." )]
class CIM_ComputerSystemMemory : CIM_SystemDevice {

      [Deprecated { "CIM_SystemDevice.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The UnitaryComputerSystem." )]
   CIM_UnitaryComputerSystem REF GroupComponent;

      [Deprecated { "CIM_SystemDevice.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "The Memory StorageExtent which is part of the "
          "UnitaryComputerSystem." )]
   CIM_Memory REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemProcessor
// ==================================================================
   [Association, Deprecated { "CIM_SystemDevice" }, 
    Aggregation, Composition, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Processor" ), 
    Description ( 
       "Note: ComputerSystemProcessor is deprecated in lieu of its "
       "superclass, SystemDevice, because it adds no detail and "
       "changes none of the cardinalities in the definition of the "
       "superclass. Deprecated description: An association that "
       "indicates the processors of a UnitaryComputer System." )]
class CIM_ComputerSystemProcessor : CIM_SystemDevice {

      [Deprecated { "CIM_SystemDevice.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "Note: This method is deprecated. Deprecated description: "
          "The UnitaryComputerSystem." )]
   CIM_UnitaryComputerSystem REF GroupComponent;

      [Deprecated { "CIM_SystemDevice.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "Note: This method is deprecated. Deprecated description: "
          "The Processor that is part of the UnitaryComputerSystem." )]
   CIM_Processor REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConnectionBasedModem
// ==================================================================
   [Abstract, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "CIM_ConnectionBasedModem is the superclass for grouping the "
       "numerous types of connection-based Modems. A CableModem is a "
       "type of connection-based Modem." )]
class CIM_ConnectionBasedModem : CIM_Modem {

      [Description ( 
          "VendorID information is reported through Modem-specific "
          "requests. For example, for ADSLModem Devices, the "
          "VendorID is assigned by T1E1.4 according to T1.413, "
          "Appendix D. The correct place in the CIM Schema for this "
          "information is in PhysicalElement (the Manufacturer "
          "property) for hardware and Product (the Vendor property) "
          "if the information is related to Product acquisition. "
          "This data is also reported here because it is part of "
          "the standard output from the Device and is an "
          "optimization." )]
   string VendorID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ControlledBy
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "The ControlledBy relationship indicates which Devices are "
       "controlled by a CIM_Controller." )]
class CIM_ControlledBy : CIM_DeviceConnection {

      [Override ( "Antecedent" ), 
       Description ( "The Controller." )]
   CIM_Controller REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The controlled Device." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "The State property indicates whether the Controller is "
          "actively commanding or accessing the Device (value=1) or "
          "not (value=2). Also, the value, \"Unknown\" (0), can be "
          "defined. This information is necessary when a "
          "LogicalDevice can be commanded by, or accessed through, "
          "multiple Controllers." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Active", "Inactive" }]
   uint16 AccessState;

      [Description ( 
          "The time that the downstream Device was last reset by "
          "the Controller." )]
   datetime TimeOfDeviceReset;

      [Description ( 
          "Number of hard resets issued by the Controller. A hard "
          "reset returns the Device to its initialization or "
          "boot-up state. All internal Device state information and "
          "data are lost." ), 
       Counter]
   uint32 NumberOfHardResets;

      [Description ( 
          "Number of soft resets issued by the Controller. A soft "
          "reset does not completely clear current Device state or "
          "data. Exact semantics are dependent on the Device and on "
          "the protocols and mechanisms used to communicate with "
          "the Device." ), 
       Counter]
   uint32 NumberOfSoftResets;

      [Description ( 
          "Address of associated Device in context of the "
          "antecedent Controller." )]
   string DeviceNumber;

      [Description ( 
          "This property describes the accessibility of the device "
          "through the antecedent controller." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "ReadWrite", "ReadOnly", "NoAccess" }]
   uint16 AccessMode;

      [Description ( 
          "The property describes the priority given to accesses of "
          "the device through this controller. The highest priority "
          "path will have the lowest value for this parameter." )]
   uint16 AccessPriority;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "The ControllerConfigurationService provides methods that allow "
       "a client to manipulate LUN Masking in a storage system." )]
class CIM_ControllerConfigurationService : CIM_Service {


      [Description ( 
          "This method creates an appropriate subclass of "
          "ProtocolController. In addition to its role of "
          "controlling downstream devices, a ProtocolControl is "
          "used to provide a central management point for access "
          "control with respect to those devices. Certain storage "
          "system implementations across multiple vendors require "
          "permissions to be established atomically with the "
          "creation of a ProtocolController. This method provides "
          "this capability via the Privilege and Identity "
          "properties. By supplying appropriate information in "
          "those properties, this method will assure that "
          "appropriate AuthorizedTarget and AuthorizedSubject "
          "associations, (as defined in the User and Security "
          "Model), are instantiated to restrict access to the "
          "logical devices \'behind\' it. \n"
          "If multiple target ports are specified in the Ports "
          "input parameter, all expose the same view (i.e., have "
          "the same unit numbers and permissions). This method does "
          "not create the port instances, but does create "
          "ProtocolControllerForPort associations between the "
          "specified ports and the new ProtocolController. The new "
          "ProtocolController is defined to be weak to the same "
          "System as the ControllerConfigurationService." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098", "4099..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "ID Parameter Missing or Not Unique", 
          "Hardware Implementation Requires Null Ports Parameter", 
          "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 CreateProtocolControllerWithPorts(
         [IN, Description ( 
             "The string to be used in the ElementName of the "
             "new ProtocolController." ), 
          ModelCorrespondence { 
             "CIM_ProtocolController.ElementName" }]
      string ElementName, 
         [IN, Description ( 
             "Array of strings containing representations of "
             "references to instances of CIM_LogicalPort (or "
             "subclass) instances. This is the list of target "
             "ports that are associated to the "
             "ProtocolController. ProtocolControllerForPort "
             "associations are created by the instrumentation "
             "associating the new ProtocolController to these "
             "ports. If this parameter is null, then all ports "
             "in the storage system (this Service\'s \'scoping\' "
             "System and all its ComponentCS Systems) are "
             "attached to the new ProtocolController." )]
      string Ports[], 
         [IN, Description ( 
             "The protocol type for the new ProtocolController." ), 
          ValueMap { "0", "1", "2" }, 
          Values { "Unknown", "Other", "SCSI" }, 
          ModelCorrespondence { "CIM_SCSIProtocolController" }]
      uint16 Protocol, 
         [IN, Description ( 
             "Reference to a CIM_Privilege (or subclass) "
             "instance to be used as a template. If supplied, it "
             "has a 1:1 correspondence with the Identity "
             "parameter and this method will atomically create "
             "the new ProtocolController instance and related "
             "AuthorizedPrivilege, AuthorizedTarget and "
             "AuthorizedSubject instances. \n"
             "Note: if "
             "ProtocolControllerRequiresAuthorizedIdentity is "
             "true, then the Identity/Privilege pair MUST be "
             "specified. If false, then the Identity/Privilege "
             "pair MUST NOT be specified." ), 
          ModelCorrespondence { 
             "CIM_ControllerConfigurationService.CreateProtocolControllerWithPorts.Identity" }]
      CIM_Privilege REF Privilege, 
         [IN, Description ( 
             "Reference to a CIM_ManagedElement (or subclass) "
             "instance. This ManagedElement MUST be either a "
             "CIM_Identity, or a CIM_Collection (or subclass, "
             "eg. SystemSpecificCollection, Role, or Group) that "
             "has CIM_Identities as MemberOfCollection. If "
             "ProtocolControllerMaskingCapabilities.ProtocolControllerSupportsCollection "
             "is false, the reference MUST be to a CIM_Identity "
             "(or subclass). If present, it has a 1:1 "
             "correspondence with the Privilege property. If "
             "present, this method will atomically create the "
             "new ProtocolController instance and instantiate a "
             "missing AuthorizedSubject association between the "
             "Privilege/Identity pair; and instantiate an "
             "AuthorizedTarget association between the "
             "AuthorizedPrivilege and the new "
             "ProtocolController. \n"
             "Note: if "
             "ProtocolControllerRequiresAuthorizedIdentity is "
             "true, then at least the Identity/Privilege pair "
             "MUST be specified." ), 
          ModelCorrespondence { 
             "CIM_ControllerConfigurationService.CreateProtocolControllerWithPorts.Privilege" }]
      CIM_ManagedElement REF Identity, 
         [IN ( false ), OUT, Description ( 
             "A reference to the new ProtocolController that is created."
              )]
      CIM_ProtocolController REF ProtocolController);

      [Description ( 
          "The method deletes an instance of ProtocolController and "
          "all associations in which this ProtocolController is "
          "referenced." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "LogicalDevices Associated to Other ProtocolControllers Not Deleted", 
          "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 DeleteProtocolController(
         [IN, Description ( 
             "The ProtocolController to be deleted." )]
      CIM_ProtocolController REF ProtocolController, 
         [IN, Description ( 
             "If true, the management instrumentation provider "
             "will also delete \'child\' ProtocolControllers "
             "(i.e., those defined as Dependent references in "
             "instances of AssociatedProtocolController where "
             "this ProtocolController is the Antecedent "
             "reference). Also, all direct associations "
             "involving the \'child\' ProtocolControllers will "
             "be removed." )]
      boolean DeleteChildrenProtocolControllers, 
         [IN, Description ( 
             "If true, the management instrumentation provider "
             "will also delete LogicalDevice instances "
             "associated via ProtocolControllerForUnit, to this "
             "ProtocolController and its children. (Note that "
             "\'child\' controllers will only be affected if the "
             "DeleteChildrenProtocolControllers input parameter "
             "is TRUE). LogicalDevice instances are only deleted "
             "if there are NO remaining "
             "ProtocolControllerForUnit associations, to other "
             "ProtocolControllers." )]
      boolean DeleteUnits);

      [Description ( 
          "This method associates a LogicalDevice subclass "
          "(specifically a StorageVolume or MediaAccessDevice "
          "subclass) to the referenced ProtocolController. The "
          "association is persisted as an instance of "
          "ProtocolControllerForUnit. The management "
          "instrumentation provider must verify that the logical "
          "unit numbers (defined using the DeviceNumber input "
          "parameter) are unique for the ProtocolController. When "
          "the Protocol Controller is actively masking a device "
          "(i.e. is part of an AuthorizedTarget association), the "
          "provider should update the access configuration in the "
          "underlying hardware as appropriate." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098", "4099", "4100", "4101..32767", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Invalid LogicalDevice Instance", 
          "Device Number Conflict", 
          "DeviceNumber Parameter Must Be Provided", 
          "Hardware Implementation Requires Null DeviceNumber", 
          "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 AttachDevice(
         [IN, Description ( "The ProtocolController instance." )]
      CIM_ProtocolController REF ProtocolController, 
         [IN, Description ( 
             "The LogicalDevice instance to attach." )]
      CIM_LogicalDevice REF Device, 
         [IN, OUT, Description ( 
             "The number assigned to "
             "ProtocolControllerForUnit.DeviceNumber (if "
             "supported by the hardware). Hardware support is "
             "indicated by "
             "ProtocolControllerMaskingCapabilities.ClientSelectableDeviceNumbers). "
             "If the hardware does not support setting the "
             "number, but the DeviceNumber has not been "
             "established in an existing "
             "ProtocolControllerForDevice subclass, then this "
             "parameter\'s value will be used. If the "
             "DeviceNumber has been established, then the "
             "current number will be reused." ), 
          ModelCorrespondence { 
             "CIM_ProtocolControllerForUnit.DeviceNumber" }]
      string DeviceNumber);

      [Description ( 
          "This method removes the ProtocolControllerForDevice "
          "association subclass between the ProtocolController and "
          "a LogicalDevice, such as a StorageVolume or a "
          "MediaAccessDevice. When the ProtocolController is "
          "actively masking a device (i.e. is part of an "
          "AuthorizedTarget association, the management "
          "instrumentation provider should update the hardware "
          "access configuration when DetachDevice is called." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "LogicalDevice Instance not Associated with Controller", 
          "Busy", "Method Reserved", "Vendor Specific" }]
   uint32 DetachDevice(
         [IN, Description ( "The ProtocolController instance." )]
      CIM_ProtocolController REF ProtocolController, 
         [IN, Description ( 
             "The LogicalDevice instance to detach." )]
      CIM_LogicalDevice REF Device);

      [Description ( 
          "Expose a list of SCSI logical units (such as RAID "
          "volumes or tape drives) to a list of initiators through "
          "a list of target ports, through one or more "
          "SCSIProtocolControllers (SPCs). \n"
          "\n"
          "The parameters for this method are: Job - null if no job "
          "created, otherwise this is a reference to the job. "
          "LUNames - the list of names of the logical units to use. "
          "InitiatorPortIDs - the names of the initiator ports to "
          "use. TargetPortIDs - the names of the target ports to "
          "use. DeviceNumbers - the device numbers (LUNs) to use. "
          "DeviceAccesses - permissions for the logical units. "
          "ProtocolControllers - SPCs involved in this operation. \n"
          "\n"
          "There are two modes of operation, create and modify. If "
          "a NULL value is passed in for the SPC, then the "
          "instrumentation will create at least one SPC that "
          "satisfies the request. Depending upon the "
          "instrumentation capabilities, more than one SPC MAY be "
          "created. (e.g. if "
          "CIM_ProtocolControllerMaskingCapabilities.OneHardwareIDPerView "
          "is true and more than one initiatorID was passed in, "
          "then one SPC per initiatorID will be created). If an SPC "
          "is passed in, then the instrumentation attempts to add "
          "the new paths to the existing SPC. Depending upon the "
          "instrumentation capabilities, this MAY result in the "
          "creation of additional SPCs. The instrumentation MAY "
          "return an error if honoring this request would violate "
          "SCSI semantics. \n"
          "\n"
          "For creating an SPC, the parameters that MUST be "
          "specified are dependent upon the SPCAllows* properties "
          "in CIM_ProtocolControllerMaskingCapabilities. If "
          "SPCAllowsNoLUs is false, the caller MUST specify a list "
          "of LUNames. If it is true, the caller MAY specify a list "
          "of LUNames or MAY pass in null. If SPCAllowsNoTargets is "
          "false and PortsPerView is not \'All Ports share the same "
          "view\' the caller MUST specify a list of TargetPortIDs. "
          "If it is true, the caller MAY specify a list of "
          "TargetPortIDs or MAY pass in null. If "
          "SPCAllowsNoInitiators is false, the caller MUST specify "
          "a list of InitiatorPortIDs. If it is true, the caller "
          "MAY specify a list of InitiatorPortIDs or MAY pass in "
          "null. If LUNames is not null, the caller MUST specify "
          "DeviceAccesses for each logical unit. If the "
          "instrumentation\'s "
          "CIM_ProtocolControllerMaskingCapabilities "
          "ClientSelectableDeviceNumbers property is TRUE then the "
          "client MAY provide a list of device numbers (LUNs) to "
          "use for the paths to be created. If is false, the client "
          "MUST pass in NULL for this parameter. \n"
          "\n"
          "The LUNames, DeviceNumbers, and DeviceAccesses "
          "parameters are mutually indexed arrays - any element in "
          "DeviceNumbers or DeviceAccesses will set a property "
          "relative to the LogicalDevice instance named in the "
          "corresponding element of LUNames. LUNames and "
          "DeviceAccesses MUST have the same number of elements. "
          "DeviceNumbers MUST be null (asking the instrumentation "
          "to assign numbers) or have the same number of elements "
          "as LUNames. If these conditions are not met, the "
          "instrumentation MUST return a \'Invalid Parameter\' "
          "status or a CIM_Error. \n"
          "\n"
          "For modifying an SPC, there are three specific use cases "
          "identified. The instrumentation MUST support these use "
          "cases. Other permutations are allowed, but are "
          "vendor-specific. The use cases are: Add LUs to a view, "
          "Add initiator IDs to a view, and Add target port IDs to "
          "a view. Add LUs to a view requires that the LUNames "
          "parameter not be null and that the InitiatorIDs and "
          "TargetPortIDs parameters be null. DeviceNumbers MAY be "
          "null if ClientSelectableDeviceNumbers is false. "
          "DeviceAccesses MUST be specified. Add initiator IDs to a "
          "view requires that the LUNames parameter be null, that "
          "the InitiatorIDs not be null, and that the TargetPortIDs "
          "parameters be null. DeviceNumbers and DeviceAccesses "
          "MUST be null. Add target port IDs to a view requires "
          "that the LUNames and InitiatorPortIDs parameters be null "
          "and is only possible is PortsPerView is \'Multiple Ports "
          "Per View\'. DeviceNumbers and DeviceAccesses MUST also "
          "be null \n"
          "\n"
          "The relevant rules of SCSI semantics are: \n"
          "- an SPC MAY NOT be exposed through a particular "
          "host/target port pair that is in use by another SPC. (In "
          "other words, an SPC and its associated logical units and "
          "ports together correspond to the logical unit inventory "
          "provided by SCSI REPORT LUNS and INQUIRY commands) \n"
          "- each LogicalDevice associated to an SPC MUST have a "
          "unique ProtocolControllerForUnit DeviceNumber (logical "
          "unit number) \n"
          "The instrumentation MUST report an error if the client "
          "request would violate one of these rules. \n"
          "\n"
          "If the instrumentation provides "
          "PrivilegeManagementService, the results of setting "
          "DeviceAccesses MUST be synchronized with "
          "PrivilegeManagementService as described in the "
          "ProtocolControllerForUnit DeviceAccess description." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098", "4099", "4100", "4101", "4102", "4103", 
          "4104..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Invalid logical unit ID", "Invalid initiator port ID", 
          "Invalid target port ID", "Invalid permission", 
          "Target/initiator combination already exposed", 
          "Requested logical unit number in use", 
          "Maximum Map Count Exceeded", "Method Reserved", 
          "Vendor Specific" }]
   uint32 ExposePaths(
         [IN ( false ), OUT, Description ( 
             "Reference to the job if \'Method Parameters "
             "Checked - Job Started\' is returned (MAY be null "
             "if job completed)." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN, Description ( 
             "An array of IDs of logical unit instances. The LU "
             "instances MUST already exist. The members of this "
             "array MUST match the Name property of "
             "LogicalDevice instances that represent SCSI "
             "logical units. See the method description for "
             "conditions where this MAY be null." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { "CIM_LogicalDevice.Name", 
             "CIM_ControllerConfigurationService.ExposePaths.DeviceNumbers", 
             "CIM_ControllerConfigurationService.ExposePaths.DeviceAccesses" }]
      string LUNames[], 
         [IN, Description ( 
             "IDs of initiator ports. If existing "
             "StorageHardwareID instances exist, they MUST be "
             "used. If no StorageHardwareID instance matches, "
             "then one is implicitly created. See the method "
             "description for conditions where this MAY be null." ), 
          ModelCorrespondence { "CIM_StorageHardwareID.StorageID" }]
      string InitiatorPortIDs[], 
         [IN, Description ( 
             "IDs of target ports. See the method description "
             "for conditions where this MAY be null." ), 
          ModelCorrespondence { "CIM_SCSIProtocolEndpoint.Name" }]
      string TargetPortIDs[], 
         [IN, Description ( 
             "A list of logical unit numbers to assign to the "
             "corresponding logical unit in the LUNames "
             "parameter. (within the context of the elements "
             "specified in the other parameters). If the LUNames "
             "parameter is null, then this parameter MUST be "
             "null. Otherwise, if this parameter is null, all LU "
             "numbers are assigned by the hardware or "
             "instrumentation." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ProtocolControllerForUnit.DeviceNumberCIM_ControllerConfigurationService.ExposePaths.LUNames", 
             "CIM_ControllerConfigurationService.ExposePaths.DeviceAccesses" }]
      string DeviceNumbers[], 
         [IN, Description ( 
             "A list of permissions to assign to the "
             "corresponding logical unit in the LUNames "
             "parameter. This specifies the permission to assign "
             "within the context of the elements specified in "
             "the other parameters. Setting this to \'No Access\' "
             "assigns the DeviceNumber for the associated "
             "initiators, but does not grant read or write "
             "access. If the LUNames parameter is not null then "
             "this parameter MUST be specified." ), 
          ValueMap { "0", "2", "3", "4", "5..15999", "16000.." }, 
          Values { "Unknown", "Read Write", "Read-Only", 
             "No Access", "DMTF Reserved", "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_ProtocolControllerForUnit.DeviceAccessCIM_ControllerConfigurationService.ExposePaths.DeviceNumbers", 
             "CIM_ControllerConfigurationService.ExposePaths.LUNames" }]
      uint16 DeviceAccesses[], 
         [IN, OUT, Description ( 
             "An array of references to SCSIProtocolControllers "
             "(SPCs). On input, this can be null, or contain "
             "exactly one element; there MAY be multiple "
             "references on output. If null on input, the "
             "instrumentation will create one or more new SPC "
             "instances. If an SPC is specified, the "
             "instrumentation will attempt to add associations "
             "to one or more existing SPCs. If the first array "
             "element is a valid SPC reference and SCSI "
             "semantics can be preserved, the instrumentation "
             "MUST attach associations to the specified SPC. If "
             "multiple elements are non-null on input, the "
             "instrumentation MUST report an invalid parameter. "
             "On output, this is an array of references to SPCs "
             "created or modified as the result of processing "
             "the request." )]
      CIM_SCSIProtocolController REF ProtocolControllers[]);

      [Description ( 
          "Hide a list of SCSI logical units (such as a RAID volume "
          "or tape drive) from a list of initiators and/or target "
          "ports on a SCSIProtocolController (SPC). \n"
          "\n"
          "The parameters for this method are: Job - null if no job "
          "created, otherwise this is a reference to the job. "
          "LUNames - the list of names of the logical units to use. "
          "InitiatorPortIDs - the names of the initiator ports to "
          "use. TargetPortIDs - the names of the target ports to "
          "use. ProtocolControllers - SPCs involved in this "
          "operation. \n"
          "\n"
          "When hiding logical units, there are three specific use "
          "cases identified. The instrumentation MUST support these "
          "use cases. Other permutations are allowed, but are "
          "vendor-specific. The use cases are: Remove LUs from a "
          "view, Remove initiator IDs from a view, and Remove "
          "target port IDs from a view. Remove LUs from a view "
          "requires that the LUNames parameter not be null and that "
          "the InitiatorIDs and TargetPortIDs parameters be null. "
          "Remove initiator IDs from a view requires that the "
          "LUNames parameter be null, that the InitiatorIDs not be "
          "null, and that the TargetPortIDs parameters be null. "
          "Remove target port IDs from a view requires that the "
          "LUNames and InitiatorPortIDs parameters be null. \n"
          "\n"
          "The disposition of the SPC when the last logical unit, "
          "initiator ID, or target port ID is removed depends upon "
          "the CIM_ProtocolControllerMaskingCapabilites "
          "SPCAllowsNo* properties. If SPCAllowsNoLUs is false, "
          "then the SPC is automatically deleted when the last "
          "logical unit is removed. If SPCAllowsNoTargets is false, "
          "then the SPC is automatically deleted when the last "
          "target port ID is removed. If SPCAllowsNoInitiators is "
          "false, then the SPC is automatically deleted when the "
          "last initiator port ID is removed. In all other cases, "
          "the SPC MUST be explicitly deleted via the "
          "DeleteInstance intrinsic function." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..4095", "4096", 
          "4097", "4098", "4099", "4100", "4101..32767", 
          "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Invalid logical unit ID", "Invalid initiator port ID", 
          "Invalid target port ID", 
          "Target/initiator combination not exposed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 HidePaths(
         [IN ( false ), OUT, Description ( 
             "Reference to the job if \'Method Parameters "
             "Checked - Job Started\' is returned (MAY be null "
             "if job completed)." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN, Description ( 
             "A list of IDs of logical units. Each LU instance "
             "MUST already exist. See the method description for "
             "conditions where this MAY be null." ), 
          ModelCorrespondence { "CIM_LogicalDevice.Name" }]
      string LUNames[], 
         [IN, Description ( 
             "IDs of initiator ports. See the method description "
             "for conditions where this MAY be null." ), 
          ModelCorrespondence { "CIM_StorageHardwareID.StorageID" }]
      string InitiatorPortIDs[], 
         [IN, Description ( 
             "IDs of target ports. See the method description "
             "for conditions where this MAY be null." ), 
          ModelCorrespondence { "CIM_SCSIProtocolEndpoint.Name" }]
      string TargetPortIDs[], 
         [IN, OUT, Description ( 
             "An array of references to SCSIProtocolControllers "
             "(SPCs). On input, this MUST contain exactly one "
             "element; there MAY be multiple references on "
             "output. The instrumentation will attempt to remove "
             "associations (LUNames, InitiatorPortIDs, or "
             "TargetPortIDs) from this SPC. Depending upon the "
             "specific implementation, the instrumentation MAY "
             "need to create new SPCs with a subset of the "
             "remaining associations. On output, this is an "
             "array of references to SPCs created or modified as "
             "the result of processing the request." )]
      CIM_SCSIProtocolController REF ProtocolControllers[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DeviceServicesLocation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "Within an automated StorageLibrary, Media should be accessible "
       "to the various robotics and MediaTransferDevices (Pickers, "
       "Changers, InterLibraryPorts, etc.). The Library may be "
       "serviced by different TransferDevices, each responsible for a "
       "subset of the Library\'s StorageMediaLocations. The Device "
       "ServicesLocation association indicates that the Transfer "
       "Device handles Media stored in the referenced Location. For "
       "example, LibraryPort \'A\' may only service Media from Slots "
       "1-10, while LibraryPort \'B\' covers Slots 11-33. This detail "
       "is conveyed by this association." )]
class CIM_DeviceServicesLocation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The MediaTransferDevice that handles Media from the "
          "StorageMediaLocation." )]
   CIM_MediaTransferDevice REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The MediaLocation that is serviced." )]
   CIM_StorageMediaLocation REF Dependent;

      [Description ( 
          "Boolean indicating that the referenced "
          "StorageMediaLocation is not currently accessible to the "
          "MediaTransferDevice. For example, the Location could be "
          "the realization of an InterLibraryPort that is currently "
          "servicing another Library. The DeviceServicesLocation "
          "association describes that the TransferDevice COULD "
          "service the MediaLocation. This boolean indicates that "
          "that this is temporarily not possible." )]
   boolean Inaccessible;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiscreteSensor 
// ==================================================================
   [Deprecated { "CIM_Sensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "A DiscreteSensor has a set of legal string values, that it can "
       "report. These values are enumerated in the Sensor\'s "
       "PossibleValues property. A DiscreteSensor will always have a "
       "\'current reading\' that corresponds to one of the enumerated "
       "values. \n"
       "The use of this class is being deprecated in lieu of "
       "CIM_Sensor. Information in the CurrentReading and "
       "PossibleValues properties will typically have the same values "
       "and semantics as for the CurrentState and PossibleStates "
       "properties, inherited from Sensor." )]
class CIM_DiscreteSensor : CIM_Sensor {

      [Deprecated { "CIM_Sensor.CurrentState" }, 
       Description ( "The current value indicated by the Sensor." ), 
       MaxLen ( 64 )]
   string CurrentReading;

      [Deprecated { "CIM_Sensor.PossibleStates" }, 
       Description ( 
          "PossibleValues enumerates the string outputs that can be "
          "reported by the DiscreteSensor." ), 
       MaxLen ( 64 )]
   string PossibleValues[];

      [Deprecated { "No Value" }, 
       Description ( 
          "AcceptableValues details which of the PossibleValues "
          "strings are considered \'acceptable\' (ie, \'not an "
          "error\')." ), 
       MaxLen ( 64 )]
   string AcceptableValues[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiskDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and managment of a DiskDrive, a subtype of "
       "MediaAccessDevice." )]
class CIM_DiskDrive : CIM_MediaAccessDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DisketteDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and managment of a DisketteDrive, a subtype of "
       "MediaAccessDevice." )]
class CIM_DisketteDrive : CIM_MediaAccessDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiskPartition 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "A DiskPartition is a presentation of a contiguous range of "
       "logical blocks that is identifiable by the Operating System "
       "via the Partition\'s type and subtype fields. Disk Partitions "
       "should be directly realized by PhysicalMedia (indicated by the "
       "RealizesDiskPartition association) or built on StorageVolumes "
       "(indicated by the PartitionBasedOnVolume association." )]
class CIM_DiskPartition : CIM_MediaPartition {

      [Description ( 
          "Boolean indicating that the DiskPartition is labelled as "
          "the primary partition for a ComputerSystem." )]
   boolean PrimaryPartition;

      [Description ( "The type of Partition." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Primary", "Extended", "Logical" }]
   uint16 PartitionType;

      [Description ( 
          "The \'sub\' type of a primary, extended, or logical "
          "Partition. The list of possible values corresponds to "
          "the decimal representation of the typical values in the "
          "Partition record." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "14", "15", "16", "17", "18", "20", 
          "22", "23", "27", "28", "33", "35", "36", "38", "49", 
          "51", "52", "53", "54", "55", "60", "64", "65", "66", 
          "67", "80", "81", "82", "83", "84", "85", "86", "97", 
          "99", "100", "101", "102", "103", "104", "105", "113", 
          "115", "116", "117", "118", "119", "120", "121", "128", 
          "129", "130", "131", "132", "134", "135", "147", "148", 
          "161", "163", "164", "165", "166", "177", "179", "180", 
          "182", "183", "184", "193", "196", "198", "199", "216", 
          "219", "225", "227", "228", "229", "230", "239", "240", 
          "241", "242", "243", "244", "246", "254", "255", "65535" }, 
       Values { "Empty | Microsoft", "DOS 12-bit FAT", "XENIX root", 
          "XENIX usr", "DOS 16-bit FAT", "DOS Extended", 
          "DOS 16-bit FAT (> 32MB)", 
          "OS/2 HPFS | Win NTFS | QNX Ver 2 | Adv UNIX", 
          "AIX Boot | OS /2 | Dell (Array) | Commodore DOS", 
          "AIX Data, Coherent", "OS/2 Boot Manager", "32-bit FAT", 
          "32-bit FAT", "Microsoft 16-bit FAT", 
          "Microsoft DOS Extended", "OPUS | OS/2 2.0", 
          "OS/2 (MOSS) Inactive Type 1", 
          "Compaq Diagnostics Partition | Microsoft", 
          "OS/2 (MOSS) Inactive Type 4", 
          "OS/2 (MOSS) Inactive Type 6", 
          "OS/2 (MOSS) Inactive Type 7", 
          "OS/2 (MOSS) Inactive Type B", 
          "OS/2 (MOSS) Inactive Type C", "Microsoft", "Microsoft", 
          "Microsoft", "Microsoft", "Microsoft", "Microsoft", 
          "Microsoft", "OS/2 Logical Volume Manager", "Microsoft", 
          "OS/2 JFS Log", "PowerQuest", 
          "VENIX 80286 | Series/1 Disk", "Personal RISC Boot", 
          "Veritas", "Veritas", 
          "OnTrack Disk Manager Read Only DOS", 
          "OnTrack Disk Manager Read/Write DOS", 
          "CPM | Microport System V/386 | OnTrack Disk Mgr | Microsoft", 
          "OnTrack Disk Manager", "OnTrack Disk Manager Non-DOS", 
          "Micro House EZ-Drive Non-DOS", 
          "Golden Bow Vfeature | Microsoft", 
          "Storage Dimensions SpeedStor | Microsoft", 
          "UNIX - AT&T System V/386 | SCO UNIX", 
          "Novell NetWare | Speedstore", "Novell NetWare", 
          "Novell NetWare", "Novell", "Novell", "Novell", 
          "Microsoft", "Microsoft", "Microsoft", "PC/IX IBM", 
          "Microsoft", "QNX POSIX", "QNX POSIX (Secondary)", 
          "QNX POSIX (Secondary)", 
          "Minix (<=1.4a) | Linux | Microsoft", 
          "Minix (>=1.4b) | Microsoft", "Linux Swap | Prime", 
          "Linux Native | Apple", "System Hibernation for APM", 
          "Microsoft", "HPFS FT mirror", "Amoeba | Microsoft", 
          "Amoeba BBT | Microsoft", "Microsoft", "Microsoft", 
          "Microsoft", "BSD/386", "Microsoft", "Microsoft", 
          "Microsoft", "Microsoft", "Microsoft", 
          "BSDI fs | Microsoft", "BSDI Swap | Microsoft", 
          "Microsoft", "Microsoft", "Microsoft", 
          "Syrinx | HPFS FT Disabled Mirror", "CP/M 86", 
          "Digital Research CPM-86 | Concurrent DOS | OUTRIGGER", 
          "SpeedStor 12-bit FAT Extended", 
          "DOS Read-Only | Storage Dimensions", 
          "SpeedStor 16-bit FAT Extended", "Microsoft", "Microsoft", 
          "Intel", "OS/2 Raw Data", "Storage Dimensions", 
          "DOS (Secondary)", "Microsoft", 
          "SpeedStor Large | Storage Dimensions", "Microsoft", 
          "Lan Step | SpeedStor | IBM PS/2 IML", "Bad Block Tables", 
          "Unknown" }]
   uint16 PartitionSubtype;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiskPartitionBasedOnVolume 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "DiskPartitions should be BasedOn a single StorageVolume (for "
       "example, exposed by a hardware RAID cabinet), an SCC "
       "VolumeSet, or realized directly in PhysicalMedia. The first "
       "two relationships are made explicit in this association. The "
       "latter is conveyed by the RealizesDiskPartition association." )]
class CIM_DiskPartitionBasedOnVolume : CIM_BasedOn {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The StorageVolume." )]
   CIM_StorageVolume REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The DiskPartition which is built on the Volume." )]
   CIM_DiskPartition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Display 
// ==================================================================
   [Abstract, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Display is a superclass for grouping the miscellaneous display "
       "devices that exist." )]
class CIM_Display : CIM_UserDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DriveInDiskGroup
// ==================================================================
   [Association, Aggregation, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::DiskGroup" ), 
    Description ( 
       "CIM_DriveInDiskGroup defines the DiskDrives that participate "
       "in the Group." )]
class CIM_DriveInDiskGroup : CIM_CollectedMSEs {

      [Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( 
          "The DiskGroup. A Drive is a member of at most one DiskGroup."
           )]
   CIM_DiskGroup REF Collection;

      [Override ( "Member" ), 
       Description ( "The DiskDrive in the Group." )]
   CIM_DiskDrive REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DSLModem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The DSLModem class represents the superclass for Digital "
       "Subscriber Line (DSL) Devices. Properties will be defined in a "
       "future release of the model." )]
class CIM_DSLModem : CIM_ConnectionBasedModem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DVDDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and management of a DVDDrive, a subtype of "
       "MediaAccessDevice." )]
class CIM_DVDDrive : CIM_MediaAccessDevice {

      [Description ( 
          "The CD and DVD formats that are supported by this "
          "Device. For example, the Drive may support \"CD-ROM\" "
          "and \"DVD-RAM\". In this case, the values 16 and 24 "
          "would be written to the array. This property\'s values "
          "align with those defined in PhysicalMedia.MediaType." ), 
       ValueMap { "0", "1", "16", "17", "18", "19", "22", "23", 
          "24", "25", "26", "27", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42" }, 
       Values { "Unknown", "Other", "CD-ROM", "CD-ROM/XA", "CD-I", 
          "CD Recordable", "DVD", "DVD-RW+", "DVD-RAM", "DVD-ROM", 
          "DVD-Video", "Divx", "CD-RW", "CD-DA", "CD+", 
          "DVD Recordable", "DVD-RW", "DVD-Audio", "DVD-5", "DVD-9", 
          "DVD-10", "DVD-18" }, 
       ModelCorrespondence { "CIM_PhysicalMedia.MediaType" }]
   uint16 FormatsSupported[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EthernetAdapter
// ==================================================================
   [Deprecated { "CIM_EthernetPort" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_EthernetAdapter class has been "
       "deprecated, consistent with NetworkAdapter. Instead use the "
       "CIM_EthernetPort class. \n"
       "Deprecated description: This class describes the capabilities "
       "and management aspects of an EthernetAdapter." )]
class CIM_EthernetAdapter : CIM_NetworkAdapter {

      [Deprecated { "CIM_EthernetPort.NetworkAddresses" }, 
       Override ( "NetworkAddresses" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Ethernet/802.3 MAC addresses "
          "formatted as twelve hexadecimal digits (for example, "
          "\"010203040506\"), with each pair representing one of "
          "the six octets of the MAC address in \"canonical\" bit "
          "order. (Therefore, the Group address bit is found in the "
          "low order bit of the first character of the string.)" ), 
       ArrayType ( "Indexed" )]
   string NetworkAddresses[];

      [Deprecated { "CIM_EthernetPort.MaxDataSize" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The maximum size of the INFO "
          "(non-MAC) field that will be received or transmitted." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpPortMaxInfo" }]
   uint32 MaxDataSize;

      [Deprecated { "CIM_EthernetPort.Capabilities" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Capabilities of the "
          "EthernetAdapter. For example, the Device might support "
          "AlertOnLan, WakeOnLan, Load Balancing, or FailOver. If "
          "failover or load balancing capabilities are listed, a "
          "SpareGroup (failover) or ExtraCapacityGroup (load "
          "balancing) should also be defined to completely describe "
          "the capability." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_EthernetAdapter.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Deprecated { "CIM_EthernetPort.CapabilityDescriptions" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array of free-form strings "
          "that provides more detailed explanations for any of the "
          "EthernetAdapter features that are indicated in the "
          "Capabilities array. Note, each entry of this array is "
          "related to the entry in the Capabilities array that is "
          "located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_EthernetAdapter.Capabilities" }]
   string CapabilityDescriptions[];

      [Deprecated { "CIM_EthernetPort.EnabledCapabilities" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Specifies which capabilities are "
          "enabled from the list of all supported ones, which are "
          "defined in the Capabilities array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ModelCorrespondence { "CIM_EthernetAdapter.Capabilities" }]
   uint16 EnabledCapabilities[];

      [Deprecated { "CIM_EthernetPortStatistics.SymbolErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times there was an "
          "invalid data symbol when a valid carrier was present. "
          "The count is incremented at most once per carrier event, "
          "even if multiple symbol errors occur during the carrier "
          "event." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsSymbolErrors" }]
   uint32 SymbolErrors;

      [Deprecated { "CIM_NetworkPortStatistics.PacketsTransmitted" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The total number of packets that "
          "are transmitted." ), 
       Counter, MappingStrings { 
          "MIF.DMTF|Network Adapter 802 Port|001.6" }]
   uint64 TotalPacketsTransmitted;

      [Deprecated { "CIM_NetworkPortStatistics.PacketsReceived" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The total number of packets that "
          "are received." ), 
       Counter, MappingStrings { 
          "MIF.DMTF|Network Adapter 802 Port|001.8" }]
   uint64 TotalPacketsReceived;

      [Deprecated { "CIM_EthernetPortStatistics.AlignmentErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames that were "
          "received on a particular interface, are not an integral "
          "number of octets in length, and do not pass the FCS "
          "check. The count that is represented by an instance of "
          "this object is incremented when the alignment Error "
          "status is returned by the MAC layer to the LLC (or other "
          "MAC user). Received frames for which multiple error "
          "conditions obtained are, according to the conventions of "
          "IEEE 802.3 Layer Management, counted exclusively "
          "according to the error status presented to the LLC." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsAlignmentErrors" }]
   uint32 AlignmentErrors;

      [Deprecated { "CIM_EthernetPortStatistics.FCSErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames that were "
          "received on a particular interface and are an integral "
          "number of octets in length, but do not pass the FCS "
          "check. The count represented by an instance of this "
          "object is incremented when the frame CheckError status "
          "is returned by the MAC layer to the LLC (or other MAC "
          "user). Received frames for which multiple error "
          "conditions obtained are, according to the conventions of "
          "IEEE 802.3 Layer Management, counted exclusively "
          "according to the error status presented to the LLC." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsFCSErrors" }]
   uint32 FCSErrors;

      [Deprecated { 
          "CIM_EthernetPortStatistics.SingleCollisionFrames" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of successfully "
          "transmitted frames on a particular interface for which "
          "transmission is inhibited by exactly one collision. A "
          "frame that is counted by an instance of this object is "
          "not counted by the corresponding instance of the "
          "MultipleCollisionFrames property." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsSingleCollisionFrames" }]
   uint32 SingleCollisionFrames;

      [Deprecated { 
          "CIM_EthernetPortStatistics.MultipleCollisionFrames" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of successfully "
          "transmitted frames on a particular interface for which "
          "transmission is inhibited by more than one collision. A "
          "frame that is counted by an instance of this object is "
          "not counted by the corresponding instance of the "
          "SingleCollisionFrames property." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsMultipleCollisionFrames" }]
   uint32 MultipleCollisionFrames;

      [Deprecated { "CIM_EthernetPortStatistics.SQETestErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of times that the SQE "
          "TEST ERROR message is generated by the PLS sublayer for "
          "a particular interface. The SQE TEST ERROR message is "
          "defined in section 7.2.2.2.4 of ANSI/IEEE 802.3-1985 and "
          "its generation is described in section 7.2.4.6 of the "
          "same document." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsSQETestErrors" }]
   uint32 SQETestErrors;

      [Deprecated { 
          "CIM_EthernetPortStatistics.DeferredTransmissions" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames for which the "
          "first transmission attempt on a particular interface is "
          "delayed because the medium is busy. The count "
          "represented by an instance of this object does not "
          "include the frames that are involved in collisions." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsDeferredTransmissions" }]
   uint32 DeferredTransmissions;

      [Deprecated { "CIM_EthernetPortStatistics.LateCollisions" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that a "
          "collision is detected on a particular interface later "
          "than 512 bit-times into the transmission of a packet. "
          "Five hundred and twelve bit-times corresponds to 51.2 "
          "microseconds on a 10 Mbit/s system. A late collision "
          "included in a count that is represented by an instance "
          "of this object is also considered to be a generic "
          "collision for purposes of other collision-related "
          "statistics." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsLateCollisions" }]
   uint32 LateCollisions;

      [Deprecated { "CIM_EthernetPortStatistics.ExcessiveCollisions" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames for which "
          "transmission on a particular interface fails due to "
          "excessive collisions." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsExcessiveCollisions" }]
   uint32 ExcessiveCollisions;

      [Deprecated { 
          "CIM_EthernetPortStatistics.InternalMACTransmitErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames for which "
          "transmission on a particular interface fails due to an "
          "internal MAC sublayer transmit error. A frame is counted "
          "by an instance of this object only if it is not counted "
          "by the corresponding instance of the LateCollisions "
          "property, the Excessive Collisions property, or the "
          "CarrierSenseErrors property. The precise meaning of the "
          "count represented by an instance of this object is "
          "implementation-specific. In particular, an instance of "
          "this object might represent a count of transmission "
          "errors on a particular interface that are not otherwise "
          "counted." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsInternalMacTransmitErrors" }]
   uint32 InternalMACTransmitErrors;

      [Deprecated { 
          "CIM_EthernetPortStatistics.InternalMACReceiveErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames for which "
          "reception on a particular interface fails due to an "
          "internal MAC sublayer receive error. A frame is counted "
          "by an instance of this object only if it is not counted "
          "by the corresponding instance of the FrameTooLongs "
          "property the AlignmentErrors property, or the FCSErrors "
          "property. The precise meaning of the count that is "
          "represented by an instance of this object is "
          "implementation-specific. In particular, an instance of "
          "this object might represent a count of receive errors on "
          "a particular interface that are not otherwise counted." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsInternalMacReceiveErrors" }]
   uint32 InternalMACReceiveErrors;

      [Deprecated { "CIM_EthernetPortStatistics.CarrierSenseErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that the "
          "carrier sense condition was lost or never asserted when "
          "attempting to transmit a frame on a particular "
          "interface. The count represented by an instance of this "
          "object is incremented, at most, once per transmission "
          "attempt, even if the carrier sense condition fluctuates "
          "during a transmission attempt." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsCarrierSenseErrors" }]
   uint32 CarrierSenseErrors;

      [Deprecated { "CIM_EthernetPortStatistics.FrameTooLongs" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A count of frames that are "
          "received on a particular interface that exceeds the "
          "maximum permitted frame size. The count that is "
          "represented by an instance of this object is incremented "
          "when the FrameTooLong status is returned by the MAC "
          "layer to the LLC (or other MAC user). Received frames "
          "for which multiple error conditions obtained are, "
          "according to the conventions of IEEE 802.3 Layer "
          "Management, counted exclusively according to the error "
          "status presented to the LLC." ), 
       Counter, MappingStrings { 
          "MIB.IETF|EtherLike-MIB.dot3StatsFrameTooLongs" }]
   uint32 FrameTooLongs;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EthernetPort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( "Capabilities and management of an EthernetPort." )]
class CIM_EthernetPort : CIM_NetworkPort {

      [Override ( "PortType" ), 
       Description ( 
          "The specific mode that is currently enabled for the "
          "Port. When set to 1 (\"Other\"), the related property "
          "OtherPortType contains a string description of the type "
          "of port." ), 
       ValueMap { "0", "1", "50", "51", "52", "53", "54", "55", 
          "56", "100", "101", "102", "103", "104", "105", "106", 
          "107", "108", "109", "110", "111", "16000..65535" }, 
       Values { "Unknown", "Other", 
          //50 Copper        
          "10BaseT", "10-100BaseT", 
          "100BaseT", "1000BaseT", "2500BaseT", "10GBaseT", 
          "10GBase-CX4", //100 Fiber        
          "100Base-FX", 
          "100Base-SX", "1000Base-SX", "1000Base-LX", "1000Base-CX", 
          "10GBase-SR", "10GBase-SW", "10GBase-LX4", "10GBase-LR", 
          "10GBase-LW", "10GBase-ER", "10GBase-EW", "Vendor Reserved" }]
   uint16 PortType;

      [Override ( "NetworkAddresses" ), 
       Description ( 
          "Ethernet/802.3 MAC addresses formatted as twelve "
          "hexadecimal digits (for example, \"010203040506\"), with "
          "each pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order. (Therefore, the "
          "Group address bit is found in the low order bit of the "
          "first character of the string.)" )]
   string NetworkAddresses[];

      [Description ( 
          "The maximum size of the INFO (non-MAC) field that will "
          "be received or transmitted." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpPortMaxInfo" }]
   uint32 MaxDataSize;

      [Description ( 
          "Capabilities of the EthernetPort. For example, the "
          "Device might support AlertOnLan, WakeOnLan, Load "
          "Balancing, or FailOver. If failover or load balancing "
          "capabilities are listed, a SpareGroup (failover) or "
          "ExtraCapacityGroup (load balancing) should also be "
          "defined to completely describe the capability." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_EthernetPort.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the EthernetPort "
          "features that are indicated in the Capabilities array. "
          "Note, each entry of this array is related to the entry "
          "in the Capabilities array that is located at the same "
          "index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_EthernetPort.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "Specifies which capabilities are enabled from the list "
          "of all supported ones, which are defined in the "
          "Capabilities array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "AlertOnLan", "WakeOnLan", 
          "FailOver", "LoadBalancing" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_EthernetPort.Capabilities", 
          "CIM_EthernetPort.OtherEnabledCapabilities" }]
   uint16 EnabledCapabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the enabled "
          "capabilities that are specified as \'Other\'." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_EthernetPort.EnabledCapabilities" }]
   string OtherEnabledCapabilities[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00736.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="DMTFCR01492.001" type ="add">Fix FCPort.PortType
// description</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FCPort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::FC" ), 
    Description ( 
       "Capabilities and management of a Fibre Channel Port Device." )]
class CIM_FCPort : CIM_NetworkPort {

      [Override ( "PortType" ), 
       Description ( 
          "The specific mode currently enabled for the Port. If the "
          "port is logged in, this will be the negotiated port "
          "type, otherwise the configured port type will be "
          "reported. \n"
          "The values: \"N\" = Node Port, \"NL\" = Node Port "
          "supporting FC arbitrated loop, \"NX\" = Port may "
          "negotiate to become either a node port (N) or a node "
          "port supporting FC arbitrated loop (NL), \"E\" = "
          "Expansion Port connecting fabric elements (for example, "
          "FC switches), \"F\" = Fabric (element) Port, \"FL\" = "
          "Fabric (element) Port supporting FC arbitrated loop, "
          "\"FX\" = Port may negotiate to become a fabric port (F), "
          "or a fabric port supporting FC arbitrated loop (FL). \"B\" "
          "= Bridge port, and \"G\" = Port may negotiate to become "
          "either an expansion port (E), or a fabric port (F), \"GL\" "
          "= Port may negotiate to become an expansion port (E), a "
          "fabric port (F), or a fabric port supporting FC "
          "arbitrated loop (FL). \n"
          "PortTypes are defined in the ANSI X3 standards. When set "
          "to 1 (\"Other\"), the related property OtherPortType "
          "contains a string description of the type of port." ), 
       ValueMap { "0", "1", "10", "11", "12", "13", "14", "15", 
          "16", "17", "18", "16000..65535" }, 
       Values { "Unknown", "Other", "N", "NL", "F/NL", "Nx", "E", 
          "F", "FL", "B", "G", "Vendor Reserved" }]
   uint16 PortType;

      [Description ( 
          "An array of integers that indicates the Fibre Channel "
          "Classes of Service that are supported. The active COS "
          "are indicated in ActiveCOS." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "1", "2", "3", "4", "5", "6", "F" }]
   uint16 SupportedCOS[];

      [Description ( 
          "An array of integers that indicates the Classes of "
          "Service that are active. The Active COS is indicated in "
          "ActiveCOS." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "1", "2", "3", "4", "5", "6", "F" }, 
       ModelCorrespondence { "CIM_FCPort.SupportedCOS" }]
   uint16 ActiveCOS[];

      [Description ( 
          "An array of integers that indicates the Fibre Channel "
          "FC-4 protocols supported. The protocols that are active "
          "and running are indicated in the ActiveFC4Types "
          "property." ), 
       ValueMap { "0", "1", "4", "5", "8", "9", "17", "18", "19", 
          "21", "22", "23", "25", "26", "27", "28", "32", "34", 
          "36", "64", "80", "81", "82", "88", "96", "255" }, 
       Values { "Unknown", "Other", "ISO/IEC 8802 - 2 LLC", 
          "IP over FC", "SCSI - FCP", "SCSI - GPP", 
          "IPI - 3 Master", "IPI - 3 Slave", "IPI - 3 Peer", 
          "CP IPI - 3 Master", "CP IPI - 3 Slave", 
          "CP IPI - 3 Peer", "SBCCS Channel", "SBCCS Control Unit", 
          "FC-SB-2 Channel", "FC-SB-2 Control Unit", 
          "Fibre Channel Services (FC-GS, FC-GS-2, FC-GS-3)", 
          "FC-SW", "FC - SNMP", "HIPPI - FP", "BBL Control", 
          "BBL FDDI Encapsulated LAN PDU", 
          "BBL 802.3 Encapsulated LAN PDU", "FC - VI", "FC - AV", 
          "Vendor Unique" }]
   uint16 SupportedFC4Types[];

      [Description ( 
          "An array of integers that indicates the Fibre Channel "
          "FC-4 protocols currently running. A list of all "
          "supported protocols is indicated in the "
          "SupportedFC4Types property." ), 
       ValueMap { "0", "1", "4", "5", "8", "9", "17", "18", "19", 
          "21", "22", "23", "25", "26", "27", "28", "32", "34", 
          "36", "64", "80", "81", "82", "88", "96", "255" }, 
       Values { "Unknown", "Other", "ISO/IEC 8802 - 2 LLC", 
          "IP over FC", "SCSI - FCP", "SCSI - GPP", 
          "IPI - 3 Master", "IPI - 3 Slave", "IPI - 3 Peer", 
          "CP IPI - 3 Master", "CP IPI - 3 Slave", 
          "CP IPI - 3 Peer", "SBCCS Channel", "SBCCS Control Unit", 
          "FC-SB-2 Channel", "FC-SB-2 Control Unit", 
          "Fibre Channel Services (FC-GS, FC-GS-2, FC-GS-3)", 
          "FC-SW", "FC - SNMP", "HIPPI - FP", "BBL Control", 
          "BBL FDDI Encapsulated LAN PDU", 
          "BBL 802.3 Encapsulated LAN PDU", "FC - VI", "FC - AV", 
          "Vendor Unique" }, 
       ModelCorrespondence { "CIM_FCPort.SupportedFC4Types" }]
   uint16 ActiveFC4Types[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_FibreChannelAdapter
// ==================================================================
   [Deprecated { "CIM_FCPort" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_FibreChannelAdapter class is "
       "deprecated, consistent with the deprecation of NetworkAdapter. "
       "Instead use CIM_FCPort. \n"
       "Deprecated description: This class describes the capabilities "
       "and management aspects of a Fibre Channel Adapter." )]
class CIM_FibreChannelAdapter : CIM_NetworkAdapter {

      [Deprecated { 
          "CIM_NetworkPort.SupportedMaximumTransmissionUnit" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The maximum frame size, in "
          "bytes, supported by the Adapter." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 MaxFrameSize;

      [Deprecated { "CIM_FCPort.SupportedCOS" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The Fibre Channel Classes of "
          "Service that are supported by the Adapter, on its Ports. "
          "The currently negotiated COS for a connection is a "
          "property (NegotiatedCOS) on the FibrePort ActiveLogin "
          "association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "1", "2", "3", "4", "6", "F" }]
   uint16 SupportedCOS[];

      [Deprecated { "CIM_FCPort.SupportedFC4Types" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array of integers that "
          "indicates the Fibre Channel FC-4 protocols that are "
          "supported by the Adapter. The protocols that are active "
          "and running are indicated in the CurrentFC4Types "
          "property. The values that are used in this array are "
          "taken from the FC-GS2 (bit-mapped) field defined in "
          "Table 11 of the standard. Also, FC-SB-2 codes are "
          "included from the T11 document, 236V0. If the FC4 Type "
          "is \"Vendor Unique\" (value=255), then the specific "
          "vendor values (in the range, 0xE0 to 0xFF) should be "
          "listed in the FC4VendorUniqueTypes property." ), 
       ValueMap { "0", "1", "4", "5", "8", "9", "17", "18", "19", 
          "21", "22", "23", "25", "26", "27", "28", "32", "34", 
          "36", "64", "80", "81", "82", "88", "96", "255" }, 
       Values { "Unknown", "Other", "ISO/IEC 8802 - 2 LLC", 
          "IP over FC", "SCSI - FCP", "SCSI - GPP", 
          "IPI - 3 Master", "IPI - 3 Slave", "IPI - 3 Peer", 
          "CP IPI - 3 Master", "CP IPI - 3 Slave", 
          "CP IPI - 3 Peer", "SBCCS Channel", "SBCCS Control Unit", 
          "FC-SB-2 Channel", "FC-SB-2 Control Unit", 
          "Fibre Channel Services (FC-GS, FC-GS-2, FC-GS-3)", 
          "FC-SW", "FC - SNMP", "HIPPI - FP", "BBL Control", 
          "BBL FDDI Encapsulated LAN PDU", 
          "BBL 802.3 Encapsulated LAN PDU", "FC - VI", "FC - AV", 
          "Vendor Unique" }, 
       ModelCorrespondence { 
          "CIM_FibreChannelAdapter.FC4VendorUniqueTypes" }]
   uint16 FC4TypesSupported[];

      [Deprecated { "CIM_FCPort.SupportedFC4Types" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: When the FC4TypesSupported array "
          "contains the value 255 (\"Vendor Unique\"), then the "
          "property, FC4Vendor UniqueTypes, lists of all the "
          "vendor-specific protocols that are supported by the "
          "Adapter. These values are in the range 0xE0 to 0xFF." ), 
       MinValue ( 240 ), 
       MaxValue ( 255 )]
   uint16 FC4VendorUniqueTypes[];

      [Deprecated { "CIM_FCPort.ActiveFC4Types" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array of integers that "
          "indicate the Fibre Channel FC-4 protocols that are "
          "currently running on the Adapter. A list of all "
          "protocols that are supported by the Adapter is indicated "
          "in the FC4TypesSupported property. The values used in "
          "this array are taken from the FC-GS2 (bit-mapped) field "
          "that is defined in Table 11 of the standard. Also, "
          "FC-SB-2 codesare included from the T11 document, 236V0. "
          "If the FC4 Type is \"Vendor Unique\" (value=255), then "
          "the specific vendor values (in the range 0xE0 to 0xFF) "
          "that are currently running should be listed in the "
          "CurrentFC4VendorTypes property." ), 
       ValueMap { "0", "1", "4", "5", "8", "9", "17", "18", "19", 
          "21", "22", "23", "25", "26", "27", "28", "32", "34", 
          "36", "64", "80", "81", "82", "88", "96", "255" }, 
       Values { "Unknown", "Other", "ISO/IEC 8802 - 2 LLC", 
          "IP over FC", "SCSI - FCP", "SCSI - GPP", 
          "IPI - 3 Master", "IPI - 3 Slave", "IPI - 3 Peer", 
          "CP IPI - 3 Master", "CP IPI - 3 Slave", 
          "CP IPI - 3 Peer", "SBCCS Channel", "SBCCS Control Unit", 
          "FC-SB-2 Channel", "FC-SB-2 Control Unit", 
          "Fibre Channel Services (FC-GS, FC-GS-2, FC-GS-3)", 
          "FC-SW", "FC - SNMP", "HIPPI - FP", "BBL Control", 
          "BBL FDDI Encapsulated LAN PDU", 
          "BBL 802.3 Encapsulated LAN PDU", "FC - VI", "FC - AV", 
          "Vendor Unique" }, 
       ModelCorrespondence { 
          "CIM_FibreChannelAdapter.FC4TypesSupported", 
          "CIM_FibreChannelAdapter.CurrentFC4VendorTypes" }]
   uint16 CurrentFC4Types[];

      [Deprecated { "CIM_FCPort.ActiveFC4Types" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: When the CurrentFC4Types array "
          "contains the value 255 (\"Vendor Unique\"), then the "
          "property, CurrentFC4 VendorTypes, lists all the "
          "vendor-specific protocols running on the Adapter. These "
          "values are in the range 0xE0 to 0xFF." ), 
       MinValue ( 240 ), 
       MaxValue ( 255 ), 
       ModelCorrespondence { 
          "CIM_FibreChannelAdapter.FC4VendorUniqueTypes" }]
   uint16 CurrentFC4VendorTypes[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A list of the Capabilities of "
          "the Fibre Channel Adapter. For example, the capability "
          "that the Adapter utilizes the Directory Server, or that "
          "it generates State Change Notifications can be indicated "
          "using the values 2 and 12, respectively." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15" }, 
       Values { "Unknown", "Other", "Utilizes the Directory Server", 
          "Utilizes the Time Server", 
          "Utilizes the Management Server", 
          "Utilizes the Alias Server", 
          "Utilizes the Security Key Distribution Server", 
          "Utilizes the Clock Synchronization Server", 
          "Utilizes the Multicast Server", 
          "Utilizes QoS Facilitator", "Utilizes Broadcast Services", 
          "Supports Fabric Login Server", 
          "Generates State Change Notifications", 
          "Registers for State Change Notifications", 
          "Responds to Read Connection Status", 
          "Supports Third Party Process Logout" }, 
       ArrayType ( "Indexed" )]
   uint16 Capabilities[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array of free-form strings "
          "that provide more detailed explanations for any of the "
          "Adapter features that are indicated in the Capabilities "
          "array. Note, each entry of this array is related to the "
          "entry in the Capabilities array that is located at the "
          "same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_FibreChannelAdapter.Capabilities" }]
   string CapabilityDescriptions[];

      [Deprecated { "CIM_FCPortStatistics.ErrorFrames" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that a frame "
          "was received but no buffer was available." ), 
       Counter]
   uint64 ReceiveBufferErrors;

      [Deprecated { "CIM_FCPortStatistics.ErrorFrames" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that a frame "
          "was received but no end-to-end credit was available." ), 
       Counter]
   uint64 ReceiveEndErrors;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A \'long\' timeout value (in "
          "milliseconds) for determining when to reinstate a "
          "Recovery_Qualifier. The default value is 120 seconds "
          "(120000 milliseconds). The value is typically set to the "
          "ErrorDetectTimeout value + 2*(fabric delay time)." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 ResourceAllocationTimeout;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: A \'short\' timeout value (in "
          "milliseconds) for determining that an error has "
          "occurred. The default value is 10 seconds (10000 "
          "milliseconds)." ), 
       Units ( "MilliSeconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 ErrorDetectTimeout;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of Class 1 sequences sent "
          "since the last reset of the Device." ), 
       Counter]
   uint64 Class1SequencesSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of Class 2 sequences sent "
          "since the last reset of the Device." ), 
       Counter]
   uint64 Class2SequencesSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of Class 3 sequences sent "
          "since the last reset of the Device." ), 
       Counter]
   uint64 Class3SequencesSent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of Class 4 sequences sent "
          "since the last reset of the Device." ), 
       Counter]
   uint64 Class4SequencesSent;

      [Deprecated { "CIM_FCPortStatistics.BytesReceived" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of octets received by the "
          "Adapter when running Class 2 service." ), 
       Counter]
   uint64 Class2OctetsReceived;

      [Deprecated { "CIM_FCPortStatistics.BytesTransmitted" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of octets that are "
          "transmitted by the Adapter when running Class 2 service." ), 
       Counter]
   uint64 Class2OctetsTransmitted;

      [Deprecated { "CIM_FCPortStatistics.PacketsReceived" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "received by the Adapter when running Class 2 service." ), 
       Counter]
   uint64 Class2FramesReceived;

      [Deprecated { "CIM_FCPortStatistics.PacketsTransmitted" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "transmitted by the Adapter when running Class 2 service." ), 
       Counter]
   uint64 Class2FramesTransmitted;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "discarded by the Adapter when running Class 2 service." ), 
       Counter]
   uint64 Class2DiscardFrames;

      [Deprecated { "CIM_FCPortStatistics.BytesReceived" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of octets that were "
          "received by the Adapter when running Class 3 service." ), 
       Counter]
   uint64 Class3OctetsReceived;

      [Deprecated { "CIM_FCPortStatistics.BytesTransmitted" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of octets that were "
          "transmitted by the Adapter when running Class 3 service." ), 
       Counter]
   uint64 Class3OctetsTransmitted;

      [Deprecated { "CIM_FCPortStatistics.PacketsReceived" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "received by the Adapter when running Class 3 service." ), 
       Counter]
   uint64 Class3FramesReceived;

      [Deprecated { "CIM_FCPortStatistics.PacketsTransmitted" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "transmitted by the Adapter when running Class 3 service." ), 
       Counter]
   uint64 Class3FramesTransmitted;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "discarded by the Adapter when running Class 3 service." ), 
       Counter]
   uint64 Class3DiscardFrames;

      [Deprecated { "CIM_FCPortStatistics.ErrorFrames" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of parity errors that "
          "were detected somewhere in the data path." ), 
       Counter]
   uint64 ParityErrors;

      [Deprecated { "CIM_FCPortStatistics.ErrorFrames" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of Class 1 or 2 frames "
          "that are not ACKed within the time indicated by "
          "ErrorDetectTimeout." ), 
       Counter]
   uint64 FrameTimeouts;

      [Deprecated { "CIM_FCPortStatistics.BufferCreditNotProvided" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of times that the Device "
          "has been without a buffer credit for a time longer than "
          "ErrorDetectTimeout." ), 
       Counter]
   uint64 BufferCreditErrors;

      [Deprecated { "CIM_FCPortStatistics.BufferCreditNotReceived" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of times that the Device "
          "has been without an end credit for a time longer than "
          "ErrorDetectTimeout." ), 
       Counter]
   uint64 EndCreditErrors;

      [Deprecated { "CIM_FCPortStatistics.DelimiterErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of frames that were "
          "received out of order." ), 
       Counter]
   uint64 OutOfOrderFramesReceived;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_FibrePort
// ==================================================================
   [Deprecated { "CIM_FCPort" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the FibrePort class is deprecated because "
       "FibreChannel Adapter has been deprecated in lieu of FCPort and "
       "this class overlaps with FCPort. The new FCPort class should "
       "be used in lieu of both FibreChannelAdapter and FibrePort. \n"
       "Deprecated description: FibrePort describes the capabilities "
       "and management aspects of a Fibre Channel Port Device." )]
class CIM_FibrePort : CIM_LogicalPort {

      [Deprecated { "CIM_FCPort.PermanentAddress" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An address value that is used to "
          "identify the source (S_ID) or destination (D_ID) of a "
          "frame. The FC-SW standard includes a table of special "
          "address identifier values and their meanings. Consult "
          "the FC-SW documentation for additional information." )]
   uint32 AddressIdentifier;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: An array that indicates the "
          "modes in which the Port can operate. PortType values "
          "describe the role and behavior of the Fibre Channel "
          "entity: \"N\" = Node Port, \"NL\" = Node Port supporting "
          "FC arbitrated loop, \"E\" = Expansion Port connecting "
          "fabric elements (for example, FC switches), \"F\"=Fabric "
          "(element) Port, \"FL\"=Fabric (element) Port supporting "
          "FC arbitrated loop, and \"B\"=Bridge Port. PortTypes are "
          "defined in the ANSI X3 standards. \n"
          "\n"
          "A particular mode can be listed multiple times in the "
          "SupportedPortTypes array in order to define that "
          "multiple, unique version levels are supported. Version "
          "information is defined in the PortTypeVersions property. "
          "Note, each entry of the SupportedPortTypes array is "
          "related to the entry in PortTypeVersions that is located "
          "at the same index." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "N", "NL-Private", "NL-Public", "E", "F", 
          "FL", "B" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_FibrePort.PortTypeVersions" }]
   uint16 SupportedPortTypes[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Version information for each of "
          "the SupportedPortTypes. A particular PortType (mode) can "
          "be listed multiple times in the SupportedPortTypes array "
          "in order to define multiple, unique version levels. "
          "Note, each entry of this array is related to the entry "
          "in SupportedPortTypes that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_FibrePort.SupportedPortTypes" }]
   string PortTypeVersions[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The specific modes currently "
          "enabled for the Port. The values are equal to, or a "
          "subset of the values in the Supported PortTypes array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "N", "NL-Private", "NL-Public", "E", "F", 
          "FL", "B" }, 
       ModelCorrespondence { "CIM_FibrePort.SupportedPortTypes", 
          "CIM_FibrePort.EnabledVersions" }]
   uint16 EnabledPortTypes[];

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Version information for each of "
          "the EnabledPortTypes. A particular PortType (mode) might "
          "be listed multiple times in the EnabledPortTypes array "
          "in order to define multiple, unique version levels. "
          "Note, each entry of this array is related to the entry "
          "in EnabledPortTypes that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_FibrePort.EnabledPortTypes" }]
   string EnabledVersions[];

      [Deprecated { "CIM_FCPort.PortType" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The specific mode in which the "
          "Port is currently running. The value is one of the "
          "entries in the EnabledPortTypes array. The current port "
          "type or mode is dependent on the fibre technology. For "
          "example, in a public loop network, you might indicate a "
          "port type of \"FL\" (value=6) or \"NL\" (value=2)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "N", "NL-Private", "NL-Public", "E", "F", 
          "FL", "B" }, 
       ModelCorrespondence { "CIM_FibrePort.EnabledPortTypes", 
          "CIM_FibrePort.CurrentVersion" }]
   uint16 CurrentPortType;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Version information for the "
          "CurrentPortType that is active." ), 
       ModelCorrespondence { "CIM_FibrePort.CurrentPortType" }]
   string CurrentVersion;

      [Deprecated { "CIM_FCPort.NetworkAddresses" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: One or more address identifiers "
          "that can be recognized by the Port, in addition to its "
          "port-specific identifier. Multicast or hunt group "
          "addresses that are recognized by the Port would be "
          "identified in this array." )]
   uint32 AliasAddresses[];

      [Deprecated { "CIM_FCPortStatistics.LossOfSignalCounter" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of times that the signal "
          "has been lost on the Port since the last reset of the "
          "Device." ), 
       Counter]
   uint64 LossOfSignalCounter;

      [Deprecated { "CIM_FCPortStatistics.LossOfSyncCounter" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of times that "
          "synchronization has been lost on the Port since the last "
          "reset of the Device. Synchronization is assumed lost "
          "after a timeout period that is identified by the "
          "Receiver TransmitterTimeout property." ), 
       Counter]
   uint64 LossOfSyncCounter;

      [Deprecated { "CIM_FCPortStatistics.CRCErrors" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Number of times that the CRC in "
          "a frame does not match the CRC computed by the receiver." ), 
       Counter]
   uint64 CRCErrors;

      [Deprecated { "CIM_FCPortStatistics.InvalidTransmissionWords" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of transmission words "
          "that had an 8b10b code violation in one or more of its "
          "characters, had a K28.5 in its second, third, or fourth "
          "character positions, or was an ordered set that had an "
          "incorrect Beginning Running Disparity." ), 
       Counter]
   uint64 InvalidTransmissionWords;

      [Deprecated { "CIM_FCPortStatistics.FramesTooShort" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames that were "
          "received that were shorter than 28 octets. The value of "
          "28 is calculated based on an assumption of 24 header "
          "bytes plus 4 CRC bytes. The count does not include "
          "SOF/EOF bytes that are not data." ), 
       Counter]
   uint64 FramesTooShort;

      [Deprecated { "CIM_FCPortStatistics.FramesTooLong" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of frames that were "
          "received that were longer than 2140 octets. The value of "
          "2140 is calculated based on an assumption of 24 header "
          "bytes plus 4 CRC bytes and 2112 bytes of payload." ), 
       Counter]
   uint64 FramesTooLong;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that a fill "
          "word could not be inserted, when required. The "
          "Elasticity Buffer is defined in FC-AL. This event might "
          "cause data corruption and might indicate a configuration "
          "error or that a device is out of spec." ), 
       Counter]
   uint64 ElasticityBufferUnderruns;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The number of times that a fill "
          "word could not be deleted, when required. The Elasticity "
          "Buffer is defined in FC-AL. This event might cause data "
          "corruption and might indicate a configuration error or a "
          "device out of spec." ), 
       Counter]
   uint64 ElasticityBufferOverruns;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Timeout value in milliseconds "
          "that is used to determine when loss of synchronization "
          "has occurred. The typical default is 100 msec." ), 
       Units ( "Milliseconds" ), 
       PUnit ( "second * 10^-3" )]
   uint64 ReceiverTransmitterTimeout;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Indication of whether the Port "
          "is currently bypassed (value=2) or not (value=1). A "
          "value of 3 (\"Forced Insert\") describes that the Port "
          "is forced active, when it would otherwise be \"Bypassed\"."
           ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Not Bypassed", "Bypassed", 
          "Forced Insert" }]
   uint16 BypassedState;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The type of cabling as sensed by "
          "the Port. Not all Fibre Ports are capable of providing "
          "this information. In this case, a value of 0, \"Unknown\", "
          "will be returned. Also, when single or multi-mode fiber "
          "cabling cannot be distinguished, the more general value "
          "4, \"Fiber-optic\" can be specified." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "No Media", "Copper/Twinaxial", 
          "Fiber-optic", "Fiber Single Mode", "Fiber Multimode" }]
   uint16 ConnectedMedia;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_FibrePortActiveLogin
// ==================================================================
   [Association, Deprecated { "CIM_ActiveConnection", "CIM_FCPort" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of FibrePortActiveLogin is deprecated because "
       "FibrePort is deprecated. \n"
       "Deprecated description: Information for FibrePortActiveLogin "
       "is found by examining the individual FCPorts, and an "
       "ActiveConnection between the FCProtocolEndpoints that are "
       "associated with the ports. FibrePortActiveLogin indicates that "
       "two FibrePorts are connected through a login and have "
       "negotiated their Class Of Service, frame size, and other link "
       "characteristics, as specified by an instance of this class." )]
class CIM_FibrePortActiveLogin {

      [Deprecated { "CIM_ActiveConnection.Dependent" }, 
       Key, Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The originator of the login." )]
   CIM_FibrePort REF LoginOriginator;

      [Deprecated { "CIM_ActiveConnection.Antecedent" }, 
       Key, Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The responder to the login." )]
   CIM_FibrePort REF LoginResponder;

      [Deprecated { "CIM_FCPort.ActiveCOS" }, 
       Key, Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The Fibre Channel Class of "
          "Service that is currently running between the Ports. "
          "Because two Ports can be simultaneously connected at "
          "different Classes of Service, this property had to be "
          "part of the key of the object and therefore, the "
          "identity of the instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "1", "2", "3", "4", "6", "F" }, 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus PortExtensions|001.5" }, 
       ModelCorrespondence { "CIM_FibreChannelAdapter.SupportedCOS" }]
   uint16 NegotiatedCOS;

      [Deprecated { "CIM_FCPort.ActiveMaximumTransmissionUnit" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The Fibre Channel frame size, in "
          "bytes, that is currently negotiated between the two "
          "Ports." ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint64 NegotiatedFrameSize;

      [Deprecated { "CIM_FCPort.Speed" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The speed for communications "
          "that is currently negotiated between the two Ports. "
          "Speed is specified in Bits per Second. If this "
          "information is not available, the property should be set "
          "to 0." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint64 NegotiatedSpeed;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: Acknowledgement model that is "
          "negotiated during Port login. For example, ACK-1 "
          "indicates that each frame should be acknowledged." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "ACK-0", "ACK-1", "ACK-N" }, 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus PortExtensions|001.6" }]
   uint16 ACKModel;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The buffer-to-buffer model that "
          "was negotiated during Port login. Either the model "
          "defined by the FC-PH standard is used (value=1, "
          "\"Regular\") or an \"Alternate\" model is negotiated." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Regular", "Alternate" }]
   uint16 BufferToBufferModel;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: OriginatorBufferCredit reflects "
          "the buffer credit of the Port that is defined as the "
          "LoginOriginator. This method is the number of frame "
          "buffers that were made available by the originating Port "
          "to the responder Port. Buffer credits are used in "
          "point-to- point connections, when an NL-Local Port is "
          "logged into another NL-Local Port, and when Nx Ports are "
          "logged into Fx Ports. In other scenarios, this value is "
          "undefined." ), 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus PortExtensions|001.3" }]
   uint64 OriginatorBufferCredit;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: ResponderBufferCredit reflects "
          "the buffer credit of the Port that is defined as the "
          "LoginResponder. This method is the number of frame "
          "buffers that were made available by the responder Port "
          "to the originating Port. Buffer credits are used in "
          "point-to-point connections, when an NL-Local Port is "
          "logged into another NL-Local Port, and when Nx Ports are "
          "logged into Fx Ports. In other scenarios, this value is "
          "undefined." ), 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus PortExtensions|001.3" }]
   uint64 ResponderBufferCredit;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: OriginatorEndCredit reflects the "
          "end credit of the Port that is defined as the "
          "LoginOriginator. This method is the number of frame "
          "buffers that were made available by the originating Port "
          "to the responder Port. End credits are used in "
          "point-to-point connections, when an NL-Local Port is "
          "logged into another NL-Local Port, and when Nx Ports are "
          "logged into remote Nx Ports. In other scenarios, this "
          "value is undefined." ), 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus PortExtensions|001.2" }]
   uint64 OriginatorEndCredit;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: ResponderEndCredit reflects the "
          "end credit of the Port that is defined as the "
          "LoginResponder. This method is the number of frame "
          "buffers that were made available by the responder Port "
          "to the originating Port. End credits are used in "
          "point-to-point connections, when an NL-Local Port is "
          "logged into another NL-Local Port, and when Nx Ports are "
          "logged into remote Nx Ports. In other scenarios, this "
          "value is undefined." ), 
       MappingStrings { 
          "MIF.DMTF|Fibre Channel Bus PortExtensions|001.2" }]
   uint64 ResponderEndCredit;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FibrePortOnFCAdapter
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of this method has been deprecated. \n"
       "Deprecated description: The use of FibrePortOnFCAdapter is "
       "deprecated because both FibrePort and FibreChannelAdapter have "
       "been deprecated. No replacement is needed because the 2 "
       "classes are combined into a single class. FibrePortOnFCAdapter "
       "associates a FibrePort with a FibreChannelAdapter." )]
class CIM_FibrePortOnFCAdapter : CIM_PortOnDevice {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The FibreChannelAdapter that "
          "includes the Port." )]
   CIM_FibreChannelAdapter REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The FibrePort on the Adapter." )]
   CIM_FibrePort REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_FlatPanel 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Capabilities and management of the FlatPanel LogicalDevice." )]
class CIM_FlatPanel : CIM_Display {

      [Description ( "FlatPanel\'s horizontal resolution in Pixels." ), 
       Units ( "Pixels" ), 
       PUnit ( "pixel" )]
   uint32 HorizontalResolution;

      [Description ( "FlatPanel\'s vertical resolution in Pixels." ), 
       Units ( "Pixels" ), 
       PUnit ( "pixel" )]
   uint32 VerticalResolution;

      [Description ( 
          "A FlatPanel\'s scan mode indicating either single "
          "(value=2) or dual scan (3)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Single Scan", "Dual Scan" }]
   uint16 ScanMode;

      [Description ( 
          "An integer enumeration describing the type of flat panel display."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Passive Matrix LCD", 
          "Active Matrix LCD", "Cholesteric LCD", 
          "Field Emission Display", "Electro Luminescent Display", 
          "Gas Plasma", "LED" }]
   uint16 DisplayType;

      [Description ( 
          "A description of the display illumination type. For "
          "example, backlit (value=2) or reflective (4) can be "
          "specified." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Backlit", "Edgelit", 
          "Reflective" }]
   uint16 LightSource;

      [Description ( 
          "Boolean indicating whether the FlatPanel supports color display."
           )]
   boolean SupportsColor;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HDSLModem
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The HDSLModem class represents Modems of the DSL type = HDSL, "
       "High data rate Digital Subscribe Line, which is capable of "
       "delivering T1 or E1 speeds. Properties will be defined in a "
       "future release of the model." )]
class CIM_HDSLModem : CIM_DSLModem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedStoragePool 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "SystemStoragePool is a specialization of SystemComponent "
       "association that establishes that the StoragePool is defined "
       "in the context of the System." )]
class CIM_HostedStoragePool : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The parent system in the Association." )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The StoragePool that is a component of a System." )]
   CIM_StoragePool REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InterLibraryPort 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "InterLibraryPorts represent hardware that transports Physical "
       "Media between connected StorageLibraries. The LibraryExchange "
       "association identifies the connected Libraries, by identifying "
       "the connected InterLibraryPorts." )]
class CIM_InterLibraryPort : CIM_MediaTransferDevice {

      [Description ( 
          "Date and time that the Port was last accessed by its "
          "System/StorageLibrary. This value may be different than "
          "that specified for the Port(s) to which this Inter "
          "LibraryPort is connected. Connected Ports are identified "
          "using the LibraryExchange association." )]
   datetime LastAccessed;

      [Description ( 
          "The number of times that the InterLibraryPort was used "
          "to move a PhysicalMedia into the System/StorageLibrary." ), 
       Counter]
   uint64 ImportCount;

      [Description ( 
          "The number of times that the InterLibraryPort was used "
          "to move a PhysicalMedia out of the "
          "System/StorageLibrary." ), 
       Counter]
   uint64 ExportCount;

      [Description ( 
          "An enumeration expressing whether the Port is used for "
          "import into the Library/System which scopes and names it "
          "(value=1), export from the Library/System (value=2), or "
          "both (value=3)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Import", "Export", 
          "Both Import and Export" }]
   uint16 Direction;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ISDNModem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The ISDNModem class, a kind of call-based Modem. Properties "
       "will be defined in a future release of the model." )]
class CIM_ISDNModem : CIM_CallBasedModem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Keyboard 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Capabilities and management of the Keyboard LogicalDevice." )]
class CIM_Keyboard : CIM_UserDevice {

      [Description ( "Number of function keys on the Keyboard." )]
   uint16 NumberOfFunctionKeys;

      [Description ( 
          "A free-form string indicating the format and layout of "
          "the Keyboard." ), 
       MappingStrings { "MIF.DMTF|Keyboard|004.1" }]
   string Layout;

      [Description ( 
          "An integer indicating whether a hardware-level password "
          "is enabled at the keyboard (value=4), preventing local "
          "input. Other values are: \"Disabled\" (3), \"Not "
          "Implemented\" (5), \"Other\" (1) and \"Unknown\" (2)." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Disabled", "Enabled", 
          "Not Implemented" }, 
       MappingStrings { "MIF.DMTF|System Hardware Security|001.2" }]
   uint16 Password;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LibraryExchange 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "LibraryExchange indicates that two StorageLibraries are "
       "connected through their InterLibraryPorts." )]
class CIM_LibraryExchange : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The InterLibraryPort of one StorageLibrary." )]
   CIM_InterLibraryPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The InterLibraryPort of the connected Library." )]
   CIM_InterLibraryPort REF Dependent;

      [Description ( 
          "Enumeration indicating whether the Antecedent (value=1), "
          "Dependent (value=2), or neither Library (value=3) "
          "currently has access to the Port." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Antecedent", "Dependent", "Neither" }]
   uint16 CurrentlyAccessingPort;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LibraryPackage 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "Similar to the way that LogicalDevices are \'Realized\' by "
       "PhysicalElements, a StorageLibrary can be realized in one or "
       "more PhysicalPackages. The LibraryPackage association "
       "explicitly defines this relationship." )]
class CIM_LibraryPackage : CIM_SystemPackaging {

      [Override ( "Antecedent" ), 
       Description ( 
          "The PhysicalPackage(s) that realize a StorageLibrary." )]
   CIM_PhysicalPackage REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The StorageLibrary." )]
   CIM_StorageLibrary REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_LimitedAccessPort 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "LimitedAccessPorts represent hardware that transports Physical "
       "Media into or out of a System, such as a StorageLibrary. They "
       "are identified as \'limited\' since these Ports do not provide "
       "access to ALL the PhysicalMedia or StorageMediaLocations in a "
       "Library, but only to a subset." )]
class CIM_LimitedAccessPort : CIM_MediaTransferDevice {

      [Description ( 
          "Boolean indicating that the Port is \'locked\' (TRUE) or "
          "\'unlocked\' (FALSE). When the Port is locked, access "
          "its Media Locations is prevented without the use of a "
          "physical key, front panel activity or the issuance of a "
          "software unlock command." )]
   boolean Locked;

      [Description ( 
          "When a Port is \'Extended\' or \'open\' (value=TRUE), "
          "its Storage MediaLocations are accessible to a human "
          "operator. If not extended (value=FALSE), the Locations "
          "are accessible to a PickerElement." )]
   boolean Extended;

      [Description ( 
          "When a LimitedAccessPort is \'Extended\', all related "
          "media- transfer componentry may be stopped. The "
          "ExtendTimeout property provides a mechanism to event on "
          "a Port left open for a period of time (in seconds) "
          "exceeding the property\'s value." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 ExtendTimeout;

      [Description ( 
          "Date and time that the Port was last extended." )]
   datetime LastExtended;

      [Description ( 
          "The number of times that the LimitedAccessPort was used "
          "to move a PhysicalMedia into the System/StorageLibrary." ), 
       Counter]
   uint64 ImportCount;

      [Description ( 
          "The number of times that the LimitedAccessPort was used "
          "to move a PhysicalMedia out of the "
          "System/StorageLibrary." ), 
       Counter]
   uint64 ExportCount;

      [Description ( 
          "An enumeration expressing whether the Port is used for "
          "import into the Library/System which scopes and names it "
          "(value=1), export from the Library/System (value=2), or "
          "both (value=3)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Import", "Export", 
          "Both Import and Export" }]
   uint16 Direction;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalDiskBasedOnExtent 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "LogicalDisks can be BasedOn a single StorageVolume, Memory (in "
       "the case of a RAM Disk), a DiskPartition or other "
       "StorageExtent. These relationships are made explicit in this "
       "association. Subclasses of the association, LogicalDiskBasedOn "
       "Partition and LogicalDiskBasedOnVolume, detail the \'typical\' "
       "semantics." )]
class CIM_LogicalDiskBasedOnExtent : CIM_BasedOn {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDisk which is built on the StorageExtent." )]
   CIM_LogicalDisk REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalDiskBasedOnPartition 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "LogicalDisks can be BasedOn a DiskPartition. For example, a "
       "personal computer\'s C: drive may be located on a Partition on "
       "local PhysicalMedia. In this association of LogicalDisks to "
       "Partitions, note that the cardinality of the Antecedent, Disk "
       "Partition, is Max (1). This dictates that a LogicalDisk can "
       "not span more than one Partition. However, there are cases "
       "where this is true. When it occurs, the LogicalDisk is really "
       "based on some kind of RAID configuration (for example, a "
       "mirror or stripe set). In these scenarios, the LogicalDisk is "
       "more correctly BasedOn a StorageVolume. To prevent incorrectly "
       "using the LogicalDiskBasedOnPartition association, the Max (1) "
       "qualifier was put on the Antecedent reference to the "
       "DiskPartition." )]
class CIM_LogicalDiskBasedOnPartition : CIM_LogicalDiskBasedOnExtent {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The DiskPartition." )]
   CIM_DiskPartition REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDisk which is built on the StorageExtent." )]
   CIM_LogicalDisk REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalDiskBasedOnVolume 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "LogicalDisks can be BasedOn a single Volume (for example, "
       "exposed by a software volume manager), or be BasedOn a Disk "
       "Partition directly. The former relationship is made explicit "
       "in this association." )]
class CIM_LogicalDiskBasedOnVolume : CIM_LogicalDiskBasedOnExtent {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The StorageVolume." )]
   CIM_StorageVolume REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDisk which is built on the StorageExtent." )]
   CIM_LogicalDisk REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalDiskBasedOnVolumeSet 
// ==================================================================
   [Association, Deprecated { "CIM_BasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "This association describes that LogicalDisks can be BasedOn a "
       "VolumeSet. However, there is no need for the specificity of "
       "this association. It is deprecated in lieu of the generic "
       "BasedOn relationship." )]
class CIM_LogicalDiskBasedOnVolumeSet : CIM_LogicalDiskBasedOnVolume {

      [Deprecated { "CIM_BasedOn.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The VolumeSet." )]
   CIM_VolumeSet REF Antecedent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MagnetoOpticalDrive 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "Capabilities and managment of a MagnetoOpticalDrive, a subtype "
       "of MediaAccessDevice." )]
class CIM_MagnetoOpticalDrive : CIM_MediaAccessDevice {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ModulePort 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "ModulePort associates ports with their hosting modules." )]
class CIM_ModulePort : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "A module that has ports." )]
   CIM_LogicalModule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "A Port that is associated with a module." )]
   CIM_NetworkPort REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MultiStateSensor 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "A Multi-StateSensor is a multi-member set of Sensors." )]
class CIM_MultiStateSensor : CIM_Sensor {


};

// Copyright (c) 2007 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00786.001" type ="change">Add write qualifier
// to LowerThresholdNonCritical, UpperThresholdNonCritical,
// LowerThresholdCritical, UpperThresholdCritical, LowerThresholdFatal,
// UpperThresholdFatal.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// <change cr="CIMCoreCR942" type="add">Added Pascals to BaseUnit </change>
// ==================================================================
//  CIM_NumericSensor
// ==================================================================
   [Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "A Numeric Sensor is capable of returning numeric readings and "
       "optionally supports thresholds settings." )]
class CIM_NumericSensor : CIM_Sensor {

      [Description ( 
          "The base unit of the values returned by this Sensor. All "
          "the values returned by this Sensor are represented in "
          "the units obtained by (BaseUnits * 10 raised to the "
          "power of the UnitModifier). For example, if BaseUnits is "
          "Volts and the UnitModifier is -6, then the units of the "
          "values returned are MicroVolts. However, if the "
          "RateUnits property is set to a value other than \"None\", "
          "then the units are further qualified as rate units. In "
          "the above example, if RateUnits is set to \"Per Second\", "
          "then the values returned by the Sensor are in "
          "MicroVolts/Second. The units apply to all numeric "
          "properties of the Sensor, unless explicitly overridden "
          "by the Units qualifier." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66" }, 
       Values { "Unknown", "Other", "Degrees C", "Degrees F", 
          "Degrees K", "Volts", "Amps", "Watts", "Joules", 
          "Coulombs", //10 
          "VA", "Nits", "Lumens", "Lux", 
          "Candelas", "kPa", "PSI", "Newtons", "CFM", "RPM", 
          //20 
          "Hertz", "Seconds", "Minutes", "Hours", 
          "Days", "Weeks", "Mils", "Inches", "Feet", "Cubic Inches", 
          //30 
          "Cubic Feet", "Meters", 
          "Cubic Centimeters", "Cubic Meters", "Liters", 
          "Fluid Ounces", "Radians", "Steradians", "Revolutions", 
          "Cycles", //40 
          "Gravities", "Ounces", "Pounds", 
          "Foot-Pounds", "Ounce-Inches", "Gauss", "Gilberts", 
          "Henries", "Farads", "Ohms", //50 
          "Siemens", 
          "Moles", "Becquerels", "PPM (parts/million)", "Decibels", 
          "DbA", "DbC", "Grays", "Sieverts", 
          "Color Temperature Degrees K", //60 
          "Bits", 
          "Bytes", "Words (data)", "DoubleWords", "QuadWords", 
          "Percentage", "Pascals" }, 
       ModelCorrespondence { "CIM_NumericSensor.UnitModifier", 
          "CIM_NumericSensor.RateUnits" }]
   uint16 BaseUnits;

      [Description ( 
          "The unit multiplier for the values returned by this "
          "Sensor. All the values returned by this Sensor are "
          "represented in the units obtained by (BaseUnits * 10 "
          "raised to the power of the UnitModifier). For example, "
          "if BaseUnits is Volts and the Unit Modifier is -6, then "
          "the units of the values returned are MicroVolts. "
          "However, if the RateUnits property is set to a value "
          "other than \"None\", then the units are further "
          "qualified as rate units. In the above example, if "
          "RateUnits is set to \"Per Second\", then the values "
          "returned by the Sensor are in MicroVolts/Second. The "
          "units apply to all numeric properties of the Sensor, "
          "unless explicitly overridden by the Units qualifier." ), 
       ModelCorrespondence { "CIM_NumericSensor.BaseUnits", 
          "CIM_NumericSensor.RateUnits" }]
   sint32 UnitModifier;

      [Description ( 
          "Specifies if the units returned by this Sensor are rate "
          "units. All the values returned by this Sensor are "
          "represented in the units obtained by (BaseUnits * 10 "
          "raised to the power of the UnitModifier). This is true "
          "unless this property (RateUnits) has a value different "
          "than \"None\". For example, if BaseUnits is Volts and "
          "the UnitModifier is -6, then the units of the values "
          "returned are MicroVolts. But, if the RateUnits property "
          "is set to a value other than \"None\", then the units "
          "are further qualified as rate units. In the above "
          "example, if RateUnits is set to \"Per Second\", then the "
          "values returned by the Sensor are in MicroVolts/Second. "
          "The units apply to all numeric properties of the Sensor, "
          "unless explicitly overridden by the Units qualifier. Any "
          "implementation of CurrentReading should be qualified "
          "with either a Counter or a Gauge qualifier, depending on "
          "the characteristics of the sensor being modeled." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "None", "Per MicroSecond", "Per MilliSecond", 
          "Per Second", "Per Minute", "Per Hour", "Per Day", 
          "Per Week", "Per Month", "Per Year" }, 
       ModelCorrespondence { "CIM_NumericSensor.UnitModifier", 
          "CIM_NumericSensor.BaseUnits" }]
   uint16 RateUnits;

      [Description ( "The current value indicated by the Sensor." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.5", 
          "MIF.DMTF|Electrical Current Probe|001.5", 
          "MIF.DMTF|Voltage Probe|001.5" }]
   sint32 CurrentReading;

      [Description ( 
          "NominalReading indicates the \'normal\' or expected "
          "value for the NumericSensor." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.6", 
          "MIF.DMTF|Electrical Current Probe|001.6", 
          "MIF.DMTF|Voltage Probe|001.6" }]
   sint32 NominalReading;

      [Description ( 
          "NormalMax provides guidance for the user as to the "
          "normal maximum range for the NumericSensor." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.7", 
          "MIF.DMTF|Electrical Current Probe|001.7", 
          "MIF.DMTF|Voltage Probe|001.7" }]
   sint32 NormalMax;

      [Description ( 
          "NormalMin provides guidance for the user as to the "
          "normal minimum range for the NumericSensor." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.8", 
          "MIF.DMTF|Electrical Current Probe|001.8", 
          "MIF.DMTF|Voltage Probe|001.8" }]
   sint32 NormalMin;

      [Description ( 
          "MaxReadable indicates the largest value of the measured "
          "property that can be read by the NumericSensor." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.9", 
          "MIF.DMTF|Electrical Current Probe|001.9", 
          "MIF.DMTF|Voltage Probe|001.9" }]
   sint32 MaxReadable;

      [Description ( 
          "MinReadable indicates the smallest value of the measured "
          "property that can be read by the NumericSensor." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.10", 
          "MIF.DMTF|Electrical Current Probe|001.10", 
          "MIF.DMTF|Voltage Probe|001.10" }]
   sint32 MinReadable;

      [Description ( 
          "Resolution indicates the ability of the Sensor to "
          "resolve differences in the measured property. The units "
          "for this measurement are determined by "
          "BaseUnit*UnitModifier/RateUnit." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.17", 
          "MIF.DMTF|Electrical Current Probe|001.17", 
          "MIF.DMTF|Voltage Probe|001.17" }]
   uint32 Resolution;

      [Deprecated { "CIM_NumericSensor.Resolution", 
          "CIM_NumericSensor.Accuracy" }, 
       Description ( 
          "This property is being deprecated in lieu of using the "
          "Resolution and Accuracy properties. \n"
          "Indicates the tolerance of the Sensor for the measured "
          "property. Tolerance, along with Resolution and Accuracy, "
          "is used to calculate the actual value of the measured "
          "physical property. Tolerance may vary depending on "
          "whether the Device is linear over its dynamic range." )]
   sint32 Tolerance;

      [Description ( 
          "Indicates the accuracy of the Sensor for the measured "
          "property. Its value is recorded as plus/minus hundredths "
          "of a percent. Accuracy, along with Resolution, is used "
          "to calculate the actual value of the measured physical "
          "property. Accuracy may vary depending on whether the "
          "Device is linear over its dynamic range." ), 
       Units ( "Hundredths of Percent" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.19", 
          "MIF.DMTF|Electrical Current Probe|001.19", 
          "MIF.DMTF|Voltage Probe|001.19" }, 
       PUnit ( "percent * 10^-2" )]
   sint32 Accuracy;

      [Description ( 
          "Indicates that the Sensor is linear over its dynamic range."
           )]
   boolean IsLinear;

      [Description ( 
          "Indicates the margin built around the thresholds. This "
          "margin prevents unnecessary state changes when the "
          "Sensor reading may fluctuate very close to its "
          "thresholds. This could be due to the Sensor\'s "
          "tolerance/accuracy/resolution or due to environmental "
          "factors. Once a threshold is crossed, the state of the "
          "Sensor should change. However, the state should not "
          "fluctuate between the old and new states unless the "
          "Sensor\'s change in the reading exceeds the hysteresis "
          "value. The units for this measurement are determined by "
          "BaseUnit*UnitModifier/RateUnit." )]
   uint32 Hysteresis;

      [Write, Description ( 
          "The Sensor\'s threshold values specify the ranges (min "
          "and max values) for determining whether the Sensor is "
          "operating under Normal, NonCritical, Critical or Fatal "
          "conditions. If Current Reading is between "
          "LowerThresholdNonCritical and Upper "
          "ThresholdNonCritical, then the Sensor is reporting a "
          "normal value. If CurrentReading is between "
          "LowerThresholdNonCritical and LowerThresholdCritical, "
          "then the CurrentState is NonCritical." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.11", 
          "MIF.DMTF|Electrical Current Probe|001.11", 
          "MIF.DMTF|Voltage Probe|001.11" }]
   sint32 LowerThresholdNonCritical;

      [Write, Description ( 
          "The Sensor\'s threshold values specify the ranges (min "
          "and max values) for determining whether the Sensor is "
          "operating under Normal, NonCritical, Critical or Fatal "
          "conditions. If the CurrentReading is between "
          "LowerThresholdNonCritical and UpperThresholdNonCritical, "
          "then the Sensor is reporting a normal value. If the "
          "CurrentReading is between UpperThreshold NonCritical and "
          "UpperThresholdCritical, then the CurrentState is "
          "NonCritical." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.12", 
          "MIF.DMTF|Electrical Current Probe|001.12", 
          "MIF.DMTF|Voltage Probe|001.12" }]
   sint32 UpperThresholdNonCritical;

      [Write, Description ( 
          "The Sensor\'s threshold values specify the ranges (min "
          "and max values) for determining whether the Sensor is "
          "operating under Normal, NonCritical, Critical or Fatal "
          "conditions. If the CurrentReading is between "
          "LowerThresholdCritical and Lower ThresholdFatal, then "
          "the CurrentState is Critical." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.13", 
          "MIF.DMTF|Electrical Current Probe|001.13", 
          "MIF.DMTF|Voltage Probe|001.13" }]
   sint32 LowerThresholdCritical;

      [Write, Description ( 
          "The Sensor\'s threshold values specify the ranges (min "
          "and max values) for determining whether the Sensor is "
          "operating under Normal, NonCritical, Critical or Fatal "
          "conditions. If the CurrentReading is between "
          "UpperThresholdCritical and Upper ThresholdFatal, then "
          "the CurrentState is Critical." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.14", 
          "MIF.DMTF|Electrical Current Probe|001.14", 
          "MIF.DMTF|Voltage Probe|001.14" }]
   sint32 UpperThresholdCritical;

      [Write, Description ( 
          "The Sensor\'s threshold values specify the ranges (min "
          "and max values) for determining whether the Sensor is "
          "operating under Normal, NonCritical, Critical or Fatal "
          "conditions. If the CurrentReading is below "
          "LowerThresholdFatal, then the Current State is Fatal." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.15", 
          "MIF.DMTF|Electrical Current Probe|001.15", 
          "MIF.DMTF|Voltage Probe|001.15" }]
   sint32 LowerThresholdFatal;

      [Write, Description ( 
          "The Sensor\'s threshold values specify the ranges (min "
          "and max values) for determining whether the Sensor is "
          "operating under Normal, NonCritical, Critical or Fatal "
          "conditions. If the CurrentReading is above "
          "UpperThresholdFatal, then the Current State is Fatal." ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.16", 
          "MIF.DMTF|Electrical Current Probe|001.16", 
          "MIF.DMTF|Voltage Probe|001.16" }]
   sint32 UpperThresholdFatal;

      [Description ( 
          "An array representing the thresholds supported by this Sensor."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "LowerThresholdNonCritical", 
          "UpperThresholdNonCritical", "LowerThresholdCritical", 
          "UpperThresholdCritical", "LowerThresholdFatal", 
          "UpperThresholdFatal" }]
   uint16 SupportedThresholds[];

      [Description ( 
          "An array representing the thresholds that are currently "
          "enabled for this Sensor." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "LowerThresholdNonCritical", 
          "UpperThresholdNonCritical", "LowerThresholdCritical", 
          "UpperThresholdCritical", "LowerThresholdFatal", 
          "UpperThresholdFatal" }]
   uint16 EnabledThresholds[];

      [Description ( 
          "An array representing the writable thresholds supported by Sensor."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "LowerThresholdNonCritical", 
          "UpperThresholdNonCritical", "LowerThresholdCritical", 
          "UpperThresholdCritical", "LowerThresholdFatal", 
          "UpperThresholdFatal" }]
   uint16 SettableThresholds[];


      [Description ( 
          "This method resets the values of the thresholds to "
          "hardware defaults. This method returns 0 if successful, "
          "1 if unsupported and any other value if an error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' may also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 RestoreDefaultThresholds(
);

      [Deprecated { "No Value" }, 
       Description ( 
          "The use of this method is being deprecated, since "
          "Current senor reading can be retrieved through the "
          "GetInstance operation. \n"
          "For a non-linear Sensor, the resolution, accuracy, "
          "tolerance and hysteresis vary as the current reading "
          "moves. This method can be used to get these factors for "
          "a given reading. It returns 0 if successful, 1 if "
          "unsupported, and any other value if an error occurred. "
          "In a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 GetNonLinearFactors(
         [IN, Description ( 
             "The sensor reading to get information for." )]
      sint32 SensorReading, 
         [IN ( false ), OUT, Description ( 
             "The accuracy of the reading." )]
      sint32 Accuracy, 
         [IN ( false ), OUT, Description ( 
             "The resolution of the reading." )]
      uint32 Resolution, 
         [IN ( false ), OUT, Description ( 
             "The tolerance of the reading." )]
      sint32 Tolerance, 
         [IN ( false ), OUT, Description ( 
             "The Hysteresis of the reading." )]
      uint32 Hysteresis);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OOBAlertServiceOnModem
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "OOBAlertServiceOnModem defines where the out-of-band alerting "
       "Service is implemented. The Service can either employ a Modem "
       "or NetworkAdapter to send alerts." )]
class CIM_OOBAlertServiceOnModem : CIM_DeviceServiceImplementation {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The Modem that implements the alerting Service." )]
   CIM_Modem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The alerting Service that is provided on the Modem." )]
   CIM_OOBAlertService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OOBAlertServiceOnNetworkAdapter
// ==================================================================
   [Association, Deprecated { "CIM_OOBAlertServiceOnNetworkPort" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of CIM_OOBAlertServiceOnNetworkAdapter has been "
       "deprecated because NetworkAdapter has been deprecated. Instead "
       "use the CIM_OOBAlertServiceOnNetworkPort class. \n"
       "Deprecated description: OOBAlertServiceOnNetworkAdapter "
       "defines where the out-of-band alerting Service is implemented." )]
class CIM_OOBAlertServiceOnNetworkAdapter : CIM_DeviceServiceImplementation {

      [Deprecated { "CIM_OOBAlertServiceOnNetworkPort.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The NetworkAdapter that "
          "implements the Service." )]
   CIM_NetworkAdapter REF Antecedent;

      [Deprecated { "CIM_OOBAlertServiceOnNetworkPort.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The alerting Service that is "
          "provided on the NetworkAdapter." )]
   CIM_OOBAlertService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OOBAlertServiceOnNetworkPort
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "OOBAlertServiceOnNetworkPort defines where the out-of-band "
       "alerting Service is implemented. Currently, the Service can "
       "either employ a Modem or a NetworkPort to send alerts." )]
class CIM_OOBAlertServiceOnNetworkPort : CIM_DeviceServiceImplementation {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The NetworkPort that implements the Service." )]
   CIM_NetworkPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The alerting Service that is provided on the NetworkPort." )]
   CIM_OOBAlertService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageAlarm 
// ==================================================================
   [Association, Deprecated { "CIM_PackageDependency" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "Often, an AlarmDevice is installed as part of a Package, not "
       "to indicate issues with any particular LogicalDevice or "
       "PhysicalComponent, but with the Package\'s environment in "
       "general, its security state or its overall health. The use of "
       "this association has been deprecated. Instead, use "
       "PackageDependency to describe this relationship." )]
class CIM_PackageAlarm : CIM_PackageDependency {

      [Deprecated { "CIM_PackageDependency.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( "The AlarmDevice for the Package." )]
   CIM_AlarmDevice REF Antecedent;

      [Deprecated { "CIM_PackageDependency.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The PhysicalPackage whose health, security, environment, "
          "etc. is alarmed." )]
   CIM_PhysicalPackage REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageCooling
// ==================================================================
   [Association, Deprecated { "CIM_PackageDependency" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::CoolingAndPower" ), 
    Description ( 
       "Note: The use of this association has been deprecated. "
       "Instead, the more generic PackageDependency relationship "
       "should be used. \n"
       "Deprecated description: Often, a CoolingDevice is installed in "
       "a Package such as a Chassis or a Rack, not for a specific "
       "Device, but to assist in the cooling of the Package in "
       "general." )]
class CIM_PackageCooling : CIM_PackageDependency {

      [Deprecated { "CIM_PackageDependency.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The CoolingDevice for the "
          "Package." )]
   CIM_CoolingDevice REF Antecedent;

      [Deprecated { "CIM_PackageDependency.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The PhysicalPackage whose "
          "environment is cooled." )]
   CIM_PhysicalPackage REF Dependent;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Capabilities and management of a PCI controller that provide "
       "bridge-to-bridge capability." )]
class CIM_PCIBridge : CIM_PCIDevice {

      [Description ( 
          "The type of bridge. Except for \"Host\" (value=0) and "
          "\"PCIe-to-PCI\" (value=10), the type of bridge is "
          "PCI-to-<value>. For type \"Host\", the device is a "
          "Host-to-PCI bridge. For type \"PCIe-to-PCI\", the device "
          "is a PCI Express-to-PCI bridge." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "128", ".." }, 
       Values { "Host", "ISA", "EISA", "Micro Channel", "PCI", 
          "PCMCIA", "NuBus", "CardBus", "RACEway", "AGP", "PCIe", 
          "PCIe-to-PCI", // 128 
          "Other", "DMTF Reserved" }]
   uint16 BridgeType;

      [Description ( 
          "The timeslice for the secondary interface when the "
          "bridge is acting as an initiator. A 0 value indicates no "
          "requirement." ), 
       Units ( "PCI clock cycles" ), 
       PUnit ( "cycle" )]
   uint8 SecondaryLatencyTimer;

      [Description ( 
          "The number of the highest numbered bus that exists "
          "behind the bridge." )]
   uint8 SubordinateBusNumber;

      [Description ( 
          "The number of the PCI bus segment to which the secondary "
          "interface of the bridge is connected." )]
   uint8 SecondayBusNumber;

      [Description ( 
          "The number of the PCI bus segment to which the primary "
          "interface of the bridge is connected." )]
   uint8 PrimaryBusNumber;

      [Description ( 
          "The contents of the SecondaryStatusRegister of the "
          "Bridge. For more information on the contents of this "
          "register, refer to the PCI-to-PCI Bridge Architecture "
          "Specification." )]
   uint16 SecondaryStatusRegister;

      [Description ( 
          "The slowest device-select timing for a target device on "
          "the secondary bus." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Fast", "Medium", "Slow", 
          "DMTF Reserved" }]
   uint16 SecondaryBusDeviceSelectTiming;

      [Description ( 
          "End address of the I/O addresses supported by the bus. "
          "The upper 4 bits of this property specify the address "
          "bits, AD[15::12], of the I/O address. Each of the "
          "remaining 12 bits of the I/O address are assumed to be "
          "1." )]
   uint8 IOLimit;

      [Description ( 
          "Base address of I/O addresses supported by the bus. The "
          "upper 4 bits of this property specify the address bits, "
          "AD[15::12], of the I/O address. Each of the remaining 12 "
          "bits of the I/O address are assumed to be 0." )]
   uint8 IOBase;

      [Description ( 
          "End address of the memory supported by the bus. The "
          "upper 12 bits of this property specify the address bits, "
          "AD[31::20], of a 32-bit memory address. Each of the "
          "remaining 20 bits of the address are assumed to be 1." )]
   uint16 MemoryLimit;

      [Description ( 
          "Base address of the memory supported by the bus. The "
          "upper 12 bits of this property specify the address bits, "
          "AD[31::20], of a 32-bit memory address. Each of the "
          "remaining 20 bits of the address are assumed to be 0." )]
   uint16 MemoryBase;

      [Description ( 
          "End address of the memory that can be prefetched by the "
          "bus. The upper 12 bits of this property specify the "
          "address bits, AD[31::20], of a 32-bit memory address. "
          "Each of the remaining 20 bits of the address are assumed "
          "to be 1." )]
   uint16 PrefetchMemoryLimit;

      [Description ( 
          "Base address of the memory that can be prefetched by the "
          "bus. The upper 12 bits of this property specify the "
          "address bits, AD[31::20], of a 32-bit memory address. "
          "Each of the remaining 20 bits of the address are assumed "
          "to be 0." )]
   uint16 PrefetchMemoryBase;

      [Description ( 
          "Upper 32 bits of the supported prefetch end address when "
          "64-bit addressing is used. The lower 32 bits are each "
          "assumed to be 1." )]
   uint32 PrefetchLimitUpper32;

      [Description ( 
          "Upper 32 bits of the supported prefetch base address "
          "when 64-bit addressing is used. The lower 32 bits are "
          "assumed to be 0." )]
   uint32 PrefetchBaseUpper32;

      [Description ( 
          "Upper 16 bits of the supported I/O end address when "
          "32-bit I/O addressing is used. The lower 16 bits are "
          "each assumed to be 1." )]
   uint16 IOLimitUpper16;

      [Description ( 
          "Upper 16 bits of the supported I/O base address when "
          "32-bit I/O addressing is used. The lower 16 bits are "
          "assumed to be 0." )]
   uint16 IOBaseUpper16;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="CIMCoreCR00734.006" type ="deprecate">Deprecate class.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PCVideoController
// ==================================================================
   [Deprecated { "CIM_DisplayController" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of the CIM_PCVideoController class has been "
       "deprecated in lieu of CIM_DisplayController. \n"
       "Deprecated description: Capabilities and management of a "
       "PCVideoController, a subtype of VideoController." )]
class CIM_PCVideoController : CIM_VideoController {

      [Deprecated { "No Value" }, 
       Description ( 
          "The video architecture. For example, VGA (value=5) or "
          "PC-98 (160) can be specified." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "160" }, 
       Values { "Other", "Unknown", "CGA", "EGA", "VGA", "SVGA", 
          "MDA", "HGC", "MCGA", 
          // 10                        
          "8514A", "XGA", 
          "Linear Frame Buffer", "PC-98" }, 
       MappingStrings { "MIF.DMTF|Video|004.2" }]
   uint16 VideoArchitecture;

      [Deprecated { "No Value" }, 
       Description ( "Current video mode." ), 
       MappingStrings { "MIF.DMTF|Video|004.3" }]
   uint16 VideoMode;

      [Deprecated { "No Value" }, 
       Description ( 
          "Current number of color planes. If this value is not "
          "applicable for the current video configuration, enter 0." )]
   uint16 NumberOfColorPlanes;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PExtentRedundancyComponent 
// ==================================================================
   [Association, Deprecated { "CIM_ExtentRedundancyComponent" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Describes the PhysicalExtents participating in a Storage "
       "RedundancyGroup. However, there is no need for the specificity "
       "of this association. It is deprecated in lieu of the generic "
       "ExtentRedundancyComponent relationship, its superclass." )]
class CIM_PExtentRedundancyComponent : CIM_ExtentRedundancyComponent {

      [Deprecated { "CIM_ExtentRedundancyComponent.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( "The StorageRedundancyGroup." )]
   CIM_StorageRedundancyGroup REF GroupComponent;

      [Deprecated { "CIM_ExtentRedundancyComponent.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "The PhysicalExtent participating in the RedundancyGroup." )]
   CIM_PhysicalExtent REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PickerForChanger 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "PickerForChanger indicates the PickerElement(s) that access "
       "StorageMediaLocations and deliver PhysicalMedia to the "
       "Changer, for movement through the System. A Changer may have "
       "several Pickers for faster exchange of Media." )]
class CIM_PickerForChanger : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The PickerElement that accesses StorageMediaLocations to "
          "deliver Media to the Changer." )]
   CIM_PickerElement REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The ChangerDevice." )]
   CIM_ChangerDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PickerLabelReader 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "PickerLabelReader is used to indicate that one or more Label "
       "Readers works in conjunction with PickerElements, to identify "
       "PhysicalMedia as they are being picked/placed." )]
class CIM_PickerLabelReader : CIM_AssociatedLabelReader {

      [Override ( "Antecedent" ), 
       Description ( "The LabelReader." )]
   CIM_LabelReader REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PickerElement that is dependent on the Reader Device." )]
   CIM_PickerElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_PointingDevice 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "PointingDevice represents those Devices used to \'point\' to "
       "regions of a Display." )]
class CIM_PointingDevice : CIM_UserDevice {

      [Description ( "The type of the pointing device." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Other", "Unknown", "Mouse", "Track Ball", 
          "Track Point", "Glide Point", "Touch Pad", "Touch Screen", 
          "Mouse - Optical Sensor" }, 
       MappingStrings { "MIF.DMTF|Pointing Device|003.1" }]
   uint16 PointingType;

      [Description ( 
          "Number of buttons. If the PointingDevice has no buttons, enter 0."
           ), 
       MappingStrings { "MIF.DMTF|Pointing Device|003.4" }]
   uint8 NumberOfButtons;

      [Description ( 
          "Integer indicating whether the PointingDevice is "
          "configured for right (value=2) or left handed operation "
          "(value=3). Also, the values, \"Unknown\" (0) and \"Not "
          "Applicable\" (1), can be defined." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Not Applicable", 
          "Right Handed Operation", "Left Handed Operation" }]
   uint16 Handedness;

      [Description ( 
          "Tracking resolution of the PointingDevice in Counts per Inch."
           ), 
       Units ( "Counts per Inch" ), 
       PUnit ( "count / inch" )]
   uint32 Resolution;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PortImplementsEndpoint
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "PortImplementsEndpoint associates a LogicalPort with one or "
       "more ProtocolEndpoints that are implemented on it. This class "
       "specializes the DeviceSAPImplementation association. It "
       "indicates that the referenced Endpoint is dependent on the "
       "operations of the Port Device." )]
class CIM_PortImplementsEndpoint : CIM_DeviceSAPImplementation {

      [Override ( "Antecedent" ), 
       Description ( 
          "The LogicalPort that represents the Device behind the "
          "ProtocolEndpoint." )]
   CIM_LogicalPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ProtocolEndpoint that is implemented on the LogicalPort."
           )]
   CIM_ProtocolEndpoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_POTSModem
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The POTSModem class represents a Device that translates binary "
       "data into wave modulations for sound-based transmission. It "
       "connects to the POTS (Plain Old Telephone System) network." )]
class CIM_POTSModem : CIM_CallBasedModem {

      [Description ( 
          "Capabilities of the POTSModem. For example, the Device "
          "might support distinctive ring, caller ID, fax, voice, "
          "and so on." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12" }, 
       Values { "Unknown", "Other", "Distinctive Ring", "Caller ID", 
          "Voice", "Fax Class 1", "Fax Class 2", "WakeOnRing", 
          "Fax Group 3", "GSM Support", "AMPS Support", 
          "OOB Alerting", "Worldwide Country Support" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_POTSModem.CapabilityDescriptions" }]
   uint16 Capabilities[];

      [Description ( 
          "An array of free-form strings that provides more "
          "detailed explanations for any of the POTSModem features "
          "indicated in the Capabilities array. Note, each entry of "
          "this array is related to the entry in the Capabilities "
          "array that is located at the same index." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_POTSModem.Capabilities" }]
   string CapabilityDescriptions[];

      [Description ( 
          "Specifies which capabilities from the list of those "
          "supported are enabled and defined in the Capabilities "
          "array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12" }, 
       Values { "Unknown", "Other", "Distinctive Ring", "Caller ID", 
          "Voice", "Fax Class 1", "Fax Class 2", "WakeOnRing", 
          "Fax Group 3", "GSM Support", "AMPS Support", 
          "OOB Alerting", "Worldwide Country Support" }, 
       ModelCorrespondence { "CIM_POTSModem.Capabilities" }]
   uint16 EnabledCapabilities[];

      [Description ( 
          "Defines the maximum communication speed to the COM Port "
          "for an external modem that can be set. Enter 0 if not "
          "applicable." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 MaxBaudRateToSerialPort;

      [Description ( 
          "Defines the maximum communication speed for accessing "
          "the phone system that can be set." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 MaxBaudRateToPhone;

      [Description ( 
          "Boolean that indicates that synchronous, as well as "
          "asynchronous, communication is supported." )]
   boolean SupportsSynchronousConnect;

      [Description ( 
          "DialType is an integer that indicates whether tone "
          "(value=1) or pulse dialing (value=2) is used. \"Unknown\" "
          "(0) can also be defined." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Tone", "Pulse" }]
   uint16 DialType;

      [Description ( 
          "InactivityTimeout defines the time limit (in seconds) "
          "for automatic disconnection of the phone line, if no "
          "data is exchanged. A value of 0 indicates that this "
          "feature is present but not enabled." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 InactivityTimeout;

      [Description ( 
          "Describes the volume level of the audible tones from the "
          "Modem. For example, high, medium, or low volume can be "
          "reported (values 3, 4, or 5, respectively)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Not Supported", "High", 
          "Medium", "Low", "Off", "Auto" }]
   uint16 SpeakerVolumeInfo;

      [Description ( 
          "CountriesSupported is an array of strings that defines "
          "the countries in which the POTSModem operates." ), 
       MaxLen ( 64 )]
   string CountriesSupported[];

      [Description ( 
          "CountrySelected is a string value that defines the "
          "country for which the Modem is currently programmed. "
          "When multiple countries are supported, this property "
          "defines which one is currently selected for use." ), 
       MaxLen ( 64 )]
   string CountrySelected;

      [Description ( 
          "Number of rings before the Modem answers an incoming call."
           )]
   uint8 RingsBeforeAnswer;

      [Description ( 
          "MaxNumberOfPasswords specifies the number of passwords "
          "that can be defined in the Modem itself. If this feature "
          "is not supported, enter 0." )]
   uint16 MaxNumberOfPasswords;

      [Description ( 
          "CurrentPasswords is an array that contains the currently "
          "defined passwords for the Modem. This array might be "
          "left blank for security reasons." ), 
       MaxLen ( 24 )]
   string CurrentPasswords[];

      [Description ( 
          "Indication of whether the Modem supports call-back." )]
   boolean SupportsCallback;

      [Description ( 
          "AnswerMode defines the current auto-answer or call-back "
          "setting for the Modem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Disabled", "Manual Answer", 
          "Auto Answer", "Auto Answer with Call-Back" }]
   uint16 AnswerMode;

      [Description ( 
          "The current equalization setting for the Modem." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Other", "Long", "Short" }]
   uint16 Equalization;

      [Description ( "List of black-listed numbers for the Modem." )]
   string BlackListedNumbers[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00857" type ="change'>Update the
// description of the class and the properties descriptions
// and MappingStrings.</
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_PrintQueue
// ==================================================================
   [Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "Capabilities and management of a Printer Queue. A PrintQueue "
       "holds PrintJobs that are placed on the Queue by a Print "
       "Service. Jobs can move from Queue to Queue. The ABNF for CIM "
       "references to PWG Standards and MIBs is in the directory "
       "\'ftp://ftp.pwg.org/pub/pwg/general/process\' in the file "
       "\'pwg-cim-references-format-20060309.txt\'. An example for a "
       "MappingStrings reference to a PWG Standard is "
       "\'PWG5101-1.PWG|Section 4 Media Color Names\'. An example for "
       "a MappingStrings reference to a PWG MIB is "
       "\'MIB.PWG|PWG-IMAGING-COUNTER-MIB.icMonitorCompletedJobs\'." )]
class CIM_PrintQueue : CIM_JobDestination {

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "Note: Both this property and QueueAccepting are "
          "deprecated in lieu of EnabledState. \n"
          "Deprecated description: Indicates that Jobs on the Queue "
          "will be passed to a Printer. When false, a Job will "
          "remain on the Queue and will not be passed to a Printer "
          "for output. This property, coupled with the information "
          "in QueueAccepting, aligns with various values of the "
          "inherited EnabledState property: \n"
          "- When both QueueEnabled and QueueAccepting are true, "
          "then EnabledState is set to 2 (\"Enabled\") \n"
          "- When both QueueEnabled and QueueAccepting are false, "
          "then EnabledState is set to 3 (\"Disabled\") \n"
          "- When QueueEnabled is true and QueueAccepting is false "
          "(for instance, when the Queue outputs jobs to the "
          "printer, but does not accept new jobs), then "
          "EnabledState is set to 6 (\"Enabled but Offline\") \n"
          "- When QueueEnabled is false and QueueAccepting is true "
          "(for instance, when the Queue accepts print jobs but "
          "does not send them to a printer), then EnabledState is "
          "set to 8 (\"Deferred\")." )]
   boolean QueueEnabled;

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "Note: Both this property and QueueEnabled are deprecated "
          "in lieu of EnabledState. \n"
          "Deprecated description: When false, no PrintService can "
          "place PrintJobs on the PrintQueue. The ability of an "
          "individual PrintService to place a Job on the Queue can "
          "be specified using the QueueAcceptingFromService "
          "property in the QueueForPrint Service association. This "
          "property, coupled with the information in QueueEnabled, "
          "aligns with various values of the inherited EnabledState "
          "property: \n"
          "- When both QueueEnabled and QueueAccepting are true, "
          "then EnabledState is set to 2 (\"Enabled\") \n"
          "- When both QueueEnabled and QueueAccepting are false, "
          "then EnabledState is set to 3 (\"Disabled\") \n"
          "- When QueueEnabled is true and QueueAccepting is false "
          "(for instance, when the Queue outputs jobs to the "
          "printer, but does not accept new jobs), then "
          "EnabledState is set to 6 (\"Enabled but Offline\") \n"
          "- When QueueEnabled is false and QueueAccepting is true "
          "(for instance, when the Queue accepts print jobs but "
          "does not send them to a printer), then EnabledState is "
          "set to 8 (\"Deferred\")." )]
   boolean QueueAccepting;

      [Description ( "The current number of Jobs on the Queue." ), 
       Gauge, MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jmGeneralNumberOfActiveJobs", 
          "RFC2911.IETF|Printer.queued-job-count" }]
   uint32 NumberOnQueue;

      [Description ( 
          "Gives Queue-specific status information, beyond the "
          "ManagedSystemElement.Status property. This method can be "
          "used to provide further qualification as to the status "
          "of the Queue or to indicate a secondary condition (for "
          "example, spool area is full)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Other", "Unknown", "No Additional Status", 
          "QueueSpoolAreaFull" }, 
       MappingStrings { "RFC2911.IETF|Printer.printer-state-reasons" }]
   uint16 QueueStatus;

      [Description ( 
          "Provides a textual explanation for the status of the "
          "Queue. The settings of both QueueStatus and the Status "
          "property that are inherited from ManagedSystemElement "
          "can be described by QueueStatusInfo. For example, if "
          "\"Stopping\" is the value that is assigned to Status, "
          "then this property might contain an explanation as to "
          "why the Queue is being stopped." ), 
       MappingStrings { "RFC2911.IETF|Printer.printer-state-message" }]
   string QueueStatusInfo;

      [Description ( 
          "Specifies the largest possible Job (in terms of a single "
          "byte stream) that can be submitted to this Queue. A "
          "value of 0 indicates that no limit has been set. Units "
          "are Kbytes." ), 
       Units ( "KiloBytes" ), 
       MappingStrings { 
          "RFC2911.IETF|Section 4.4.33 job-k-octets-supported" }, 
       ModelCorrespondence { "CIM_PrintJob.JobSize" }, 
       PUnit ( "byte * 10^3" )]
   uint32 MaxJobSize;

      [Description ( 
          "Specifies the priority that will be assigned to a new "
          "Job that is submitted to this Queue, if the Job does not "
          "explicitly specify a priority. The range of valid "
          "priorities and the interpretation of priorities can be "
          "determined from the JobPriorityHigh and JobPriorityLow "
          "properties." ), 
       MappingStrings { "RFC2911.IETF|Printer.job-priority-default" }, 
       ModelCorrespondence { "CIM_PrintQueue.JobPriorityHigh", 
          "CIM_PrintQueue.JobPriorityLow" }]
   uint32 DefaultJobPriority;

      [Description ( 
          "Specifies the numeric value that is used to represent "
          "the highest priority Jobs that are submitted to this "
          "Queue. The range of numeric values for priority can be "
          "inverted, for example, a high priority job is "
          "represented by a low integer value. This value is "
          "indicated by JobPriorityLow being greater than "
          "JobPriorityHigh. If both values (PriorityLow and "
          "PriorityHigh) are assigned to 0, then the Queue does not "
          "support Job priorities. The values and usage of the "
          "property SHOULD conform to the semantics of the "
          "\'job-priority-supported\' attribute of the Printer "
          "object defined in IPP/1.1 [RFC2911]." ), 
       MappingStrings { "RFC2911.IETF|Printer.job-priority-supported" }, 
       ModelCorrespondence { "CIM_PrintQueue.JobPriorityLow", 
          "CIM_Job.Priority" }]
   uint32 JobPriorityHigh;

      [Description ( 
          "Specifies the numeric value that is used to represent "
          "the lowest priority Jobs that are submitted to this "
          "Queue. The range of numeric values for priority can be "
          "inverted, for example, a low priority job is represented "
          "by a high integer value. This value is indicated by "
          "JobPriorityLow being greater than JobPriorityHigh. If "
          "both values (PriorityLow and PriorityHigh) are assigned "
          "to 0, then the Queue does not support Job priorities. "
          "The values and usage of the property SHOULD conform to "
          "the semantics of the \'job-priority-supported\' "
          "attribute of the Printer object defined in IPP/1.1 "
          "[RFC2911]." ), 
       MappingStrings { "RFC2911.IETF|Printer.job-priority-supported" }, 
       ModelCorrespondence { "CIM_PrintQueue.JobPriorityHigh", 
          "CIM_Job.Priority" }]
   uint32 JobPriorityLow;

      [Description ( 
          "Specifies the job sheets that are supported by this "
          "Queue. Typically the job sheets that are provided by a "
          "Queue will be the union or aggregation of those provided "
          "by all the Printers that it supports. However, a system "
          "administrator can choose to restrict access to some job "
          "sheets on a particular Queue. A Queue can also support "
          "additional job sheets through the use of a filter that "
          "adds a banner or some other page when a Job is taken "
          "from the Queue." ), 
       MappingStrings { 
          "MIB.IETF|Printer-MIB.prtAuxiliarySheetStartupPage", 
          "MIB.IETF|Printer-MIB.prtAuxiliarySheetBannerPage", 
          "RFC2911.IETF|Printer.job-sheets-supported" }, 
       ModelCorrespondence { "CIM_PrintJob.RequiredJobSheets" }]
   string AvailableJobSheets[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_ProtectedExtentBasedOn 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "Protected StorageExtents map to an underlying StorageExtent. "
       "This mapping includes information about the placement of check "
       "data on the underlying extent. The mapping is made explicit in "
       "this association." )]
class CIM_ProtectedExtentBasedOn : CIM_BasedOn {

      [Override ( "Antecedent" ), 
       Description ( "The underlying StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The Protected Space is built on this StorageExtent." )]
   CIM_StorageExtent REF Dependent;

      [Override ( "StartingAddress" ), 
       Description ( 
          "The starting logical block address of the underlying "
          "StorageExtent from which this protected StorageExtent is "
          "derived. In SCC, this is equivalent to the START LBA_P "
          "field in the Redundancy Group P_Extent Descriptor." ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.2" }]
   uint64 StartingAddress;

      [Description ( 
          "The size of the protected space. Note that this is "
          "limited by the Antecedent->NumberOfBlocks, but is "
          "included explicitly to provide for the DMTF MIF mapping. "
          "In SCC, this is equivalent to the NUMBER OF LBA_P(s) "
          "field in the Redundancy Group P_Extent Descriptor." ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.3" }, 
       ModelCorrespondence { "CIM_StorageExtent.NumberOfBlocks" }]
   uint64 NumberOfBlocks;

      [Description ( 
          "The block size of the protected space. Note that this is "
          "limited by the Antecedent->BlockSize. In SCC, this is "
          "equivalent to the NUMBER OF BYTES PER LBA_P field in the "
          "Redundancy Group P_Extent Descriptor." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.4" }, 
       ModelCorrespondence { "CIM_StorageExtent.BlockSize" }, 
       PUnit ( "byte" )]
   uint64 BlockSize;

      [Description ( 
          "Number of bytes of user data to skip before starting the "
          "check data interleave." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.6" }, 
       PUnit ( "byte" )]
   uint64 UnitsBeforeCheckDataInterleave;

      [Description ( 
          "Number of bytes to be reserved for check data." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.7" }, 
       PUnit ( "byte" )]
   uint64 UnitsOfCheckData;

      [Description ( "Number of bytes to be reserved for user data." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|Physical Extent|001.8" }, 
       PUnit ( "byte" )]
   uint64 UnitsOfUserData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProtocolControllerAccessesUnit 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::ProtocolController" ), 
    Description ( 
       "This association is used to define a relationship between a "
       "protocol controllers and a Logical Unit (for example a Storage "
       "Volume or Media Access Device) controlled by the controller. "
       "This association is used instead of ProtocolControllerForUnit "
       "to indicate a \'controlled through\' relationship rather than "
       "a \'controlled by\' one. An example is SCSI where this "
       "association is used to indicate a target/initiator "
       "relationship." )]
class CIM_ProtocolControllerAccessesUnit : CIM_ProtocolControllerForDevice {

      [Override ( "Antecedent" ), 
       Description ( "The protocol controller." )]
   CIM_ProtocolController REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The logical unit (eg StorageVolume)." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "The number of the dependent\'s target protocol "
          "controller. As an example, in SCSI this is the Target "
          "ID." )]
   string TargetControllerNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PSExtentBasedOnPExtent 
// ==================================================================
   [Association, Deprecated { "CIM_ProtectedExtentBasedOn", 
       "CIM_CompositeExtentBasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "Covered by ProtectedExtentBasedOn or CompositeExtentBasedOn, "
       "since PhysicalExtent itself is deprecated in lieu of these "
       "associations. ProtectedSpaceExtents are BasedOn a "
       "PhysicalExtent. This relationship is made explicit by this "
       "association." )]
class CIM_PSExtentBasedOnPExtent : CIM_BasedOn {

      [Deprecated { "CIM_CompositeExtentBasedOn.Antecedent", 
          "CIM_ProtectedExtentBasedOn.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( "The PhysicalExtent." )]
   CIM_PhysicalExtent REF Antecedent;

      [Deprecated { "CIM_CompositeExtentBasedOn.Dependent", 
          "CIM_ProtectedExtentBasedOn.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The ProtectedSpaceExtent which is built on the Physical Extent."
           )]
   CIM_ProtectedSpaceExtent REF Dependent;

      [Deprecated { "CIM_CompositeExtentBasedOn.StartingAddress", 
          "CIM_ProtectedExtentBasedOn.StartingAddress" }, 
       Override ( "StartingAddress" ), 
       Description ( 
          "The starting logical block address of the PhysicalExtent "
          "from which this ProtectedSpaceExtent is derived." ), 
       MappingStrings { "MIF.DMTF|Protected Space Extent|001.2" }]
   uint64 StartingAddress;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00860" type ="change'>Update the
// the properties descriptions and
// MappingStrings.</
// ==================================================================
//  CIM_QueueForPrintService 
// ==================================================================
   [Association, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This association indicates that a PrintService utilizes a "
       "particular PrintQueue." )]
class CIM_QueueForPrintService : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PrintQueue that the Service utilizes." )]
   CIM_PrintQueue REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PrintService that puts Jobs on the Queue." )]
   CIM_PrintService REF Dependent;

      [Description ( 
          "Indicates that the PrintService can accept Jobs and "
          "place them on the Queue." ), 
       MappingStrings { 
          "RFC2911.IETF|Printer.printer-is-accepting-jobs" }]
   boolean QueueAcceptingFromService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QueueForwardsToPrintSAP
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This association indicates that the Jobs from a PrintQueue can "
       "be sent to the referenced PrintSAP, to be handled by the "
       "backing PrintService of the SAP." )]
class CIM_QueueForwardsToPrintSAP : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The PrintSAP for the PrintService." )]
   CIM_PrintSAP REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The PrintQueue that forwards Jobs to the SAP." )]
   CIM_PrintQueue REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RealizedOnSide 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "Since removable PhysicalMedia can be dual-sided, there is the "
       "possibility for StorageExtents to be realized on a single side "
       "of the Media. This association is a specialization of the "
       "RealizesExtent relationship, adding a Side property to express "
       "the Media\'s orientation details." )]
class CIM_RealizedOnSide : CIM_RealizesExtent {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalMedia on which the Extent is realized." )]
   CIM_PhysicalMedia REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The StorageExtent that is located on the Component." )]
   CIM_StorageExtent REF Dependent;

      [Description ( 
          "An enumeration expressing on which \'Side\' the Extent "
          "is realized. Since sides can be named by various schemes "
          "(0/1 or A/B), both schemes are expressed in the Values "
          "array of this property." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Side 0", "Side 1", "Side A", "Side B" }]
   uint16 Side;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RealizesAggregatePExtent 
// ==================================================================
   [Association, Deprecated { "CIM_RealizesExtent" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "AggregatePExtents are realized on a PhysicalMedia. This is "
       "described by RealizesAggregatePExtent. However, there is no "
       "need for the specificity of this association. It is deprecated "
       "in lieu of the generic RealizesExtent relationship." )]
class CIM_RealizesAggregatePExtent : CIM_RealizesExtent {

      [Deprecated { "CIM_RealizesExtent.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalMedia on which the Extent is realized." )]
   CIM_PhysicalMedia REF Antecedent;

      [Deprecated { "CIM_RealizesExtent.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The AggregatePExtent that is located on the Media." )]
   CIM_AggregatePExtent REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RealizesDiskPartition 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "DiskPartitions can be directly realized on a PhysicalMedia. "
       "This is used to model the creation of Partitions on a raw SCSI "
       "or IDE drive, using the fdisk (DOS and Unix) or pdisk (Unix) "
       "command. The StartingAddress of the DiskPartition on the "
       "PhysicalMedia is also specified as a property of this "
       "relationship. An alternative is that Partitions can be BasedOn "
       "StorageVolumes, such as a VolumeSet or a Volume exposed by a "
       "hardware RAID cabinet. The latter relationship is modeled "
       "using the DiskPartitionBasedOnVolume association." )]
class CIM_RealizesDiskPartition : CIM_RealizesExtent {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalMedia on which the Extent is realized." )]
   CIM_PhysicalMedia REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The DiskPartition that is located on the Media." )]
   CIM_DiskPartition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RealizesTapePartition 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "TapePartitions are realized on PhysicalTape. This relationship "
       "is made explicit by the RealizesTapePartition association." )]
class CIM_RealizesTapePartition : CIM_RealizesExtent {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PhysicalTape on which the Partition is realized." )]
   CIM_PhysicalTape REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The TapePartition that is located on the Media." )]
   CIM_TapePartition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SCSIInterface
// ==================================================================
   [Association, Deprecated { "CIM_ProtocolControllerAccessesUnit" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Note: The use of this class is deprecated in lieu of "
       "ProtocolControllerForUnit, because the SCSIController class "
       "involved in this association is itself deprecated. The "
       "protocol-related aspects of SCSI are better reflected in the "
       "new classes and associations. \n"
       "Deprecated description: SCSIInterface is a ControlledBy "
       "relationship that indicates which Devices are accessed through "
       "a SCSIController and describes the characteristics of this "
       "access." )]
class CIM_SCSIInterface : CIM_ControlledBy {

      [Deprecated { "No Value" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSIController." )]
   CIM_SCSIController REF Antecedent;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Number of SCSI timeouts that "
          "have occurred since the last hard or soft reset that is "
          "related to the controlled Device. The time of last reset "
          "is indicated in the TimeOfDeviceReset property, "
          "inherited from the ControlledBy association." ), 
       Counter]
   uint32 SCSITimeouts;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Number of SCSI retries that have "
          "occurred since the last hard or soft reset that is "
          "related to the controlled Device. The time of last reset "
          "is indicated in the TimeOfDeviceReset property, "
          "inherited from the ControlledBy association." ), 
       Counter, MappingStrings { 
          "MIF.DMTF|Mass Storage Statistics|001.18" }]
   uint32 SCSIRetries;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI Initiator ID." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.5" }]
   uint32 InitiatorId;

      [Deprecated { 
          "CIM_ProtocolControllerAccessesUnit.TargetControllerNumber" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI Target ID." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.5" }]
   uint32 TargetId;

      [Deprecated { "CIM_ProtocolControllerForDevice.DeviceNumber" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI Target LUN." ), 
       MappingStrings { "MIF.DMTF|Storage Devices|001.4" }]
   uint64 TargetLUN;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: SCSIReservation indicates the "
          "type of SCSI reservation that currently exists between "
          "the source and destination." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "None", "Simple", "Persistent" }]
   uint16 SCSIReservation;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The SCSI signal characteristics "
          "being used for this connection. The value listed here "
          "must also be listed in the SignalCapabilities field of "
          "the SCSIController." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "Single Ended", "Differential", 
          "Low Voltage Differential", "Optical" }, 
       MappingStrings { "MIF.DMTF|Bus Port|004.4" }, 
       ModelCorrespondence { "CIM_SCSIController.SignalCapabilities" }]
   uint16 SCSISignal;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: Maximum number of Command "
          "Descriptor Blocks (CDBs) that can be supported by the "
          "target. This data cannot be obtained under all "
          "circumstances." )]
   uint32 MaxQueueDepth;

      [Deprecated { "No Value" }, 
       Description ( 
          "Note: The use of this method is deprecated. \n"
          "Deprecated description: The maximum number of concurrent "
          "Command Descriptor Blocks (CDBs) that the initiator will "
          "send to the target. This value should never be greater "
          "than MaxQueueDepth." )]
   uint32 QueueDepthLimit;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SDSLModem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The SDSLModem class represents Modems of the DSL type = SDSL, "
       "Symmetric Digital Subscriber Line. Properties will be defined "
       "in a future release of the model." )]
class CIM_SDSLModem : CIM_DSLModem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00735.001" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_SerialInterface
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "SerialInterface is a ControlledBy relationship that indicates "
       "which Devices are accessed through the SerialController and "
       "describes the characteristics of this access." )]
class CIM_SerialInterface : CIM_ControlledBy {

      [Override ( "Antecedent" ), 
       Description ( "The SerialController." )]
   CIM_SerialController REF Antecedent;

      [Override ( "NegotiatedDataWidth" ), 
       Description ( 
          "For the SerialInterface, NegotiatedDataWidth is the "
          "number of data bits to be transmitted, without stop bits "
          "or parity." ), 
       Units ( "Bits" ), 
       PUnit ( "bit" )]
   uint32 NegotiatedDataWidth;

      [Description ( "Number of stop bits to be transmitted." ), 
       Units ( "Bits" ), 
       PUnit ( "bit" )]
   uint16 NumberOfStopBits;

      [Description ( 
          "Information on the parity setting for transmitted data. "
          "No parity (value=1), even (value=2), or odd (value=3) "
          "can be specified." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "None", "Even", "Odd" }]
   uint16 ParityInfo;

      [Description ( 
          "An integer enumeration that indicates the flow control "
          "(Xon-Xoff or RTS/CTS) for transmitted data." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Not Supported", "None", "XonXoff", 
          "RTS/CTS", "Both XonXoff and RTS/CTS" }]
   uint16 FlowControlInfo;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Device::StorageServices" ), 
    Description ( 
       "This service allows the active management of a Storage Server. "
       "It allows jobs to be started for the creation, modification "
       "and deletion of storage objects (StoragePools, StorageVolumes "
       "and LogicalDisks)." )]
class CIM_StorageConfigurationService : CIM_Service {


      [Description ( 
          "Starts a job to create (or modify) a StoragePool. The "
          "StoragePool will be (or must be) scoped to the same "
          "System as this Service. One of the parameters for this "
          "method is Size. As an input parameter, Size specifies "
          "the desired size of the pool. As an output parameter, it "
          "specifies the size achieved. Space is taken from either "
          "or both of the specified input StoragePools and "
          "StorageExtents (InPools and InExtents). The capability "
          "requirements that the Pool must support are defined "
          "using the Goal parameter. If the requested pool size "
          "cannot be created, no action will be taken, the Return "
          "Value will be 4097/0x1001, and the output value of Size "
          "will be set to the nearest possible size. If 0 is "
          "returned, then the task completed successfully and the "
          "use of ConcreteJob was not required. If the task will "
          "take some time to complete, a ConcreteJob will be "
          "created and its reference returned in the output "
          "parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 CreateOrModifyStoragePool(
         [IN, Description ( 
             "A end user relevant name for the pool being "
             "created. If NULL, then a system supplied default "
             "name can be used. The value will be stored in the "
             "\'ElementName\' property for the created pool. If "
             "not NULL, this parameter will supply a new name "
             "when modifying an existing pool." )]
      string ElementName, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "Reference to an instance of StorageSetting that "
             "defines the desired capabilities of the "
             "StoragePool. If set to a null value, the default "
             "configuration from the source pool will be used. "
             "If not NULL, this parameter will supply a new Goal "
             "setting when modifying an existing pool." )]
      CIM_StorageSetting REF Goal, 
         [IN, OUT, Description ( 
             "As an input parameter this specifies the desired "
             "pool size in bytes. As an output parameter this "
             "specifies the size achieved." ), 
          Units ( "Bytes" )]
      uint64 Size, 
         [IN, Description ( 
             "Array of strings containing representations of "
             "references to CIM_StoragePool instances, that are "
             "used to create the Pool or modify the source "
             "pools." )]
      string InPools[], 
         [IN, Description ( 
             "Array of strings containing representations of "
             "references to CIM_StorageExtent instances, that "
             "are used to create the Pool or modify the source "
             "extents." )]
      string InExtents[], 
         [IN, OUT, Description ( 
             "As an input parameter: if null, creates a new "
             "StoragePool. If not null, modifies the referenced "
             "Pool. When returned, it is a reference to the "
             "resulting StoragePool." )]
      CIM_StoragePool REF Pool);

      [Description ( 
          "Start a job to create (or modify) a specified element "
          "(for example a StorageVolume or StorageExtent) from a "
          "StoragePool. One of the parameters for this method is "
          "Size. As an input parameter, Size specifies the desired "
          "size of the element. As an output parameter, it "
          "specifies the size achieved. Space is taken from the "
          "input StoragePool. The desired settings for the element "
          "are specified by the Goal parameter. If the requested "
          "size cannot be created, no action will be taken, and the "
          "Return Value will be 4097/0x1001. Also, the output value "
          "of Size is set to the nearest possible size. If 0 is "
          "returned, the function completed successfully and no "
          "ConcreteJob instance was required. If 4096/0x1000 is "
          "returned, a ConcreteJob will be started to create the "
          "element. The Job\'s reference will be returned in the "
          "output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 CreateOrModifyElementFromStoragePool(
         [IN, Description ( 
             "A end user relevant name for the element being "
             "created. If NULL, then a system supplied default "
             "name can be used. The value will be stored in the "
             "\'ElementName\' property for the created element. "
             "If not NULL, this parameter will supply a new name "
             "when modifying an existing element." )]
      string ElementName, 
         [IN, Description ( 
             "Enumeration indicating the type of element being "
             "created or modified. If the input parameter "
             "TheElement is specified when the operation is a "
             "\'modify\', this type value must match the type of "
             "that instance." ), 
          ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
          Values { "Unknown", "Reserved", "StorageVolume", 
             "StorageExtent", "LogicalDisk", "DMTF Reserved", 
             "Vendor Specific" }]
      uint16 ElementType, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "The requirements for the element to maintain. If "
             "set to a null value, the default configuration "
             "from the source pool will be used. This parameter "
             "should be a reference to a Setting or Profile "
             "appropriate to the element being created. If not "
             "NULL, this parameter will supply a new Goal when "
             "modifying an existing element." )]
      CIM_ManagedElement REF Goal, 
         [IN, OUT, Description ( 
             "As an input parameter Size specifies the desired "
             "size. If not NULL, this parameter will supply a "
             "new size when modifying an existing element. As an "
             "output parameter Size specifies the size achieved." ), 
          Units ( "Bytes" )]
      uint64 Size, 
         [IN, Description ( 
             "The Pool from which to create the element. This "
             "parameter must be set to null if the input "
             "parameter TheElement is specified (in the case of "
             "a \'modify\' operation)." )]
      CIM_StoragePool REF InPool, 
         [IN, OUT, Description ( 
             "As an input parameter: if null, creates a new "
             "element. If not null, then the method modifies the "
             "specified element. As an output parameter, it is a "
             "reference to the resulting element." )]
      CIM_LogicalElement REF TheElement);

      [Description ( 
          "Start a job to delete a StoragePool. The freed space is "
          "returned source StoragePools (indicated by AllocatedFrom "
          "StoragePool) or back to underlying storage extents. If 0 "
          "is returned, the function completed successfully, and no "
          "ConcreteJob was required. If 4096/0x1000 is returned, a "
          "ConcreteJob will be started to delete the StoragePool. A "
          "reference to the Job is returned in the Job parameter." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 DeleteStoragePool(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( "Reference to the pool to delete." )]
      CIM_StoragePool REF Pool);

      [Description ( 
          "Start a job to delete an element previously created from "
          "a StoragePool. The freed space is returned to the source "
          "StoragePool. If 0 is returned, the function completed "
          "successfully and no ConcreteJob was required. If "
          "4096/0x1000 is returned, a ConcreteJob will be started "
          "to delete the element. A reference to the Job is "
          "returned in the Job parameter." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ReturnToStoragePool(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "Reference to the element to return to the StoragePool."
              )]
      CIM_LogicalElement REF TheElement);

      [Description ( 
          "Start a job to create a new storage object which is a "
          "replica of the specified source storage object. "
          "(SourceElement). Note that using the input paramter, "
          "CopyType, this function can be used to instantiate the "
          "replica, and to create an ongoing association between "
          "the source and replica. If 0 is returned, the function "
          "completed successfully and no ConcreteJob instance is "
          "created. If 4096/0x1000 is returned, a ConcreteJob is "
          "started, a reference to which is returned in the Job "
          "output parameter." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateReplica(
         [IN, Description ( 
             "A end user relevant name for the element being "
             "created. If NULL, then a system supplied default "
             "name can be used. The value will be stored in the "
             "\'ElementName\' property for the created element." )]
      string ElementName, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [Required, IN, Description ( 
             "The source storage object which may be a "
             "StorageVolume or storage object." )]
      CIM_LogicalElement REF SourceElement, 
         [IN ( false ), OUT, Description ( 
             "Reference to the created target storage element "
             "(i.e., the replica)." )]
      CIM_LogicalElement REF TargetElement, 
         [IN, Description ( 
             "The definition for the StorageSetting to be "
             "maintained by the target storage object (the "
             "replica)." )]
      CIM_StorageSetting REF TargetSettingGoal, 
         [IN, Description ( 
             "The underlying storage for the target element (the "
             "replica) will be drawn from TargetPool if "
             "specified, otherwise the allocation is "
             "implementation specific." )]
      CIM_StoragePool REF TargetPool, 
         [IN, Description ( 
             "CopyType describes the type of copy that will be "
             "made. Values are: \n"
             "Async: Create and maintain an asynchronous copy of "
             "the source. \n"
             "Sync: Create and maintain a synchronized copy of "
             "the source. \n"
             "UnSyncAssoc: Create an unsynchronized copy and "
             "maintain an association to the source. \n"
             "UnSyncUnAssoc: Create unassociated copy of the "
             "source element." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "Async", "Sync", "UnSyncAssoc", 
             "UnSyncUnAssoc", "DMTF Reserved", "Vendor Specific" }]
      uint16 CopyType);

      [Description ( 
          "Modify (or start a job to modify) the synchronization "
          "association between two storage objects. If 0 is "
          "returned, the function completed successfully and no "
          "ConcreteJob instance was created. If 0x1000 is returned, "
          "a ConcreteJob was started and a reference to this Job is "
          "returned in the Job output parameter. A return value of "
          "1 indicates the method is not supported. All other "
          "values indicate some type of error condition." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x1000", 
          "0x1001..0x7FFF", "0x8000..0xFFFF" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ModifySynchronization(
         [IN, Description ( 
             "Operation describes the type of modification to be "
             "made to the replica. Values are: \n"
             "Detach: \'Forget\' the synchronization between two "
             "storage objects. Start to treat the objects as "
             "independent. \n"
             "Fracture: Suspend the synchronization between two "
             "storage objects using Sync or Async replication. \n"
             "The association and (typically) changes are "
             "remembered to allow a fast resynchronization. This "
             "may be used during a backup cycle to allow one of "
             "the objects to be copied while the other remains "
             "in production. \n"
             "Resync Replica: Re-establish the synchronization "
             "of a Sync or Async replication. This will negate "
             "the action of a previous Fracture operation. "
             "Recreate a Point In Time image for an UnSyncAssoc "
             "replication. \n"
             "Restore from Replica: Renew the contents of the "
             "original storage object from a replica. \n"
             "Prepare: Get the link ready for a Resync operation "
             "to take place. Some implementations will require "
             "this operation to be invoked to keep the Resync "
             "operation as fast as possible. May start the copy "
             "engine. \n"
             "Unprepare: Clear a prepared state if a Prepare is "
             "not to be followed by a Resync operation. \n"
             "Quiesce: Some applications require notification so "
             "that they can ready the link for an operation. For "
             "example flush any cached data or buffered changes. "
             "The copy engine is stopped for UnSyncAssoc "
             "replications. \n"
             "Unquiesce: Take the link from the quiesced state "
             "(without executing the intended operation. \n"
             "Start Copy: initiate a full background copy of the "
             "source to the UnSyncAssoc replica. Replica enters "
             "Frozen state when copy operation is completed. \n"
             "Stop Copy: stop the background copy previously "
             "started. Reset To Sync: Change the CopyType of the "
             "association to Sync (e.g., from the Async "
             "CopyType). \n"
             "Reset To Async: Change the CopyType of the "
             "association to Async (e.g., from the Sync "
             "CopyType)." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
             "9", "10", "11", "12", "13", "..", "0x8000..0xFFFF" }, 
          Values { "DMTF Reserved", "DMTF Reserved", "Detach", 
             "Fracture", "Resync Replica", 
             "Restore from Replica", "Prepare", "Unprepare", 
             "Quiesce", "Unquiesce", "Reset To Sync", 
             "Reset To Async", "Start Copy", "Stop Copy", 
             "DMTF Reserved", "Vendor Specific" }]
      uint16 Operation, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if the task completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "The referenced to the StorageSynchronized "
             "association describing the storage source/replica "
             "relationship." )]
      CIM_StorageSynchronized REF Synchronization);

      [Description ( 
          "Create (or start a job to create) a StorageSynchronized "
          "relationship between two existing storage objects. Note "
          "that using the input parameter, CopyType, this function "
          "can be used to to create an ongoing association between "
          "the source and replica. If 0 is returned, the function "
          "completed successfully and no ConcreteJob instance is "
          "created. If 0x1000 is returned, a ConcreteJob is "
          "started, a reference to which is returned in the Job "
          "output parameter. A return value of 1 indicates the "
          "method is not supported. All other values indicate some "
          "type of error condition." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x1000", 
          "0x1001..0x7FFF", "0x8000..0xFFFF" }, 
       Values { "Job Completed with No Error", "Not Supported", 
          "Unspecified Error", "Timeout", "Failed", 
          "Invalid Parameter", "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specific" }]
   uint32 AttachReplica(
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if the task completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [Required, IN, Description ( 
             "The source storage object which may be a "
             "StorageVolume or other storage object." )]
      CIM_ManagedElement REF SourceElement, 
         [IN, Description ( 
             "Reference to the target storage element (i.e., the replica)."
              )]
      CIM_ManagedElement REF TargetElement, 
         [IN, Description ( 
             "CopyType describes the type of Synchronized "
             "relationship that will be created. Values are: \n"
             "Async: Create and maintain an asynchronous copy of "
             "the source. \n"
             "Sync: Create and maintain a synchronized copy of "
             "the source. \n"
             "UnSyncAssoc: Create an unsynchronized copy and "
             "maintain an association to the source. \n"
             "UnSyncUnAssoc: Create unassociated copy of the "
             "source element." ), 
          ValueMap { "2", "3", "4", "5", "..", "0x8000..0xFFFF" }, 
          Values { "Async", "Sync", "UnSyncAssoc", 
             "UnSyncUnAssoc", "DMTF Reserved", "Vendor Specific" }]
      uint16 CopyType);

      [Description ( 
          "Start a job to create (or modify) a specified storage "
          "element from specified input StorageExtents. The created "
          "or modified storage element can be a StorageExtent, "
          "StorageVolume, LogicalDisk, or StoragePool. An input "
          "list of InElements must be specified. The "
          "GetAvailableExtents method can be used to get a list of "
          "valid extents that can be used to achieve a desired "
          "goal. Validity of the extents is determined by the "
          "implementation. As an input parameter, Size specifies "
          "the desired size of the element. As an output parameter, "
          "it specifies the size achieved. Space is taken from the "
          "input InElements. The desired Settings for the element "
          "are specified by the Goal parameter. If the size of "
          "Extents passed is less than the size requested, then the "
          "capacity is drawn from the extents in the order, left to "
          "right, that the Extents were specified. The partial "
          "consumption of an Extent is represented by an Extent for "
          "the capacity used and an Extent for the capacity not "
          "used. If the Size is NULL, then a configuration using "
          "all Extents passed will be attempted. If the requested "
          "size cannot be created, no action will be taken, and the "
          "Return Value will be 4097/0x1001. Also, the output value "
          "of Size is set to the nearest possible size. If 0 is "
          "returned, the function completed successfully and no "
          "ConcreteJob instance was required. If 4096/0x1000 is "
          "returned, a ConcreteJob will be started to create the "
          "element. The Job\'s reference will be returned in the "
          "output parameter Job." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097", "4098..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown", "Timeout", "Failed", "Invalid Parameter", 
          "In Use", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Size Not Supported", "Method Reserved", "Vendor Specific" }]
   uint32 CreateOrModifyElementFromElements(
         [IN, Description ( 
             "A end user relevant name for the element being "
             "created. If NULL, then a system-supplied default "
             "name can be used. The value will be stored in the "
             "\'ElementName\' property for the created element. "
             "If not NULL, this parameter will supply a new name "
             "when modifying an existing element." )]
      string ElementName, 
         [Required, IN, Description ( 
             "Enumeration indicating the type of element being "
             "created or modified. If the input parameter "
             "TheElement is specified when the operation is a "
             "\'modify\', this type value must match the type of "
             "that instance. The actual CIM class of the created "
             "TheElement can be vendor-specific, but it must be "
             "a derived class of the appropriate CIM class -- "
             "i.e., CIM_StorageVolume, CIM_StorageExtent, "
             "CIM_LogicalDisk, or CIM_StoragePool." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "..", 
             "32768..65535" }, 
          Values { "Unknown", "Reserved", "Storage Volume", 
             "Storage Extent", "Storage Pool", "Logical Disk", 
             "DMTF Reserved", "Vendor Specific" }]
      uint16 ElementType, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job (may be null if job completed)."
              )]
      CIM_ConcreteJob REF Job, 
         [IN, Description ( 
             "The requirements for the element to maintain. If "
             "set to a null value, the default configuration "
             "associated with the Service will be used. This "
             "parameter should be a reference to a Setting, "
             "SettingData, or Profile appropriate to the element "
             "being created. If not NULL, this parameter will "
             "supply a new Goal when modifying an existing "
             "element." )]
      CIM_ManagedElement REF Goal, 
         [IN, OUT, Description ( 
             "As an input parameter Size specifies the desired "
             "size. If not NULL, this parameter will supply a "
             "new size when modifying an existing element. As an "
             "output parameter Size specifies the size achieved." ), 
          Units ( "Bytes" )]
      uint64 Size, 
         [Required, IN, Description ( 
             "Array of references to storage element instances "
             "that are used to create or modify TheElement." )]
      CIM_StorageExtent REF InElements[], 
         [IN, OUT, Description ( 
             "As an input parameter: if null, creates a new "
             "element. If not null, then the method modifies the "
             "specified element. As an output parameter, it is a "
             "reference to the resulting element." )]
      CIM_LogicalElement REF TheElement);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_Tachometer 
// ==================================================================
   [Deprecated { "CIM_NumericSensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The use of this class is deprecated in lieu of the additions "
       "to Sensor and NumericSensor. A Tachometer can be defined by "
       "setting the SensorType property. inherited from Sensor, to 5 "
       "(\"Tachometer\")." )]
class CIM_Tachometer : CIM_NumericSensor {

      [Deprecated { "No value" }, 
       Override ( "SensorType" )]
   uint16 SensorType = 5;

      [Deprecated { "No value" }, 
       Override ( "BaseUnits" )]
   uint16 BaseUnits = 38;

      [Deprecated { "No value" }, 
       Override ( "UnitModifier" )]
   sint32 UnitModifier = 1;

      [Deprecated { "No value" }, 
       Override ( "RateUnits" )]
   uint16 RateUnits = 4;

      [Deprecated { "No value" }, 
       Override ( "Resolution" ), 
       Units ( "Tenths of Revolutions per Minute" ), 
       PUnit ( "revolution / minute * 10^-1" )]
   uint32 Resolution;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TapePartitionOnSurface 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageExtents" ), 
    Description ( 
       "TapePartitionOnSurface represents the ability to have one or "
       "more TapePartitions on each surface of a PhysicalTape. The "
       "individual surfaces are represented as instances of "
       "CIM_StorageExtent." )]
class CIM_TapePartitionOnSurface : CIM_BasedOn {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The StorageExtent that represents the Tape\'s surface." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The TapePartition which is built on the Extent." )]
   CIM_TapePartition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_TemperatureSensor 
// ==================================================================
   [Deprecated { "CIM_NumericSensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The use of this class is being deprecated in lieu of the "
       "additions to Sensor and Numeric Sensor. A TemperatureSensor "
       "can be defined by setting the SensorType property, inherited "
       "from Sensor, to 2 (\"Temperature\")." )]
class CIM_TemperatureSensor : CIM_NumericSensor {

      [Deprecated { "No Value" }, 
       Override ( "SensorType" )]
   uint16 SensorType = 2;

      [Deprecated { "No Value" }, 
       Override ( "BaseUnits" )]
   uint16 BaseUnits = 2;

      [Deprecated { "No Value" }, 
       Override ( "UnitModifier" )]
   sint32 UnitModifier = -1;

      [Deprecated { "No Value" }, 
       Override ( "RateUnits" )]
   uint16 RateUnits = 0;

      [Deprecated { "No Value" }, 
       Override ( "CurrentReading" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.5" }]
   sint32 CurrentReading;

      [Deprecated { "No Value" }, 
       Override ( "NominalReading" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.6" }]
   sint32 NominalReading;

      [Deprecated { "No Value" }, 
       Override ( "NormalMax" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.7" }]
   sint32 NormalMax;

      [Deprecated { "No Value" }, 
       Override ( "NormalMin" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.8" }]
   sint32 NormalMin;

      [Deprecated { "No Value" }, 
       Override ( "MaxReadable" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.9" }]
   sint32 MaxReadable;

      [Deprecated { "No Value" }, 
       Override ( "MinReadable" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.10" }]
   sint32 MinReadable;

      [Deprecated { "No Value" }, 
       Override ( "Resolution" ), 
       Units ( "Hundredths of Degrees C" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.17" }, 
       PUnit ( "degree celsius * 10^-2" )]
   uint32 Resolution;

      [Deprecated { "No Value" }, 
       Override ( "Tolerance" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.18" }]
   sint32 Tolerance;

      [Deprecated { "No Value" }, 
       Override ( "Accuracy" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.19" }]
   sint32 Accuracy;

      [Deprecated { "No Value" }, 
       Override ( "LowerThresholdNonCritical" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.11" }]
   sint32 LowerThresholdNonCritical;

      [Deprecated { "No Value" }, 
       Override ( "UpperThresholdNonCritical" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.12" }]
   sint32 UpperThresholdNonCritical;

      [Deprecated { "No Value" }, 
       Override ( "LowerThresholdCritical" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.13" }]
   sint32 LowerThresholdCritical;

      [Deprecated { "No Value" }, 
       Override ( "UpperThresholdCritical" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.14" }]
   sint32 UpperThresholdCritical;

      [Deprecated { "No Value" }, 
       Override ( "LowerThresholdFatal" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.15" }]
   sint32 LowerThresholdFatal;

      [Deprecated { "No Value" }, 
       Override ( "UpperThresholdFatal" ), 
       MappingStrings { "MIF.DMTF|Temperature Probe|002.16" }]
   sint32 UpperThresholdFatal;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_Unimodem
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "Unimodem is a POTSModem that supports the Unimodem 1.0 Specification."
        )]
class CIM_Unimodem : CIM_POTSModem {

      [Description ( "Current call setup result code." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "No Previous Call", "No Dial Tone Detected", 
          "Reorder Signal Detected, Network Busy", 
          "Busy Signal Detected", "No Recognized Signal Detected", 
          "Voice Detected", "Text Telephone Detected", 
          "Data Answering Signal Detected", 
          "Data Calling Signal Detected", 
          "Fax Answering Signal Detected", 
          "Fax Calling Signal Detected", "V.8bis Signal Detected" }]
   uint16 CallSetupResultCode;

      [Description ( "Current multimedia mode of the Unimodem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10" }, 
       Values { "Data Only", "Fax Only", "Voice Only", "Voice View", 
          "ASVD V.61", "ASVD V.34Q", "DSVD Multi-Tech", "DSVD 1.2", 
          "DSVD V.70", "Video Telephony H.324", "Other V.80 Call" }]
   uint16 MultiMediaMode;

      [Description ( 
          "Current DTE-DCE interface mode of the Unimodem, such as "
          "asynchronous, V.80 transparent, or framed synchronous "
          "modes." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Async Data", "V.80 Transparent Synchronous Mode", 
          "V.80 Framed Synchronous Mode" }]
   uint16 DTEDCEInterfaceMode;

      [Description ( "The active transmit modulation scheme." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23..65535" }, 
       Values { "V.17 (G3 Fax Call)", "V.21", "V.22", "V.22bis", 
          "V.23 Constant Carrier (1200/75)", 
          "V.23 Switched Carrier (Half Duplex)", "V.26bis", 
          "V.26ter", "V.27ter (G3 Fax Call)", 
          "V.29 HD (G3 Fax Call)", "V.32", "V.32bis", "V.34", 
          "V.34 HD (G3 Fax Call)", "V.90 Issue 1 (Asymmetric)", 
          "V.90 Issue 2 (Symmetric)", "Reserved (V.58)", "X2", 
          "K56FLEX", "V.FC", "V.32terbo", "Bell 212A", "Bell 103", 
          "Reserved for Mfgs" }]
   uint16 TransmitCarrierNegotiation;

      [Description ( "The active receive modulation scheme." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23..65535" }, 
       Values { "V.17 (G3 Fax Call)", "V.21", "V.22", "V.22bis", 
          "V.23 Constant Carrier (1200/75)", 
          "V.23 Switched Carrier (Half Duplex)", "V.26bis", 
          "V.26ter", "V.27ter (G3 Fax Call)", 
          "V.29 HD (G3 Fax Call)", "V.32", "V.32bis", "V.34", 
          "V.34 HD (G3 Fax Call)", "V.90 Issue 1 (Asymmetric)", 
          "V.90 Issue 2 (Symmetric)", "Reserved (V.58)", "X2", 
          "K56FLEX", "V.FC", "V.32terbo", "Bell 212A", "Bell 103", 
          "Reserved for Mfgs" }]
   uint16 ReceiveCarrierNegotiation;

      [Description ( 
          "Initial transmit carrier data rate for the current or "
          "last call, in bits per second." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 InitialTransmitCarrierDataRate;

      [Description ( 
          "Initial receive carrier data rate for the current or "
          "last call, in bits per second." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 InitialReceiveCarrierDataRate;

      [Description ( 
          "The number of carrier retrains requested during the "
          "current or last call." ), 
       Counter]
   uint8 CarrierRetrainsRequested;

      [Description ( 
          "The number of carrier retrains granted during the "
          "current or last call." ), 
       Counter]
   uint8 CarrierRetrainsGranted;

      [Description ( 
          "Final transmit carrier data rate of the current or last "
          "call, in bits per second." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 FinalTransmitCarrierDataRate;

      [Description ( 
          "Final receive carrier data rate of the current or last "
          "call, in bits per second." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 FinalReceiveCarrierDataRate;

      [Description ( "Cause of last call termination." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50" }, 
       Values { "Cause Unidentified", "No Previous Call", 
          "Call Is Still in Progress", 
          "Call Waiting Signal Detected", "Delayed", 
          "NMS Initiated Dial Call", 
          "NMS Initiated Leased Line Restoral", 
          "NMS Initiated Redial", "NMS Initiated Dial Disconnect", 
          "Power Loss", 
          // 10               
          "Equipment Failure", 
          "Front Panel Disconnect Requested", 
          "Front Panel Leased Line Restoral", 
          "Automatic Leased Line Restoral", 
          "Inactivity Timer Expired", "cct116 Restoral Request", 
          "cct108 Is Off Inhibits Dial", "cct108 Turned Off", 
          "No Number Provided", "Blacklisted Number", 
          // 20               
          "Call Attempts Limit Exceeded", 
          "Extension Phone Off Hook", 
          "Call Setup Fail Timer Expired", "Incoming Call Detected", 
          "Loop Current Interrupted", "No Dial Tone", 
          "Voice Detected", "Reorder Tone", "Sit Tone", 
          "Engaged Tone", 
          // 30               
          "Long Space Disconnect", 
          "Carrier Lost", "Training Failed", 
          "No Modulation in Common", "Retrain Failed", 
          "Retrain Attempt Count Exceeded", 
          "GSTN Cleardown Received", "Fax Detected", "In Test Mode", 
          "Intrusive Self Test Initiated", 
          // 40               
          "Any Key Abort", 
          "DTE Hangup Command", "DTE Reset Command", "Frame Reject", 
          "No Error Control Established", "Protocol Violation", 
          "n400 Exceeded", "Negotiation Failed", 
          "Disconnect Frame Received", "Sabme Frame Received", 
          // 50               
          "Loss Of Synchronization" }]
   uint16 TerminationCause;

      [Description ( 
          "Diagnostic Command Specification, Unimodem revision number."
           )]
   string UnimodemRevision;

      [Description ( 
          "Estimated noise level for the last or current call in "
          "-dBm. Values are in the range of 0-100." ), 
       Units ( "-dBm" ), 
       Gauge, PUnit ( "decibel(m) * -1" )]
   uint32 EstimatedNoiseLevel;

      [Description ( 
          "Normalized mean squared error for the last or current call."
           )]
   uint32 NormalizedMeanSquaredError;

      [Description ( 
          "Temporary carrier loss event count for the last or current call."
           ), 
       Counter]
   uint8 TemporaryCarrierLossEventCount;

      [Description ( 
          "Carrier Rate renegotiation event count for the last or "
          "current call." ), 
       Counter]
   uint8 CarrierRenegotiationEventCount;

      [Description ( 
          "Error Control frame size in bytes for the last or current call."
           ), 
       Units ( "Bytes" ), 
       PUnit ( "byte" )]
   uint16 ErrorControlFrameSize;

      [Description ( 
          "Error control link timeouts in transmission for the last "
          "or current call." ), 
       Counter]
   uint8 ErrorControlLinkTimeouts;

      [Description ( 
          "Error control link NAKs received for the last or current call."
           ), 
       Counter]
   uint8 ErrorControlLinkNAKs;

      [Description ( 
          "The flow control mechanism used in transmitting data." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Off", "DC1/DC3", "V.24 ckt 106/133" }]
   uint16 TransmitFlowControl;

      [Description ( 
          "The flow control mechanism used in receiving data." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Off", "DC1/DC3", "V.24 ckt 106/133" }]
   uint16 ReceiveFlowControl;

      [Description ( 
          "Number of transmit chars sent from the DTE for the last "
          "or current call. A continuous connection might exceed "
          "this value, given enough time. Typically these counters "
          "are implemented as 32-bit counters, but additional bits "
          "can be provided and are accounted for in this property. "
          "If these counters hit maximum value, the DCE "
          "manufacturer might roll over to 0." ), 
       Counter]
   uint64 TransmitCharsSentFromDTE;

      [Description ( 
          "Number of receive chars sent to the DTE for the last or "
          "current call. A continuous connection might exceed this "
          "value, given enough time. Typically these counters are "
          "implemented as 32-bit counters, but additional bits can "
          "be provided and are accounted for in this property. If "
          "these counters hit maximum value, the DCE manufacturer "
          "might roll over to 0." ), 
       Counter]
   uint64 ReceiveCharsSentToDTE;

      [Description ( 
          "Number of transmit characters lost for the last or "
          "current call. A DCE might limit this counter to 16 bits, "
          "but additional bits can be provided and are accounted "
          "for in this property." ), 
       Counter]
   uint64 TransmitCharsLost;

      [Description ( 
          "Number of receive characters lost for the last or "
          "current call. A DCE might limit this counter to 16 bits, "
          "but additional bits can be provided and are accounted "
          "for in this property." ), 
       Counter]
   uint64 ReceiveCharsLost;

      [Description ( 
          "Number of I-Frames transmitted for the last or current "
          "call. A continuous connection might exceed this value, "
          "given enough time. Typically these counters are "
          "implemented as 32- bit counters, but additional bits can "
          "be provided and are accounted for in this property. If "
          "these counters hit maximum value, the DCE manufacturer "
          "might roll over to 0." ), 
       Counter]
   uint64 TransmitIFrameCount;

      [Description ( 
          "Number of I-Frames received for the last or current "
          "call. A continuous connection might exceed this value, "
          "given enough time. Typically these counters are "
          "implemented as 32-bit counters, but additional bits can "
          "be provided and are accounted for in this property. If "
          "these counters hit maximum value, the DCE manufacturer "
          "might roll over to 0." ), 
       Counter]
   uint64 ReceiveIFrameCount;

      [Description ( 
          "Number of I-Frame errors detected for the last or "
          "current call, if error control protocol is running. A "
          "DCE might limit this counter to 16 bits, but additional "
          "bits can be provided and are accounted for in this "
          "property." ), 
       Counter]
   uint64 TransmitIFrameErrorCount;

      [Description ( 
          "Number of I-Frame errors detected for the last or "
          "current call, if error control protocol is running. A "
          "DCE might limit this counter to 16 bits, but additional "
          "bits can be provided and are accounted for in this "
          "property." ), 
       Counter]
   uint64 ReceivedIFrameErrorCount;

      [Description ( 
          "Number of Call waiting events detected for the last or "
          "current call." ), 
       Counter]
   uint8 CallWaitingEventCount;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_USBConnection 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::USB" ), 
    Description ( 
       "USBConnection associates a Device with the USBPort to which it "
       "is connected." )]
class CIM_USBConnection : CIM_DeviceConnection {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The USBPort." )]
   CIM_USBPort REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The USBDevice that is connected to the Port." )]
   CIM_USBDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_USBControllerHasHub 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::USB" ), 
    Description ( 
       "USBControllerHasHub defines the Hub(s) that are downstream of "
       "the USBController." )]
class CIM_USBControllerHasHub : CIM_ControlledBy {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The USBController." )]
   CIM_USBController REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The USBHub that is associated with the Controller." )]
   CIM_USBHub REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VDSLModem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The VDSLmodem class represents Modems of the DSL type = VDSL, "
       "Very high data rate Digital Subscriber Line. Properties will "
       "be defined in a future release of the model." )]
class CIM_VDSLModem : CIM_DSLModem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_VoltageSensor 
// ==================================================================
   [Deprecated { "CIM_NumericSensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The use of this class is being deprecated in lieu of the "
       "additions to Sensor and NumericSensor. A VoltageSensor can be "
       "defined by setting the SensorType property, inherited from "
       "Sensor, to 3 (\"Voltage\")." )]
class CIM_VoltageSensor : CIM_NumericSensor {

      [Deprecated { "No value" }, 
       Override ( "SensorType" )]
   uint16 SensorType = 3;

      [Deprecated { "No value" }, 
       Override ( "BaseUnits" )]
   uint16 BaseUnits = 5;

      [Deprecated { "No value" }, 
       Override ( "UnitModifier" )]
   sint32 UnitModifier = -3;

      [Deprecated { "No value" }, 
       Override ( "RateUnits" )]
   uint16 RateUnits = 0;

      [Deprecated { "No value" }, 
       Override ( "CurrentReading" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.5" }]
   sint32 CurrentReading;

      [Deprecated { "No value" }, 
       Override ( "NominalReading" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.6" }]
   sint32 NominalReading;

      [Deprecated { "No value" }, 
       Override ( "NormalMax" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.7" }]
   sint32 NormalMax;

      [Deprecated { "No value" }, 
       Override ( "NormalMin" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.8" }]
   sint32 NormalMin;

      [Deprecated { "No value" }, 
       Override ( "MaxReadable" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.9" }]
   sint32 MaxReadable;

      [Deprecated { "No value" }, 
       Override ( "MinReadable" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.10" }]
   sint32 MinReadable;

      [Deprecated { "No value" }, 
       Override ( "Resolution" ), 
       Units ( "Tenths of MilliVolts" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.17" }, 
       PUnit ( "volt * 10^-4" )]
   uint32 Resolution;

      [Deprecated { "No value" }, 
       Override ( "Tolerance" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.18" }]
   sint32 Tolerance;

      [Deprecated { "No value" }, 
       Override ( "Accuracy" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.19" }]
   sint32 Accuracy;

      [Deprecated { "No value" }, 
       Override ( "LowerThresholdNonCritical" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.11" }]
   sint32 LowerThresholdNonCritical;

      [Deprecated { "No value" }, 
       Override ( "UpperThresholdNonCritical" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.12" }]
   sint32 UpperThresholdNonCritical;

      [Deprecated { "No value" }, 
       Override ( "LowerThresholdCritical" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.13" }]
   sint32 LowerThresholdCritical;

      [Deprecated { "No value" }, 
       Override ( "UpperThresholdCritical" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.14" }]
   sint32 UpperThresholdCritical;

      [Deprecated { "No value" }, 
       Override ( "LowerThresholdFatal" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.15" }]
   sint32 LowerThresholdFatal;

      [Deprecated { "No value" }, 
       Override ( "UpperThresholdFatal" ), 
       MappingStrings { "MIF.DMTF|Voltage Probe|001.16" }]
   sint32 UpperThresholdFatal;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VolumeSetBasedOnPSExtent 
// ==================================================================
   [Association, Deprecated { "CIM_CompositeExtentBasedOn" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::SccExtents" ), 
    Description ( 
       "This association is deprecated in lieu of "
       "CompositeExtentBasedOn, since VolumeSets and "
       "ProtectedSpaceExtents are themselves deprecated. The "
       "relationship describes that VolumeSets are BasedOn on one or "
       "more ProtectedSpaceExtents." )]
class CIM_VolumeSetBasedOnPSExtent : CIM_BasedOn {

      [Deprecated { "CIM_CompositeExtentBasedOn.Antecedent" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The ProtectedSpaceExtent." )]
   CIM_ProtectedSpaceExtent REF Antecedent;

      [Deprecated { "CIM_CompositeExtentBasedOn.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The VolumeSet which is built on the ProtectedSpace Extent."
           )]
   CIM_VolumeSet REF Dependent;

      [Deprecated { 
          "CIM_CompositeExtentBasedOn.LBAsMappedByDecrementing" }, 
       Description ( 
          "True if logical blocks in the ProtectedSpaceExtent are "
          "mapped in decrementing order. This property corresponds "
          "to the INCDEC value in the SCC-2 Volume Set PS_Extent "
          "Descriptor." )]
   boolean LBAsMappedByDecrementing;

      [Deprecated { 
          "CIM_CompositeExtentBasedOn.LBAMappingIncludesCheckData" }, 
       Description ( 
          "True if the logical block mapping algorithm includes "
          "check data bytes. This property corresponds to the "
          "NOCHKSKIP attribute in the SCC-2 Volume Set PS_Extent "
          "Descriptor." )]
   boolean LBAMappingIncludesCheckData;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WakeUpServiceOnModem
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "WakeUpServiceOnModem defines where the WakeUpService is "
       "implemented. The Service can either employ a Modem or "
       "NetworkAdapter to receive a wakeup signal." )]
class CIM_WakeUpServiceOnModem : CIM_DeviceServiceImplementation {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The Modem that implements the WakeUpService." )]
   CIM_Modem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The wakeup Service that is provided on the Modem." )]
   CIM_WakeUpService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00751.003" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WakeUpServiceOnNetworkAdapter
// ==================================================================
   [Association, Deprecated { "CIM_WakeUpServiceOnNetworkPort" }, 
    Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::NetworkAdapter" ), 
    Description ( 
       "Note: The use of the CIM_WakeUpServiceOnNetworkAdapter class "
       "has been deprecated because NetworkAdapter is deprecated. "
       "Instead use the CIM_WakeUpServiceOnNetworkPort class. \n"
       "Deprecated description: WakeUpServiceOnNetworkAdapter defines "
       "where the WakeUpService is implemented." )]
class CIM_WakeUpServiceOnNetworkAdapter : CIM_DeviceServiceImplementation {

      [Deprecated { "CIM_WakeUpServiceOnNetworkPort.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The NetworkAdapter that "
          "implements the Service." )]
   CIM_NetworkAdapter REF Antecedent;

      [Deprecated { "CIM_WakeUpServiceOnNetworkPort.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "Note: The use of this method has been deprecated. \n"
          "Deprecated description: The wakeup Service that is "
          "provided on the NetworkAdapter." )]
   CIM_WakeUpService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_WakeUpServiceOnNetworkPort
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "WakeUpServiceOnNetworkPort defines where the WakeUpService is "
       "implemented. Currently, the Service can either employ a Modem "
       "or a NetworkPort for wakeup." )]
class CIM_WakeUpServiceOnNetworkPort : CIM_DeviceServiceImplementation {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The NetworkPort that implements the Service." )]
   CIM_NetworkPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The wakeup Service that is provided on the NetworkPort." )]
   CIM_WakeUpService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "This class specializes ObjectManagerCommunicationMechanism, "
       "adding properties specific to the CIM-XML protocol (XML "
       "encoding and CIM Operations)." )]
class CIM_CIMXMLCommunicationMechanism : CIM_ObjectManagerCommunicationMechanism {

      [Required, Override ( "CommunicationMechanism" ), 
       Description ( 
          "The only valid CommunicationMechanism for this subclass "
          "is CIM-XML." ), 
       ValueMap { "2" }, 
       Values { "CIM-XML" }]
   uint16 CommunicationMechanism = 2;

      [Required, Override ( "Version" ), 
       Description ( 
          "Enumeration describing the CIM-XML protocol version "
          "supported by the ObjectManager." ), 
       ValueMap { "1.0", "1.1", "1.2" }]
   string Version;

      [Deprecated { "CIM_CIMXMLCommunicationMechanism.Version" }, 
       Required, Description ( 
          "Enumeration describing the CIM-XML protocol version "
          "supported by the ObjectManager. It is deprecated in lieu "
          "of a more general, inherited property (Version)." ), 
       ValueMap { "0", "1" }, 
       Values { "Unknown", "1.0" }]
   uint16 CIMXMLProtocolVersion;

      [Required, Description ( 
          "Describes whether the CIM Server is strictly validating "
          "(validates the XML document against the DTD) or not "
          "(loosely validating)." )]
   boolean CIMValidated;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A type of CIM_Service that defines the capabilities of the CIM "
       "Server in which this ObjectManager class resides. Details "
       "related to communicating with the ObjectManager, and the "
       "Manager\'s basic capabilities, are stored in instances of the "
       "associated CommunicationMechanism class available through the "
       "CommMechanismForManager association. It is assumed that Basic "
       "Read operations must be supported by all ObjectManager\'s in "
       "order to retrieve any additional detail." )]
class CIM_ObjectManager : CIM_WBEMService {

      [Write, Description ( 
          "The GatherStatisticalData property is used to control "
          "the gathering of statistical data made accessible "
          "through the CIM_CIMOMStatisticalData objects. If set to "
          "true, the data is gathered and can be accessed. If "
          "false, the CIM_CIMOMStatisticalData instance MAY exist "
          "but MUST show zero values for the counter properties." )]
   boolean GatherStatisticalData = true;

      [Override ( "Name" ), 
       Description ( 
          "The Name property is used to uniquely identify a CIM "
          "Server. The CIM Server MUST ensure that this value is "
          "globally unique. In order to ensure uniqueness, this "
          "value SHOULD be constructed in the following manner. "
          "<Vendor ID>:<Unique ID> \n"
          "<Vendor ID> MUST include a copyrighted, trademarked or "
          "otherwise unique name that is owned by the business "
          "entity or a registered ID that is assigned to the "
          "business entity that is defining the Name. (This is "
          "similar to the <Schema Name>_<Class Name> structure of "
          "Schema class names.) The purpose of <Vendor ID> is to "
          "ensure that <ID> is truly unique across multiple vendor "
          "implementations. If such a name is not used, the "
          "defining entity MUST assure that the <ID> portion of the "
          "Instance ID is unique when compared with other instance "
          "providers. For DMTF defined instances, the <Vendor ID> "
          "is \'CIM\'. \n"
          "<Unique ID> MUST include a vendor specified unique "
          "identifier. \n"
          "Note: Name is semantically the same as InstanceID. In "
          "the next major version of the CIM Schema, Name will be "
          "renamed to InstanceID and become the only key of this "
          "class." )]
   string Name;

      [Override ( "ElementName" ), 
       Description ( 
          "The ElementName property is used as a name of the CIM "
          "Server for human interfaces. For example, \"ACME CIM "
          "Server\"). This property is required to support the SLP "
          "discovery mechanism. In the next major release this "
          "property MAY include the required qualifier." )]
   string ElementName;

      [Override ( "Description" ), 
       Description ( 
          "The description property is used as a description of the "
          "CIM Server for human interfaces. For example, \" ACME "
          "CIM Server version 2.2\"). This property is required to "
          "support the SLP discovery mechanism. In the next major "
          "release this property MAY include the required "
          "qualifier." )]
   string Description;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "A ObjectManagerAdapter is a Service of the CIM Object Manager. "
       "An adapter can be any service of the Object Manager that needs "
       "to be managed (e.g. started, stopped, monitored, ...). There "
       "MUST be an instance for each Adapter type." )]
class CIM_ObjectManagerAdapter : CIM_WBEMService {

      [Override ( "Name" ), 
       Description ( 
          "A human-readable name that uniquely identifies the "
          "ObjectManager within a system." )]
   string Name;

      [Override ( "ElementName" ), 
       Description ( 
          "The ElmentName property is used as a name of the Object "
          "Manager Adapter for human interfaces. For example, \"ACME "
          "ObjectManager Adapter\"." )]
   string ElementName;

      [Required, Description ( 
          "An implementation specific string that identifies the "
          "handle to the Object Manager Adapter." )]
   string Handle;

      [Required, Description ( 
          "AdapterType enumerates the kind of Object Manager "
          "Adapter. If \'Other\' is specified, the "
          "OtherAdapterTypeDescription property MUST be populated. \n"
          "Other - If the adapter does not fit into one of the "
          "other catagories in the list. If specified, the "
          "OtherAdapterTypeDescription property MUST be populated. \n"
          "Client - A client side adapter that responds to client "
          "operation requests, such as CIM-XML or CIM-SOAP. \n"
          "Provider - A provider adapter, such as DMI, SNMP, JSR48 "
          "or CMPI. \n"
          "Indication Handler - An Indication Handler is a service "
          "that delivers indications to a subscriber. Examples of "
          "possible Indication Handlers are CIM-XML, CIM-SOAP, SMPT "
          "(e-mail) or any other delivery mechanism. \n"
          "Repository - A repository is an adapter that can "
          "store/retrieve persistent data, such as CIM Qualifier "
          "Types, CIM Classes and CIM Instances. An Object Manager "
          "could use multiple repositiories at one time, for "
          "example one could be used for CIM Schema information "
          "only, while another is used for instance information. "
          "Repositories MAY be remote or local to the CIM Object "
          "Manager. Examples of repository implementations could be "
          "databases, LDAP or files." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Client", "Provider", "Indication Handler", 
          "Repository" }, 
       ModelCorrespondence { 
          "CIM_ObjectManagerAdapter.OtherAdapterTypeDescription" }]
   uint16 AdapterType;

      [Description ( 
          "The type(s) of ObjectManagerAdapter when \"Other\" is "
          "included in ObjectManagerAdapterType property." ), 
       ModelCorrespondence { "CIM_ObjectManagerAdapter.AdapterType" }]
   string OtherAdapterTypeDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Deprecated { "CIM_ObjectManagerAdapter" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CIM_ProtocolAdapter is deprecated in lieu of "
       "CIM_ObjectManagerAdapter. Since the CIM_ProtocolAdapter class "
       "does not have to support the protocols and can be any type of "
       "adapter, it was decided to change the name to "
       "ObjectManagerAdapter to better reflect the true meaning of the "
       "class. A ProtocolAdapter is a Service of the CIM Object "
       "Manager. It is responsible for accepting incoming requests on "
       "a particular protocol, and translating and forwarding the "
       "request to the CIM Object Manager. It is also responsible for "
       "translating and sending the response from the CIM Object "
       "Manager." )]
class CIM_ProtocolAdapter : CIM_WBEMService {

      [Deprecated { "CIM_ObjectManagerAdapter.Name" }, 
       Override ( "Name" ), 
       Description ( 
          "A human-readable name that uniquely identifies the "
          "Protocol Adapter within a system." )]
   string Name;

      [Deprecated { "CIM_ObjectManagerAdapter.Handle" }, 
       Required, Description ( 
          "An implementation specific string that identifies the "
          "handle to the ProtocolAdapter." )]
   string Handle;

      [Deprecated { "CIM_ObjectManagerAdapter.AdapterType" }, 
       Required, Description ( 
          "ProtocolAdapterType enumerates the kind of Protocol Adapter."
           ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "Client", "Provider" }, 
       ModelCorrespondence { 
          "CIM_ProtocolAdapter.OtherProtocolAdapterType" }]
   uint16 ProtocolAdapterType;

      [Deprecated { 
          "CIM_ObjectManagerAdapter.OtherAdapterTypeDescription" }, 
       Description ( 
          "The type(s) of ProtocolAdapter when \"Other\" is "
          "included in ProtocolAdapterType property." ), 
       ModelCorrespondence { 
          "CIM_ProtocolAdapter.ProtocolAdapterType" }]
   string OtherProtocolAdapterType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "PeerGatewayForPreconfiguredTunnel identifies at most one "
       "security gateway be used in constructing a preconfigured "
       "tunnel. A security gateway is simply a particular instance of "
       "RemoteServiceAccessPoint." ), 
    MappingStrings { 
       "IPSP Policy Model.IETF|PeerGatewayForPreconfiguredTunnel" }]
class CIM_PeerGatewayForPreconfiguredTunnel : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "Security gateway for the preconfigured SA." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerGatewayForPreconfiguredTunnel.Antecedent" }]
   CIM_RemoteServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PreconfiguredTunnelAction that requires a security gateway."
           ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerGatewayForPreconfiguredTunnel.Dependent" }]
   CIM_PreconfiguredTunnelAction REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "PeerGatewayForTunnel identifies an ordered list of security "
       "gateways to be used in negotiating and constructing a tunnel. "
       "A security gateway is simply a particular instance of "
       "RemoteServiceAccessPoint." ), 
    MappingStrings { "IPSP Policy Model.IETF|PeerGatewayForTunnel" }]
class CIM_PeerGatewayForTunnel : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The security gateway for the SA. Note that the absense "
          "of this association indicates that: \n"
          "- When acting as a responder, IKE will accept phase 1 "
          "negotiations with any other security gateway \n"
          "- When acting as an initiator, IKE will use the "
          "destination IP address (of the IP packets which "
          "triggered the SARule) as the IP address of the peer IKE "
          "entity." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerGatewayForTunnel.Antecedent" }]
   CIM_RemoteServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The IPsecTunnelAction that requires a security gateway." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerGatewayForTunnel.Dependent" }]
   CIM_IPsecTunnelAction REF Dependent;

      [Description ( 
          "SequenceNumber indicates the ordering to be used when "
          "selecting a PeerGateway instance for an "
          "IPsecTunnelAction. Lower values are evaluated first." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|PeerGatewayForTunnel.SequenceNumber" }]
   uint16 SequenceNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedNextHop 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "AssociatedNextHop depicts the relationship between a route and "
       "the specification of its next hop. The next hop is external to "
       "a System, and hence is defined as a kind of "
       "RemoteServiceAccessPoint. Note that this relationship is "
       "independent of RouteUsesEndpoint (the local Endpoint used to "
       "transmit the traffic), and both may be defined for a route." )]
class CIM_AssociatedNextHop : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The next hop for the route." )]
   CIM_RemoteServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The route sending traffic to the next hop." )]
   CIM_NextHopRoute REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AutonomousSystem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::Systems" ), 
    Description ( 
       "An Autonomous System (AS) is a fundamental concept in "
       "networking. An AS provides a structured view of routing by "
       "segregating the system that is using routing (e.g., the "
       "Internet, or an extranet) into a set of separately "
       "administered domains that each have their own independent "
       "routing policies. These domains are called autonomous systems. \n"
       "\n"
       "The classic definition of an AS, from RFC1771, is \'...a set "
       "of routers under a single technical administration, using an "
       "interior gateway protocol and common metrics to route packets "
       "within the AS, and using an exterior gateway protocol to route "
       "packets to other ASs\'. The RFC continues: \'Since this "
       "classic definition was developed, it has become common for a "
       "single AS to use several interior gateway protocols and "
       "sometimes several sets of metrics within an AS. The use of the "
       "term Autonomous System here stresses the fact that, even when "
       "multiple IGPs and metrics are used, the administration of an "
       "AS appears to other ASs to have a single coherent interior "
       "routing plan and presents a consistent picture of what "
       "destinations are reachable through it.\'" )]
class CIM_AutonomousSystem : CIM_AdminDomain {

      [Description ( 
          "An ASNumber is an integer between 1 and 65535, with the "
          "range 64512 through 65535 reserved for private use. "
          "Every AS has a unique AS number, which is assigned to it "
          "by an Internet Registry or a provider. IANA assigns and "
          "administers AS numbers." )]
   uint16 ASNumber;

      [Description ( 
          "IsSingleHomed is a boolean that, when its value is TRUE, "
          "indicates that this AS reaches networks outside of its "
          "domain through a single exit point." )]
   boolean IsSingleHomed;

      [Description ( 
          "IsTransit is a boolean that, when its value is TRUE, "
          "indicates that this AS will advertise routes that it "
          "learns from other ASs. A non-transit AS will only "
          "advertise its own routes." )]
   boolean IsTransit;

      [Description ( 
          "RequireIGPSync is a boolean that, when its value is "
          "TRUE, indicates that this AS must obey the following "
          "rule: a router should not advertise destinations learned "
          "from internal neighbors to external destinations unless "
          "those destinations are also known via some internal "
          "gateway protocol. Otherwise, a router may receive "
          "traffic that cannot yet be routed. However, since this "
          "is a costly choice, it is common practice to allow this "
          "rule to be broken under certain carefully controlled "
          "circumstances." )]
   boolean RequireIGPSync;

      [Description ( 
          "RoutingUpdateSource defines how routing information is "
          "to be injected. Statically injected routes are "
          "maintained by the routing table and are independent of "
          "the status of the networks to which they refer. This is "
          "done simply by defining static routes in the routing "
          "table. Dynamically injected routes are of two types. "
          "Dynamic routes refer to distributing all of the IGP "
          "routes. Semi-dynamic routes define a set of specific IGP "
          "routes that will be injected." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Static", "Dynamic", "Semi-Dynamic" }]
   uint16 RoutingUpdateSource;

      [Description ( 
          "Route aggregation refers to summarizing ranges of routes "
          "into one or more aggregate routes. This is done to "
          "minimize the number of routes in the global routing "
          "table. A potential drawback is that specific path "
          "information (e.g., the Path attribute value) is lost, "
          "which may lead to potential routing loops. There are a "
          "variety of ways to ensure that this does not happen. "
          "Note that BGP4 is required to do this. \n"
          "\n"
          "There are many ways to form aggregate routes. The "
          "following are the most popular: \'Aggregate only\', "
          "where only the aggregate is advertised, and all of its "
          "more specific routes are suppressed; \'Aggregate Plus "
          "Specific Routes\', where both the aggregate as well as "
          "its more specific routes are advertised (e.g., send the "
          "aggregate to the NAP, but send the more specific routes "
          "to providers); \'Aggregate Based on a Subset of Specific "
          "Routes\', where the aggregate route is formed by looking "
          "at certain more specific routes and forming an aggregate "
          "on them, suppressing all others." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "None", "Aggregate Only", 
          "Aggregate And All Specific Routes", 
          "Aggregate Based on Subset of Specific Routes" }]
   uint16 AggregationType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AverageRateMeterService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a concrete subclass of MeterService that represents a "
       "simple meter, called an Average Rate Meter. This type of meter "
       "measures the average rate at which packets are submitted to it "
       "over a specified time. Packets are defined as conformant if "
       "their average arrival rate does not exceed the specified "
       "measuring rate of the meter. Any packet that causes the "
       "specified measuring rate to be exceeded is defined to be "
       "non-conforming." )]
class CIM_AverageRateMeterService : CIM_MeterService {

      [Description ( 
          "This property is a 32-bit unsigned integer that defines "
          "the rate used to determine whether admitted packets are "
          "in conformance or not. The value is specified in "
          "kilobits per second." ), 
       Units ( "KiloBits per Second" )]
   uint32 AverageRate;

      [Description ( 
          "This property is a 64-bit unsigned integer that defines "
          "the time period over which the average measurement "
          "should be taken. The value is specified in microseconds." ), 
       Units ( "MicroSeconds" )]
   uint64 DeltaInterval;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPAttributesForRoute 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This defines the attributes that are transmitted between BGP "
       "peers on a per-route basis." )]
class CIM_BGPAttributesForRoute : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The BGPPathAttribute object that may be associated with "
          "a BGPIPRoute." )]
   CIM_BGPPathAttributes REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The BGPIPRoute that may have an associated set of "
          "per-peer attributes." )]
   CIM_BGPIPRoute REF Dependent;

      [Description ( 
          "This defines the IP address of the peer where the path "
          "information was learned." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrPeer" }, 
       ModelCorrespondence { 
          "CIM_BGPAttributesForRoute.PathAttrIPAddrPrefixLen", 
          "CIM_BGPAttributesForRoute.PathAttrIPAddrPrefix" }]
   string PathAttrPeer;

      [Description ( 
          "This defines the length in bits of the IP address prefix "
          "for the property, PathAttrPeer. The range is 0 to 32." ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgp4PathAttrIpAddrPrefixLen" }, 
       ModelCorrespondence { "CIM_BGPAttributesForRoute.PathAttrPeer" }]
   uint8 PathAttrIPAddrPrefixLen;

      [Description ( 
          "The IP address prefix of the property, PathAttrPeer. Its "
          "length is specified by the property, "
          "PathAttrIpAddrPrefixLen." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgp4PathAttrIpAddrPrefix" }, 
       ModelCorrespondence { 
          "CIM_BGPAttributesForRoute.PathAttrPeer", 
          "CIM_BGPAttributesForRoute.PathAttrIPAddrPrefixLen" }]
   string PathAttrIPAddrPrefix;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPClustersInAS 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This aggregation establishes \'whole-part\' relationships "
       "between an AutonomousSystem and the BGPClusters that it "
       "contains." )]
class CIM_BGPClustersInAS {

      [Key, Aggregate, Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that aggregates the Clusters "
          "belonging to it and administers them." )]
   CIM_AutonomousSystem REF GroupAS;

      [Key, Description ( 
          "The Clusters that are contained in the AS." )]
   CIM_BGPCluster REF PartAS;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01484.000" type ="change"> Correct ValueMaps for ProtocolIfType</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPProtocolEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A ProtocolEndpoint that is dedicated to running BGP." )]
class CIM_BGPProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( 
          "A boolean that, when TRUE, signifies that this is an "
          "instance of the external version of BGP (FALSE is the "
          "internal version)." )]
   boolean IsEBGP;

      [Description ( 
          "Normally, two routers running EBGP must be physically "
          "connected. This boolean, when TRUE, denotes a LOGICAL "
          "connection between two routers that are running EBGP "
          "(e.g., there is an intermediate router or interface "
          "between them)." )]
   boolean IsEBGPMultihop;

      [Description ( 
          "This is the unique identifier of the local BGP router. "
          "This is often the router ID (e.g., an IP address)." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpIdentifier" }]
   string LocalIdentifier;

      [Description ( 
          "This is the unique identifier of the peer BGP router. "
          "This is often the router ID (e.g., an IP address)." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerIdentifier" }]
   string PeerIdentifier;

      [Description ( 
          "This defines the current connection state of the BGP Peer."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Idle", "Connect", "Active", "OpenSet", 
          "OpenConfirm", "Established" }, 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerState" }]
   uint16 State;

      [Deprecated { "CIM_EnabledLogicalElement.RequestedState" }, 
       Description ( 
          "This defines the desired state of the BGP connection. It "
          "is equivalent to the RequestedState property (i.e., "
          "enabled/disabled status) that is inherited from "
          "EnabledLogicalElement. AdminStatus is deprecated in lieu "
          "of this inherited property." ), 
       ValueMap { "1", "2" }, 
       Values { "Stop", "Start" }, 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerAdminStatus" }]
   uint16 AdminStatus;

      [Description ( 
          "This defines the negotiated version of BGP that is "
          "running between the two peers." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerNegotiatedVersion" }]
   string NegotiatedVersion;

      [Deprecated { "CIM_BindsTo", "CIM_IPProtocolEndpoint" }, 
       Description ( 
          "This is the local IP address of this router\'s BGP "
          "connection. It is deprecated since a binding should be "
          "defined using the CIM_BindsTo association. Ideally the "
          "binding is to a TCPProtocolEndpoint which then handles "
          "the association to its IPEndpoint." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerLocalAddr" }]
   string LocalAddress;

      [Deprecated { "CIM_BindsTo", "CIM_TCPProtocolEndpoint" }, 
       Description ( 
          "This is the local port number for the TCP connection of "
          "this router\'s BGP connection. It is deprecated since a "
          "binding should be defined (to a TCPProtocolEndpoint) "
          "using the CIM_BindsTo association." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerLocalPort" }]
   uint16 LocalPort;

      [Deprecated { "CIM_BindsTo", "CIM_RemoteServiceAccessPoint" }, 
       Description ( 
          "This is the remote IP address of this router\'s BGP "
          "connection. It is deprecated since a binding to a Remote "
          "ServiceAccessPoint should be instantiated, using "
          "CIM_BindsTo." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerRemoteAddr" }]
   string RemoteAddress;

      [Deprecated { "CIM_BindsTo", "CIM_RemotePort" }, 
       Description ( 
          "This is the remote port number for the TCP connection of "
          "this router\'s BGP connection. It is deprecated since a "
          "binding to a RemotePort should be instantiated, using "
          "CIM_BindsTo." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerRemotePort" }]
   uint16 RemotePort;

      [Description ( 
          "This is the remote AS number for this router\'s BGP connection."
           ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerRemoteAs" }]
   uint16 RemoteAS;

      [Description ( 
          "This defines the time interval, in seconds, for the "
          "ConnectRetry timer. The suggested value is 120 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpConnectRetryInterval" }]
   uint32 ConnectRetryInterval = 120;

      [Description ( 
          "This defines the time interval in seconds for the Hold "
          "Time configured for this BGP speaker with a peer. This "
          "value is placed in an OPEN message sent to a peer by "
          "this BGP speaker, and is compared with the Hold Time "
          "field in the OPEN message received from the peer. It "
          "enables this speaker to establish a mutually agreeable "
          "Hold Time with the peer. This value must not be less "
          "than three seconds. If it is zero, then the Hold Time is "
          "NOT to be established with the peer. The suggested value "
          "for this timer is 90 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerHoldTimeConfigured" }]
   uint16 HoldTimeConfigured = 90;

      [Description ( 
          "This defines the time interval in seconds for the "
          "KeepAlive timer configured for this BGP speaker with a "
          "peer. This value will determine the frequency of the "
          "KEEPALIVE messages relative to the value of the "
          "HoldTimeConfigured property; the actual frequency is "
          "specified by the value of the KeepAlive property. A "
          "reasonable value is one third of that of the value of "
          "the HoldTimeConfigured property. If it is zero, then NO "
          "periodic KEEPALIVE messages are sent to the peer. The "
          "suggested value for this property is 30 seconds. The "
          "maximum value of this property is 21845 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerKeepAliveConfigured" }]
   uint16 KeepAliveConfigured = 30;

      [Description ( 
          "This defines the time interval in seconds for the "
          "MinASOriginationInterval timer. The suggested value for "
          "this property is 15 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerMinASOriginationInterval" }]
   uint16 MinASOriginationInterval = 15;

      [Description ( 
          "This defines the time interval in seconds for the "
          "MinRouteAdvertisementInterval timer. The suggested value "
          "for this property is 30 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BGP4-MIB.bgpPeerMinRouteAdvertisementInterval" }]
   uint16 MinRouteAdvertisementInterval = 30;

      [Description ( 
          "This defines the maximum amount of time in seconds that "
          "may elapse between the receipt of successive KEEPALIVE "
          "or UPDATE messages. This is instrumented as a counter "
          "that increments from zero to the value specified in this "
          "property. The value of this property is calculated by "
          "the BGP speaker by using the smaller of the values of "
          "bgpPeerHoldTimeConfigured and the Hold Time received in "
          "the OPEN message. This value, if not zero seconds, must "
          "be at least three seconds, up to a maximum of 65535 "
          "seconds. Receipt of either a KEEPALIVE or an UPDATE "
          "message resets this value." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerHoldTime" }]
   uint16 HoldTime;

      [Description ( 
          "This defines the time interval in seconds for the "
          "KeepAlive timer established with the peer. The value of "
          "this property is calculated by the speaker such that, "
          "when compared with the HoldTime property, it has the "
          "same proportion as the KeepAliveConfigured property has "
          "with the HoldTimeConfigured property. A value of 0 "
          "indicates that the KeepAlive timer has not yet been "
          "established. The maximum value of this property is 21845 "
          "seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpPeerKeepAlive" }]
   uint16 KeepAlive;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to BGP and "
          "reserved values for this subclass of ProtocolEndpoint." ), 
       ValueMap { "1", "225..4095", "4108", "4301..32767", "32768.." }, 
       Values { "Other", "IANA Reserved", "BGP", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 ProtocolIFType = 4108;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This class is used to represent the basic operation of BGP. It "
       "is derived from RouteCalculationService, the superclass of all "
       "routing protocols." )]
class CIM_BGPService : CIM_RouteCalculationService {

      [Description ( 
          "The BGPVersion property defines the version of BGP that "
          "this router is using. This is part of the BGP peer "
          "negotiation process)." ), 
       MappingStrings { "MIB.IETF|BGP4-MIB.bgpVersion" }]
   uint8 BGPVersion;

      [Description ( 
          "BGP sends errors using a NOTIFICATION message. This "
          "message contains an error code, an error subcode, and "
          "error data. The error code defines the type of the "
          "notification. The \'Cease\' error is for all fatal "
          "errors that are not one of the other five types of "
          "errors. For several of the errors, subcode information "
          "is also enumerated in other properties of this class." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "None", "Message Header Error", 
          "OPEN Message Error", "UPDATE Message Error", 
          "Hold Timer Expired", "Finite State Machine Error", "Cease" }]
   uint16 LastErrorCode;

      [Description ( 
          "This defines the BGP error subcode for message header "
          "errors (LastErrorCode = 1). If LastErrorCode is any "
          "other value, then this property should be set to NULL." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "None", "Connection Not Synchronized", 
          "Bad Message Length", "Bad Message Type" }]
   uint16 LastMessageErrorSubCode;

      [Description ( 
          "This defines the BGP error subcode for OPEN message "
          "errors (LastErrorCode = 2). If LastErrorCode is any "
          "other value, then this property should be set to NULL." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "None", "Unsupported Version Number", "Bad Peer AS", 
          "Bad BGP Identifier", "Unsupported Optional Parameter", 
          "Authentication Failure", "Unacceptable Hold Time" }]
   uint16 LastOpenErrorSubCode;

      [Description ( 
          "This defines the BGP error subcode for UPDATE message "
          "errors (LastErrorCode = 3). If LastErrorCode is any "
          "other value, then this property should be set to NULL." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11" }, 
       Values { "None", "Malformed Attribute List", 
          "Unrecognized Well-Known Attribute", 
          "Missing Well-Known Attribute", "Attribute Flags Error", 
          "Attribute Length Error", "Invalid Origin Attribute", 
          "AS Routing Loop", "Invalid NEXT_HOP Attribute", 
          "Optional Attribute Error", "Invalid Network Field", 
          "Malformed AS_path" }]
   uint16 LastUpdateErrorSubCode;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPServiceAttributes 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This is a specialization of the Component aggregation. This "
       "aggregation defines the set of BGPPathAttributes that are "
       "transmitted in per-path UPDATE messages. The association is "
       "deprecated since it is incorrectly defined as a Component "
       "relationship, and since the properties of BGPPathAttribute are "
       "path/endpoint-specific (not defined at the level of the "
       "Service)." )]
class CIM_BGPServiceAttributes : CIM_Component {

      [Deprecated { "No value" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The BGPService that aggregates BGPPathAttributes as part "
          "of its routing information." )]
   CIM_BGPService REF GroupComponent;

      [Deprecated { "No value" }, 
       Override ( "PartComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The BGP attribute, which are part-of the BGP UPDATE message."
           )]
   CIM_BGPPathAttributes REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPServiceStatistics 
// ==================================================================
   [Association, Deprecated { "CIM_ElementStatisticalData" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This association defines statistics collected for a BGP "
       "Service. The relationship is deprecated since the class "
       "BGPStatistics is deprecated. It is incorrectly associated with "
       "a BGPService, but should instead be associated with a "
       "BGPProtocolEndpoint using the ElementStatisticalData "
       "relationship." )]
class CIM_BGPServiceStatistics : CIM_ServiceStatistics {

      [Deprecated { "CIM_ElementStatisticalData.Stats" }, 
       Override ( "Stats" ), 
       Max ( 1 ), 
       Description ( "The statistics object for the BGP session." )]
   CIM_BGPStatistics REF Stats;

      [Deprecated { "CIM_ElementStatisticalData.ManagedElement" }, 
       Override ( "Element" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The BGPService for which statistics are being gathered." )]
   CIM_BGPService REF Element;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CalculatedRoutes 
// ==================================================================
   [Association, Deprecated { "CIM_ConcreteDependency", 
       "CIM_NextHopIPRoute.RouteDerivation" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "This assocation makes explicit the routes that are calculated "
       "by a specific RouteCalculationService. Thus, every "
       "RouteCalculationService can have its own unique set of "
       "calculated routes. The association is not necessary in the "
       "model and has been deprecated. An instance of the general "
       "ConcreteDependency association can tie a NextHopIPRoute to a "
       "RouteCalculationService. In addition, information on how the "
       "route was derived is available in NextHopIPRoute\'s "
       "RouteDerivation enumeration." )]
class CIM_CalculatedRoutes : CIM_Dependency {

      [Deprecated { "CIM_ConcreteDependency.Antecedent", 
          "CIM_NextHopIPRoute.RouteDerivation" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The route\'s calculation service." )]
   CIM_RouteCalculationService REF Antecedent;

      [Deprecated { "CIM_ConcreteDependency.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The IP route calculated by a specific service." )]
   CIM_IPRoute REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CalculatesAmong 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This is a specialization of the ServiceSAPDependency "
       "association, indicating that the referenced ProtocolEndpoint "
       "is utilized by the RouteCalculationService to provide its "
       "functionality." )]
class CIM_CalculatesAmong : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( "The required ProtocolEndpoint." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The RouteCalculationService, which is dependent on the "
          "underlying ProtocolEndpoint." )]
   CIM_RouteCalculationService REF Dependent;

      [Deprecated { "No value" }, 
       Description ( 
          "TRUE indicates that this ProtocolEndpoint represents a "
          "static route, and FALSE means that it represents a "
          "dynamically-learned route. This property is deprecated "
          "since a Service may use an Endpoint to output several "
          "routes, some static and others dynamic." )]
   boolean IsStatic;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CalculationBasedOnQueue 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association establishes a dependency relationship between "
       "a QueuingService and an instance of the "
       "DropThresholdCalculationService class. The queue\'s current "
       "depth is used by the CalculationService in calculating an "
       "average/smoothed queue depth." )]
class CIM_CalculationBasedOnQueue : CIM_ServiceServiceDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The queue examined by the CalculationService." )]
   CIM_QueuingService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The CalculationService that provides an average queue depth."
           )]
   CIM_DropThresholdCalculationService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CalculationServiceForDropper 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association is a subclass of ServiceServiceDependency, "
       "and represents the reliance of a REDDropperService on one or "
       "more DropThresholdCalculationServices. The latter calculate "
       "average queue depth, based on the observed depths of a queue. "
       "The specific queue examined by each CalculationService is "
       "defined using the CalculationBasedOnQueue association." )]
class CIM_CalculationServiceForDropper : CIM_ServiceServiceDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "A calculation service for the dropper." )]
   CIM_DropThresholdCalculationService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The RED dropper which is dependent on average queue "
          "depth calculations by the Antecedent Service." )]
   CIM_REDDropperService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClassifierService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "ClassifierService represents a logical entity associated with "
       "an ingress or egress interface of a device, that takes a "
       "single input stream, and sorts it into one or more output "
       "streams. The sorting is done by a set of filters that select "
       "packets based on the packet contents, or possibly based on "
       "other attributes associated with the packet. Each output "
       "stream is the result of matching a particular filter. \n"
       "\n"
       "Rather than being linked directly to its filters (instantiated "
       "as FilterLists), a classifier is modeled as an aggregation of "
       "ClassifierElements. Each of these ClassifierElements is linked "
       "to a single FilterList, by the association "
       "ClassifierElementUsesFilterList. Note that ClassifierServices "
       "are designed to allow hierarchical classification. When "
       "hierarchical classification is used, a ClassifierElement may "
       "point to another ClassifierService (via the association, "
       "NextServiceAfterClassifierElement). When this is true, the "
       "ClassifierElement MUST NOT use the ClassifierElementUses "
       "FilterList association. \n"
       "\n"
       "A classifier is modeled as a ConditioningService so that it "
       "can be aggregated into a QoSService (using the "
       "QoSConditioningSubService aggregation), and can use the "
       "NextService association to identify the subsequent "
       "ConditioningServices for different traffic streams." )]
class CIM_ClassifierService : CIM_ConditioningService {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A representation of a communication endpoint where the CLP "
       "protocol may be accessed." )]
class CIM_CLPProtocolEndpoint : CIM_ProtocolEndpoint {

      [Write, Description ( 
          "Identifies the Current Default Target when a CLP Session "
          "is established. The Current Default Target is the CLP "
          "session environment setting that establishes a default "
          "base address for all command targets that are expressed "
          "as a relative target address and is used as the command "
          "target if no command target is specified in a command." ), 
       ModelCorrespondence { 
          "CIM_CLPSettingData.CurrentDefaultTarget" }]
   string CurrentDefaultTarget;

      [Write, Description ( 
          "The amount of time in seconds that the CLP Session "
          "should retain a CLP command job status. A KeepTime value "
          "of zero shall be interpreted to mean keep forever." ), 
       Units ( "Seconds" ), 
       ModelCorrespondence { "CIM_CLPSettingData.KeepTime" }, 
       PUnit ( "second" )]
   uint16 KeepTime;

      [Write, Description ( 
          "When TRUE the CLP Session will not return a command "
          "response until all spawned jobs have completed, "
          "otherwise it may." ), 
       ModelCorrespondence { "CIM_CLPSettingData.WaitBehavior" }]
   boolean WaitBehavior;

      [Write, Description ( 
          "OutputFormat establishes the default CLP Session command "
          "output format, as described in SM CLP Specification, "
          "DMTF document DSP0214." ), 
       ValueMap { "2", "3", "4", "5", "..", "0x8000..0xFFFF" }, 
       Values { "Text", "clpcsv", "Keyword", "clpxml", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPSettingData.OutputFormat" }]
   uint16 OutputFormat;

      [Write, Description ( 
          "OutputVerbosity establishes the default CLP Session "
          "output level of detail, as described in SM CLP "
          "Specification, DMTF document DSP0214." ), 
       ValueMap { "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Error", "Terse", "Verbose", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPSettingData.OutputVerbosity" }]
   uint16 OutputVerbosity;

      [Write, Description ( 
          "The default CLP Session command output language. As "
          "described in SM CLP Specification, DMTF document "
          "DSP0214, the language value is a 3-character string "
          "identifier of language as specified in ISO 639.2; \"eng\" "
          "is the default." ), 
       ModelCorrespondence { "CIM_CLPSettingData.OutputLanguage" }]
   string OutputLanguage;

      [Write, Description ( 
          "OutputPosition establishes the default CLP Session "
          "command output beginning position when multiple items "
          "are returned in the command output, as described in SM "
          "CLP Specification, DMTF document DSP0214." ), 
       ValueMap { "2", "3", "..", "0x8000..0xFFFF" }, 
       Values { "Begin", "End", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPSettingData.OutputPosition" }]
   uint16 OutputPosition;

      [Write, Description ( 
          "OutputOrder establishes the default CLP Session command "
          "output order when multiple items are returned in the "
          "command output as described in SM CLP Specification, "
          "DMTF document DSP0214." ), 
       ValueMap { "2", "3", "..", "0x8000..0xFFFF" }, 
       Values { "Default", "Reverse", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_CLPSettingData.OutputOrder" }]
   uint16 OutputOrder;

      [Write, Description ( 
          "Establishes the default CLP Session command output count "
          "number when multiple items are returned in the output as "
          "described in SM CLP Specification, DMTF document "
          "DSP0214. The value 0xFFFFFFFF shall be interpreted to "
          "mean that all items are to be returned. The maximum "
          "value for the count number is determined by the class of "
          "the target." ), 
       ModelCorrespondence { "CIM_CLPSettingData.OutputCount" }]
   uint32 OutputCount;

      [Write, Description ( 
          "Maintains the session default value for the display "
          "option. The argument string is stored \"as-is\" without "
          "normalization beyond capitalization. The argument string "
          "is compliant with the SM CLP command line grammar." ), 
       ModelCorrespondence { "CIM_CLPSettingData.DisplayOption" }]
   string DisplayOption;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ConditioningServiceOnEndpoint 
// ==================================================================
   [Association, Deprecated { 
       "CIM_IngressConditioningServiceOnEndpoint", 
       "CIM_EgressConditioningServiceOnEndpoint" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "The QoS Model describes the traffic conditioning functions in "
       "place for a network device. In order to \'be conditioned\', a "
       "packet is received at a ProtocolEndpoint. After "
       "\'conditioning\', a packet is dropped or leaves the device via "
       "a ProtocolEndpoint. This dependency on ProtocolEndpoints is "
       "defined by the ConditioningServiceOn Endpoint association. A "
       "property of the association, ServiceType, indicates whether "
       "the ConditioningService handles incoming (\"Ingress\") or "
       "out-going (\"Egress\") packets. This association is deprecated "
       "since different cardinalities are needed on the ingress and "
       "egress classes. This cannot be done using a single "
       "association." )]
class CIM_ConditioningServiceOnEndpoint : CIM_Dependency {

      [Deprecated { 
          "CIM_IngressConditioningServiceOnEndpoint.Antecedent", 
          "CIM_EgressConditioningServiceOnEndpoint.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The ProtocolEndpoint through which traffic arrives at or "
          "leaves from a network device." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Deprecated { 
          "CIM_IngressConditioningServiceOnEndpoint.Dependent", 
          "CIM_EgressConditioningServiceOnEndpoint.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The ConditioningService which begins or ends the traffic "
          "conditioning processing within a network device." )]
   CIM_ConditioningService REF Dependent;

      [Deprecated { "CIM_IngressConditioningServiceOnEndpoint", 
          "CIM_EgressConditioningServiceOnEndpoint" }, 
       Description ( 
          "Indicates whether a packet is incoming (value = 1, "
          "\"Ingress\") or out-going (value = 2, \"Egress\") at the "
          "ProtocolEndpoint, relative to the ConditioningService." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "Ingress", "Egress" }]
   uint16 ServiceType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Confederation 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "The BGP speakers in an AS are required to be fully meshed. "
       "This can lead to a huge number of TCP connections per router. "
       "One way to reduce the peering requirements is to use a "
       "confederation. A confederation effectively partitions one AS "
       "into a group of \'sub-ASs\'. This enables all of the benefits "
       "of IBGP to be applied inside the confederation, while enabling "
       "EBGP to be run between each confederation. It also enables "
       "certain BGP attribute values to be preserved between "
       "confederations. However, to the outside world, the AS with its "
       "confederations appear to be a single AS." )]
class CIM_Confederation : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that contains the confederations." )]
   CIM_AutonomousSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The Confederation within the AutonomousSystem." )]
   CIM_AutonomousSystem REF PartComponent;

      [Description ( 
          "A unique identifier of the AutonomousSystem that "
          "contains the confederations." )]
   uint32 ParentASNumber;

      [Description ( 
          "A unique identifier of the Confederation within the "
          "AutonomousSystem." )]
   uint32 ChildASNumber;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A class derived from ProtocolEndpoint representing the "
       "configuration of a DHCP client. The configuration information "
       "contained by this ProtocolEndpoint is the current "
       "configuration obtained/received from a DHCP server. An "
       "instance of CIM_RemoteAccessAvailableToElement is used to "
       "relate the DHCPProtocolEndpoint to the "
       "RemoteServiceAccessPoint which represents the DHCP server. An "
       "EndpointIdentity association from the DHCPProtocolEndpoint to "
       "an IPProtocolEndpoint is established." )]
class CIM_DHCPProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( 
          "ClientState represents the current state of the DHCP "
          "client. See RFC1541 for more information on the meaning "
          "of each state." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", 
          "9..32767", "32768..65535" }, 
       Values { "Unknown", "DMTF Reserved", "Init", "Selecting", 
          "Requesting", "Rebinding", "Init-Reboot", "Rebooting", 
          "Bound", "DMTF Reserved", "Vendor Specified" }, 
       MappingStrings { "RFC1541.IETF|Section 4.4.1" }]
   uint16 ClientState;

      [Description ( 
          "This option specifies the time interval from address "
          "assignment until the client transitions to the RENEWING "
          "state. This value corresponds to the value for code 58 "
          "as defined in RFC2132." ), 
       Units ( "Seconds" ), 
       MappingStrings { "RFC2132.IETF|Section 9.11" }, 
       PUnit ( "second" )]
   uint32 RenewalTime;

      [Description ( 
          "This property specifies the time interval from address "
          "assignment until the client transitions to the REBINDING "
          "state. This value corresponds to the value for code 59 "
          "as defined in RFC2132." ), 
       Units ( "Seconds" ), 
       MappingStrings { "RFC2132.IETF|Section 9.12" }, 
       PUnit ( "second" )]
   uint32 RebindingTime;

      [Description ( 
          "This property is used in a client request (DHCPDISCOVER "
          "or DHCPREQUEST) to allow the client to request a lease "
          "time for the IP address. In a server reply (DHCPOFFER), "
          "a DHCP server uses this option to specify the lease time "
          "it is willing to offer. This value corresponds to the "
          "value for code 51 as defined in RFC2132.or as specified "
          "in RFC3315, Section 9" ), 
       Units ( "Seconds" ), 
       MappingStrings { "RFC2132.IETF|Section 9.2" }, 
       PUnit ( "second" )]
   uint32 LeaseTime;

      [Description ( 
          "This property indicates the time a DHCP lease was "
          "obtained by the client. There is no correlating value "
          "defined in RFC2132. This value is persisted by the "
          "client when it obtains a DHCP lease from a DHCP server." )]
   datetime LeaseObtained;

      [Description ( 
          "This property indicates the time a DHCP lease will "
          "expire. There is no correlating value defined in "
          "RFC2132. This value is calculated by the client by "
          "adding the interval specified in LeaseTime to the value "
          "of LeaseObtained." )]
   datetime LeaseExpires;

      [Description ( 
          "One or more DHCP options received by the DHCP client. "
          "These may include: Subnet Mask, Default Router, DNS "
          "Server, etc. See the RFCs for a description of each "
          "option." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "19", "20", "21", "22", "23", "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", "44", "45", 
          "46", "47", "48", "49", "50", "51", "52", "53", "54", 
          "55", "56", "57", "58", "59", "60", "61", "62", "63", 
          "64", "65", "66", "67", "68", "69", "70", "71", "72", 
          "73", "74", "75", "76", "77", "78", "79", "80", "81", 
          "82..83", "84", "85..118", "119", "120", "121..122", 
          "123", "124..256", "257", "258..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Pad", "Subnet Mask", 
          "Time Offset", "Router Option", "Time Server", 
          "Name Server", "Domain Name Server", "Log Server", 
          "Cookie Server", "LPR Server", "Impress Server", 
          "Resource Location Server", "Host Name", "Boot File Size", 
          "Merit Dump File", "Domain Name", "Swap Server", 
          "Root Path", "Extensions Path", 
          "IP Forwarding Enable/Disable", 
          "Non-Local Source Routing Enable/Disable", 
          "Policy Filter", "Maximum Datagram Reassembly Size", 
          "Default IP Time-to-live", "Path MTU Aging Timeout", 
          "Path MTU Plateau Table", "Interface MTU", 
          "All Subnets are Local", "Broadcast Address", 
          "Perform Subnet Mask Discovery", "Mask Supplier", 
          "Perform Router Discovery", "Router Solicitation Address", 
          "Static Route", "Trailer Encapsulation", 
          "ARP Cache Timeout", "Ethernet Encapsulation", 
          "TCP Default TTL", "TCP Keepalive Interval", 
          "TCP Keepalive Garbage", 
          "Network Information Service Domain", 
          "Network Information Servers", 
          "Network Time Protocol Servers", 
          "Vendor Specific Information", 
          "NetBIOS over TCP/IP Name Server", 
          "NetBIOS over TCP/IP Datagram Distribution Server", 
          "NetBIOS over TCP/IP Node Type", 
          "NetBIOS over TCP/IP Scope", 
          "X Window System Font Server", 
          "X Window System Display Manager", "Requested IP Address", 
          "Lease Time", "Option Overload", "Message Type", 
          "Server Identifier", "Parameter Request List", 
          "Error Message", "Maximum Message Size", 
          "Renewal (T1) Time", "Rebinding (T2) Time", 
          "Vendor Class Identifier", "Client Identifier", 
          "DMTF Reserved", "DMTF Reserved", 
          "Network Information Service+ Domain", 
          "Network Information Service+ Servers", 
          "TFTP Server Name", "Bootfile Name", 
          "Mobile IP Home Agent", 
          "Simple Mail Transport Protocol (SMTP) Server", 
          "Post Office Protocol (POP3) Server", 
          "Network News Transport Protocol (NNTP) Server", 
          "Default World Wide Web (WWW) Server", 
          "Default Finger Server", 
          "Default Internet Relay Chat (IRC) Server", 
          "StreetTalk Server", 
          "StreetTalk Directory Assistance (STDA) Server", 
          "User Class", "SLP Directory Agent", "SLP Service Scope", 
          "DMTF Reserved", "Relay Agent Information", 
          "DMTF Reserved", "Name Service Search", 
          "Subnet Selection", "DMTF Reserved", "Classless Route", 
          "DMTF Reserved", "End", "DMTF Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2132.IETF", "RFC2937.IETF", 
          "RFC3011.IETF", "RFC3046.IETF", "RFC3004.IETF", 
          "RFC2610.IETF", "RFC3442.IETF" }]
   uint16 OptionsReceived[];


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiffServService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "DiffServService represents the use of standard or custom "
       "DiffServ services (associated with particular Per Hop "
       "Behaviors, PHBs) to implement a (higher-level) QoSService. "
       "Note that the DiffServService may be just one of a set of "
       "coordinated QoSSubServices that together implement a "
       "higher-level QoSService. The relationship between the "
       "QoSServices is described using the association, QoSSubService." )]
class CIM_DiffServService : CIM_QoSService {

      [Deprecated { "CIM_DiffServService.PHBID" }, 
       Description ( 
          "This property is an unsigned 8-bit integer, and defines "
          "the Differentiated Services Code Point (DSCP) that this "
          "link uses to represent various types of differentiated "
          "services through device-specific configuration commands. "
          "It is deprecated since this information is conveyed via "
          "filter lists, associated with ClassifierElements. The "
          "DiffServService is better represented as a Per Hop "
          "Behavior." )]
   uint8 DSCP;

      [Description ( 
          "A 16-bit unsigned integer which identifies a particular "
          "per hop behavior, or family of per hop behaviors. The "
          "value is a Per Hop Behavior Identification Code, as "
          "defined in [R3140]. Note that as defined, these "
          "identification codes use the default, recommended, code "
          "points for PHBs as part of their structure. These values "
          "may well be different from the actual value used in the "
          "marker, as the marked value is domain-dependent. The "
          "ability to indicate the PHB Identification Code "
          "associated with a DiffServService is helpful when tying "
          "the QoSService to reference documents, and for "
          "inter-domain coordination and operation." )]
   uint16 PHBID;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A class derived from CIM_ProtocolEndpoint which represents the "
       "DNS client and DNS configuration for a single IP endpoint. The "
       "DNS server addresses can be determined by querying the "
       "AccessInfo property of associated CIM_RemoteServiceAccessPoint "
       "instances which have an AccessContext of \"DNS Server\". The "
       "order in which the DNS servers will be queried can be "
       "determined by the relative values of the OrderOfAccess "
       "property on each CIM_RemoteAccessAvailableToElement "
       "association which associated the CIM_RemoteServiceAccessPoint "
       "with the CIM_DNSProtocolEndpoint." )]
class CIM_DNSProtocolEndpoint : CIM_ProtocolEndpoint {

      [Write, Description ( 
          "The Hostname actually in use for this client connection." )]
   string Hostname;

      [Description ( 
          "One or more DHCP options that the DNS client is "
          "utilizing if they were returned during a DHCP bind "
          "operation." ), 
       ValueMap { "8", "14", "17", "18..32767", "32768..65535" }, 
       Values { "Domain Name Server", "Host Name", "Domain Name", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_DHCPProtocolEndpoint.OptionsReceived", 
          "CIM_DNSSettingData.DHCPOptionsToUse" }]
   uint16 DHCPOptionsToUse[];

      [Description ( 
          "Whether or not the client appends the parent domain "
          "suffix to target names prior to attempting to resolve." ), 
       ModelCorrespondence { 
          "CIM_DNSGeneralSettingData.AppendParentSuffixes" }]
   boolean AppendParentSuffixes;

      [Description ( 
          "Whether or not the client appends the primary domain "
          "suffix to target names prior to attempting to resolve." ), 
       ModelCorrespondence { 
          "CIM_DNSGeneralSettingData.AppendPrimarySuffixes" }]
   boolean AppendPrimarySuffixes;

      [Description ( 
          "The DNS suffixes to append when attempting to resolve a hostname."
           ), 
       ModelCorrespondence { 
          "CIM_DNSGeneralSettingData.DNSSuffixesToAppend" }]
   string DNSSuffixesToAppend[];

      [Description ( "The domain to use for this client connection." ), 
       ModelCorrespondence { "CIM_DNSSettingData.DomainName" }]
   string DomainName;

      [Description ( 
          "Whether or not the client attempted to register this "
          "connection\'s address in DNS." ), 
       ModelCorrespondence { 
          "CIM_DNSSettingData.RegisterThisConnectionsAddress" }]
   boolean RegisterThisConnectionsAddress;

      [Description ( 
          "Whether or not the suffix is appended before registering "
          "the client name with the DNS server." ), 
       ModelCorrespondence { 
          "CIM_DNSSettingData.UseSuffixWhenRegistering" }]
   boolean UseSuffixWhenRegistering;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DSCPMarkerService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "DSCPMarkerService marks the differentiated services codepoint "
       "(DSCP) within the DS field in the IPv4 and IPv6 packet "
       "headers, as defined in [R2474]. It is marked with the specific "
       "value defined in the property, DSCPValue. Following common "
       "practice, the value to be written into the field is "
       "represented as an unsigned 8-bit integer." )]
class CIM_DSCPMarkerService : CIM_MarkerService {

      [Description ( 
          "This property is an unsigned 8-bit integer, representing "
          "a value to be used for marking the DSCP field in an IPv4 "
          "or Ipv6 packet header. Since the DSCP consists of 6 "
          "bits, the values for this property are limited to the "
          "range 0..63. When the DSCP is marked, the remaining two "
          "bits in the DS field are left unchanged." ), 
       MinValue ( 0 ), 
       MaxValue ( 63 )]
   uint8 DSCPValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EFService 
// ==================================================================
   [Deprecated { "CIM_DiffServService" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents a specialization of the general concept "
       "of forwarding network traffic by adding specific semantics "
       "that characterize the operation of the Expedited Forwarding "
       "(EF) Service (defined in RFC 2598). \n"
       "\n"
       "The EF PHB can be used to build a low loss, low latency, low "
       "jitter, assured bandwidth, end-to-end service through DiffServ "
       "domains. Such a service appears to the endpoints like a "
       "point-to-point connection or a virtual leased line. This "
       "service has also been described as Premium service in the IETF "
       "literature. \n"
       "\n"
       "RFC 2598 defines one DSCP for the EF service. Thus, there is "
       "no need to define any attributes in this class, since an "
       "instance of the EFService class, by definition, means that "
       "this particular DSCP is used. \n"
       "\n"
       "EFService is deprecated since forwarding based on the value of "
       "the DiffServ Code Point is specified using a FilterList, which "
       "is associated with a ClassifierElement. If there is a need to "
       "distinguish a higher-level set of coordinated QoS services, "
       "the DiffServService class can be instantiated directly." )]
class CIM_EFService : CIM_DiffServService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EGPRouteCalcDependency 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This is a specialization of ServiceServiceDependency, and "
       "captures the dependency that external gateway protocols (such "
       "as BGP) have on interior gateway protocols (such as OSPF)." )]
class CIM_EGPRouteCalcDependency : CIM_ServiceServiceDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The independent RouteCalculationService that provides "
          "routing information from the AS, for the EGP to use." )]
   CIM_RouteCalculationService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The dependent RouteCalculationService (e.g., the Route "
          "CalculationService) that is functioning as an EGP." )]
   CIM_RouteCalculationService REF Dependent;

      [Description ( 
          "Sometimes it is necessary to inject EGP information, "
          "such as that from BGP, into IGPs. This attribute defines "
          "whether this should be done for the two routing "
          "protocols that are defined by this association. The "
          "values below mean that no, partial, and full EGP "
          "information is injected into the IGP, respectively." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "None", "Partial", "Full" }]
   uint16 IGPInjection;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EgressConditioningServiceOnEndpoint 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association represents the binding, in the egress "
       "direction, between a ProtocolEndpoint and the last "
       "ConditioningService that processes packets before they leave a "
       "network device (via that ProtocolEndpoint). This \'last\' "
       "ConditioningService is ordinarily a scheduler, but it does not "
       "have to be. There can be multiple \'last\' "
       "ConditioningServices for an Endpoint (for example, in the case "
       "of a fallback scheduler). Therefore, the cardinality for the "
       "Dependent object reference remains 0..n. On the other hand, a "
       "single ConditioningService cannot be the last one to process "
       "packets for multiple Endpoints. So, the cardinality of the "
       "Antecedent object reference is narrowed from 0..n to 0..1." )]
class CIM_EgressConditioningServiceOnEndpoint : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The ProtocolEndpoint through which traffic leaves a "
          "network device." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ConditioningService which ends the traffic "
          "conditioning processing within a network device." )]
   CIM_ConditioningService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ElementInSchedulingService 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association represents the relationship between a "
       "PacketSchedulingService and the set of SchedulingElements that "
       "tie it to its inputs (either QueuingServices or other "
       "PacketSchedulingServices)." )]
class CIM_ElementInSchedulingService : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The scheduler aggregating the SchedulingElement. A "
          "SchedulingElement can be associated with at most one "
          "SchedulingService." )]
   CIM_PacketSchedulingService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( 
          "A SchedulingElement that ties either a queue or another "
          "scheduler to the referenced PacketSchedulingService. "
          "Every PacketSchedulingService MUST have at least one "
          "Scheduling Element/input." )]
   CIM_SchedulingElement REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EndpointIdentity 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "CIM_EndpointIdentity indicates that two ProtocolEndpoints "
       "represent different aspects of the same underlying address or "
       "protocol-specific ID. This association refines the "
       "CIM_LogicalIdentity superclass by restricting it to the "
       "Endpoint level and defining its use in well understood "
       "scenarios. One of these scenarios is to represent that an "
       "Endpoint has both \'LAN\' and protocol-specific aspects. For "
       "example, an Endpoint could be both a LANEndpoint as well as a "
       "DHCPEndpoint." )]
class CIM_EndpointIdentity : CIM_LogicalIdentity {

      [Override ( "SystemElement" ), 
       Description ( 
          "SystemElement represents one aspect of the Endpoint." )]
   CIM_ProtocolEndpoint REF SystemElement;

      [Override ( "SameElement" ), 
       Description ( 
          "SameElement represents an alternate aspect of the Endpoint."
           )]
   CIM_ProtocolEndpoint REF SameElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EndpointOfNetworkPipe 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Pipes" ), 
    Description ( 
       "EndpointOfNetworkPipe describes the endpoints between which a "
       "pipe transfers information. Whether an endpoint is a source or "
       "sink is indicated by a property of the association, "
       "SourceOrSink." ), 
    MappingStrings { "Recommendation.ITU|M3100.Pipe.a-TPInstance", 
       "Recommendation.ITU|M3100.Pipe.z-TPInstance" }]
class CIM_EndpointOfNetworkPipe : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 2 ), 
       Max ( 2 ), 
       Description ( "One of the endpoints of the pipe." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The pipe which is dependent on the endpoints as the "
          "source or sink of the transferred information." )]
   CIM_NetworkPipe REF Dependent;

      [Description ( 
          "Indicates whether the endpoint is a source (value = 2), "
          "or sink (value = 3) for the pipe. If this information is "
          "not applicable, the property is set to 4. If the "
          "information is not known, the property is set to 0." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Source", "Sink", "Not Applicable" }]
   uint16 SourceOrSink;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EWMAMeterService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a concrete subclass of the MeterService class that "
       "represents an exponentially weighted moving average meter. "
       "This meter is a simple low-pass filter that measures the rate "
       "of incoming packets over a small, fixed sampling interval. Any "
       "admitted packet that pushes the average rate over a "
       "pre-defined limit is defined to be non-conforming." )]
class CIM_EWMAMeterService : CIM_MeterService {

      [Description ( 
          "This property is a 32-bit unsigned integer that defines "
          "the average rate against which the sampled arrival rate "
          "of packets should be measured. Any packet that causes "
          "the sampled rate to exceed this rate is deemed "
          "non-conforming. The value is specified in kilobits per "
          "second." ), 
       Units ( "KiloBits Per Second" )]
   uint32 AverageRate;

      [Description ( 
          "This property is a 64-bit unsigned integer that defines "
          "the sampling interval used to measure the arrival rate. "
          "The calculated rate is averaged over this interval and "
          "checked against the AverageRate property. All packets "
          "whose computed average arrival rate is less than the "
          "AverageRate are deemed conforming. The value is "
          "specified in microseconds." ), 
       Units ( "MicroSeconds" )]
   uint64 DeltaInterval;

      [Description ( 
          "This property is a 32-bit unsigned integer representing "
          "the reciprocal of the time constant (e.g., frequency "
          "response) of what is essentially a simple low-pass "
          "filter. For example, the value 64 for this property "
          "represents a time constant value of 1/64." )]
   uint32 Gain;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterEntryInSystem 
// ==================================================================
   [Association, Deprecated { "CIM_HostedFilterEntryBase" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "All filter entries (FilterEntryBase and its subclasses) are "
       "defined in the context of a ComputerSystem/network device, "
       "where they are used to identify and act on network traffic. "
       "Note that this class is deprecated since its subclassing is "
       "not correct. It subclasses from System Component, but a "
       "FilterEntryBase is NOT a Component of a System. Instead, it is "
       "hosted/scoped by the System. In versions up to CIM 2.6, "
       "FilterEntryInSystem was a mandatory, Weak relationship. This "
       "is no longer true, beginning with CIM V2.7." )]
class CIM_FilterEntryInSystem : CIM_SystemComponent {

      [Deprecated { "CIM_HostedFilterEntryBase.Antecedent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The ComputerSystem/network device that scopes the FilterEntryBase."
           )]
   CIM_ComputerSystem REF GroupComponent;

      [Deprecated { "CIM_HostedFilterEntryBase.Dependent" }, 
       Override ( "PartComponent" ), 
       Description ( "The FilterEntryBase on the System." )]
   CIM_FilterEntryBase REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterListInSystem 
// ==================================================================
   [Association, Deprecated { "CIM_HostedFilterList" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "FilterLists are defined in the context of a ComputerSystem "
       "(e.g., a router, firewall or host). Note that this class is "
       "deprecated since its subclassing is not correct. It subclasses "
       "from SystemComponent, but a FilterList is NOT a Component of a "
       "System. Instead, it is hosted/scoped by the System. In "
       "versions up to CIM 2.6, FilterListInSystem was a mandatory, "
       "Weak relationship. This is no longer true, beginning with CIM "
       "V2.7." )]
class CIM_FilterListInSystem : CIM_SystemComponent {

      [Deprecated { "CIM_HostedFilterList.Antecedent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The ComputerSystem/network device that scopes the "
          "FilterList and administers it." )]
   CIM_ComputerSystem REF GroupComponent;

      [Deprecated { "CIM_HostedFilterList.Dependent" }, 
       Override ( "PartComponent" ), 
       Description ( "The FilterList on the System." )]
   CIM_FilterList REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FlowService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents a service that supports a particular "
       "microflow. The microflow is identified by the string-valued "
       "property FlowID. In some implementations, an instance of this "
       "class corresponds to an entry in the implementation\'s flow "
       "table." )]
class CIM_FlowService : CIM_QoSService {

      [Description ( 
          "This property is a string containing an identifier for a "
          "microflow." )]
   string FlowID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ForwardingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This class represents the functions used in forwarding network "
       "traffic. Its instances act on packets received from one or "
       "more ProtocolEndpoints or Services, and drop (discard), or "
       "send those packets to one or more other ProtocolEndpoints or "
       "Services. The explicit Endpoints being forwarded between, are "
       "described using the ForwardsAmong association (or one of its "
       "subclasses). Generally, the Endpoints are at the same protocol "
       "layer and are usually of similar types, or of the same type. "
       "ForwardingService is different than RouteCalculation Service "
       "in that it represents the function of forwarding traffic "
       "independent of calculating routing information. \n"
       "\n"
       "Examining the ForwardingService class definition, note that "
       "its superclass NetworkService is deprecated. Therefore, "
       "NetworkService\'s properties need not be implemented in an "
       "instance of ForwardingService. Unfortunately, NetworkService "
       "cannot be removed from the object hierarchy without a major "
       "Schema release. When/if this occurs, the NetworkService "
       "superclass will be removed, and ForwardingService will "
       "subclass from CIM_Service directly. Also note that there are a "
       "large number of additional protocols that are not currently "
       "modeled. These will be added over time." )]
class CIM_ForwardingService : CIM_NetworkService {

      [Description ( 
          "This defines the type of protocol that is being forwarded."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", "19" }, 
       Values { "Unknown", "Other", "IPv4", "IPv6", "IPv4/IPv6", 
          "IPX", "AppleTalk", "DECnet", "SNA", "CONP", "CLNP", 
          "VINES", "XNS", "ATM", "Frame Relay", "Ethernet", 
          "TokenRing", "FDDI", "Infiniband", "Fibre Channel" }, 
       ModelCorrespondence { 
          "CIM_ForwardingService.OtherProtocolType" }]
   uint16 ProtocolType;

      [Description ( 
          "This defines the type of protocol that is being "
          "forwarded when the value of the ProtocolType attribute "
          "is 1 (i.e., \"Other\"). This provides for future "
          "extensibility." ), 
       MaxLen ( 32 ), 
       ModelCorrespondence { "CIM_ForwardingService.ProtocolType" }]
   string OtherProtocolType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ForwardsAmong 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This association represents the dependency that exists between "
       "the ProtocolEndpoints that are used to forward data and the "
       "ForwardingService that is performing the forwarding of data." )]
class CIM_ForwardsAmong : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The ProtocolEndpoints that are used to forward the data." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The service that is forwarding the data." )]
   CIM_ForwardingService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Hdr8021PService 
// ==================================================================
   [Deprecated { "CIM_QoSService" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents a specialization of the general concept "
       "of forwarding network traffic by adding specific semantics "
       "that define how traffic is forwarded based on the value of the "
       "Priority field in the 802.1P header. \n"
       "\n"
       "This class is used to enable DiffServ domains and domains that "
       "support 802.1P only to exchange traffic. It represents the "
       "mapping between implementations that only support 802.1P "
       "priority marking to be mapped to implementations that support "
       "DiffServ, which use DSCPs. \n"
       "\n"
       "Hdr8021PService is deprecated since forwarding based on the "
       "value of the Priority field in the 802.1P header is specified "
       "using a FilterList, which is associated with a "
       "ClassifierElement. If there is a need to distinguish a "
       "higher-level set of coordinated QoS services, the QoSService "
       "class can be instantiated directly." )]
class CIM_Hdr8021PService : CIM_QoSService {

      [Deprecated { "CIM_Hdr8021Filter.HdrPriorityValue8021" }, 
       Description ( 
          "This property is an 8-bit unsigned integer that defines "
          "the notion of priority as specified in 802.1P "
          "implementations." )]
   uint8 PriorityValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HeadTailDropQueueBinding 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association describes the relationship between a head or "
       "tail dropper and the queue that it monitors to determine when "
       "to drop traffic. The referenced queue\'s depth is compared "
       "against the Dropper\'s threshold property. Although the "
       "dropper drops from only one queue, the drop decision may be "
       "influenced by the state of several queues. The rule for "
       "combining the multiple inputs is simple addition: if the sum "
       "of the lengths of the monitored queues exceeds the dropper\'s "
       "QueueThreshold value, then packets are dropped. Note that this "
       "rule for combining inputs may be overridden." )]
class CIM_HeadTailDropQueueBinding : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "A QueuingService examined by the CalculationService." )]
   CIM_QueuingService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The CalculationService that provides an average queue depth."
           )]
   CIM_HeadTailDropper REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedAdminDistance 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "AdministrativeDistance, being a global object, is weak to the "
       "AdminDomain that contains it. This association formalizes that "
       "relationship." )]
class CIM_HostedAdminDistance : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The AdminDomain that scopes the AdministrativeDistance." )]
   CIM_AdminDomain REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The table of (global) administrative distances that are "
          "defined in the context of the AdminDomain." )]
   CIM_AdministrativeDistance REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedBGPAttributes 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "The class BGPAttributes is weak to the AutonomousSystem that "
       "contains it. This association formalizes that relationship." )]
class CIM_HostedBGPAttributes : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that scopes the BGP attributes." )]
   CIM_AutonomousSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The BGP attributes defined in the context of the AutonomousSystem."
           )]
   CIM_BGPAttributes REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedBGPPeerGroup 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "A BGPPeerGroup is weak to the AutonomousSystem that contains "
       "it. This association formalizes that relationship." )]
class CIM_HostedBGPPeerGroup : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that scopes the BGP peer group." )]
   CIM_AutonomousSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The BGP peer group defined in the context of the AutonomousSystem."
           )]
   CIM_BGPPeerGroup REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedBGPRouteMap 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "A BGPRouteMap is weak to the AutonomousSystem that contains "
       "it. This association formalizes that relationship." )]
class CIM_HostedBGPRouteMap : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that scopes the BGPRouteMap." )]
   CIM_AutonomousSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The BGPRouteMap defined in the context of the AutonomousSystem."
           )]
   CIM_BGPRouteMap REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedFilterEntryBase 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "All filter entries (FilterEntryBase and its subclasses) are "
       "defined in the context of a ComputerSystem/network device, "
       "where the filter entries are used and administered." )]
class CIM_HostedFilterEntryBase : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The ComputerSystem/network device that scopes the FilterEntryBase."
           )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( "The FilterEntryBase on the System." )]
   CIM_FilterEntryBase REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedFilterList 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Filtering" ), 
    Description ( 
       "FilterLists are defined in the context of a ComputerSystem/ "
       "network device, where the list is used and administered." )]
class CIM_HostedFilterList : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The ComputerSystem/network device that scopes the FilterList."
           )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( "The FilterList on the System." )]
   CIM_FilterList REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedForwardingServices 
// ==================================================================
   [Association, Deprecated { "CIM_HostedService" }, 
    Version ( "2.7.1" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This is a specialization of CIM_HostedService, which is an "
       "association between a Service and the System on which the "
       "functionality resides. The class, HostedForwardingServices, is "
       "deprecated since it provides no additional semantics over "
       "HostedService, and unecessarily restricts the Service to a "
       "single ComputerSystem, when the Service could reside in a "
       "Network or other higher level System." )]
class CIM_HostedForwardingServices : CIM_HostedService {

      [Deprecated { "CIM_HostedService.Antecedent" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting router." )]
   CIM_ComputerSystem REF Antecedent;

      [Deprecated { "CIM_HostedService.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( "The Service hosted on the System." )]
   CIM_ForwardingService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedRoutingPolicy 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "A RoutingPolicy is weak to the network device (i.e., the "
       "ComputerSystem) that contains it. This association formalizes "
       "that relationship." )]
class CIM_HostedRoutingPolicy : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The network device/computer system that scopes the RoutingPolicy."
           )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The routing policy defined in the context of the network device."
           )]
   CIM_RoutingPolicy REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedRoutingServices 
// ==================================================================
   [Association, Deprecated { "CIM_HostedService" }, 
    Version ( "2.7.1" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This is a specialization of CIM_HostedService, which is an "
       "association between a Service and the System on which the "
       "functionality resides. The class, HostedRoutingServices, is "
       "deprecated since it provides no additional semantics over "
       "HostedService, and unecessarily restricts the Service to a "
       "single ComputerSystem, when the Service could reside in a "
       "Network or other higher level System." )]
class CIM_HostedRoutingServices : CIM_HostedService {

      [Deprecated { "CIM_HostedService.Antecedent" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting router." )]
   CIM_ComputerSystem REF Antecedent;

      [Deprecated { "CIM_HostedService.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( "The Service hosted on the System." )]
   CIM_RouteCalculationService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InBGPPeerGroup 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This aggregation defines the specific routers (i.e., "
       "ComputerSystems) that participate in a PeerGroup." )]
class CIM_InBGPPeerGroup : CIM_CollectedMSEs {

      [Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( "The PeerGroup that aggregates the routers." )]
   CIM_BGPPeerGroup REF Collection;

      [Override ( "Member" ), 
       Min ( 2 ), 
       Description ( "The routers that comprise the PeerGroup." )]
   CIM_ComputerSystem REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IngressConditioningServiceOnEndpoint 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association represents the binding, in the ingress "
       "direction, between a ProtocolEndpoint and the first "
       "ConditioningService that processes packets received via that "
       "Endpoint. Since there can only be one \'first\' "
       "ConditioningService for a ProtocolEndpoint, the cardinality "
       "for the Dependent object reference is narrowed from 0..n to "
       "0..1. On the other hand, a single ConditioningService can be "
       "the first to process packets received via multiple "
       "ProtocolEndpoints. So, the cardinality of the Antecedent "
       "object reference remains 0..n." )]
class CIM_IngressConditioningServiceOnEndpoint : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The ProtocolEndpoint through which traffic arrives at a "
          "network device." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The ConditioningService which begins the traffic "
          "conditioning processing within a network device." )]
   CIM_ConditioningService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InLogicalNetwork 
// ==================================================================
   [Association, Deprecated { "CIM_MemberOfCollection" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "This association defines a ProtocolEndpoint as a member of a "
       "specific LogicalNetwork. \n"
       "\n"
       "Since the LogicalNetwork class is deprecated in lieu of "
       "ConnectivityCollection, this association is no longer "
       "necessary. It is deprecated to the MemberOfCollection "
       "association, that is inherited by ConnectivityCollection from "
       "its superclass, Collection." )]
class CIM_InLogicalNetwork : CIM_CollectedMSEs {

      [Deprecated { "CIM_MemberOfCollection.Collection" }, 
       Aggregate, Override ( "Collection" ), 
       Description ( 
          "The LogicalNetwork that groups the ProtocolEndpoint instances."
           )]
   CIM_LogicalNetwork REF Collection;

      [Deprecated { "CIM_MemberOfCollection.Member" }, 
       Override ( "Member" ), 
       Description ( 
          "The child ProtocolEndpoints that are components of the "
          "LogicalNetwork." )]
   CIM_ProtocolEndpoint REF Member;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( "A ProtocolEndpoint that is dedicated to running IP." ), 
    ModelCorrespondence { "CIM_IPProtocolEndpoint.IPv6AddressType", 
       "CIM_IPProtocolEndpoint.IPv6SubnetPrefixLength" }]
class CIM_IPProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( 
          "The IPv4 address that this ProtocolEndpoint represents." )]
   string IPv4Address;

      [Description ( 
          "The IPv6 address that this ProtocolEndpoint represents." ), 
       ModelCorrespondence { 
          "CIM_IPProtocolEndpoint.IPv6AddressType", 
          "CIM_IPProtocolEndpoint.IPv6SubnetPrefixLength" }]
   string IPv6Address;

      [Deprecated { "CIM_IPProtocolEndpoint.IPv4Address", 
          "CIM_IPProtocolEndpoint.IPv6Address" }, 
       Description ( 
          "The IP address that this ProtocolEndpoint represents, "
          "formatted according to the appropriate convention as "
          "defined in the AddressType property of this class (e.g., "
          "171.79.6.40). This single property is deprecated to "
          "replace it by specific IPv4 and v6 addresses." )]
   string Address;

      [Description ( 
          "The mask for the IPv4 address of this ProtocolEndpoint, "
          "if one is defined." )]
   string SubnetMask;

      [Description ( 
          "The prefix length for the IPv6 address of this Protocol "
          "Endpoint, if one is defined." )]
   uint8 PrefixLength;

      [Deprecated { "No value" }, 
       Description ( 
          "An enumeration that describes the format of the Address "
          "property. It is deprecated since it is not needed, as "
          "the class contains both IPv4 and v6 addresses)." ), 
       ValueMap { "0", "1", "2" }, 
       Values { "Unknown", "IPv4", "IPv6" }]
   uint16 AddressType;

      [Deprecated { "CIM_ProtocolEndpoint.ProtocolIFType" }, 
       Description ( 
          "This property explicitly defines support for different "
          "versions of the IP protocol, for this Endpoint. It is "
          "deprecated since the ProtocolIFType also provides this "
          "functionality by describing an endpoint as IPv4 only "
          "(value=4096), IPv6 only (value=4097), or IPv4/v6 "
          "(value=4098)." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "IPv4 Only", "IPv6 Only", 
          "Both IPv4 and IPv6" }]
   uint16 IPVersionSupport;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to IP-related "
          "and reserved values for this subclass of "
          "ProtocolEndpoint." ), 
       ValueMap { "1", "225..4095", "4096", "4097", "4098", 
          "4301..32767", "32768.." }, 
       Values { "Other", "IANA Reserved", "IPv4", "IPv6", "IPv4/v6", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 ProtocolIFType = 4096;

      [Description ( 
          "AddressOrigin identifies the method by which the IP "
          "Address, Subnet Mask, and Gateway were assigned to the "
          "IPProtocolEndpoint.A value of 3 \"Static\" shall "
          "indicate the values were assigned manually. A value of 4 "
          "\"DHCP\" shall indicate the values were assigned "
          "utilizing the Dynamic Host Configuration Protocol. See "
          "RFC 2131 and related. \n"
          "A value of 5 \"BOOTP\" shall indicate the values were "
          "assigned utilizing BOOTP. See RFC 951 and related. \n"
          "A value of 6 \"IPv4 Link Local\" shall indicate the "
          "values were assigned using the IPv4 Link Local protocol. "
          "See RFC 3927.\n"
          "A value of 7 \"DHCPv6\" shall indicate the values were "
          "assigned using DHCPv6. See RFC 3315. \n"
          "A value of 8 \"IPv6 AutoConfig\" shall indicate the "
          "values were assinged using the IPv6 AutoConfig Protocol. "
          "See RFC 4862. \n"
          "A value of 9 \"Stateless\" shall indicate Stateless "
          "values were assigned. \n"
          "A value of 10 \"Link Local\" shall indicate Link Local "
          "values were assigned." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Not Applicable", "Static", 
          "DHCP", "BOOTP", "IPv4 Link Local", "DHCPv6", 
          "IPv6AutoConfig", "Stateless", "Link Local", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 AddressOrigin = 0;

      [Description ( 
          "IPv6AddressType indentified the type of address found in "
          "the IPv6Address property. The values of this property "
          "shall be interpreted according to RFC4291, Section 2.4" ), 
       ValueMap { "2", "3", "4", "5", "6", "7", "8", "..", 
          "32768..65535" }, 
       Values { "Unspecified", "Loopback", "Multicast", 
          "Link Local Unicast", "Global Unicast", 
          "Embedded IPv4 Address", "Site Local Unicast", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_IPProtocolEndpoint.IPv6Address" }]
   uint16 IPv6AddressType;

      [Description ( 
          "IPv6SubnetPrefixLength is used to identify the prefix "
          "length of the IPv6Address property that is used to "
          "specify a subnet" ), 
       ModelCorrespondence { "CIM_IPProtocolEndpoint.IPv6Address" }]
   uint16 IPv6SubnetPrefixLength;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01484.000" type ="change"> Correct ValueMaps for ProtocolIfType</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPXProtocolEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "An IPX communication point from which data may be sent or received."
        )]
class CIM_IPXProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( 
          "An IPX address formatted as eight hexadecimal digits "
          "representing the network number, followed by a colon, "
          "followed by twelve hexadecimal digits representing the "
          "host address (e.g. \"00112233:010203040506\")." )]
   string Address;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to IPX and "
          "reserved values for this subclass of ProtocolEndpoint." ), 
       ValueMap { "1", "225..4095", "4099", "4301..32767", "32768.." }, 
       Values { "Other", "IANA Reserved", "IPX", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 ProtocolIFType = 4099;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::iSCSI" ), 
    Description ( 
       "This class contains the attributes of and negotiated values "
       "for, an iSCSI Connection which is modeled as a subclass of "
       "NetworkPipe. The original settings that are a starting point "
       "for negotiation are found in the class "
       "iSCSIConnectionSettings." )]
class CIM_iSCSIConnection : CIM_NetworkPipe {

      [Description ( "The iSCSI Connection ID for this connection." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiCxnCid" }]
   uint32 ConnectionID;

      [Description ( 
          "The maximum data payload size supported for command or "
          "data PDUs able to be received on this connection." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiCxnMaxRecvDataSegLength" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.MaxReceiveDataSegmentLength" }]
   uint32 MaxReceiveDataSegmentLength;

      [Description ( 
          "The maximum data payload size supported for command or "
          "data PDUs to be sent on this connection." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiCxnMaxXmitDataSegLength" }]
   uint32 MaxTransmitDataSegmentLength;

      [Description ( 
          "This property identifies the iSCSI header digest scheme "
          "in use within this connection." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "No Digest", "CRC32C" }, 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiCxnHeaderIntegrity" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.PrimaryHeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.SecondaryHeaderDigestMethod", 
          "CIM_iSCSIConnection.OtherHeaderDigestMethod" }]
   uint16 HeaderDigestMethod;

      [Description ( 
          "A string describing the Header Digest scheme in use when "
          "HeaderDigestMethod is equal to the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.OtherPrimaryHeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.OtherSecondaryHeaderDigestMethod", 
          "CIM_iSCSIConnection.HeaderDigestMethod" }]
   string OtherHeaderDigestMethod;

      [Description ( 
          "This property identifies the iSCSI data digest scheme in "
          "use within this connection." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Other", "No Digest", "CRC32C" }, 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiCxnDataIntegrity" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.PrimaryHeaderDigestMethod", 
          "CIM_iSCSIConnectionSettings.SecondaryHeaderDigestMethod", 
          "CIM_iSCSIConnection.OtherDataDigestMethod" }]
   uint16 DataDigestMethod;

      [Description ( 
          "A string describing the Data Digest scheme in use when "
          "DataDigestMethod is equal to the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.OtherPrimaryDataDigestMethod", 
          "CIM_iSCSIConnectionSettings.OtherSecondaryDataDigestMethod", 
          "CIM_iSCSIConnection.DataDigestMethod" }]
   string OtherDataDigestMethod;

      [Description ( 
          "This property indicates whether or not this connection "
          "is receiving markers in in its incoming data stream." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiCxnRecvMarker" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.RequestingMarkersOnReceive" }]
   boolean ReceivingMarkers;

      [Description ( 
          "This property indicates whether or not this connection "
          "is inserting markers in in its outgoing data stream." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiCxnSendMarker" }]
   boolean SendingMarkers;

      [Description ( 
          "Active version number of the iSCSI specification "
          "negotiated on this connection." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiCxnVersionActive" }, 
       ModelCorrespondence { 
          "CIM_iSCSICapabilities.MinimumSpecificationVersionSupported", 
          "CIM_iSCSICapabilities.MaximumSpecificationVersionSupported" }]
   boolean ActiveiSCSIVersion;

      [Description ( 
          "The authentication method being used on this connection, "
          "as communicated during the login phase." ), 
       ValueMap { "2", "3", "4", "5" }, 
       Values { "No Authentication", "SRP", "CHAP", "Kerberos" }, 
       MappingStrings { "MIB.IETF|IPS-AUTH-MIB.ipsAuthCredAuthMethod" }, 
       ModelCorrespondence { 
          "CIM_iSCSIConnectionSettings.PrimaryAuthenticationMethod", 
          "CIM_iSCSIConnectionSettings.SecondaryAuthenticationMethod", 
          "CIM_iSCSICapabilities.AuthenticationMethodsSupported" }]
   uint16 AuthenticationMethodUsed;

      [Description ( 
          "This property when true, indicates that the Target was "
          "required to authenticate itself to the Initiator, in "
          "addition to the Initiator authenticating itself to the "
          "Target. When false, and AuthenticationMethod is other "
          "than \'No Authentication\', only the Initatior "
          "authenticated itself to the Target. \n"
          "When AuthenticationMethodUsed is \'No Authentication\', "
          "this property must be false." )]
   boolean MutualAuthentication;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::Pipes" ), 
    Description ( 
       "iSCSISession is a network pipe between an initiator and target "
       "SCSIProtocolEndpoints. An iSCSISession is composed of one or "
       "more TCP connections which MUST be selected from a "
       "SystemSpecificCollection representing an iSCSI Portal Group. "
       "NetworkPipeComposition aggregates NetworkPipe instances "
       "representing iSCSI connections, which are associated to "
       "TCPProtocolEndpoints. Only an iSCSI initiator can create an "
       "iSCSI Session, an iSCSI Target MUST accept (or reject) a "
       "session request. EndOfNetworkPipe associates iSCSISession with "
       "SCSIProtocolEndpoint." )]
class CIM_iSCSISession : CIM_NetworkPipe {

      [Override ( "Directionality" ), 
       Description ( "iSCSI sessions MUST be bidirectional." ), 
       ValueMap { "2" }, 
       Values { "Bi-Directional" }]
   uint16 Directionality = 2;

      [Description ( "iSCSI Session type." ), 
       ValueMap { "2", "3" }, 
       Values { "Discovery", "Normal" }, 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnType" }]
   uint16 SessionType;

      [Description ( 
          "The Target Session Identifying Handle (TSIH) for this session."
           ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnTSIH" }]
   uint32 TSIH;

      [Description ( 
          "The iSCSI Port Name (iSCSIProtocolEndPoint.Name), of the "
          "device at the other end of this iSCSISession." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnInitiatorName", 
          "MIB.IETF|iSCSI-MIB.iscsiSsnTargetName" }]
   string EndPointName;

      [Description ( 
          "The number of transport protocol connections that "
          "currently belong to this session." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnConnectionNumber" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.MaxConnectionsPerSession" }]
   uint32 CurrentConnections;

      [Description ( 
          "If set to true, indicates that the initiator MUST wait "
          "for an R2T before sending to the target. If set to "
          "false, the initiator MAY send data immediately, within "
          "limits set by iscsiSsnFirstBurstLength and the expected "
          "data transfer length of the request." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnInitialR2T" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.InitialR2TPreference" }]
   boolean InitialR2T;

      [Description ( 
          "Indicates whether the initiator and target have agreed "
          "to support immediate data on this session." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnImmediateData" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.ImmediateDataPreference" }]
   boolean ImmediateData;

      [Description ( 
          "The maximum number of outstanding request-to-transmit "
          "(R2T)s per iSCSI task within this session." ), 
       Units ( "Bytes" ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiSsnMaxOutstandingR2T" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.MaxOutstandingR2T" }]
   uint32 MaxOutstandingR2T;

      [Description ( 
          "The maximum length supported for unsolicited data sent "
          "within this session." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnFirstBurstLength" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.MaxUnsolicitedFirstDataBurstLength" }]
   uint32 MaxUnsolicitedFirstDataBurstLength;

      [Description ( 
          "The maximum number of bytes which can be sent within a "
          "single sequence of Data-In or Data-Out PDUs." ), 
       Units ( "Bytes" ), 
       MinValue ( 512 ), 
       MaxValue ( 16777215 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnMaxBurstLength" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.MaxDataBurstLength" }]
   uint32 MaxDataBurstLength;

      [Description ( 
          "False indicates that iSCSI data PDU sequences MAY be "
          "transferred in any order. True indicates that data PDU "
          "sequences MUST be transferred using continuously "
          "increasing offsets, except during error recovery." ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiSsnDataSequenceInOrder" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.DataSequenceInOrderPreference" }]
   boolean DataSequenceInOrder;

      [Description ( 
          "False indicates that iSCSI data PDUs within sequences "
          "MAY be in any order. True indicates that data PDUs "
          "within sequences MUST be at continuously increasing "
          "addresses, with no gaps or overlay between PDUs. Default "
          "is true." ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiSsnDataPDUInOrder" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.DataPDUInOrderPreference" }]
   boolean DataPDUInOrder;

      [Description ( 
          "The level of error recovery negotiated between the "
          "initiator and the target. Higher numbers represent more "
          "detailed recovery schemes." ), 
       MinValue ( 1 ), 
       MaxValue ( 255 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiSsnErrorRecoveryLevel" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.ErrorRecoveryLevelPreference" }]
   uint32 ErrorRecoveryLevel;

      [Description ( 
          "The maximum number of connections allowed in this session."
           ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 ), 
       MappingStrings { "MIB.IETF|iSCSI-MIB.iscsiNodeMaxConnections" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.MaxConnectionsPerSession" }]
   uint32 MaxConnectionsPerSession;

      [Description ( 
          "The DefaultTime2Wait negotiated for this Session. This "
          "is the minimum time, in seconds, to wait before "
          "attempting an explicit/implicit logout or active iSCSI "
          "task reassignment after an unexpected connection "
          "termination or a connection reset." ), 
       Units ( "Seconds" ), 
       MinValue ( 0 ), 
       MaxValue ( 3600 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDefaultTime2Wait" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.DefaultTimeToWaitPreference" }]
   uint32 DefaultTimeToWait;

      [Description ( 
          "The DefaultTime2Retain negotiated for this Session. This "
          "is the maximum time, in seconds after an initial wait "
          "(Time2Wait), before which an active iSCSI task "
          "reassignment is still possible after an unexpected "
          "connection termination or a connection reset." ), 
       Units ( "Seconds" ), 
       MinValue ( 0 ), 
       MaxValue ( 3600 ), 
       MappingStrings { 
          "MIB.IETF|iSCSI-MIB.iscsiNodeDefaultTime2Retain" }, 
       ModelCorrespondence { 
          "CIM_iSCSISessionSettings.DefaultTimeToRetainPreference" }]
   uint32 DefaultTimeToRetain;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LANEndpoint 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A communication endpoint which, when its associated interface "
       "device is connected to a LAN, may send and receive data "
       "frames. LANEndpoints include Ethernet, Token Ring and FDDI "
       "interfaces." )]
class CIM_LANEndpoint : CIM_ProtocolEndpoint {

      [Description ( 
          "A label or identifier for the LAN Segment to which the "
          "Endpoint is connected. If the Endpoint is not currently "
          "active/connected or this information is not known, then "
          "LANID is NULL." ), 
       ModelCorrespondence { "CIM_LANConnectivitySegment.LANID", 
          "CIM_LANSegment.LANID" }]
   string LANID;

      [Deprecated { "CIM_ProtocolEndpoint.ProtocolType" }, 
       Description ( 
          "An indication of the kind of technology used on the LAN. "
          "This property is deprecated in lieu of ProtocolType, "
          "which is an enumeration inherited from ProtocolEndpoint "
          "and which includes the Values specified here." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Ethernet", "TokenRing", "FDDI" }, 
       ModelCorrespondence { 
          "CIM_LANConnectivitySegment.ConnectivityType", 
          "CIM_LANSegment.LANType" }]
   uint16 LANType;

      [Deprecated { "CIM_ProtocolEndpoint.OtherTypeDescription" }, 
       Description ( 
          "A free-form string that describes the type of technology "
          "used on the LAN when the value of the LANType property "
          "is equal to 1 (i.e., \"Other\"). This property is "
          "deprecated since its purpose overlaps with "
          "OtherTypeDescription, which which is inherited from "
          "ProtocolEndpoint." ), 
       ModelCorrespondence { 
          "CIM_LANConnectivitySegment.OtherTypeDescription", 
          "CIM_LANEndpoint.LANType" }]
   string OtherLANType;

      [Description ( 
          "The principal unicast address used in communication with "
          "the LANEndpoint. The MAC address is formatted as twelve "
          "hexadecimal digits (e.g., \"010203040506\"), with each "
          "pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order according to RFC "
          "2469." ), 
       MaxLen ( 12 )]
   string MACAddress;

      [Description ( 
          "Other unicast addresses that may be used to communicate "
          "with the LANEndpoint." )]
   string AliasAddresses[];

      [Description ( 
          "Multicast addresses to which the LANEndpoint listens." )]
   string GroupAddresses[];

      [Description ( 
          "The largest information field that may be sent or "
          "received by the LANEndpoint." ), 
       Units ( "Bits" )]
   uint32 MaxDataSize;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogicalNetworkService 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "A LogicalNetworkService represents network services that "
       "either originate and/or terminate in a LogicalNetwork. This "
       "association is deprecated since LogicalNetworks aggregate "
       "ProtocolEndpoints, not their backing Services." )]
class CIM_LogicalNetworkService {

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The LogicalNetwork that contains the network service." )]
   CIM_LogicalNetwork REF Network;

      [Deprecated { "No value" }, 
       Key, Description ( 
          "The NetworkService that is running in the LogicalNetwork." )]
   CIM_NetworkService REF NetworkService;

      [Deprecated { "No value" }, 
       Description ( 
          "An enumeration that explicitly defines this network "
          "service as originating, terminating, or residing in this "
          "LogicalNetwork." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Unknown", "Originates In", "Terminates In", 
          "Resides In" }]
   uint16 ContainmentType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Network 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Systems" ), 
    Description ( 
       "Network is a subclass of AdminDomain that groups "
       "interconnected networking and computing objects capable of "
       "exchanging information. Instances of CIM_Network can represent "
       "an enterprise\'s global network or specific connectivity "
       "domains within the global network. These concepts are similar "
       "to those defined for the Network object in ITU\'s M.3100 "
       "specification." ), 
    MappingStrings { "Recommendation.ITU|M3100.Network" }]
class CIM_Network : CIM_AdminDomain {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::Misc" ), 
    Description ( 
       "CIM_NetworkPortConfigurationService provides management of the "
       "network interfaces associated with a network port." )]
class CIM_NetworkPortConfigurationService : CIM_Service {


      [Description ( 
          "Create a CIM_LANEndpoint instance and associate it with "
          "the specified NetworkPort instance via an instance of "
          "CIM_PortImplementsEndpoint. The newly created instance "
          "of CIM_LANEndpont contains the configuration properties "
          "specified or default values applicable for the specified "
          "NetworkPort instance. This method will also create an "
          "instance of CIM_HostedAccessPoint which associates the "
          "newly created CIM_LANEndpoint instance with the instance "
          "of CIM_ComputerSystem which scopes the specified "
          "CIM_NetworkPort. An extrinsic method is required in "
          "order to provide atomic creation of multiple, related "
          "instances. Prior to creating the instances, the "
          "implementation will verify that a CIM_LANEndpoint "
          "instance can be created and associated with the "
          "CIM_NetworkPort instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Failed", 
          "Invalid Parameter", "DMTF Reserved", "Vendor Reserved" }]
   uint32 AddLANEndpoint(
         [Required, IN, Description ( 
             "The NetworkPort to which the network interface will be added."
              )]
      CIM_NetworkPort REF Port, 
         [IN ( false ), OUT, Description ( 
             "The created LANEndpoint." )]
      CIM_LANEndpoint REF Endpoint, 
         [Required, IN, Description ( 
             "The MAC address requested." )]
      string Address, 
         [IN, Description ( "The requested LAN ID." )]
      string LANID, 
         [IN, Description ( "The requested alias addresses." )]
      string AliasAddresses[], 
         [IN, Description ( "The requested group addresses." )]
      string GroupAddresses[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NetworkServicesInAdminDomain 
// ==================================================================
   [Association, Deprecated { "CIM_HostedDependency" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This association establishes the Dependency relationships that "
       "exist between an administrative domain and the Network "
       "Services that it hosts. It is deprecated since AdminDomains "
       "can contain any ManagedSystemElements. There is no special "
       "relationship needed for NetworkServices. In addition, the Min "
       "(1) cardinality on AdminDomain is not valid - since it may not "
       "be possible to define every NetworkService in the context of "
       "one or more Domains." )]
class CIM_NetworkServicesInAdminDomain : CIM_HostedDependency {

      [Deprecated { "CIM_Dependency.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "The AdminDomain that hosts and administers the various "
          "network services." )]
   CIM_AdminDomain REF Antecedent;

      [Deprecated { "CIM_Dependency.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The network service that is hosted in the administrative domain."
           )]
   CIM_NetworkService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NetworksInAdminDomain 
// ==================================================================
   [Association, Deprecated { "CIM_HostedCollection" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Collections" ), 
    Description ( 
       "This association is used to define the set of Logical Networks "
       "contained in an AdminDomain. This has the implied semantics "
       "that this set of LogicalNetworks are all managed by the same "
       "network administrator that manages the domain. \n"
       "\n"
       "Since the LogicalNetwork class is deprecated in lieu of "
       "ConnectivityCollection, this association is no longer "
       "necessary. It is deprecated to the HostedCollection "
       "association, that is inherited by ConnectivityCollection from "
       "its superclass, SystemSpecificCollection." )]
class CIM_NetworksInAdminDomain {

      [Deprecated { "CIM_HostedCollection.Antecedent" }, 
       Key, Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The AdminDomain that hosts the various LogicalNetworks." )]
   CIM_AdminDomain REF Domain;

      [Deprecated { "CIM_HostedCollection.Dependent" }, 
       Key, Weak, Description ( 
          "The LogicalNetworks that are hosted by the AdminDomain." )]
   CIM_LogicalNetwork REF Network;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NextScheduler 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association is a subclass of NextService, and defines a "
       "predecessor-successor relationship between Packet "
       "SchedulingServices. In a hierarchical queuing configuration "
       "(where a second scheduler treats the output of a first "
       "scheduler as a single, aggregated input), the two schedulers "
       "are related via the NextScheduler association." )]
class CIM_NextScheduler : CIM_NextService {

      [Override ( "PrecedingService" ), 
       Description ( 
          "The PacketSchedulingService whose output is treated as a "
          "single, aggregated input by the FollowingService "
          "scheduler. The [0..n] cardinality indicates that a "
          "single FollowingService scheduler may bring together the "
          "aggregated outputs of multiple prior schedulers." )]
   CIM_PacketSchedulingService REF PrecedingService;

      [Override ( "FollowingService" ), 
       Max ( 1 ), 
       Description ( 
          "A scheduler that includes among its inputs the "
          "aggregated outputs of one or more PrecedingService "
          "schedulers." )]
   CIM_PacketSchedulingService REF FollowingService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NonWorkConservingSchedulingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "A type of packet scheduler, that is capable of operating in a "
       "non-work conserving manner. This class does not add any "
       "properties beyond those it inherits from "
       "PacketSchedulingService. It does, however, participate in one "
       "additional association, FailNextScheduler." )]
class CIM_NonWorkConservingSchedulingService : CIM_PacketSchedulingService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01484.000" type ="change"> Correct ValueMaps for ProtocolIfType</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFProtocolEndpointBase 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "Base class for OSPF protocol endpoints, defining several "
       "general properties." )]
class CIM_OSPFProtocolEndpointBase : CIM_ProtocolEndpoint {

      [Override ( "EnabledState" ), 
       Description ( 
          "The operational status of the interface, see "
          "ospfIfAdminStat in RFC 1850. This is an integer "
          "enumeration whose complete definition is found in the "
          "EnabledLogicalElement class." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfAdminStat" }]
   uint16 EnabledState;

      [Description ( 
          "Estimated delay, in seconds that it takes to transmit a "
          "Link State Update Packet over this interface, see C.3 in "
          "RFC 2328." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfTransitDelay" }]
   uint16 TransitDelay;

      [Description ( 
          "The number of seconds between LSA (Link State "
          "Advertisement) retransmissions, see C.3 in RFC 2328." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfRetransInterval" }]
   uint16 RetransmitInterval;

      [Required, Description ( 
          "Identifies the authentication procedure to be used on "
          "the attached network, see C.3 in RFC 2328." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Null authentication", "Simple password", 
          "Cryptographic authentication" }, 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfAuthType" }]
   uint16 AuthType;

      [Description ( 
          "Specifies the authentication procedure if the value, "
          "\"Other\" (1) is set for AuthType." ), 
       ModelCorrespondence { "CIM_OSPFProtocolEndpoint.AuthType" }]
   string OtherAuthType;

      [Description ( 
          "This key is used during the authentication procedure to "
          "verify OSPF protocol packets, see C.3 RFC 2328. It is "
          "used in the \"Simple password\" and in the "
          "\"Cryptographic authentication\" case too." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfAuthKey" }]
   string AuthKey;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to OSPF and "
          "reserved values for this subclass of ProtocolEndpoint." ), 
       ValueMap { "1", "225..4095", "4109", "4301..32767", "32768.." }, 
       Values { "Other", "IANA Reserved", "OSPF", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 ProtocolIFType = 4109;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "This class is used to represent the basic operation of OSPF. "
       "It is derived from the RouteCalculationService, the superclass "
       "of all routing protocols." )]
class CIM_OSPFService : CIM_RouteCalculationService {

      [Description ( 
          "This attribute indicates whether this router is running "
          "MOSPF (multicast enhancements to OSPF) or not, see B.1 "
          "in RFC 1584. This attribute only can be true, when the "
          "SupportMOSPF property in OSPFService Capabilities is "
          "also true. If SupportMOSPF is false, then this property "
          "has no meaning." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfMulticastExtensions" }]
   boolean RunningMOSPF;

      [Description ( 
          "This attribute indicates whether this router will "
          "forward multicast datagrams between OSPF areas or not, "
          "see B.1 in RFC 1584." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfMulticastExtensions" }]
   boolean IsInterAreaMulticastForwarder;

      [Description ( 
          "This attribute indicates whether this router will "
          "forward multicast datagrams between Autonomous Systems "
          "or not, see B.1 in RFC 1584." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfMulticastExtensions" }]
   boolean IsInterAsMulticastForwarder;

      [Description ( 
          "The number of seconds that, after entering "
          "OverflowState, a router will attempt to leave "
          "OverflowState. When set to 0, the router will not leave "
          "OverflowState until restarted, see 2.1 in RFC 1765." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfExitOverflowInterval" }]
   uint32 ExitOverflowInterval;

      [Description ( 
          "Controls the preference rules used in choosing among "
          "multiple AS-external-LSAs advertising the same "
          "destination. When set to TRUE, the preference rules "
          "remain those specified by RFC 1583. When set to FALSE, "
          "the preference rules are those stated in RFC 2328, which "
          "prevent routing loops when AS-external-LSAs for the same "
          "destination have been originated from different areas. "
          "See C.1 in RFC2328." )]
   boolean RFC1583Compatibility;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFServiceConfiguration 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "OSPFServiceConfiguration connects an OSPF service to its area "
       "configurations. The configurations are defined for the OSPF "
       "Service, and so do not make sense as stand alone objects. This "
       "is the reason for the Min (1), Max (1) cardinalities on "
       "OSPFService. They mandate the instantiation of the service and "
       "of this association for the referenced instance of "
       "OSPFAreaConfiguration. The area configuration acts as a focal "
       "point to bring together the router (indicated as a "
       "ComputerSystem with an instance of OSPFService, associated to "
       "the AreaConfiguration using this relationship), the area "
       "(indicated as an OSPFArea, associated to the AreaConfiguration "
       "using AreaOfConfiguration) and the address ranges for "
       "advertising (indicated as instances of RangeOfIPAddresses, "
       "associated to the AreaConfiguration using "
       "RangesOfConfiguration). There would be an instance of "
       "OSPFAreaConfiguration for each connected area of a "
       "router/OSPFService." )]
class CIM_OSPFServiceConfiguration : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The OSPF service." )]
   CIM_OSPFService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The area configuration." )]
   CIM_OSPFAreaConfiguration REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFVirtualInterface 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "This class represent an OSPF protocol endpoint on a virtual "
       "link. The definition of a virtual link from RFC2328, is "
       "\'Virtual links can be configured between any two backbone "
       "routers that have an interface to a common non-backbone area. "
       "Virtual links belong to the backbone. The protocol treats two "
       "routers joined by a virtual link as if they were connected by "
       "an unnumbered point-to-point backbone network.\'" )]
class CIM_OSPFVirtualInterface : CIM_OSPFProtocolEndpointBase {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PrecedenceService 
// ==================================================================
   [Deprecated { "CIM_QoSService" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents a specialization of the general concept "
       "of forwarding network traffic by adding specific semantics "
       "that define how traffic is forwarded based on the value of the "
       "ToS byte of a packet. \n"
       "\n"
       "This class is used to enable DiffServ devices and non- "
       "DiffServ devices to exchange traffic. This is done by defining "
       "a sibling class, DiffServService, to represent devices that "
       "forward traffic based on the DiffServ code point. This enables "
       "the administrator to define mappings between devices that do "
       "not support DiffServ (and instead use IP Precedence) and those "
       "that do support DiffServ. \n"
       "\n"
       "PrecedenceService is deprecated since forwarding based on the "
       "value of the ToS byte is specified using a FilterList, which "
       "is associated with a ClassifierElement. If there is a need to "
       "distinguish a higher-level set of coordinated QoS services, "
       "the QoSService class can be instantiated directly." )]
class CIM_PrecedenceService : CIM_QoSService {

      [Deprecated { "CIM_IPHeadersFilter.HdrDSCP" }, 
       Description ( 
          "This property is an 8-bit unsigned integer that defines "
          "the notion of precedence for different types of traffic." )]
   uint8 PrecedenceValue;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QoSConditioningSubService 
// ==================================================================
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "A QoSService utilizes underlying ConditioningServices as part "
       "of its overall functionality. This is modeled using the "
       "QoSConditioningSubService association. Note that a "
       "ConditioningService may only be part of a single QoSService - "
       "the cardinality on the QoSService reference is Max (1)." )]
class CIM_QoSConditioningSubService : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "This aggregation identifies the set of "
          "ConditioningServices that together condition traffic for "
          "a particular QoSService." )]
   CIM_QoSService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The ConditioningService." )]
   CIM_ConditioningService REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QueueAllocation 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "Describes the reliance of a QueuingService on the availability "
       "of space in a BufferPool." )]
class CIM_QueueAllocation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The BufferPool supporting packet storage for a QueuingService."
           )]
   CIM_BufferPool REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The QueuingService dependent on the BufferPool for storage space."
           )]
   CIM_QueuingService REF Dependent;

      [Description ( 
          "This property is an 8-bit unsigned integer representing "
          "a percentage from 0 to 100. It defines the percentage of "
          "the BufferPool that should be allocated to the "
          "referenced QueuingService. If absolute sizes are "
          "desired, this is accomplished by defining individual "
          "BufferPools of the specified sizes, with "
          "QueueAllocation.AllocationPercentages set to 100." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint8 AllocationPercentage;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QueueHierarchy 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "Describes the reliance of a QueuingService on other, "
       "supporting queues and their QueuingServices. A given Service "
       "can only act in support of one QueuingService; but a higher "
       "level queue may be supported by many lower level "
       "QueuingServices. \n"
       "\n"
       "The class is deprecated since a queue only stores network "
       "traffic. It does not support other queues, or manipulate their "
       "entries. This type of processing is described using "
       "NextService associations \'rightwards\' from the "
       "QueuingService. These associations reference \'other\' "
       "ConditioningServices that may send traffic to \'other\' "
       "queues)." )]
class CIM_QueueHierarchy : CIM_ServiceServiceDependency {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "The supporting queue(s) and its QueuingService. This "
          "Service can only support at most one, higher level "
          "QueuingService." )]
   CIM_QueuingService REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The QueuingService dependent on other, supporting "
          "Queuing Services." )]
   CIM_QueuingService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_QueueToSchedule 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This is a top-level association, representing the relationship "
       "between a queue (QueuingService) and a SchedulingElement. The "
       "SchedulingElement, in turn, represents the information in a "
       "packet scheduling service that is specific to this queue, such "
       "as relative priority or allocated bandwidth. \n"
       "\n"
       "Although it cannot be expressed formally with the association "
       "cardinalities, there is an additional constraint on "
       "participation in this association. A particular instance of (a "
       "subclass of) SchedulingElement always participates either in "
       "exactly one instance of this association, or in exactly one "
       "instance of the association SchedulingServiceToSchedule." )]
class CIM_QueueToSchedule {

      [Key, Max ( 1 ), 
       Description ( 
          "The queue and its QueuingService from which packets are emptied."
           )]
   CIM_QueuingService REF Queue;

      [Key, Description ( 
          "The SchedulingElement for the input queue." )]
   CIM_SchedulingElement REF SchedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ReflectorClientService 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This association will serve as the base class for handling BGP "
       "routing information for clients of the reflector of this "
       "Cluster." )]
class CIM_ReflectorClientService : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The Cluster for which this Service is being defined." )]
   CIM_BGPCluster REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The BGPService to handles routing information as a "
          "client in the Cluster." )]
   CIM_BGPService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ReflectorNonClientService 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This association will serve as the base class for handling BGP "
       "routing information for the non-clients of the reflector of "
       "this Cluster." )]
class CIM_ReflectorNonClientService : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The Cluster for which this Service is being defined." )]
   CIM_BGPCluster REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The BGPService which handles routing information as a "
          "non-client of the Cluster." )]
   CIM_BGPService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ReflectorService 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This association will serve as the base class for defining and "
       "distributing BGP routing information for the reflector of this "
       "Cluster." )]
class CIM_ReflectorService : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The Cluster for which this Service is being defined." )]
   CIM_BGPCluster REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The BGPService which distributes routing information in "
          "the Cluster." )]
   CIM_BGPService REF Dependent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Association, Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::Misc" ), 
    Description ( 
       "Describes an element\'s knowledge regarding accessing other "
       "(i.e., remote) Servers and Systems." )]
class CIM_RemoteAccessAvailableToElement : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The remote server or system." )]
   CIM_RemoteServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The EnabledLogicalElement which has knowledge of the "
          "remote server or system." )]
   CIM_EnabledLogicalElement REF Dependent;

      [Description ( 
          "Indicates that this access information is defined as a "
          "default configuration for the system." )]
   boolean IsDefault;

      [Description ( 
          "When an element is accessing remote services and "
          "systems, it MAY be necessary to order those accesses. "
          "This property defines that ordering - where lower "
          "numbers indicate a higher priority for access. A value "
          "of 0 (default) indicates that ordering does not apply. "
          "If multiple RemoteAccessPoint instances have the same "
          "value for OrderOfAccess, then these AccessPoints MAY be "
          "used in any sequence defined by the implementation." )]
   uint16 OrderOfAccess = 0;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RouteForwardedByService 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "This assocation makes explicit the next hops that are "
       "forwarded by a specific ForwardingService, to reach the "
       "destination. Every ForwardingService can have its own unique "
       "set of routing destinations and next hops. The association is "
       "deprecated since it is incorrect to mandate the existence of a "
       "ForwardingService in order to define the existence of a route." )]
class CIM_RouteForwardedByService : CIM_Dependency {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The forwarding service for the route." )]
   CIM_ForwardingService REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Description ( "The route being forwarded." )]
   CIM_NextHopRouting REF Dependent;

      [Deprecated { "CIM_NextHopRoute.AdminDistance" }, 
       Description ( 
          "This property contains the current administrative "
          "distance of this route, for the ForwardingService. Note "
          "that this property indicates current, specific values - "
          "whereas an instance of the CIM_AdministrativeDistance "
          "class defines default distances." )]
   uint16 AdminDistance;

      [Deprecated { "CIM_NextHopRoute.RouteMetric" }, 
       Description ( 
          "PathMetric provides a numeric indication as to the "
          "preference of this route compared to other routes that "
          "reach the same destination." )]
   uint16 PathMetric;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RoutersInAS 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Systems" ), 
    Description ( 
       "This aggregation establishes \'whole-part\' relationships "
       "between an AutonomousSystem and the routers that it contains. "
       "In addition, the routers in the AS share common configuration "
       "information, and are commonly administered." )]
class CIM_RoutersInAS : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that aggregates the routers "
          "belonging to it and administers them." )]
   CIM_AutonomousSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The Routers that are contained in the AS." )]
   CIM_ComputerSystem REF PartComponent;

      [Description ( 
          "This is an array of strings that contain the BGP "
          "attributes supported by this router." )]
   string BGPSupportedAttributes[];

      [Description ( 
          "TRUE means that the community value of this router is "
          "added to the existing community value, and FALSE means "
          "that the community value of this router replaces the "
          "existing community value." )]
   boolean AddCommunityValue;

      [Description ( 
          "This is an enumeration that defines the function, from "
          "the point of view of BGP, of this router." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Conventional BGP Speaker", 
          "Route Reflector", "Router Reflector Client", 
          "Route Reflector Non-Client", "Peer Group Member", 
          "Confederation Member" }]
   uint16 Role;

      [Description ( 
          "A string describing the type of function that this "
          "router has in its AS when the value of the Role property "
          "of this class is set to 1 (i.e., \"Other\"). The format "
          "of the string inserted in this property should be "
          "similar in format to the values defined for the Role "
          "property. This property should be set to NULL when the "
          "Role property is any value other than 1." ), 
       MaxLen ( 64 )]
   string OtherRoleDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RoutersInBGPCluster 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This aggregation establishes the routers (ComputerSystems) in "
       "a BGPCluster. At least three routers are required to form a "
       "cluster - a reflector and two clients. The routers that form a "
       "cluster share common configuration information." )]
class CIM_RoutersInBGPCluster : CIM_CollectedMSEs {

      [Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( 
          "The Cluster that aggregates the routers participating in it."
           )]
   CIM_BGPCluster REF Collection;

      [Override ( "Member" ), 
       Min ( 3 ), 
       Description ( "The routers that form the Cluster." )]
   CIM_ComputerSystem REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RoutesBGP 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This association defines a BGP route, and makes explicit the "
       "dependency between a BGPIPRoute and a BGPProtocolEndpoint." )]
class CIM_RoutesBGP : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 2 ), 
       Description ( 
          "The BGPProtocolEndpoints that represent the source and "
          "destination (or at least the next hop) of the BGP route." )]
   CIM_BGPProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The routing table entry that represents a BGP route." )]
   CIM_BGPIPRoute REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RouteUsesEndpoint 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "RouteUsesEndpoint depicts the relationship between a next hop "
       "route and the local Endpoint that is used to transmit the "
       "traffic to the \'next hop\'." )]
class CIM_RouteUsesEndpoint : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The endpoint used to reach the route\'s destination." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The route using the endpoint." )]
   CIM_NextHopRoute REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RoutingProtocolDomain 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "A Routing Protocol Domain is a collection of routers which "
       "coordinate their routing knowledge using a single [instance of "
       "a] routing protocol. This class represents the "
       "area/layer/level/zone like property of a routing protocol, "
       "such as an OSPF (area), IS-IS (layer) or PNNI (level). It does "
       "not represent the entire routing domain in every case. For "
       "example for OSPF, it represents an Area, but in the case of "
       "RIP, it represents the whole RIP domain. Any common attributes "
       "of these routing domains can be placed in this class in future "
       "versions of CIM." )]
class CIM_RoutingProtocolDomain : CIM_AdminDomain {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RoutingProtocolDomainInAS 
// ==================================================================
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::RoutingForwarding" ), 
    Description ( 
       "This assocation connects an AutonomousSystem to the routing "
       "domains that it contains." )]
class CIM_RoutingProtocolDomainInAS : CIM_ContainedDomain {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The autonomous system." )]
   CIM_AutonomousSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The routing domain." )]
   CIM_RoutingProtocolDomain REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SchedulerUsed 
// ==================================================================
   [Association, Deprecated { "CIM_QueueToSchedule", 
       "CIM_SchedulingServiceToSchedule" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "In order to remove queued packets, a process or Service "
       "(identified as a PacketSchedulingService) runs. This "
       "association describes the Dependency of the queue and its "
       "QueuingService on a SchedulingService, which empties it. \n"
       "\n"
       "The association is deprecated in lieu of associating Queuing "
       "Services to SchedulingElements, and SchedulingElements into "
       "SchedulingServices. The latter approach is very flexible "
       "regarding the implementations that can be modeled, and removes "
       "the need to track individual traffic streams using an "
       "artificial model property, TrafficClass." )]
class CIM_SchedulerUsed : CIM_ServiceServiceDependency {

      [Deprecated { "CIM_QueueToSchedule.Queue" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The PacketSchedulingService which empties the Queuing "
          "Service\'s queue." )]
   CIM_PacketSchedulingService REF Antecedent;

      [Deprecated { "CIM_QueueToSchedule.SchedElement" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The queue and its QueuingService from which packets are emptied."
           )]
   CIM_QueuingService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A SCSIProtocolEndpoint represents the protocol (command) "
       "aspects of a logical SCSI port, independent of the "
       "connection/transport. SCSIProtocolEndpoint is either directly "
       "or indirectly associated to one or more instances of "
       "LogicalPort (via PortImplementsEndpoint) depending on the "
       "underlying transport. Indirect associations aggregate one or "
       "more LogicalPorts using intermediate ProtocolEndpoints (iSCSI, "
       "etc). SCSIProtocolEndpoint is also associated to a "
       "SCSIProtocolController, representing the SCSI device." )]
class CIM_SCSIProtocolEndpoint : CIM_ProtocolEndpoint {

      [Override ( "Name" ), 
       Description ( 
          "The SCSI identifier for the target or initiator device, "
          "in the format appropriate for the ConnectionType. If a "
          "ConnectionType specific subclass is defined, the "
          "subclass may override Name to define the format. For "
          "other ConnectionTypes, the format (and content) should "
          "match that of PermamnentAddress of the corresponding "
          "LogicalPort." ), 
       MaxLen ( 256 ), 
       MappingStrings { 
          "SPC.INCITS-T10 |Protocol Specific Parameters | Name" }, 
       ModelCorrespondence { 
          "CIM_SCSIProtocolEndpoint.ConnectionType", 
          "CIM_SCSIProtocolEndpoint.OtherConnectionType" }]
   string Name;

      [Description ( 
          "The supported connection type for this endpoint. The "
          "connection type may be needed before the port(s) are "
          "associated and also is used in some SCSI commands." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Other", "Fibre Channel", "Parallel SCSI", "SSA", 
          "IEEE 1394", "RDMA", "iSCSI", "SAS", "ADT" }, 
       MappingStrings { 
          "SPC.INCITS-T10 | Protocol Identifier | Values" }, 
       ModelCorrespondence { "CIM_SCSIProtocolEndpoint.Name", 
          "CIM_SCSIProtocolEndpoint.OtherConnectionType" }]
   uint16 ConnectionType;

      [Description ( 
          "For iSCSI, each SCSIProtocolEndpoint MUST act as either "
          "a target or an initiator endpoint. Other transports "
          "allow a SCSI PE to act as both an initiator and target "
          "endpoint. This property indicates which role this "
          "ProtocolEndpoint implements." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Initiator", "Target", 
          "Both Initiator and Target" }]
   uint16 Role;

      [Description ( 
          "For ports on a target device, the port number, relative "
          "to the storage system. 0 is reserved by T10, 1 is port "
          "A, 2 is port B, etc. These numbers are used in SCSI "
          "commands that operate on target port groups." ), 
       MinValue ( 1 ), 
       MappingStrings { 
          "SPC.INCITS-T10 | RelativeTargetPort | IdentifierFormat" }]
   uint32 TargetRelativePortNumber;

      [Description ( 
          "The connection type, if ConnectionType is \"Other\"." ), 
       ModelCorrespondence { "CIM_SCSIProtocolEndpoint.Name", 
          "CIM_SCSIProtocolEndpoint.ConnectionType" }]
   string OtherConnectionType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SecurityAssociationEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "SecurityAssociationEndpoint (SAEndpoint) represents the "
       "endpoint of a secure connection. This is typically an IP "
       "connection, although the model allows more flexibility than "
       "just IP. The SecurityAssociationEndpoint is tied to an "
       "IPProtocolEndpoint (or possibly other endpoint) using the "
       "LogicalIdentity association. Note that an endpoint is defined "
       "at both ends of the connection." )]
class CIM_SecurityAssociationEndpoint : CIM_ProtocolEndpoint {

      [Override ( "InstallDate" ), 
       Description ( 
          "InstallDate records when the SA (and its endpoint) was created."
           )]
   datetime InstallDate;

      [Description ( 
          "LifetimeSeconds specifies the maximum time that the SA "
          "will be considered valid after it has been created. A "
          "value of zero indicates that the default of 8 hours be "
          "used. A non-zero value indicates the seconds lifetime." ), 
       Units ( "Seconds" )]
   uint64 LifetimeSeconds = 0;

      [Write, Description ( 
          "RefreshThresholdSecondsPercentage is the lifetime "
          "percentage after which a new SA should be acquired, "
          "before the existing SA expires. A random period may be "
          "added to a calculated threshold to reduce network "
          "thrashing." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint8 RefreshThresholdSecondsPercentage;

      [Description ( 
          "IdleDurationSeconds specifies how long the SA can be "
          "idle before it is deleted. The default value, 0, "
          "indicates that there is no idle timeout period." ), 
       Units ( "Seconds" )]
   uint64 IdleDurationSeconds = 0;

      [Description ( 
          "LifetimeKilobytes specifies the maximum number of "
          "kilobytes of data traffic to be protected by the SA. A "
          "value of zero (the default) indicates that there should "
          "be no maximum kilobyte lifetime. A non-zero value "
          "specifies the desired kilobyte lifetime. The SA is "
          "deleted when the LifetimeKilobyte value is exceeded." ), 
       Units ( "KiloBytes" )]
   uint64 LifetimeKilobytes = 0;

      [Write, Description ( 
          "RefreshThresholdKbytesPercentage is the lifetime "
          "percentage of kilobytes processed, at which a new SA "
          "should be acquired. A random value may be added to the "
          "calculated threshold to reduce network thrashing." ), 
       Units ( "Percent" ), 
       MinValue ( 0 ), 
       MaxValue ( 100 )]
   uint8 RefreshThresholdKbytesPercentage;

      [Write, Description ( 
          "PacketLoggingActive causes a log to be kept of traffic "
          "processed by the SAEndpoint." )]
   boolean PacketLoggingActive;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SourceRoutingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "SourceRoutingService represents the capability of a switch to "
       "participate in the source routing of frames received at its "
       "ports. It is a system-level Service that provides and supports "
       "local switching only. The SourceRouting Service is aggregated "
       "into a higher level SwitchService through the "
       "SwitchServiceSourceRouting association." )]
class CIM_SourceRoutingService : CIM_ForwardingService {

      [Description ( 
          "Indicates whether the bridge operates using older 3 bit "
          "length negotiation fields or the newer 6 bit length "
          "field in its RIF." ), 
       ValueMap { "1", "2" }, 
       Values { "Mode3", "Mode6" }, 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrBridgeLfMode" }]
   uint16 BridgeLfMode;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SpanningTreeService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This service class represents the capability of a switch to "
       "participate in the distributed construction of a spanning "
       "tree." )]
class CIM_SpanningTreeService : CIM_ForwardingService {

      [Description ( 
          "The version of the spanning tree protocol used by the switch."
           ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Unknown", "DEC LB100", "IEEE 802d" }, 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpProtocolSpecification" }]
   uint16 ProtocolSpec;

      [Description ( 
          "The format of the priority bits are the first two octets "
          "of the 8-octet long Bridge ID. The other (last) 6 octets "
          "of the Bridge ID are given by the value of the Bridge "
          "Address. \n"
          "\n"
          "A priority that can be assigned to the switch for use in "
          "constructing the spanning tree. The unique identifier "
          "for a switch is constructed by concatenating the MAC "
          "address associated with the switch for spanning tree "
          "operations to the two-byte priority. Choice of the "
          "priority value influences election of the root bridge." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPriority" }]
   uint16 Priority;

      [Description ( 
          "MAC address used by the spanning tree service when it "
          "must be uniquely identified. When concatenated with a "
          "SpanningTreeService Priority, a unique bridge identifier "
          "results. This property is defined for use of switches "
          "supporting multiple spanning tree services. \n"
          "\n"
          "Note that the MAC address is formatted as twelve "
          "hexadecimal digits (e.g., \"010203040506\"), with each "
          "pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order according to RFC "
          "2469." )]
   string SpanningTreeBridgeAddress;

      [Description ( 
          "The complete Bridge ID (Priority + MAC Address) of the "
          "root bridge. The format of the priority bits are the "
          "first two octets of the 8-octet long Bridge ID. Note "
          "that the MAC address is formatted as twelve hexadecimal "
          "digits (e.g., \"010203040506\"), with each pair "
          "representing one of the six octets of the MAC address in "
          "\"canonical\" bit order according to RFC 2469." ), 
       MaxLen ( 16 ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpDesignatedRoot" }]
   string DesignatedRoot;

      [Description ( 
          "The cost of the path from the switch to the root." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpRootCost" }]
   uint16 RootCost;

      [Description ( 
          "The port number of the port having the lowest cost path "
          "to the root bridge." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpRootPort" }]
   uint16 RootPort;

      [Description ( 
          "The current value for the maximum age of Spanning Tree "
          "information before discard, as learned from the network." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpMaxAge" }]
   uint32 MaxAge;

      [Description ( 
          "The current value of the interval between transmission "
          "of bridge PDUs by the switch, on any port for which it "
          "is the spanning tree root or trying to become so, as "
          "learned from the network." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpHelloTime" }]
   uint32 HelloTime;

      [Description ( 
          "The minimum interval between transmission of bridge PDUs "
          "through a given port, as learned from the network." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpHoldTime" }]
   uint32 HoldTime;

      [Description ( 
          "The time spent by a port in the listening state before "
          "transitioning to the learning state, and in the learning "
          "state before transitioning to the forwarding state, as "
          "learned from the network. This value is also used during "
          "the period of a topology change as the maximum age of "
          "Spanning Tree information before discard." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpForwardDelay" }]
   uint32 ForwardDelay;

      [Description ( 
          "The MaxAge parameter to be used by all switches in the "
          "network if this switch becomes the root." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpBridgeMaxAge" }]
   uint32 BridgeMaxAge;

      [Description ( 
          "The HelloTime parameter to be used by all switches in "
          "the network if this switch becomes the root." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpBridgeHelloTime" }]
   uint32 BridgeHelloTime;

      [Description ( 
          "The ForwardDelay parameter to be used by all switches in "
          "the network if this switch becomes the root." ), 
       Units ( "Hundredths of Seconds" ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpBridgeForwardDelay" }]
   uint32 BridgeForwardDelay;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Specific802dot1QVLANService 
// ==================================================================
   [Deprecated { "No Value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "This class is deprecated following discussion as to the need "
       "of a modeling a 802.1Q as a service. It was determined that a "
       "802.1Q service was not needed. If a switch supports 802.1Q, an "
       "instance of this class should be instantiated in the switch. "
       "If the switch supports GVRP, this class represents the "
       "function that the switch performs with respect to GVRP." )]
class CIM_Specific802dot1QVLANService : CIM_VLANService {


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A representation of a communications endpoint where an SSH "
       "server can be accessed using the SSH protocol." )]
class CIM_SSHProtocolEndpoint : CIM_ProtocolEndpoint {

      [Write, Description ( 
          "An array of integers indicating the version or versions "
          "of SSH protocol that are enabled for the SSH service. "
          "Its possible for versions to be supported for a service "
          "and not currently enabled for use." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "SSHv1", "SSHv2", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.OtherEnabledSSHVersion" }]
   uint16 EnabledSSHVersions[];

      [Description ( 
          "If the EnabledSSHVersions property is set to 1, \"Other\" "
          "then this is a free form string providing more "
          "information about the SSH protocol. If not set to 1, "
          "this string has no meaning." ), 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.EnabledSSHVersions" }]
   string OtherEnabledSSHVersion;

      [Write, Description ( 
          "The version of SSH in use for this connection." ), 
       ValueMap { "0", "1", "2", "3", ".." }, 
       Values { "Unknown", "Other", "SSHv1", "SSHv2", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.OtherSSHVersion", 
          "CIM_SSHProtocolEndpoint.EnabledSSHVersions" }]
   uint16 SSHVersion;

      [Write, Description ( 
          "If the SSHVersion property is set to 1, \"Other\" then "
          "this is a free form string providing more information "
          "about the current SSH protocol. If not set to 1, this "
          "string has no meaning." ), 
       ModelCorrespondence { "CIM_SSHProtocolEndpoint.SSHVersion", 
          "CIM_SSHProtocolEndpoint.OtherEnabledSSHVersion" }]
   string OtherSSHVersion;

      [Write, Description ( 
          "An array of integers indicating the encryption "
          "algorithms that are enabled for this SSH service. Its "
          "possible for an encryption algorithm to be supported by "
          "an SSH service and not be enabled to be used. One of the "
          "enabled algorithms will actually be in use." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Unknown", "Other", "DES", "DES3", "RC4", "IDEA", 
          "SKIPJACK", "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.OtherEnabledEncryptionAlgorithm" }]
   uint16 EnabledEncryptionAlgorithms[];

      [Description ( 
          "If the EnabledEncryptionAlgorithms property is set 1, "
          "\"Other\" this property contains a free form string "
          "providing more information about supported algorithms. "
          "If not set to 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.EnabledEncryptionAlgorithms" }]
   string OtherEnabledEncryptionAlgorithm[];

      [Write, Description ( 
          "The encryption algorithm currently in use for this connection."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", ".." }, 
       Values { "Unknown", "Other", "DES", "DES3", "RC4", "IDEA", 
          "SKIPJACK", "DMTF Reserved" }, 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.OtherEncryptionAlgorithm", 
          "CIM_SSHProtocolEndpoint.EnabledEncryptionAlgorithms" }]
   uint16 EncryptionAlgorithm;

      [Write, Description ( 
          "If the EncryptionAlgorithm property is set to 1, \"Other\" "
          "then this is a free form string providing more "
          "information about the current encryption algorithm. If "
          "not set to 1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_SSHProtocolEndpoint.EncryptionAlgorithm", 
          "CIM_SSHProtocolEndpoint.OtherEnabledEncryptionAlgorithm" }]
   string OtherEncryptionAlgorithm[];

      [Write, Description ( 
          "IdleTimeout specifies how long the connection can be "
          "idle before the connection is terminated. The default "
          "value, 0, indicates that there is no idle timeout "
          "period." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 IdleTimeout = 0;

      [Write, Description ( 
          "If this property is true, the SSH keep alive timer is enabled."
           )]
   boolean KeepAlive = false;

      [Write, Description ( 
          "If this property is true, the SSH X11 forwarding mode is enabled."
           )]
   boolean ForwardX11 = false;

      [Write, Description ( 
          "If this property is true, SSH compression is enabled." )]
   boolean Compression = true;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPort 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "Switch Port from which frames are received and out which they "
       "are transmitted. This endpoint is associated with its "
       "networking interface (such as Ethernet) via the "
       "EndpointIdentity relationship." )]
class CIM_SwitchPort : CIM_ProtocolEndpoint {

      [Description ( "Numeric identifier for a switch port." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dPort" }]
   uint16 PortNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortDynamicForwarding 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This association links a DynamicForwardingEntry and the "
       "SwitchPort to which the entry applies." )]
class CIM_SwitchPortDynamicForwarding : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The SwitchPort." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "DynamicForwardingEntry of the forwarding database." )]
   CIM_DynamicForwardingEntry REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortPair 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This association represents information regarding port "
       "pairings that is used by the SourceRoutingService of a switch." )]
class CIM_SwitchPortPair : CIM_SAPSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( "The lower numbered port." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The higher numbered port." )]
   CIM_SwitchPort REF Dependent;

      [Description ( 
          "A bridge number that uniquely identifies the path "
          "provided by this source routing bridge between the "
          "segments connected to high and low ports. The purpose of "
          "bridge number is to disambiguate between multiple paths "
          "connecting the same two LANs." ), 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dPortPairBridgeNum" }]
   uint16 BridgeNum;

      [Description ( 
          "The state of the pairing. Writing \'invalid(3)\' to this "
          "property removes the association instance." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Enabled", "Disabled", "Invalid" }, 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dPortPairBridgeState" }]
   uint16 BridgeState;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortSourceRouting 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A switch capable of source routing maintains source-routing "
       "specific information about each port. This association "
       "represents that information." )]
class CIM_SwitchPortSourceRouting : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( "The SwitchPort." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The SourceRoutingService." )]
   CIM_SourceRoutingService REF Dependent;

      [Description ( 
          "The maximum number of routing descriptors allowed in an "
          "All Paths or Spanning Tree Explorer frames." ), 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortHopCount" }]
   uint16 HopCount;

      [Description ( 
          "The segment number that uniquely identifies the segment "
          "to which this port is connected. Current source routing "
          "protocols limit this value to the range: 0 through 4095. "
          "(The value 0 is used by some management applications for "
          "special test cases.) A value of 65535 signifies that no "
          "segment number is assigned to this port." ), 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortLocalSegment" }]
   uint16 LocalSegment;

      [Description ( 
          "A bridge number uniquely identifies a bridge when more "
          "than one bridge is used to span the same two segments. "
          "Current source routing protocols limit this value to the "
          "range: 0 through 15. A value of 65535 signifies that no "
          "bridge number is assigned to this bridge." ), 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortBridgeNum" }]
   uint16 BridgeNum;

      [Description ( 
          "The segment number that corresponds to the target "
          "segment to which this port is considered connected. "
          "Current source routing protocols limit this value to the "
          "range: 0 through 4095. (The value 0 is used by some "
          "management applications for special test cases.) A value "
          "of 65535 signifies that no target segment is assigned to "
          "this port." ), 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortTargetSegment" }]
   uint16 TargetSegment;

      [Description ( 
          "Determines how the port behaves when presented with a "
          "Spanning Tree Explorer frame. The value \'disabled(2)\' "
          "indicates that the port will not accept or send Spanning "
          "Tree Explorer packets; any STE packets received will be "
          "silently discarded. The value \'forced(3)\' indicates "
          "the port will always accept and propagate Spanning Tree "
          "Explorer frames. (This allows a manually configured "
          "Spanning Tree for this class of packet to be "
          "configured.) Note that unlike transparent bridging, it "
          "is not catastrophic to the network if there are loops. "
          "The value \'auto-span(1)\' can only be returned by a "
          "bridge that both implements the Spanning Tree Protocol "
          "and has use of the protocol enabled on this port. \n"
          "\n"
          "The behavior of the port for Spanning Tree Explorer "
          "frames is determined by the value of the State property "
          "of the SwitchPortSpanningTree association for the port. "
          "If the port is in the \'forwarding\' state, the frame "
          "will be accepted or propagated. Otherwise, it will be "
          "silently discarded." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "Auto-Span", "Disabled", "Forced" }, 
       MappingStrings { 
          "MIB.IETF|SOURCE-ROUTING-MIB.dot1dSrPortSTESpanMod" }, 
       ModelCorrespondence { "CIM_SwitchPortSpanningTree.State" }]
   uint16 STESpanMode;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortSpanningTree 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A switch participating in the spanning tree maintains "
       "spanning-tree specific information about each port whose "
       "forwarding is determined by the spanning tree. This "
       "association represents that information." )]
class CIM_SwitchPortSpanningTree : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( "The SwitchPort." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The SpanningTreeService." )]
   CIM_SpanningTreeService REF Dependent;

      [Description ( 
          "The priority assigned to the port. Contained in the "
          "first octet of the two-octet port ID; the other octet is "
          "the port number." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortPriority" }]
   uint8 Priority;

      [Description ( 
          "The current state of the port as determined by the "
          "spanning tree protocol." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Disabled", "Blocking", "Listening", "Learning", 
          "Forwarding", "Broken" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortState" }]
   uint16 State;

      [Deprecated { "CIM_EnabledLogicalElement.EnabledState" }, 
       Description ( 
          "The enabled/disabled status of the port. This property "
          "is deprecated since the status of the port is available "
          "by inheritance from EnabledLogicalElement." ), 
       ValueMap { "1", "2" }, 
       Values { "Enabled", "Disabled" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortEnable" }]
   uint16 Enable;

      [Description ( 
          "The contribution of this port to the path cost of paths "
          "towards the spanning tree root which include this port." ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dStpPortPathCost" }]
   uint16 PathCost;

      [Description ( 
          "The bridge identifier of the root bridge for the segment "
          "to which the port is attached, as transmitted by the "
          "designated bridge for the segment." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedRoot" }]
   string DesignatedRoot;

      [Description ( 
          "The cost of the path to the root offered by the "
          "designated bridge for the segment." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedCost" }]
   uint16 DesignatedCost;

      [Description ( 
          "The bridge identifier of the designated bridge for the "
          "segment to which the port is attached." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedBridge" }]
   string DesignatedBridge;

      [Description ( 
          "The port identifier of the port on the designated bridge "
          "serving the segment to which the port is attached." ), 
       MappingStrings { 
          "MIB.IETF|BRIDGE-MIB.dot1dStpPortDesignatedPort" }]
   uint16 DesignatedPort;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchPortStaticForwarding 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This association links a static database entry and the "
       "SwitchPort to which the entry applies." )]
class CIM_SwitchPortStaticForwarding : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The SwitchPort." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "StaticForwardingEntry of static database." )]
   CIM_StaticForwardingEntry REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "Generic switch (bridging) service class. Additional switching "
       "functions are incorporated as subordinate services related to "
       "this class via ServiceComponent associations." )]
class CIM_SwitchService : CIM_ForwardingService {

      [Description ( 
          "Address used by this SwitchService when it must be "
          "uniquely identified. For an ethernet bridge, the MAC "
          "Address serves as the BridgeAddress. When concatenated "
          "with a SpanningTreeService Priority, a unique bridge "
          "identifier results. The MAC address is formatted as "
          "twelve hexadecimal digits (e.g., \"010203040506\"), with "
          "each pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order according to RFC "
          "2469. In other scenarios, like Ipv6, the address is "
          "formatted as \"ffff:ffff:ffff:ffff\"." ), 
       MaxLen ( 32 ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dBaseBridgeAddress" }, 
       ModelCorrespondence { "CIM_SwitchService.BridgeAddressType" }]
   string BridgeAddress;

      [Description ( 
          "The number of switch ports controlled by this switching service."
           ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dBaseNumPorts" }]
   uint16 NumPorts;

      [Description ( 
          "Indicates what type of switching service can be performed."
           ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Unknown", "Transparent-only", "SourceRoute-only", 
          "SRT" }, 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dBaseType" }]
   uint8 BridgeType;

      [Description ( 
          "BridgeAddressType defines the type of addressing scheme "
          "used for this Bridge and its BridgeAddress property." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "IPv4", "IPv6", "MAC", 
          "MAC + Spanning Tree Priority" }, 
       ModelCorrespondence { "CIM_SwitchService.BridgeAddress" }]
   uint16 BridgeAddressType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchServiceSourceRouting 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "An association linking SwitchService to a component "
       "SourceRoutingService. The cardinality of the "
       "SourceRoutingService is 0..1 for a VLAN-unaware switch." )]
class CIM_SwitchServiceSourceRouting : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Description ( "The parent SwitchService." )]
   CIM_SwitchService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The component SourceRoutingService." )]
   CIM_SourceRoutingService REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchServiceSpanningTree 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "An association linking SwitchService to a component "
       "SpanningTreeService. The cardinality of the "
       "SpanningTreeService is 0..1 for a VLAN-unaware switch." )]
class CIM_SwitchServiceSpanningTree : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Description ( "The parent SwitchService." )]
   CIM_SwitchService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The component SpanningTreeService." )]
   CIM_SpanningTreeService REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchServiceVLAN 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "This class is deprecated as a fall out of the previous "
       "deprecations within the existing model An association linking "
       "SwitchService to a component VLANService." )]
class CIM_SwitchServiceVLAN : CIM_ServiceComponent {

      [Deprecated { "No Value" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The SwitchService containing the VLANService." )]
   CIM_SwitchService REF GroupComponent;

      [Deprecated { "No Value" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "The VLANService that is a component of the SwitchService." )]
   CIM_VLANService REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01484.000" type ="change"> Correct ValueMaps for ProtocolIfType</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TCPProtocolEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A protocol endpoint that is dedicated to running TCP." )]
class CIM_TCPProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( "The TCP port number." )]
   uint32 PortNumber;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to TCP and "
          "reserved values for this subclass of ProtocolEndpoint." ), 
       ValueMap { "1", "225..4095", "4111", "4301..32767", "32768.." }, 
       Values { "Other", "IANA Reserved", "TCP", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 ProtocolIFType = 4111;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::ConsoleProtocols" ), 
    Description ( 
       "A representation of a communications endpoint where a Telnet "
       "server can be accessed using the Telnet protocol." )]
class CIM_TelnetProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( 
          "An array of integers indicating the terminal modes that "
          "are enabled for use in this server connection. "
          "Additional terminal modes may be supported by the "
          "service but not enabled for use." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "VT100", "ANSI", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.OtherEnabledTerminalMode" }]
   uint16 EnabledTerminalModes[];

      [Description ( 
          "If the EnabledTerminalModes property is set to 1, "
          "\"Other\" then free form string providing more "
          "information about supported terminal mode. If not set to "
          "1, this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.EnabledTerminalModes" }]
   string OtherEnabledTerminalMode[];

      [Write, Description ( 
          "The terminal mode in use for this Telnet endpoint.This "
          "value shall be one of the values in EnabledTerminalModes" ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "VT100", "ANSI", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.OtherTerminalMode", 
          "CIM_TelnetProtocolEndpoint.EnabledTerminalModes" }]
   uint16 TerminalMode;

      [Write, Description ( 
          "Where the TerminalMode property contains a value of 1, "
          "\"Other\" then this is a free form string providing more "
          "information about the current terminal mode and this "
          "value shall be one of the values in "
          "OtherEnabledTerminalModes. If not set to 1, this string "
          "has no meaning." ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.TerminalMode", 
          "CIM_TelnetProtocolEndpoint.OtherEnabledTerminalMode" }]
   string OtherTerminalMode;

      [Write, Description ( 
          "An array of integers indicating the character display "
          "modes enabled for the service. Additional character "
          "display modes may be supported but currently not enabled "
          "for use." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Console", "Stream", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.OtherEnabledCharacterDisplayMode" }]
   uint16 EnabledCharacterDisplayModes[];

      [Description ( 
          "If the EnabledCharacterDisplayModes property is set to "
          "1, \"Other\" then free form string providing more "
          "information about the enabled mode. If not set to 1, "
          "this string has no meaning." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.EnabledCharacterDisplayModes" }]
   string OtherEnabledCharacterDisplayMode[];

      [Write, Description ( 
          "The character display mode that is currently active." ), 
       ValueMap { "0", "1", "2", "3", "4..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "Console", "Stream", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.OtherCharacterDisplayMode", 
          "CIM_TelnetProtocolEndpoint.EnabledCharacterDisplayModes" }]
   uint16 CharacterDisplayMode;

      [Write, Description ( 
          "When the CharacterDisplayMode property is set to 1, "
          "\"Other\" then this is a free form string providing more "
          "information about the character display mode. If not set "
          "to 1, this string has no meaning." ), 
       ModelCorrespondence { 
          "CIM_TelnetProtocolEndpoint.CharacterDisplayMode", 
          "CIM_TelnetProtocolEndpoint.OtherEnabledCharacterDisplayMode" }]
   string OtherCharacterDisplayMode;

      [Write, Description ( 
          "String indicating the Escape Character is in effect." )]
   string EscapeCharacter;

      [Write, Description ( 
          "IdleTimeout specifies how long the connection can be "
          "idle before it is closed. The default value, 0, "
          "indicates that there is no idle timeout period." ), 
       Units ( "Seconds" ), 
       PUnit ( "second" )]
   uint32 IdleTimeout = 0;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TransparentBridgingService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This service class represents the learning/transparent "
       "bridging aspect of a SwitchService." )]
class CIM_TransparentBridgingService : CIM_ForwardingService {

      [Description ( 
          "The timeout period in seconds for aging out dynamically "
          "learned forwarding information. 802.1D-1990 recommends a "
          "default of 300 seconds." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|BRIDGE-MIB.dot1dTpAgingTime" }]
   uint32 AgingTime = 300;

      [Description ( 
          "Filtering Database Identifier used by VLAN-aware "
          "switches that have more than one filtering database." )]
   uint32 FID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TransparentBridgingStaticForwarding 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This association links an instance of the Transparent "
       "BridgingService to the entries of its static "
       "(destination-address filtering) database." )]
class CIM_TransparentBridgingStaticForwarding : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The TransparentBridgingService." )]
   CIM_TransparentBridgingService REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "StaticForwardingEntry of the forwarding database." )]
   CIM_StaticForwardingEntry REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TrapSourceForSNMPService 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SNMP" ), 
    Description ( 
       "TrapSourceForSNMPService specifies the protocol "
       "endpoint/interface (and hence its IP address) from which traps "
       "originate." )]
class CIM_TrapSourceForSNMPService : CIM_ServiceSAPDependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The endpoint that acts as the trap source." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The SNMP service that sends the notifications." )]
   CIM_SNMPService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_UDPProtocolEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "A protocol endpoint that is dedicated to running UDP." )]
class CIM_UDPProtocolEndpoint : CIM_ProtocolEndpoint {

      [Description ( "The UDP port number." )]
   uint32 PortNumber;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to UDP and "
          "reserved values for this subclass of ProtocolEndpoint." ), 
       ValueMap { "1", "225..4095", "4110", "4301..32767", "32768.." }, 
       Values { "Other", "IANA Reserved", "UDP", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 ProtocolIFType = 4110;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::USBRedirection" ), 
    Description ( 
       "USBRedirectionService describes the service that manages the "
       "USB Redirection of a system." )]
class CIM_USBRedirectionService : CIM_RedirectionService {

      [Override ( "RedirectionServiceType" ), 
       Description ( 
          "RedirectionServiceType\'s enumeration is limited to the "
          "\'USB\' and reserved RedirectionServiceType values for "
          "this subclass of CIM_RedirectionService." ), 
       ValueMap { "4", "..", "32768..65535" }, 
       Values { "USB", "DMTF Reserved", "Vendor Specified" }]
   uint16 RedirectionServiceType[] = {4};


      [Description ( 
          "This method is used to add new redirection sessions "
          "modeled by CIM_USBRedirectionSAP, to the USB Redirection "
          "Service. The USBDevice parameter may contain references "
          "to instances of CIM_USBDevice that model the USB Device "
          "to be redirected by the new USB Redirection Session. "
          "Alternatively new instances of CIM_USBDevice may be "
          "created to redirect in the new session. The "
          "NewUSBDevices parameter describes the new devices to be "
          "created. Typically the new CIM_USBDevices created "
          "represent devices that are emulated by the USB "
          "Redirection Service. Or the new USB devices may be "
          "associated to the existing logical devices specified in "
          "the RedirectedLogicalDevices parameter. When the "
          "ConnectionMode parameter specifies the new redirection "
          "session be in the \'Connect\' mode, the AccessInfo "
          "parameter specifies the remote network location the "
          "redirection session should connect to when it is "
          "enabled. Upon completion the following instances will "
          "have been created, CIM_USBRedirectionSAP, "
          "CIM_ServiceAccessBySAP associating the new "
          "USBRedirectionSAP with the USBRedirectionService, "
          "CIM_HostedAccessPoint associating the new SAP with the "
          "CIM_ComputerSystem that hosts the new SAP, "
          "CIM_SAPAvailableForElement associating the "
          "CIM_ComputerSystem that has the USB device being "
          "redirection with the new SAP, "
          "EnabledLogicalElementCapabilities that describes the "
          "capabilities of the new SAP, ElementCapabilties "
          "associating the new EnabledLogicalElementCapabilities "
          "with the new SAP, SAPAvailableForElement associating the "
          "new SAP with the USBDevices specified in the parameters "
          "to this method. CIM_BindsTo a new CIM_ProtocolEndpoint "
          "to the new SAP if the ConnectionMode is 2, or if the "
          "ConnectionMode parameter is 3, a new "
          "CIM_RemoteAccessAvailableToElement associating the new "
          "SAP to a new CIM_RemoteServiceAccessPoint." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 CreateRedirectionSAP(
         [IN, Description ( 
             "A string-valued embedded instance of "
             "CIM_USBRedirectionSAP describing the new SAP to be "
             "created." ), 
          EmbeddedInstance ( "CIM_USBRedirectionSAP" )]
      string NewUSBRedirectionSAP, 
         [IN, Description ( 
             "an enumeration of the RequestedStatesSupported "
             "capability for the newly created SAP. The values "
             "specified for this parameter must be from the set "
             "of values found in the Redirection Service\'s "
             "CIM_USBRedirectionCapabilities.RequestedStatesSupporteForCreatedSAP "
             "array." ), 
          ModelCorrespondence { 
             "CIM_USBRedirectionCapabilities.RequestedStatesSupportedForCreatedSAP" }]
      uint16 NewSAPRequestedStatesSupported[], 
         [IN, Description ( 
             "Array of existing devices to redirect via the "
             "redirection session. These will be associated with "
             "the new CIM_USBRedirectionSAP by a "
             "CIM_SAPAvailableForElement association." )]
      CIM_USBDevice REF USBDevices[], 
         [IN, Description ( 
             "CreateDevices is a boolean that when TRUE tells "
             "the method to create new instances of "
             "CIM_USBDevice for each embedded instance in the "
             "NewUSBDevices parameter. When CreateDevices is "
             "FALSE, the NewUSBDevices and "
             "RedirectedLogicalDevices parameters are unused." )]
      boolean CreateDevices, 
         [IN, Description ( 
             "The NewUSBDevices parameter contains the "
             "description of the new CIM_USBDevice instances to "
             "be created and redirected via the redirection "
             "session. This is an array of class CIM_USBDevice "
             "encoded as a string-valued embedded instance "
             "parameter. The string-valued embedded instances "
             "allow specifying the properties desired for the "
             "CIM_USBDevice instances that will be created by "
             "this method. The new CIM_USBDevice instances "
             "created by this method will be associated with the "
             "CIM_USBRedirectionService instance by a "
             "CIM_ServiceAffectsElement association and with the "
             "newly created CIM_USBRedirectionSAP by a "
             "CIM_SAPAvailableForElement association. Each entry "
             "in this list of new USB Devices is related to the "
             "entry in the RedirectedLogicalDevices array that "
             "is located at the same index." ), 
          EmbeddedInstance ( "CIM_USBDevice" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_USBRedirectionService.CreateRedirectionSAP.RedirectedLogicalDevices" }]
      string NewUSBDevices[], 
         [IN, Description ( 
             "RedirectedLogicalDevices parameter is an array of "
             "references to concrete subclass of "
             "CIM_LogicalDevice that will be associated with the "
             "new instances of CIM_USBDevice created from the "
             "embedded instances of NewUSBDevices. Each entry of "
             "this array is related to the entry of "
             "NewUSBDevices array that is located at the same "
             "index." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_USBRedirectionService.CreateRedirectionSAP.NewUSBDevices" }]
      CIM_LogicalDevice REF RedirectedLogicalDevices[], 
         [IN, Description ( 
             "When the ConnectionMode parameter of the new SAP "
             "is 3, \'Connect\' this parameter contains a "
             "string-valued embedded instance of "
             "CIM_RemoteServiceAccessPoint to be created and "
             "associated by a CIM_RemoteAccessAvailableToElement "
             "association to the new SAP. The represents the "
             "remote redirection access point that the new SAP "
             "should connect to." ), 
          EmbeddedInstance ( "CIM_RemoteServiceAccessPoint" )]
      string NewRemoteServiceAccessPoint, 
         [IN ( false ), OUT, Description ( 
             "A reference to the instances of "
             "CIM_USBRedirectionSAP created by the method. This "
             "parameter is not returned when the method is run "
             "as a Job" )]
      CIM_USBRedirectionSAP REF SAP, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "This method is invoked to delete a USB Redirection "
          "session. This includes the associations created by "
          "CreateRedirectionSession. The method may also delete the "
          "instances of USBDevice associated by a "
          "CIM_SAPAvailableForElement association with the "
          "CIM_USBRedirectionSAP instance being deleted." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 DeleteRedirectionSAP(
         [IN, Description ( 
             "A reference to the instance of "
             "CIM_USBRedirectionSAP the method shall delete." )]
      CIM_USBRedirectionSAP REF SAP, 
         [IN, Description ( 
             "Indicates whether the USBDevices associated to the "
             "SAP shall also be deleted by this method." )]
      boolean DeleteUSBDevices, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "This method is invoked to create an new instance of "
          "USBDevice that will be redirected by the USB Redirection "
          "Service. The RedirectedLogicalDevice parameter may "
          "contain a reference to an existing instance of a "
          "concrete subclass of CIM_LogicalDevice that will be "
          "redirected via the USB RedirectionService. Upon "
          "Successful completion of this operation the following "
          "instances will have been created. A new instance of "
          "CIM_USBDevice, a new instance of ServiceAffectsElement "
          "associating the new instance of CIM_USBDevice with the "
          "instance of USBRedirectionService. If the "
          "RedirectedLogicalDevice parameter is not empty, a new "
          "CIM_LogicalIdentity is created associating the new "
          "CIM_USBDevice with the RedirectedLogicalDevice." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Vendor Specified" }]
   uint32 CreateUSBDevice(
         [IN, Description ( 
             "The NewUSBDevice parameter contains the "
             "description of the new CIM_USBDevice instance to "
             "be created and redirected via the redirection "
             "session. This parameter is a string-valued "
             "embedded instance of the CIM_USBDevice class." ), 
          EmbeddedInstance ( "CIM_USBDevice" ), 
          ModelCorrespondence { 
             "CIM_USBRedirectionService.CreateUSBDevice.RedirectedLogicalDevice" }]
      string NewUSBDevice, 
         [IN, Description ( 
             "If not empty, this is a reference to a concrete "
             "subclasss of CIM_LogicalDevice representing the "
             "device to be redirected by the USB Redirection "
             "Service. This might, for example, be a "
             "CIM_CDROMDrive or a CIM_DisketteDrive." )]
      CIM_LogicalDevice REF RedirectedLogicalDevice, 
         [IN ( false ), OUT, Description ( 
             "A reference to the instance of CIM_USBDevice "
             "created by the method. This parameter is not "
             "returned when the method is run as a Job" )]
      CIM_USBDevice REF USBDevice, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.26.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "An endpoint on a switch or endstation which is assigned to a "
       "given VLAN or accepts traffic from one or more VLANs. As "
       "defined by the property, OperationalEndpointMode, the endpoint "
       "may be configured as trunking or nontrunking. Note that an "
       "endpoint may dynamically be converted to/from a trunking mode. "
       "When this occurs, simply update the OperationalEndpointMode "
       "property. This class is associated with a DataLink or "
       "IPProtocol Endpoint - as another aspect of that endpoint - "
       "using the LogicalIdentity relationship. In this case, the "
       "VLANEndpoint takes the role of SameElement." )]
class CIM_VLANEndpoint : CIM_ProtocolEndpoint {

      [Write, Description ( 
          "The desired VLAN mode that is requested for use. (Note "
          "that the current mode is given by the "
          "OperationalEndpointMode property.) The following values "
          "are defined: \n"
          "- Access: Puts the endpoint/switch port into permanent "
          "nontrunking mode and negotiates to convert the link into "
          "a nontrunk link. The endpoint becomes a nontrunk "
          "interface. \n"
          "- Dynamic Auto: Makes the endpoint able to convert the "
          "link to a trunk link. The endpoint becomes a trunk "
          "interface if the neighboring interface is set to trunk "
          "or desirable mode. \n"
          "- Dynamic Desirable: Makes the endpoint actively attempt "
          "to convert the link to a trunk link. The endpoint "
          "becomes a trunk interface if the neighboring interface "
          "is set to trunk, desirable, or auto mode. The default "
          "switch-port mode for all Ethernet interfaces is \'dynamic "
          "desirable.\' \n"
          "- Trunk: Puts the endpoint into permanent trunking mode "
          "and negotiates to convert the link into a trunk link. "
          "The endpoint becomes a trunk interface even if the "
          "neighboring interface is not a trunk interface. \n"
          "- Dot1Q Tunnel: Configures the interface as a tunnel "
          "(nontrunking) endpoint/port to be connected in an "
          "asymmetric link with an 802.1Q trunk port. 802.1Q "
          "tunneling is used to maintain customer VLAN integrity "
          "across a service provider network." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", ".." }, 
       Values { "DMTF Reserved", "Other", "Access", "Dynamic Auto", 
          "Dynamic Desirable", "Trunk", "Dot1Q Tunnel", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode", 
          "CIM_VLANEndpoint.OtherEndpointMode" }]
   uint16 DesiredEndpointMode;

      [Write, Description ( 
          "A string describing the type of VLAN endpoint model that "
          "is supported by this VLANEndpoint, when the value of the "
          "mode property is set to 1 (i.e., \"Other\"). This "
          "property should be set to NULL when the mode property is "
          "any value other than 1." ), 
       ModelCorrespondence { "CIM_VLANEndpoint.DesiredEndpointMode", 
          "CIM_VLANEndpoint.OperationalEndpointMode" }]
   string OtherEndpointMode;

      [Description ( 
          "The configuration mode for the VLAN endpoint. The "
          "following values are defined: /n - Unknown: If the "
          "endpoint is not VLAN aware. /n - Access: Puts the "
          "endpoint into permanent nontrunking mode and negotiates "
          "to convert the link into a nontrunk link. The endpoint "
          "becomes a nontrunk interface. \n"
          "- Dynamic Auto: Makes the endpoint able to convert the "
          "link to a trunk link. The endpoint becomes a trunk "
          "interface if the neighboring interface is set to trunk "
          "or desirable mode. \n"
          "- Dynamic Desirable: Makes the endpoint actively attempt "
          "to convert the link to a trunk link. The endpoint "
          "becomes a trunk interface if the neighboring interface "
          "is set to trunk, desirable, or auto mode. The default "
          "switch-port mode for all Ethernet interfaces is \'dynamic "
          "desirable.\' \n"
          "- Trunk: Puts the endpoint into permanent trunking mode "
          "and negotiates to convert the link into a trunk link. "
          "The endpoint becomes a trunk interface even if the "
          "neighboring interface is not a trunk interface. \n"
          "- Dot1Q Tunnel: Configures the interface as a tunnel "
          "(nontrunking) endpoint/port to be connected in an "
          "asymmetric link with an 802.1Q trunk port. 802.1Q "
          "tunneling is used to maintain customer VLAN integrity "
          "across a service provider network." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..32767", ".." }, 
       Values { "DMTF Reserved", "Other", "Access", "Dynamic Auto", 
          "Dynamic Desirable", "Trunk", "Dot1Q Tunnel", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_VLANEndpoint.DesiredEndpointMode", 
          "CIM_VLANEndpoint.OtherEndpointMode" }]
   uint16 OperationalEndpointMode;

      [Write, Description ( 
          "The type of VLAN encapsulation that is requested for "
          "use. (Note that the encapsulation currently in use is "
          "given by the OperationalVLANTrunkEncapsulation "
          "property.) Note that this property is only applicable "
          "when the endpoint is operating in a trunking mode (see "
          "the OperationalEndpointMode property for additional "
          "details). This property is either \'not applicable\' "
          "(i.e., the endpoint will never be placed in a trunking "
          "mode), a particular type (802.1q or Cisco ISL), or "
          "\'negotiate\' (i.e., the result of the negotiation "
          "between this interface and its neighbor). The value, "
          "\'Negotiate\' is not allowed if the endpoint does not "
          "support negotiation. This capability is hardware and "
          "vendor dependent. Refer to the associated "
          "VLANEndpointCapabilities.doesTrunkEncapsulationNegotiation "
          "property to validate whether a particular endpoint "
          "(port) supports encapsulation negotiation." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..32767", "32768.." }, 
       Values { "DMTF Reserved", "Other", "Not Applicable", 
          "802.1q", "Cisco ISL", "Negotiate", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_VLANEndpointCapabilities.SupportsTrunkEncapsulationNegotiation", 
          "CIM_VLANEndpoint.OperationalVLANTrunkEncapsulation", 
          "CIM_VLANEndpoint.OtherTrunkEncapsulation" }]
   uint16 DesiredVLANTrunkEncapsulation;

      [Write, Description ( 
          "A string describing the type of VLAN encapsulation that "
          "is supported by this VLANEndpoint, when the value of the "
          "encapsulation property is set to 1 (i.e., \"Other\"). "
          "This property should be set to NULL when the desired "
          "encapsulation property is any value other than 1." ), 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.DesiredVLANTrunkEncapsulation", 
          "CIM_VLANEndpoint.OperationalVLANTrunkEncapsulation" }]
   string OtherTrunkEncapsulation;

      [Description ( 
          "The type of VLAN encapsulation in use on a trunk "
          "endpoint/port. This property is either \'not applicable\' "
          "(i.e., the endpoint is not operating in trunking mode), "
          "a particular type (802.1q or Cisco ISL), \'negotiating\' "
          "(i.e., the endpoints are negotiating the encapsulation "
          "type). Note that this property is only applicable when "
          "the endpoint is operating in a trunking mode (see the "
          "OperationalEndpointMode property for additional "
          "details)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..32767", "32768.." }, 
       Values { "Unknown", "Other", "Not Applicable", "802.1q", 
          "Cisco ISL", "Negotiating", "DMTF Reserved", 
          "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OtherTrunkEncapsulation", 
          "CIM_VLANEndpoint.DesiredVLANTrunkEncapsulation" }]
   uint16 OperationalVLANTrunkEncapsulation;

      [Description ( 
          "Indicates whether GARP VLAN Registration Protocol (GVRP) "
          "is enabled or disabled on the trunk endpoint/port. This "
          "property is \'not applicable\' unless GVRP is supported "
          "by the endpoint. This is indicated in the Capabilities "
          "property, VLANEndpointCapabilities.Dot1QTagging. This "
          "property is applicable only when the endpoint is "
          "operating in trunking mode (determined by examining the "
          "SwitchEndpointMode property)." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "Not Applicable", "Enabled", "Disabled" }, 
       ModelCorrespondence { 
          "CIM_VLANEndpoint.OperationalEndpointMode", 
          "CIM_VLANEndpointCapabilities.Dot1QTagging" }]
   uint16 GVRPStatus;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VLANFor 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( "The VLAN for the VLAN Service." )]
class CIM_VLANFor : CIM_ServiceSAPDependency {

      [Deprecated { "No Value" }, 
       Override ( "Antecedent" ), 
       Description ( "The VLAN for the VLANService." )]
   CIM_VLAN REF Antecedent;

      [Deprecated { "No Value" }, 
       Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The VLANService which uses the VLAN for processing." )]
   CIM_VLANService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "An association that links a PolicyGroup to the System in whose "
       "scope the Group is defined." )]
class CIM_PolicyGroupInSystem : CIM_PolicySetInSystem {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The System in whose scope a PolicyGroup is defined." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "A PolicyGroup named within the scope of a System." )]
   CIM_PolicyGroup REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Deprecated { "CIM_ReusablePolicyContainer" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The term \'PolicyRepository\' has been confusing to both "
       "developers and users of the model. The replacement class name "
       "describes model element properly and is less likely to be "
       "confused with a data repository. \n"
       "\n"
       "A class representing an administratively defined container for "
       "reusable policy-related information. This class does not "
       "introduce any additional properties beyond those in its "
       "superclass AdminDomain. It does, however, participate in a "
       "number of unique associations. \n"
       "\n"
       "An instance of this class uses the NameFormat value "
       "\"PolicyRepository\"." )]
class CIM_PolicyRepository : CIM_AdminDomain {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_PolicyContainerInPolicyContainer" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The term \'PolicyRepository\' has been confusing to both "
       "developers and users of the model. The replacement class name "
       "describes model element properly and is less likely to be "
       "confused with a data repository. ContainedDomain is a general "
       "purpose mechanism for expressing domain hierarchy. \n"
       "\n"
       "A relationship that aggregates one or more lower-level "
       "PolicyRepositories into a higher-level Repository." )]
class CIM_PolicyRepositoryInPolicyRepository : CIM_SystemComponent {

      [Deprecated { 
          "CIM_PolicyContainerInPolicyContainer.GroupComponent" }, 
       Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "A PolicyRepository that aggregates other Repositories." )]
   CIM_PolicyRepository REF GroupComponent;

      [Deprecated { 
          "CIM_PolicyContainerInPolicyContainer.PartComponent" }, 
       Override ( "PartComponent" ), 
       Description ( 
          "A PolicyRepository aggregated by another Repository." )]
   CIM_PolicyRepository REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "PolicyRoleCollectionInSystem is an association used to "
       "establish a relationship between a collection and an \'owning\' "
       "System such as an AdminDomain or ComputerSystem." )]
class CIM_PolicyRoleCollectionInSystem : CIM_HostedCollection {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The parent system responsible for the collection." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Collection." )]
   CIM_PolicyRoleCollection REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "An association that links a PolicyRule to the System in whose "
       "scope the Rule is defined." )]
class CIM_PolicyRuleInSystem : CIM_PolicySetInSystem {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The System in whose scope a PolicyRule is defined." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "A PolicyRule named within the scope of a System." )]
   CIM_PolicyRule REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A class representing an administratively defined container for "
       "reusable policy-related information. This class does not "
       "introduce any additional properties beyond those in its "
       "superclass AdminDomain. It does, however, participate in a "
       "unique association for containing policy elements. \n"
       "\n"
       "An instance of this class uses the NameFormat value "
       "\"ReusablePolicyContainer\"." )]
class CIM_ReusablePolicyContainer : CIM_AdminDomain {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AllocatedResource 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between LogicalDevices and SystemResources, "
       "indicating that the Resource is assigned to the Device." )]
class CIM_AllocatedResource : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Resource." )]
   CIM_SystemResource REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDevice to which the Resource is assigned." )]
   CIM_LogicalDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AvailableDiagnosticService 
// ==================================================================
   [Association, Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This is an association class that relates a DiagnosticService "
       "to a ManagedElement. Consumers wishing to \'diagnose\' a "
       "particular Element could query this association to determine "
       "what services are available." )]
class CIM_AvailableDiagnosticService : CIM_ServiceAvailableToElement {

      [Override ( "ServiceProvided" ), 
       Description ( 
          "The diagnostic service that is available to a ManagedElement."
           )]
   CIM_DiagnosticService REF ServiceProvided;

      [Description ( 
          "Estimated magnitude of time to perform the referenced "
          "DiagnosticService on the referenced ManagedElement. \n"
          "Since the processing speed of a system can vary "
          "immensely due to a variety of factors (e.g., processor "
          "speed), this property takes on values that are a "
          "statement of magnitude, not absolute time. If greater "
          "accuracy can be provided, a quantification may be "
          "specified in the corresponding integer property, "
          "EstimatedDurationQualifier. \n"
          "Since execution times could vary by Element, this "
          "property is located in the association between the two "
          "entities." ), 
       ValueMap { "0", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Milliseconds", "Seconds", "Minutes", 
          "Hours", "Days" }, 
       ModelCorrespondence { 
          "CIM_AvailableDiagnosticService.EstimatedDurationQualifier" }]
   uint16 EstimatedDurationOfService;

      [Description ( 
          "EstimatedDurationQualifier can be used to further "
          "quantify the magnitude of time to perform the service." ), 
       ModelCorrespondence { 
          "CIM_AvailableDiagnosticService.EstimatedDurationOfService" }]
   uint32 EstimatedDurationQualifier;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BootOSFromFS 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::OperatingSystem" ), 
    Description ( 
       "A link between the OperatingSystem and the FileSystem(s) from "
       "which this OperatingSystem is loaded. The association is many- "
       "to-many since a Distributed OS could depend on several File "
       "Systems in order to correctly and completely load." )]
class CIM_BootOSFromFS : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The FileSystem from which the OperatingSystem is loaded." )]
   CIM_FileSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The OperatingSystem." )]
   CIM_OperatingSystem REF Dependent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "A class derived from Service that provides the controls to "
       "manage the boot configuration of a managed computer system or "
       "device. This includes changing the order of the boot devices "
       "and affecting settings on managed elements during the boot "
       "process. This service can also affect the load of a specific "
       "operating system on the computer system through a "
       "BootSourceSetting that points to a specific operating system "
       "image." )]
class CIM_BootService : CIM_Service {


      [Description ( 
          "This method creates a new boot configuration by creating "
          "a replica of an existing boot configuration. The new "
          "boot configuration shall be a duplicate, with the "
          "exception of key property values, of the "
          "BootConfigSetting, and its associated classes, specified "
          "in the StartingBootConfig parameter. If \"State Data "
          "Supported\" is present in the "
          "BootServiceCapabilities.BootCapabilitiesSupported "
          "property, the new BootConfigSetting shall be associated "
          "via ElementSettingData to a \'State\' BootConfigSetting, "
          "which is associated to the ComputerSystem specified by "
          "the ScopingComputerSystem parameter. Otherwise the new "
          "BootConfigSetting shall be directly associated via "
          "ElementSettingData data to the ComputerSystem." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 CreateBootConfigSetting(
         [Required, IN, Description ( 
             "An existing BootConfigSetting instance used as a "
             "template to replicate. factory default "
             "configuration." )]
      CIM_BootConfigSetting REF StartingBootConfig, 
         [IN, Description ( 
             "directly or indirectly associated. If "
             "ScopingComputerSystem has a non-NULL value, the "
             "scoping system for NewBootConfig is explicitly "
             "identified. If ScopingComputerSystem has a value "
             "of NULL, the new BootConfigSetting shall be "
             "related to the same set of ComputerSystems as is "
             "the template configuration." )]
      CIM_ComputerSystem REF ScopingComputerSystem, 
         [IN ( false ), OUT, Description ( 
             "The BootConfigSetting instance created by the "
             "method. This parameter is not returned if the "
             "method is run as a Job." )]
      CIM_BootConfigSetting REF NewBootConfig, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "This method is called to set the role of the "
          "BootConfigSetting that is directly or indirectly "
          "associated to one or more ComputerSystems. The method "
          "applies the new role equally to all related "
          "ComputerSystems. If a BootConfigSetting can be related "
          "to more than one ComputerSystem, but role modification "
          "applies to just one of them, the SetBootConfigUsage "
          "method shall be used instead.\n"
          "The method shall update the IsNext or IsDefault property "
          "of every ElementSettingData that directly or indirectly "
          "associates BootConfigSetting to a ComputerSystem. The "
          "method may also update the IsNext or IsDefault property "
          "of other ElementSettingDatas that reference the same "
          "ComputerSystems to satisfy cardinality constraints." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 SetBootConfigRole(
         [Required, IN, Description ( 
             "An existing BootConfigSetting instance whose role "
             "will be updated." )]
      CIM_BootConfigSetting REF BootConfigSetting, 
         [Required, IN, Description ( 
             "The desired Role of the BootConfigSetting. \n"
             "\"IsNext\" updates the ElementSettingData.IsNext "
             "property and indicates that the specified "
             "BootConfigSetting is to be used in the future when "
             "any of its related ComputerSystems are enabled.\n"
             "\"IsNextSingleUse\" updates the "
             "ElementSettingData.IsNext property. It is similar "
             "to IsNext, except the change applies only to the "
             "next time a related ComputerSystem is enabled.\n"
             "\"IsDefault\" updates the "
             "ElementSettingData.IsDefault property to indicate "
             "that the BootConfigSetting is identified as the "
             "default boot configuration for any of its related "
             "ComputerSystems" ), 
          ValueMap { "0", "1", "2", "3..32767", "32768..65535" }, 
          Values { "IsNext", "IsNextSingleUse", "IsDefault", 
             "DMTF Reserved", "Vendor Specified" }]
      uint16 Role, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "This method is called to set the role of the "
          "BootConfigSetting for a specific ComputerSystem. The "
          "method shall update the IsNext or IsDefault property of "
          "the ElementSettingData that directly or indirectly "
          "associates ScopingComputerSystem and BootConfigSetting. "
          "The method may also update the IsNext or IsDefault "
          "property of other ElementSettingDatas that reference "
          "ScopingComputerSystem to satisfy cardinality "
          "constraints." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 SetBootConfigUsage(
         [Required, IN, Description ( 
             "An existing BootConfigSetting instance whose role "
             "will be updated." )]
      CIM_BootConfigSetting REF BootConfigSetting, 
         [IN, Description ( 
             "The ComputerSystem to which the new Role applies. "
             "A value of NULL indicates that the Role is to be "
             "applied to each ComputerSystem that is directly or "
             "indirectly associated to BootConfigSetting." )]
      CIM_ComputerSystem REF ScopingComputerSystem, 
         [Required, IN, Description ( 
             "The desired Role of the BootConfigSetting.\n"
             "\"IsNext\" updates the ElementSettingData.IsNext "
             "property and indicates that the specified "
             "BootConfigSetting is to be used in the future when "
             "ScopingComputerSystem is enabled.\n"
             "\"IsNextSingleUse\" updates the "
             "ElementSettingData.IsNext property. It is similar "
             "to IsNext, except the change applies only to the "
             "next time the ScopingComputerSystem is enabled.\n"
             "\"IsDefault\" updates the "
             "ElementSettingData.IsDefault property to indicate "
             "that the BootConfigSetting is identified as the "
             "default boot configuration for ScopingComputerSystem\n"
             "\"IsNotNext\" removes the IsNext or "
             "IsNextSingleUse designation. The ComputerSystem "
             "will not be automatically booted the next time it "
             "is enabled.\n"
             "\"IsDefault\" removes the IsDefault designation." ), 
          ValueMap { "0", "1", "2", "3", "4", "5..32767", 
             "32768..65535" }, 
          Values { "IsNext", "IsNextSingleUse", "IsDefault", 
             "IsNotNext", "IsNotDefault", "DMTF Reserved", 
             "Vendor Specified" }]
      uint16 Role, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

      [Description ( 
          "This method is called to indicate to the referenced "
          "ComputerSystem to apply the referenced "
          "BootConfigSetting. This shall cause the referenced "
          "ComputerSystem\'s boot process to start and apply the "
          "referenced BootConfigSetting." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Method Parameters Checked - Job Started", 
          "Method Reserved", "Vendor Specified" }]
   uint32 ApplyBootConfigSetting(
         [Required, IN, Description ( 
             "Reference to an instance of ComputerSystem which "
             "will apply the BootConfigSetting referenced by the "
             "ApplyBootConfig parameter. A value of NULL "
             "indicates that the ApplyBootConfig is to be "
             "applied to each related ComputerSystem." )]
      CIM_ComputerSystem REF ScopingComputerSystem, 
         [Required, IN, Description ( 
             "Reference to an instance of BootConfigSetting "
             "which will be applied to the instance of "
             "ComputerSystem referenced by the ComputerSystem "
             "parameter." )]
      CIM_BootConfigSetting REF ApplyBootConfig, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. (May be null "
             "if the task is completed)." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BootServiceAccessBySAP 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "BootServiceAccessBySAP is the relationship between a Boot "
       "Service and its access points." )]
class CIM_BootServiceAccessBySAP : CIM_ServiceAccessBySAP {

      [Override ( "Antecedent" ), 
       Description ( "The BootService." )]
   CIM_BootService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "An access point for the BootService." )]
   CIM_BootSAP REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Cluster 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A class derived from ComputerSystem that \'is made up of\' two "
       "or more ComputerSystems which operate together as an atomic, "
       "functional whole to increase the performance, resources and/or "
       "RAS (Reliability, Availability and Serviceability) of the "
       "component ComputerSystems, related to some aspects of these "
       "ComputerSystems." )]
class CIM_Cluster : CIM_ComputerSystem {

      [Description ( 
          "Interconnect is a free form string that describes the "
          "interconnection mechanism for the Cluster." )]
   string Interconnect;

      [Description ( 
          "InterconnectAddress indicates the address of the Cluster "
          "System, which is dependent on the interconnection "
          "scheme. If no address is available or applicable, a null "
          "string should be used." )]
   string InterconnectAddress;

      [Description ( 
          "The cluster types. This specifies whether the cluster is "
          "for failover (value=2), performance (3), etc. The values "
          "which can be specified are not mutually exclusive. Thus, "
          "Types is an array." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "Failover", "Performance", 
          "Distributed OS", "Node Grouping", "SysPlex" }]
   uint16 Types[];

      [Description ( 
          "Indicates the maximum number of nodes that may "
          "participate in the Cluster. If unlimited, enter 0." )]
   uint32 MaxNumberOfNodes;

      [Description ( 
          "Indicates the state of the Cluster. The cluster can be "
          "defined to be on-line (value=2), off-line (3), in a "
          "degraded mode of operation (4) or unavailable (5)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "On-line", "Off-line", 
          "Degraded", "Unavailable" }]
   uint16 ClusterState;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClusteringService 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "ClusteringService represents the functionality provided by a "
       "Cluster. For example, failover functionality may be modeled as "
       "a Service of a failover Cluster." )]
class CIM_ClusteringService : CIM_Service {


      [Description ( 
          "AddNode brings a new ComputerSystem into a Cluster. The "
          "node to be added is specified as a parameter to the "
          "method. The return value should be 0 if the Computer "
          "System is successfully added, 1 if the method is not "
          "supported and any other number if an error occurred. In "
          "a subclass, the set of possible return codes could be "
          "specified, using a ValueMap qualifier on the method. The "
          "strings to which the ValueMap contents are \'translated\' "
          "may also be specified in the subclass as a Values array "
          "qualifier." )]
   uint32 AddNode(
         [IN, Description ( "The node to add to the cluster." )]
      CIM_ComputerSystem REF CS);

      [Description ( 
          "EvictNode removes a ComputerSystem from a Cluster. The "
          "node to be evicted is specified as a parameter to the "
          "method. The return value should be 0 if the "
          "ComputerSystem is successfully evicted, 1 if the method "
          "is not supported and any other number if an error "
          "occurred. In a subclass, the set of possible return "
          "codes could be specified, using a ValueMap qualifier on "
          "the method. The strings to which the ValueMap contents "
          "are \'translated\' may also be specified in the subclass "
          "as a Values array qualifier." )]
   uint32 EvictNode(
         [IN, Description ( 
             "The node to remove from the cluster." )]
      CIM_ComputerSystem REF CS);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClusterServiceAccessBySAP 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "ClusterServiceAccessBySAP is the relationship between a "
       "ClusteringService and its access points." )]
class CIM_ClusterServiceAccessBySAP : CIM_ServiceAccessBySAP {

      [Override ( "Antecedent" ), 
       Description ( "The ClusteringService." )]
   CIM_ClusteringService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "An access point for the ClusteringService." )]
   CIM_ClusteringSAP REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR865" type="add">Errata to add MAX(1) 
// qualifier to GroupComponent.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComponentCS 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.13.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A ComputerSystem can aggregate another ComputerSystem. This "
       "association can be used to model MPP Systems with workstation "
       "frontends, an I2O subsystem embedded in a Unitary "
       "ComputerSystem, or a System that splits functionality between "
       "two processors, potentially running different Operating "
       "Systems. For example, if a CISC Processor and its associated "
       "OperatingSystem, are used for user interface and file support, "
       "and a RISC Processor and its OS are used for complex "
       "mathematical operations, this could be modeled as two "
       "ComputerSystems where one aggregates the other. In some cases, "
       "this could be modeled as a Cluster. The difference is the "
       "focus of the relationship. ComponentCS represents that unique "
       "and distinct ComputerSystems are aggregated by a higher level "
       "CS object. However, each of the component CSs are still "
       "distinguishable entities and are only viewed as such. "
       "Alternately, with a Cluster, the ComputerSystems that "
       "participate in it are inconsequential, when viewed through the "
       "\'Cluster System\'. \n"
       "\n"
       "When instantiating or subclassing the ComponentCS "
       "relationship, care should be taken that the component "
       "ComputerSystem meets the definitional requirements of a "
       "ComputerSystem - ie, a functional whole that provides compute "
       "capabilities and aggregates System Devices, an "
       "OperatingSystem, etc." )]
class CIM_ComponentCS : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       MAX ( 1 ), 
       Description ( 
          "The ComputerSystem that contains and/or aggregates other Systems."
           )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The contained (Sub)ComputerSystem." )]
   CIM_ComputerSystem REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "DiagnosticLog serves as an aggregation point for "
       "DiagnosticRecord objects. This class exists in order to "
       "encourage the use of a consolidated record management "
       "methodology for diagnostics. A common set of providers for "
       "this log and its associated records SHOULD be used to control "
       "functions such as record persistence, query support and "
       "overall data integrity in a consistent manner." )]
class CIM_DiagnosticLog : CIM_RecordLog {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticResultForTest 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class is being deprecated as part of the deprecation of "
       "the DiagnosticResult class. \n"
       "This is an association class to relate the results of a test "
       "to the test itself." )]
class CIM_DiagnosticResultForTest {

      [Deprecated { "No Value" }, 
       Key, Weak, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The result object." )]
   CIM_DiagnosticResult REF DiagnosticResult;

      [Deprecated { "No Value" }, 
       Key, Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The test that generated the result object." )]
   CIM_DiagnosticTest REF DiagnosticTest;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticSettingForTest 
// ==================================================================
   [Association, Deprecated { "CIM_ElementSetting" }, 
    Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class is no longer required and is being deprecated. Use "
       "ElementSetting (its parent) instead if the association is "
       "needed. \n"
       "This is an association class to relate test settings with "
       "diagnostic tests." )]
class CIM_DiagnosticSettingForTest : CIM_ElementSetting {

      [Deprecated { "CIM_ElementSetting.Element" }, 
       Override ( "Element" ), 
       Description ( "The Test that can use the Setting object." )]
   CIM_DiagnosticTest REF Element;

      [Deprecated { "CIM_ElementSetting.Setting" }, 
       Override ( "Setting" ), 
       Description ( 
          "The Setting that can be applied to the execution of the "
          "DiagnosticTest." )]
   CIM_DiagnosticSetting REF Setting;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Deprecated { "CIM_DiagnosticLog" }, 
    Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "DiagnosticsLog is being deprecated in order to change the "
       "class name to DiagnosticLog. This is being done to follow the "
       "naming convention used for other diagnostic model classes. \n"
       "DiagnosticsLog serves as an aggregation point for "
       "DiagnosticRecord objects. This class exists in order to "
       "encourage the use of a consolidated record management "
       "methodology for diagnostics. A common set of providers for "
       "this log and its associated records SHOULD be used to control "
       "functions such as record persistence, query support and "
       "overall data integrity in a consistent manner." )]
class CIM_DiagnosticsLog : CIM_RecordLog {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DiagnosticTestForMSE 
// ==================================================================
   [Association, Deprecated { "CIM_AvailableDiagnosticService" }, 
    Version ( "2.9.0" ), 
    UMLPackagePath ( "CIM::System::Diagnostics" ), 
    Description ( 
       "This class is being deprecated to promote its usage to the "
       "DiagnosticService level. \n"
       "This is an association class that relates a DiagnosticTest to "
       "a ManagedSystemElement. Consumers wishing to \'diagnose\' a "
       "particular Element could query this association, for the "
       "Element, to determine what tests are available." )]
class CIM_DiagnosticTestForMSE : CIM_ProvidesServiceToElement {

      [Deprecated { "CIM_AvailableDiagnosticService.ServiceProvided" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "The test that may be run against a ManagedSystemElement." )]
   CIM_DiagnosticTest REF Antecedent;

      [Deprecated { "CIM_AvailableDiagnosticService.UserOfService" }, 
       Override ( "Dependent" ), 
       Description ( "The ManagedSystemElement that can be tested." )]
   CIM_ManagedSystemElement REF Dependent;

      [Deprecated { 
          "CIM_AvailableDiagnosticService.EstimatedDurationOfService" }, 
       Description ( 
          "Estimated number of seconds to perform the referenced "
          "DiagnosticTest against the ManagedSystemElement. Since "
          "execution times could vary by Element, this property is "
          "located in the association between the two entities. It "
          "is also captured in DiagnosticResult, in the "
          "EstimatedTimeOfPerforming property. \n"
          "A CIM Consumer can compare this value with the value in "
          "DiagnosticResult to get an idea of what impact their "
          "settings have on test execution." ), 
       Units ( "Seconds" ), 
       ModelCorrespondence { 
          "CIM_DiagnosticResult.EstimatedTimeOfPerforming" }]
   uint32 EstimatedTimeOfPerforming;

      [Deprecated { "CIM_ServiceAffectsElement.ElementEffects" }, 
       Description ( 
          "This property is being deprecated since the same "
          "characterisitic can be published in the "
          "CIM_ServiceAffectsElement.ElementEffects array as Value "
          "= 2, \"Exclusive Use\". \n"
          "If the DiagnosticTest referenced in this object can be "
          "run concurrently against multiple SystemElements, but "
          "only run one at a time for the referenced "
          "ManagedSystemElement, then this boolean is set to TRUE. "
          "Alternately, if the test can NOT be run concurrently "
          "irregardless of the System Elements being tested, then "
          "the more general \"Is Exclusive\" enumerated value (2) "
          "should be set in DiagnosticTest. Characteristics." )]
   boolean IsExclusiveForMSE;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DMA 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( "Personal computer architecture DMA." )]
class CIM_DMA : CIM_SystemResource {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string CSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A part of the object\'s key value, the DMA Channel number."
           ), 
       MappingStrings { "MIF.DMTF|DMA|001.1" }]
   uint32 DMAChannel;

      [Description ( "Availability of the DMA." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Available", 
          "In Use/Not Available", "In Use and Available/Shareable" }, 
       MappingStrings { "MIF.DMTF|DMA|001.2" }]
   uint16 Availability;

      [Description ( 
          "Indication that the DMA Channel supports burst mode." ), 
       MappingStrings { "MIF.DMTF|DMA|001.3" }]
   boolean BurstMode;

      [Description ( 
          "An array indicating all the transfer widths (in bits) "
          "supported by this DMA Channel. Permissible values are 8, "
          "16, 32, 64 or 128 bits. If unknown, enter 0." ), 
       Units ( "Bits" ), 
       ValueMap { "0", "8", "16", "32", "64", "128" }, 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.2" }]
   uint16 TransferWidths[];

      [Description ( 
          "An integer indicating the DMA Channel address size in "
          "bits. Permissible values are 8, 16, 32 or 64 bits. If "
          "unknown, enter 0." ), 
       Units ( "Bits" ), 
       ValueMap { "0", "8", "16", "32", "64" }, 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.3" }]
   uint16 AddressSize;

      [Description ( 
          "The maximum number of bytes that can be transferred by "
          "this DMA Channel. If unknown, enter 0." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.4" }]
   uint32 MaxTransferSize;

      [Description ( 
          "Indicates whether DMA may execute in \'count by byte\' "
          "mode (value=4) or not (value=3). Also, \"Other\" (1) and "
          "\"Unknown\" (2) may be defined." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", 
          "Not execute in \'count by byte\' mode", 
          "Execute in \'count by byte\' mode" }, 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.7" }]
   uint16 ByteMode;

      [Description ( 
          "Indicates whether DMA may execute in \'count by word\' "
          "mode (value=4) or not (value=3). Also, \"Other\" (1) and "
          "\"Unknown\" (2) may be defined." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", 
          "Not execute in \'count by word\' mode", 
          "Execute in \'count by word\' mode" }, 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.8" }]
   uint16 WordMode;

      [Description ( 
          "DMA channel timing. For example, \"Type A\" (value =4) "
          "or \"Type F\" (6) could be specified." ), 
       ValueMap { "1", "2", "3", "4", "5", "6" }, 
       Values { "Other", "Unknown", "ISA Compatible", "Type A", 
          "Type B", "Type F" }, 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.9" }]
   uint16 ChannelTiming;

      [Description ( 
          "Indicates whether C type (burst) timing is supported "
          "(value=5) or not (value=4). Also, \"Other\" (1), "
          "\"Unknown\" (2) and \"ISA Compatible\" (3) are defined." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "ISA Compatible", 
          "Not Supported", "Supported" }, 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.10" }]
   uint16 TypeCTiming;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Export 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "An association between a LocalFileSystem and its Directories "
       "indicating that the specified Directories are available for "
       "mount. When exporting an entire FileSystem, the Directory "
       "should reference the topmost directory of the FileSystem." )]
class CIM_Export {

      [Key, Max ( 1 ), 
       Description ( "The LocalFileSystem." )]
   CIM_LocalFileSystem REF LocalFS;

      [Key, Description ( "The Directory exported for mount." )]
   CIM_Directory REF Directory;

      [Description ( "Name under which the Directory is exported." )]
   string ExportedDirectoryName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FileStorage 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A link between the FileSystem and the LogicalFile(s) addressed "
       "through this FileSystem." )]
class CIM_FileStorage : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The FileSystem." )]
   CIM_FileSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "The LogicalFile stored in the context of the FileSystem." )]
   CIM_LogicalFile REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedBootSAP 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "HostedBootSAP defines the hosting UnitaryComputerSystem for a "
       "BootSAP. Since this relationship is subclassed from "
       "HostedAccessPoint, it inherits the scoping/naming scheme "
       "defined for AccessPoint - where an AccessPoint is weak to its "
       "hosting System. In this case, a BootSAP must be weak to its "
       "hosting UnitaryComputerSystem." )]
class CIM_HostedBootSAP : CIM_HostedAccessPoint {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The UnitaryComputerSystem." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The BootSAP hosted on the UnitaryComputer System." )]
   CIM_BootSAP REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedBootService 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Boot" ), 
    Description ( 
       "HostedBootService defines the hosting System for a Boot "
       "Service. Since this relationship is subclassed from Hosted "
       "Service, it inherits the scoping/naming scheme defined for "
       "Service - where a Service is weak to its hosting System." )]
class CIM_HostedBootService : CIM_HostedService {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The BootService hosted on the System." )]
   CIM_BootService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedClusterSAP 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "HostedClusterSAP defines the hosting ComputerSystem for a "
       "ClusteringSAP. Since this relationship is subclassed from "
       "HostedAccessPoint, it inherits the scoping/naming scheme "
       "defined for AccessPoint - where an AccessPoint is weak to its "
       "hosting System. In this case, a ClusteringSAP must be weak to "
       "its hosting ComputerSystem." )]
class CIM_HostedClusterSAP : CIM_HostedAccessPoint {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ClusteringSAP that is hosted on the ComputerSystem." )]
   CIM_ClusteringSAP REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedClusterService 
// ==================================================================
   [Association, Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "HostedClusterService defines the hosting Cluster for a "
       "ClusteringService. Since this relationship is subclassed from "
       "HostedService, it inherits the scoping/naming scheme defined "
       "for Service - where a Service is weak to its hosting System. "
       "In this case, a ClusteringService must be weak to its hosting "
       "Cluster System." )]
class CIM_HostedClusterService : CIM_HostedService {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Cluster." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ClusteringService that is hosted on the Cluster." )]
   CIM_ClusteringService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedJobDestination 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "An association between a JobDestination and a System on which "
       "it resides. The cardinality of this association is 1-to-many. "
       "A System may host many Job queues. Job Destinations are weak "
       "with respect to their hosting System. Heuristic: A "
       "JobDestination is hosted on the System where the "
       "LogicalDevices, SoftwareFeatures or Services that implement/ "
       "provide the JobDestination are located." )]
class CIM_HostedJobDestination : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting System." )]
   CIM_System REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "The JobDestination hosted on the System." )]
   CIM_JobDestination REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostingCS 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A VirtualComputerSystem is hosted on another ComputerSystem. "
       "This association makes that relationship explicit." )]
class CIM_HostingCS : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( "The hosting ComputerSystem." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The VirtualComputerSystem." )]
   CIM_VirtualComputerSystem REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InstalledOS 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::OperatingSystem" ), 
    Description ( 
       "A link between the ComputerSystem and the OperatingSystem(s) "
       "installed or loaded on it. An OperatingSystem is \'installed\' "
       "on a ComputerSystem, when placed on one of its StorageExtents "
       "- for example, copied to a disk drive or downloaded to Memory. "
       "Using this definition, an OperatingSystem is \'installed\' on "
       "a NetPC when downloaded via the network." )]
class CIM_InstalledOS : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "The OperatingSystem installed on the ComputerSystem." )]
   CIM_OperatingSystem REF PartComponent;

      [Description ( 
          "Boolean indicating that the OperatingSystem is the "
          "default OS for the ComputerSystem." ), 
       MappingStrings { "MIF.DMTF|Operating System|001.4" }]
   boolean PrimaryOS;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IRQ 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( "Personal computer architecture IRQ." )]
class CIM_IRQ : CIM_SystemResource {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string CSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A part of the object\'s key value, IRQ Number." ), 
       MappingStrings { "MIF.DMTF|IRQ|002.1" }]
   uint32 IRQNumber;

      [Description ( "Availability of the IRQ." ), 
       ValueMap { "1", "2", "3", "4", "5" }, 
       Values { "Other", "Unknown", "Available", 
          "In Use/Not Available", "In Use and Available/Shareable" }, 
       MappingStrings { "MIF.DMTF|IRQ|002.2" }]
   uint16 Availability;

      [Description ( 
          "IRQ trigger type indicating whether edge (value=4) or "
          "level triggered (value=3) interrupts occur. Also, "
          "\"Other\" (1) and \"Unknown\" (2) may be defined." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", "Level", "Edge" }, 
       MappingStrings { "MIF.DMTF|IRQ|002.3", 
          "MIF.DMTF|System Resource IRQ Info|001.2" }]
   uint16 TriggerType;

      [Description ( 
          "IRQ trigger level indicating whether the interrupt is "
          "triggered by the hardware signal going high (value=4) or "
          "low (value=3). Also, \"Other\" (1) and \"Unknown\" (2) "
          "may be defined." ), 
       ValueMap { "1", "2", "3", "4" }, 
       Values { "Other", "Unknown", "Active Low", "Active High" }, 
       MappingStrings { "MIF.DMTF|System Resource IRQ Info|001.3" }]
   uint16 TriggerLevel;

      [Override ( "Shareable" ), 
       Description ( 
          "Boolean indicating whether the IRQ can be shared." ), 
       MappingStrings { "MIF.DMTF|IRQ|002.4" }]
   boolean Shareable;

      [Description ( 
          "The Hardware property indicates whether the interrupt is "
          "hardware or software based. (If TRUE, the interrupt is "
          "hardware based.) On a personal computer, a hardware IRQ "
          "is a physical wire to a programmable interrupt "
          "controller (PIC) chip, through which the CPU can be "
          "notified of time critical events. Some IRQ lines are "
          "reserved for standard Devices such as the keyboard, "
          "floppy disk drives, and the system clock. A software "
          "interrupt is a programmatic mechanism to allow an "
          "application to get the attention of the Processor." )]
   boolean Hardware;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogInDataFile 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "MessageLogs can reside in data files, on specially allocated "
       "storage areas such as disks or memory, or output as raw I/O "
       "streams. In fact, a single Log may use each of these "
       "mechanisms to output or capture its contents. The "
       "LogInDataFile association describes a Log stored as a "
       "DataFile." )]
class CIM_LogInDataFile : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The DataFile." )]
   CIM_DataFile REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The MessageLog residing in the DataFile." )]
   CIM_MessageLog REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogInDeviceFile 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "MessageLogs can reside in data files, on specially allocated "
       "storage areas such as disks or memory, or output as raw I/O "
       "streams. In fact, a single Log may use each of these "
       "mechanisms to output or capture its contents. The "
       "LogInDeviceFile association describes a Log outputting to a "
       "raw I/O stream DeviceFile - for example, a serial port on a "
       "UNIX system." )]
class CIM_LogInDeviceFile : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The I/O stream DeviceFile." )]
   CIM_DeviceFile REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The MessageLog outputting to the DeviceFile." )]
   CIM_MessageLog REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LogInStorage 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "MessageLogs can reside in data files, on specially allocated "
       "storage areas such as disks or memory, or output as raw I/O "
       "streams. In fact, a single Log may use each of these "
       "mechanisms to output or capture its contents. The LogInStorage "
       "association describes a Log located in a specially allocated "
       "portion of a StorageExtent. The offset of the Log, within the "
       "Extent, is defined using a property of the association, "
       "StartingOffset." )]
class CIM_LogInStorage : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The StorageExtent." )]
   CIM_StorageExtent REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The MessageLog located within the Extent." )]
   CIM_MessageLog REF Dependent;

      [Description ( 
          "StartingOffset indicates where in the Extent that the Log begins."
           )]
   uint64 StartingOffset;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MemoryMappedIO 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "Personal Computer architecture Memory Mapped I/O. This class "
       "addresses both memory and port I/O resources. The property, "
       "MappedResource, defines whether memory or I/O is mapped (and "
       "for I/O whether the mapping is to a memory or a port space)." )]
class CIM_MemoryMappedIO : CIM_SystemResource {

      [Key, Description ( 
          "The scoping ComputerSystem\'s CreationClassName." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.CreationClassName" )]
   string CSCreationClassName;

      [Key, Description ( "The scoping ComputerSystem\'s Name." ), 
       MaxLen ( 256 ), 
       Propagated ( "CIM_ComputerSystem.Name" )]
   string CSName;

      [Key, Description ( 
          "CreationClassName indicates the name of the class or the "
          "subclass used in the creation of an instance. When used "
          "with the other key properties of this class, this "
          "property allows all instances of this class and its "
          "subclasses to be uniquely identified." ), 
       MaxLen ( 256 )]
   string CreationClassName;

      [Key, Description ( 
          "A part of the object\'s key value, the starting address "
          "of memory mapped I/O." ), 
       MappingStrings { "MIF.DMTF|Memory Mapped I/O|001.1" }]
   uint64 StartingAddress;

      [Description ( "Ending address of memory mapped I/O." ), 
       MappingStrings { "MIF.DMTF|Memory Mapped I/O|001.2" }]
   uint64 EndingAddress;

      [Description ( 
          "Type of memory mapped I/O. MappedResource defines "
          "whether memory or I/O is mapped, and for I/O, whether "
          "the mapping is to a memory or a port space." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "Other", "Mapped Memory", 
          "I/O Mapped to Memory Space", "I/O Mapped to Port Space" }]
   uint16 MappedResource;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MemoryResource 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "Since the MemoryMappedIO class applies to memory AND port "
       "resources, there is the potential for key conflict. For "
       "example, both a memory resource and a port resource may be "
       "located at address 0. Since StartingAddress is the "
       "distinguishing key of MemoryMappedIO, two instances would be "
       "created with the same key. This is prevented by defining "
       "memory and port resource subclasses of MemoryMappedIO, and "
       "allowing the CreationClassName key property to distinguish "
       "between them and force uniqueness in their keys." )]
class CIM_MemoryResource : CIM_MemoryMappedIO {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NFS 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::FileElements" ), 
    Description ( 
       "A class derived from RemoteFileSystem representing that the "
       "FileSystem is mounted, using the NFS protocol, from a "
       "ComputerSystem. The properties of the NFS object deal with the "
       "operational aspects of the mount and represent the client-side "
       "configuration for NFS access. The FileSystemType (inherited "
       "from FileSystem) should be set to indicate the type of this "
       "FileSystem as it appears to the client." )]
class CIM_NFS : CIM_RemoteFileSystem {

      [Description ( 
          "If set to true: Once the FileSystem is mounted, NFS "
          "requests are retried until the hosting System responds. \n"
          "If set to false: Once the FileSystem is mounted, an "
          "error is returned if the hosting System does not "
          "respond." )]
   boolean HardMount;

      [Description ( 
          "If set to true: Retries are performed in the foreground. \n"
          "If set to false: If the first mount attempt fails, "
          "retries are performed in the background." )]
   boolean ForegroundMount;

      [Description ( 
          "If set to true: Interrupts are permitted for hard "
          "mounts. \n"
          "If set to false : Interrupts are ignored for hard "
          "mounts." )]
   boolean Interrupt;

      [Description ( 
          "Maximum number of mount failure retries allowed." )]
   uint16 MountFailureRetries;

      [Description ( 
          "Maximum number of NFS retransmissions allowed." )]
   uint16 RetransmissionAttempts;

      [Description ( "NFS timeout in tenths of a second." ), 
       Units ( "Tenths of Seconds" )]
   uint32 RetransmissionTimeout;

      [Description ( "Read buffer size in bytes." ), 
       Units ( "Bytes" )]
   uint64 ReadBufferSize;

      [Description ( "Write buffer size in bytes." ), 
       Units ( "Bytes" )]
   uint64 WriteBufferSize;

      [Description ( 
          "The remote ComputerSystem\'s (ie, the NFS File "
          "\'Server\'s) UDP port number." )]
   uint32 ServerCommunicationPort;

      [Description ( 
          "If set to true: Control attribute caching is enabled. \n"
          "If set to false: Control attribute caching is disabled." )]
   boolean AttributeCaching;

      [Description ( 
          "Minimum number of seconds that cached attributes are "
          "held after file modification." ), 
       Units ( "Seconds" )]
   uint16 AttributeCachingForRegularFilesMin;

      [Description ( 
          "Maximum number of seconds that cached attributes are "
          "held after file modification." ), 
       Units ( "Seconds" )]
   uint16 AttributeCachingForRegularFilesMax;

      [Description ( 
          "Minimum number of seconds that cached attributes are "
          "held after directory update." ), 
       Units ( "Seconds" )]
   uint16 AttributeCachingForDirectoriesMin;

      [Description ( 
          "Maximum number of seconds that cached attributes are "
          "held after directory update." ), 
       Units ( "Seconds" )]
   uint16 AttributeCachingForDirectoriesMax;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OperationLog 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::System::Logs" ), 
    Description ( 
       "CIM_OperationLog is a specialization of the "
       "CIM_UseOfMessageLog association that identifies a reproducible "
       "record of operations for a LogicalElement." )]
class CIM_OperationLog : CIM_UseOfMessageLog {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Log containing reproducible operations for the "
          "associated LogicalElement." )]
   CIM_MessageLog REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The LogicalElement for the associated OperationLog." )]
   CIM_LogicalElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSProcess 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "A link between the OperatingSystem and Process(es) running in "
       "the context of this OperatingSystem." )]
class CIM_OSProcess : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The OperatingSystem." )]
   CIM_OperatingSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "The Process running in the context of the OperatingSystem."
           )]
   CIM_Process REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ParticipatingCS 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A Cluster is composed of two or more ComputerSystems, "
       "operating together. A ComputerSystem may participate in "
       "multiple Clusters. \n"
       "\n"
       "When first establishing or bringing up a Cluster, only one "
       "ComputerSystem may be defined as participating in it. "
       "Therfore, the cardinality of the association for the "
       "ComputerSystem reference is Min (1)." )]
class CIM_ParticipatingCS : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The ComputerSystem which participates in the Cluster." )]
   CIM_ComputerSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The Cluster." )]
   CIM_Cluster REF Dependent;

      [Description ( 
          "StateOfNode indicates the condition of the participating "
          "ComputerSystem in the Cluster. For example, one value is "
          "\"Joining\" (2)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
       Values { "Unknown", "Other", "Joining", "Paused", 
          "Available", "Unavailable", "Degraded" }]
   uint16 StateOfNode;

      [Description ( 
          "RoleOfNode indicates whether the Cluster nodes are peers "
          "(value = 2), connected in a master-slave/primary- "
          "secondary relationship (values = 3 for primary, 4 for "
          "secondary), available in a standby configuration (5) or "
          "of some other (1) or unknown (0) relationship. In a "
          "System/390 environment, the nodes are identified as "
          "\"Base Plex\" (value=6) or \"Enhanced Plex\" (value=7)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7" }, 
       Values { "Unknown", "Other", "Peer", "Primary", "Secondary", 
          "Standby", "Base Plex", "Enhanced Plex" }]
   uint16 RoleOfNode;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PortResource 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "Since the MemoryMappedIO class applies to memory AND port "
       "resources, there is the potential for key conflict. For "
       "example, both a memory resource and a port resource may be "
       "located at address 0. Since StartingAddress is the "
       "distinguishing key of MemoryMappedIO, two instances would be "
       "created with the same key. This is prevented by defining "
       "memory and port resource subclasses of MemoryMappedIO, and "
       "allowing the CreationClassName key property to distinguish "
       "between them and force uniqueness in their keys." )]
class CIM_PortResource : CIM_MemoryMappedIO {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProcessThread 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::Processing" ), 
    Description ( 
       "A link between a Process and the Thread(s) running in the "
       "context of this Process." )]
class CIM_ProcessThread : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Process." )]
   CIM_Process REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "The Thread running in the context of the Process." )]
   CIM_Thread REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ResourceOfSystem 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.2" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between a System and a SystemResource that "
       "exists and is allocated in the context of the System." )]
class CIM_ResourceOfSystem : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The System in whose context the Resource exists and is allocated."
           )]
   CIM_System REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "A Resource of the System." )]
   CIM_SystemResource REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SystemPartition 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::SystemElements" ), 
    Description ( 
       "A Partition is an instance of a UnitaryComputerSystem (with "
       "its own OperatingSystem and Devices dedicated to the "
       "Partition) that is supported by underlying hardware and "
       "software. A Partition is not a virtualization of a Computer "
       "System, but the segmentation of the System\'s compute "
       "capabilities. Partitions can run independent copies of "
       "possibly different OperatingSystems and have dedicated "
       "Devices. The \'real\', underlying System (perhaps a Cluster or "
       "another UnitaryComputerSystem) aggregates its Partitions. "
       "These semantics are described by the System Partition "
       "association." )]
class CIM_SystemPartition : CIM_ComponentCS {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The \'underlying\' ComputerSystem that hosts a Partition." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The System Partition." )]
   CIM_UnitaryComputerSystem REF PartComponent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "CIM_AccountManagementService creates, manages, and if "
       "necessary destroys Accounts on behalf of other "
       "SecuritySerices." )]
class CIM_AccountManagementService : CIM_SecurityService {


      [Description ( 
          "CreateAccount creates an Account on the specified "
          "ComputerSystem. Upon successful completion of the "
          "method, there shall be a newly created instance of "
          "CIM_Account associated through the CIM_AccountOnSystem "
          "association with the instance of ComputerSystem "
          "identified by the System parameter such that each "
          "property of the CIM_Account instance has the value of "
          "the corresponding property of the template instance "
          "specified by the AccountTemplate parameter and the "
          "CIM_Account instance is associated with this instance of "
          "CIM_AccountManagementService through the "
          "CIM_ServiceAffectsElement association.\n"
          "Instances of CIM_Identity may be created by the method "
          "and associated with the instance of CIM_Account through "
          "CIM_AssignedIdentity. If one or more instances of "
          "CIM_Identity are created, a reference to each shall be "
          "returned in the Identities parameter, otherwise the "
          "Identities parameter shall be NULL upon method "
          "completion." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Method Reserved", "Vendor Specific" }]
   uint32 CreateAccount(
         [Required, IN, Description ( 
             "The scoping ComputerSystem in which to create the Account."
              )]
      CIM_ComputerSystem REF System, 
         [Required, IN, Description ( 
             "AccountTemplate is a template for the desired "
             "Account to be created." ), 
          EmbeddedInstance ( "CIM_Account" )]
      string AccountTemplate, 
         [IN ( false ), OUT, Description ( 
             "Reference to the instance of CIM_Account created "
             "when the method returns a value of 0." )]
      CIM_Account REF Account, 
         [IN ( false ), OUT, Description ( 
             "Reference to the instances of CIM_Identity created "
             "when the method returns a value of 0. NULL if no "
             "such instances are created." )]
      CIM_Identity REF Identities[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthenticationService 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_AuthenticationService verifies users\' identities through "
       "some means. These services are decomposed into a subclass that "
       "provides credentials to users and a subclass that provides for "
       "the verification of the validity of a credential and, perhaps, "
       "the appropriateness of its use for access to target resources. "
       "The persistent state information used from one such "
       "verification to another is maintained in an instance of "
       "Identity class." )]
class CIM_AuthenticationService : CIM_SecurityService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizationService 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_AuthorizationService determines whether an Identity, "
       "established by an AuthorizationService, is permitted access to "
       "a resource or set of resources." )]
class CIM_AuthorizationService : CIM_SecurityService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthorizedUse 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AccessControl" ), 
    Description ( 
       "CIM_AuthorizedUse is an association used to provide an "
       "AuthorizationService with the AccessControlInformation it "
       "needs to do its job. This association is deprecated with no "
       "proposed replacement, since authorization processing will be "
       "handled via policy or static checking of Privileges." )]
class CIM_AuthorizedUse : CIM_Dependency {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Description ( "Access Control Information." )]
   CIM_AccessControlInformation REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Description ( "AuthorizationService that uses an ACI." )]
   CIM_AuthorizationService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CredentialManagementService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_CredentialManagementService issues credentials and manages "
       "the credential lifecycle." )]
class CIM_CredentialManagementService : CIM_AuthenticationService {


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "A service supporting the creation and management of CIM_Identities ."
        )]
class CIM_IdentityManagementService : CIM_AuthenticationService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_KerberosKeyDistributionCenter 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Kerberos" ), 
    Description ( "The Kerberos KDC." )]
class CIM_KerberosKeyDistributionCenter : CIM_CredentialManagementService {

      [Override ( "Name" ), 
       Description ( "The Realm served by this KDC." )]
   string Name;

      [Description ( 
          "The version of Kerberos supported by this service." ), 
       ValueMap { "0", "1", "2", "3" }, 
       Values { "V4", "V5", "DCE", "MS" }]
   uint16 Protocol[];


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    ClassConstraint { 
       "/* The constraints below aim to efficiently */  /* represent a singular OctetString. Each of the properties*/  /* is a single encoded string, thus only the first element */  /* needs to be populated. */ inv:self.ImportPublicPrivateKeyPair.PublicKey->size()=1 and self.ImportPublicPrivateKeyPair.PrivateKey->size()=1" }, 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_KeyBasedCredentialManagementService manages key based "
       "credentials such as symmetric and assymetric key pairs and "
       "certificates. It also manages the infrustracture necessary for "
       "the key based credentials such as key repositories." )]
class CIM_KeyBasedCredentialManagementService : CIM_CredentialManagementService {


      [Description ( 
          "This method is called to request an import of "
          "public/private key pair. The method is used when "
          "assymetric private/public keys are generated elsewhere "
          "but are required by the managed system for creation of "
          "Certificate Signing Requests (CSRs) or self-signed "
          "certificates or any other key based credentials. Upon "
          "the successful execution, the PPKPCredential shall be "
          "the reference to the CIM_UnsignedCredential instance "
          "representing the private/public key pair. The "
          "CIM_UnsignedCredential instance shall be associated "
          "through CIM_MemberOfCollection association with the "
          "instance of CIM_Keystore referenced by the Keystore "
          "parameter, and shall be associated through the "
          "CIM_AffectsElement association with the method "
          "invocation instance of "
          "CIM_KeyBasedCredentialManagementService." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 ImportPublicPrivateKeyPair(
         [Required, IN, Description ( 
             "The DER-encoded raw public key.Only the first "
             "element of the array property shall be populated." ), 
          OctetString]
      string PublicKey[], 
         [Required, IN, Description ( 
             "The DER-encoded raw private key.Only the first "
             "element of the array property shall be populated." ), 
          OctetString]
      string PrivateKey[], 
         [Required, IN, Description ( 
             "The reference to the CIM_Keystore instance "
             "representing the key store, which the "
             "public/private key pair is imported in to." )]
      CIM_Keystore REF Keystore, 
         [IN, Description ( 
             "The managed element that represents the user or "
             "owner or the scoping element of the certificate. "
             "Such managed element could be the web service that "
             "owns the certificate or uses it for verification "
             "or account that the certificate is scoped to." )]
      CIM_ManagedElement REF CredentialContext, 
         [IN, Description ( 
             "The usage of the certificate by the managed "
             "element that the certificate is for or is scoped "
             "to." ), 
          ValueMap { "2", "3", "4", "6", "7", "8", "..", 
             "32768..65535" }, 
          Values { "Owned", "Trusted", 
             "Trusted for Authentication", 
             "Trusted for Authorization", 
             "Trusted for Authentication/Authorization", 
             "Trusted for Third-Party Authentication/Authorization", 
             "DMTF Reserved", "Vendor Reserved" }, 
          ModelCorrespondence { "CIM_CredentialContext.Usage" }]
      uint16 Usage, 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If method returns 4096 - Job Started, "
             "then this parameter shall not be NULL." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "The PPKPCredential output parameter references the "
             "instance of CIM_UnsignedCredential that represents "
             "the public/private key pair." )]
      CIM_UnsignedCredential REF PPKPCredential);

      [Description ( 
          "This method is called to request a creation of a "
          "keystore repository to be used for storage of the key "
          "based credentials. Upon the successful execution, the "
          "NewKeystore parameter shall reference to the newly "
          "created instance of CIM_Keystore. The property values of "
          "the newly created instance of the CIM_Keystore shall "
          "match all the non-null, non-key properties of the "
          "Keystore parameter embedded instance. The newly created "
          "CIM_Keystore instance shall be associated to the "
          "instance CIM_System referenced by the OwningSystem "
          "parameter using CIM_OwningCollectionElement association, "
          "shall be associated with the "
          "CIM_KeyBasedCredentialManagementService instance using "
          "the CIM_ServiceAffectsElement association, and shall be "
          "associated to the instances of CIM_Service referenced in "
          "the KeystoreUtilizers using CIM_Dependency association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 CreateKeystore(
         [Required, IN, Description ( 
             "The Keystore parameter contains the desired "
             "CIM_Keystore instance. The embedded instance shall "
             "contain the ElementName and Usage properties." ), 
          EmbeddedInstance ( "CIM_Keystore" )]
      string Keystore, 
         [Required, IN, Description ( 
             "The OwningSystem parameter references to the "
             "desired CIM_System instance that represents the "
             "owning managed system for the keystore." )]
      CIM_System REF OwningSystem, 
         [IN, Description ( 
             "The KeystoreUtilizers parameter contains an array "
             "of references to the instances of ManagedElement "
             "that represent the managed element that would "
             "utilize the keystore. Such services could be web "
             "services or protocol services that utilize the "
             "credentials stored in the keystore for the "
             "identity verification purposes." )]
      CIM_ManagedElement REF KeystoreUtilizers[], 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If method returns 4096 - Job Started, "
             "then this parameter shall not be NULL." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "The NewKeystore output parameter references the "
             "instance of CIM_Keystore that represents the newly "
             "created keystore repository." )]
      CIM_Keystore REF NewKeystore);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LocalCredentialManagementService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_LocalCredentialManagementService is a credential "
       "management service that provides management of credentials "
       "used by the local system." )]
class CIM_LocalCredentialManagementService : CIM_CredentialManagementService {


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ManagedCredential 
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAffectsElement" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::Credential" ), 
    Description ( 
       "This relationship associates a CredentialManagementService "
       "with the Credential it manages." )]
class CIM_ManagedCredential : CIM_Dependency {

      [Deprecated { "CIM_ServiceAffectsElement.AffectingElement" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The credential management service." )]
   CIM_CredentialManagementService REF Antecedent;

      [Deprecated { "CIM_ServiceAffectsElement.AffectedElement" }, 
       Override ( "Dependent" ), 
       Description ( "The managed credential." )]
   CIM_Credential REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ManagesAccount 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "This relationship associates the AccountManagement security "
       "service to the Accounts for which it is responsible." )]
class CIM_ManagesAccount : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The account management service." )]
   CIM_AccountManagementService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "An account managed by the service." )]
   CIM_Account REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Notary 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "CIM_Notary is an AuthenticationService which compares the "
       "biometric characteristics of a person with known "
       "characteristics, to establish identity. An example is a bank "
       "teller who compares a picture ID with the person trying to "
       "cash a check, or a biometric login service that uses voice "
       "recognition to identify a \'user\'." )]
class CIM_Notary : CIM_CredentialManagementService {

      [Description ( 
          "The types of biometric information which this Notary can compare."
           ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "N/A", "Other", "Facial", "Retina", "Mark", 
          "Finger", "Voice", "DNA-RNA", "EEG" }]
   uint16 Comparitors;

      [Description ( 
          "The SealProtocol is how the decision of the Notary is "
          "recorded for future use by parties who will rely on its "
          "decision. For instance, a drivers licence frequently "
          "includes tamper-resistent coatings and markings to "
          "protect the recorded decision that a driver, having "
          "various biometric characteristics of height, weight, "
          "hair and eye color, using a particular name, has "
          "features represented in a photograph of their face." )]
   string SealProtocol;

      [Description ( 
          "CharterIssued documents when the Notary is first "
          "authorized, by whoever gave it responsibility, to "
          "perform its service." )]
   datetime CharterIssued;

      [Description ( 
          "CharterExpired documents when the Notary is no longer "
          "authorized, by whoever gave it responsibility, to "
          "perform its service." )]
   datetime CharterExpired;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NotaryVerifiesBiometric 
// ==================================================================
   [Association, Deprecated { "CIM_ManagedCredential" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::UsersAccess" ), 
    Description ( 
       "This relationship associates a Notary service with the Users "
       "Access whose biometric information is verified. It is "
       "deprecated since one of its references (UsersAccess) is "
       "deprecated, and because specific biometric credentials are "
       "defined in a new subclass of CIM_Credential (specifically, "
       "BiometricCredential). Given the latter, the relationship of a "
       "Credential to its management service (ManagedCredential) can "
       "be used directly." )]
class CIM_NotaryVerifiesBiometric : CIM_Dependency {

      [Deprecated { "CIM_ManagedCredential.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "The Notary service that verifies biometric information." )]
   CIM_Notary REF Antecedent;

      [Deprecated { "CIM_ManagedCredential.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The UsersAccess that represents a person using biometric "
          "information for authentication." )]
   CIM_UsersAccess REF Dependent;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.20.0" ), 
    UMLPackagePath ( "CIM::User::PrivilegeManagementService" ), 
    Description ( 
       "The PrivilegeManagementService is responsible for creating, "
       "deleting, and associating AuthorizedPrivilege instances. "
       "References to \'subject\' and \'target\' define the entities "
       "that are associated with an AuthorizedPrivilege instance via "
       "the relationships, AuthorizedSubject and AuthorizedTarget, "
       "respectively. When created, an AuthorizedPrivilege instance is "
       "related to this (PrivilegeManagement)Service via the "
       "association, ConcreteDependency." )]
class CIM_PrivilegeManagementService : CIM_AuthorizationService {


      [Description ( 
          "When this method is called, a provider updates the "
          "specified Subject\'s rights to the Target according to "
          "the parameters of this call. The rights are modeled via "
          "an AuthorizedPrivilege instance. If an "
          "AuthorizedPrivilege instance is created as a result of "
          "this call, it MUST be linked to the Subject and Target "
          "via the AuthorizedSubject and AuthorizedTarget "
          "associations, respectively. When created, the "
          "AuthorizedPrivilege instance is associated to this "
          "PrivilegeManagementService via ConcreteDependency. If "
          "the execution of this call results in no rights between "
          "the Subject and Target, then they MUST NOT be linked to "
          "a particular AuthorizedPrivilege instance via "
          "AuthorizedSubject and AuthorizedTarget respectively. \n"
          "\n"
          "Note that regardless of whether specified via parameter, "
          "or template, the Activities, ActivityQualifiers and "
          "QualifierFormats, are mutually indexed. Also note that "
          "Subject and Target references MUST be supplied. \n"
          "\n"
          "The successful completion of the method SHALL create any "
          "necessary AuthorizedSubject, AuthorizedTarget, "
          "AuthorizedPrivilege, HostedDependency, and "
          "ConcreteDependency instances." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..15999", "16000", 
          "16001", "16002", "16003", "16004", "16005..31999", 
          "32000..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Unsupported Subject", "Unsupported Privilege", 
          "Unsupported Target", "Authorization Error", 
          "NULL not supported", "Method Reserved", "Vendor Specific" }]
   uint32 AssignAccess(
         [Required, IN, Description ( 
             "The Subject parameter is a reference to a "
             "ManagedElement instance. This parameter MUST be "
             "supplied." )]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "MUST be NULL unless Privilege is NULL on input. "
             "The PrivilegeGranted flag indicates whether the "
             "rights defined by the parameters in this call "
             "should be granted or denied to the named "
             "Subject/Target pair." ), 
          ModelCorrespondence { 
             "CIM_AuthorizedPrivilege.PrivilegeGranted", 
             "CIM_PrivilegeManagementService.AssignAccess.Privilege" }]
      boolean PrivilegeGranted, 
         [IN, Description ( 
             "MUST be NULL unless the Privilege is NULL on "
             "input. This parameter specifies the activities to "
             "be granted or denied." ), 
          ValueMap { "1", "2", "3", "4", "5", "6", "7", "..", 
             "16000..65535" }, 
          Values { "Other", "Create", "Delete", "Detect", "Read", 
             "Write", "Execute", "DMTF Reserved", 
             "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_AuthorizedPrivilege.Activities", 
             "CIM_PrivilegeManagementService.AssignAccess.Privilege" }]
      uint16 Activities[], 
         [IN, Description ( 
             "MUST be NULL unless Privilege is NULL on input. "
             "This parameter defines the activity qualifiers for "
             "the Activities to be granted or denied." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_AuthorizedPrivilege.ActivityQualifers", 
             "CIM_PrivilegeManagementService.AssignAccess.Privilege" }]
      string ActivityQualifiers[], 
         [IN, Description ( 
             "MUST be NULL unless Privilege is NULL on input. "
             "This parameter defines the qualifier formats for "
             "the corresponding ActivityQualifiers." ), 
          ValueMap { "2", "3", "4", "5", "6", "7", "8", "9", 
             "10..15999", "16000..65535" }, 
          Values { "Class Name", "<Class.>Property", 
             "<Class.>Method", "Object Reference", "Namespace", 
             "URL", "Directory/File Name", 
             "Command Line Instruction", "DMTF Reserved", 
             "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_AuthorizedPrivilege.QualifierFormats", 
             "CIM_PrivilegeManagementService.AssignAccess.Privilege" }]
      uint16 QualifierFormats[], 
         [Required, IN, Description ( 
             "The Target parameter is a reference to an instance "
             "of ManagedElement. This parameter MUST be "
             "supplied." )]
      CIM_ManagedElement REF Target, 
         [IN, OUT, Description ( 
             "On input, this reference MUST be either NULL or "
             "refer to an instance of AuthorizedPrivilege that "
             "is used as a template. The rights granted by "
             "corresponding entries in the Activities, "
             "ActivityQualifiers and QualifierFormats array "
             "properties are applied incrementally and do not "
             "affect unnamed rights. If the property, "
             "PrivilegeGranted, is false, then the named rights "
             "are removed. If PrivilegeGranted is True, then the "
             "named rights are added. (Note that the "
             "RemoveAccess method SHOULD be used to completely "
             "remove all privileges between a subject and a "
             "target. On output, this property references an "
             "AuthorizedPrivilege instance that represents the "
             "resulting rights between the named Subject and the "
             "named Target. AuthorizedPrivilege instances used "
             "as a templates in this property SHOULD have a "
             "HostedDependency association to the "
             "PriviligeManagementService and SHOULD NOT have any "
             "AuthorizedTarget or AuthorizedSubject associations "
             "to it." )]
      CIM_AuthorizedPrivilege REF Privilege);

      [Description ( 
          "This method revokes a specific AuthorizedPrivilege or "
          "all privileges for a particular target, subject, or "
          "subject/target pair. If an AuthorizedPrivilege instance "
          "is left with no AuthorizedTarget associations, it SHOULD "
          "be deleted. The successful completion of the method "
          "SHALL remove the directly or indirectly requested "
          "AuthorizedSubject, AuthorizedTarget and "
          "AuthorizedPrivilege instances." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..15999", "16000", 
          "16001", "16002", "16003", "16004..32767", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Unsupported Privilege", "Unsupported Target", 
          "Authorization Error", "Null parameter not supported", 
          "Method Reserved", "Vendor Specific" }]
   uint32 RemoveAccess(
         [IN, Description ( 
             "The Subject parameter is a reference to a "
             "ManagedElement instance (associated via "
             "AuthorizedSubject) for which privileges are to be "
             "revoked." )]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "A reference to the AuthorizedPrivilege to be revoked."
              )]
      CIM_AuthorizedPrivilege REF Privilege, 
         [IN, Description ( 
             "The Target parameter is a reference to a "
             "ManagedElement (associated via AuthorizedTarget) "
             "which will no longer be protected via the "
             "AuthorizedPrivilege." )]
      CIM_ManagedElement REF Target);

      [Description ( 
          "ShowAccess reports the Privileges (i.e., rights) granted "
          "to a particular Subject and/or Target pair. Either a "
          "Subject, a Target or both MUST be specified. In the case "
          "where only one is specified, the method will return all "
          "rights to all Targets for the specified Subject, or all "
          "rights for all subjects which apply to the specified "
          "Target. \n"
          "\n"
          "ShowAccess returns the cumulative rights granted between "
          "the OutSubjects and OutTargets at the same array index "
          "(filtered to return the information that the requestor "
          "is authorized to view). If a specific array entry is "
          "NULL, then there exist NO rights that the requestor is "
          "authorized to view between the Subject/Target pair. \n"
          "\n"
          "Note that the Privileges returned by this method MAY NOT "
          "correspond to what is actually instantiated in the "
          "model, and MAY be optimized for ease of reporting. "
          "Hence, the data is passed \'by value\', as embedded "
          "objects. Also, note that multiple Privileges MAY be "
          "defined for a given Subject/Target pair. \n"
          "\n"
          "Other mechanisms MAY also be used to retrieve this "
          "information. CIM Operations\' EnumerateInstances MAY be "
          "used to return all Privileges currently instantiated "
          "within a namespace. Also, if the AuthorizedPrivilege "
          "subclass is instantiated, the CIM Operation Associators "
          "MAY be used to navigate from the Privilege to "
          "AuthorizedSubjects and AuthorizedTargets. These CIM "
          "Operations will not generally provide the functionality "
          "or optimizations available with ShowAccess." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "16000", 
          "16002", "16003", "16004", "16005..31999", "32000..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Unsupported Subject", "Unsupported Target", 
          "Authorization Error", "NULL not supported", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ShowAccess(
         [IN, Description ( 
             "The Subject parameter references an instance of "
             "ManagedElement. The result of this operation is "
             "that the cumulative rights of the Subject to "
             "access or define authorization rights for the "
             "Target will be reported. If no Subject is "
             "specified, then a Target MUST be supplied and ALL "
             "Subjects that have rights to access or define "
             "authorizations for the Target will be reported. "
             "(It should be noted that the information reported "
             "MUST be filtered by the rights of the requestor to "
             "view that data.) If the Subject element is a "
             "Collection, then the operation will specifically "
             "report the Privileges for all elements associated "
             "to the Collection via MemberOfCollection. These "
             "elements will be reported individually in the "
             "returned OutSubjects array." ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.Target" }]
      CIM_ManagedElement REF Subject, 
         [IN, Description ( 
             "The Target parameter references an instance of "
             "ManagedElement. The result of this operation is "
             "that the cumulative rights of the Subject to "
             "access or define authorization rights for the "
             "Target will be reported. If no Target is "
             "specified, then a Subject MUST be supplied and ALL "
             "Targets for which that the Subject has rights to "
             "access or define authorization will be reported. "
             "(It should be noted that the information reported "
             "MUST be filtered by the rights of the requestor to "
             "view that data.) If the Target element is a "
             "Collection, then the operation will be applied to "
             "all elements associated to the Collection via "
             "MemberOfCollection. These elements will be "
             "reported individually in the returned OutTargets "
             "array." ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.Subject" }]
      CIM_ManagedElement REF Target, 
         [IN ( false ), OUT, Description ( 
             "The array of Subject REFs corresponding to the "
             "individual Privileges and OutTargets arrays. The "
             "resulting OutSubjects, Privileges and OutTargets "
             "arrays define the cumulative rights granted "
             "between the Subject/Target at the corresponding "
             "index (filtered to return the information that the "
             "requestor is authorized to view)." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.Subject", 
             "CIM_PrivilegeManagementService.ShowAccess.Privileges", 
             "CIM_PrivilegeManagementService.ShowAccess.OutTargets" }]
      CIM_ManagedElement REF OutSubjects[], 
         [IN ( false ), OUT, Description ( 
             "The array of Target REFs corresponding to the "
             "individual Privileges and OutSubjects arrays. The "
             "resulting OutSubjects, Privileges and OutTargets "
             "arrays define the cumulative rights granted "
             "between the Subject/Target at the corresponding "
             "index (filtered to return the information that the "
             "requestor is authorized to view)." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.Target", 
             "CIM_PrivilegeManagementService.ShowAccess.Privileges", 
             "CIM_PrivilegeManagementService.ShowAccess.OutSubjects" }]
      CIM_ManagedElement REF OutTargets[], 
         [IN ( false ), OUT, Description ( 
             "The returned Privilege objects represent the "
             "cumulative rights granted between the OutSubjects "
             "and OutTargets at the same array index (filtered "
             "to return the information that the requestor is "
             "authorized to view). If a specific array entry is "
             "NULL, then there exist NO rights that the "
             "requestor is authorized to view between the "
             "Subject/Target pair." ), 
          EmbeddedObject, ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.OutTargets", 
             "CIM_PrivilegeManagementService.ShowAccess.OutSubjects" }]
      string Privileges[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PublicKeyManagementService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "CIM_PublicKeyManagementService is a credential management "
       "service that provides local system management of public keys "
       "used by the local system." )]
class CIM_PublicKeyManagementService : CIM_LocalCredentialManagementService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RequireCredentialsFrom 
// ==================================================================
   [Association, Deprecated { "CIM_AuthenticationCondition", 
       "CIM_AuthenticationRule" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AuthenticationReqmt" ), 
    Description ( 
       "CIM_RequireCredentialsFrom is an association used to require "
       "that credentials are issued by particular CredentialManagement "
       "Services in order to authenticate a user. This association is "
       "deprecated in lieu of explicit declaration of the "
       "AuthenticationConditions in an AuthenticationRule. Instances "
       "of AuthenticationCondition describe the specific combinations "
       "of credentials (or alternative credentials) that are required "
       "to authenticate an Identity. This allows a more explicit and "
       "flexible description of authentication requirements." )]
class CIM_RequireCredentialsFrom : CIM_Dependency {

      [Deprecated { "CIM_AuthenticationCondition" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "CredentialManagementService from which credentials are "
          "accepted for the associated AuthenticationRequirement." )]
   CIM_CredentialManagementService REF Antecedent;

      [Deprecated { "CIM_AuthenticationRule" }, 
       Override ( "Dependent" ), 
       Description ( 
          "AuthenticationRequirement that limits acceptable credentials."
           )]
   CIM_AuthenticationRequirement REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.26.0" ), 
    UMLPackagePath ( "CIM::User::Role" ), 
    Description ( 
       "The CIM_RoleBasedAuthorizationService class represents the "
       "authorization service that manages and configures roles on a "
       "managed system. The CIM_RoleBasedAuthorizationService is "
       "responsible for creating, and deleting CIM_Role instances. "
       "Privileges of the roles are represented through the "
       "instance(s) of CIM_Privilege class associated to CIM_Role "
       "instances through the CIM_MemberOfCollection association. As a "
       "result of creating, and deleting CIM_Role instances the "
       "CIM_Privilege instances can also be affected. The limiting "
       "scope of the role is determined by the CIM_RoleLimitedToTarget "
       "association." )]
class CIM_RoleBasedAuthorizationService : CIM_PrivilegeManagementService {


      [Description ( 
          "AssignRoles() removes a security principal from any "
          "Rolesto which it currently belongs and assigns it to the "
          "Roles identified by the Roles[] parameter. Upon "
          "successful completion of the method, the instance of "
          "CIM_Identity identified by the Identity parameter shall "
          "be associated to each Role referenced by the Roles "
          "parameter through the CIM_MemberOfCollection association "
          "and shall not be associated to an instance of CIM_Role "
          "unless a reference to it is contained in the Roles "
          "parameter." ), 
       ValueMap { "0", "1", "2", "..", "32000..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 AssignRoles(
         [Required, IN, Description ( 
             "The Identity instance representing the security "
             "principalwhose role membership is being modified." )]
      CIM_Identity REF Identity, 
         [Required, IN, Description ( 
             "The set of Roles to which the Identity will be "
             "associated through CIM_MemberOfCollection.If the "
             "Roles parameter is an empty array, then the "
             "successful execution of the method will unassign "
             "all the roles from the identity represented by the "
             "Identity parameter." )]
      CIM_Role REF Roles[]);

      [Description ( 
          "ModifyRole method modifies the privileges and the scope "
          "of the specified instance of the targeted CIM_Role "
          "instance. The call may result in the creation, deletion, "
          "or modification of CIM_Privilege instances. The call may "
          "result in the creation and deletion of "
          "CIM_RoleLimitedTarget association instances." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32000..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "Inappropriate Privilege", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 ModifyRole(
         [IN, Description ( 
             "Privileges parameter represents the desired "
             "privileges for the targeted role. When this "
             "parameter is non-null, upon successful completion "
             "of the method, the instances of CIM_Privilege "
             "associated with the targeted CIM_Role instance "
             "shall convey equivalent privileges as those "
             "indicated by the specified embedded CIM_Privilege "
             "instances. The Privilege parameter is an array of "
             "elements of CIM_Privilege, encoded as a string "
             "valued embedded instance parameter. The embedded "
             "instances allow the client to convey the "
             "privileges desired for the targeted CIM_Role "
             "instance. The method may result in the creation, "
             "deletion, or modification of the CIM_Privilege "
             "instances. The rights indicated by a CIM_Privilege "
             "may be revoked by passing the embedded instance of "
             "CIM_Privilege with PrivilegeGranted property set "
             "to \"FALSE.\". When the parameter is null, the "
             "privileges for the CIM_Role shall not be modified." ), 
          EmbeddedInstance ( "CIM_Privilege" )]
      string Privileges[], 
         [IN, Description ( 
             "RoleLimitedToTargets parameter references all of "
             "the CIM_ManagedElement instances to which the role "
             "shall be limited. When this parameter is non-null, "
             "upon successful completion of the method, the "
             "targeted CIM_Role instanceshall be associated "
             "through the CIM_RoleLimitedToTarget association "
             "with only the specified instances of "
             "CIM_ManagedElement. This may result in the "
             "creation and deletion of instances of "
             "CIM_RoleLimitedToTarget. When this parameter is "
             "null, the set of instances of "
             "CIM_RoleLimitedToTarget that reference the "
             "targeted CIM_Role instance shall not be modified." )]
      CIM_ManagedElement REF RoleLimitedToTargets[], 
         [Required, IN, Description ( 
             "Role parameter is the reference to the targeted "
             "CIM_Role instance for which the privileges will be "
             "modified." )]
      CIM_Role REF Role);

      [Description ( 
          "ShowRoles reports the Privileges (i.e., rights) granted "
          "to a particular Subject, for a particular Target, or to "
          "a particular Subject for a particular Target through "
          "membership in, or scoping to instances of CIM_Role. The "
          "Subject parameter, Target parameter, or both shall be "
          "specified. \n"
          "When the Subject parameter is specified and the Target "
          "parameter is not specified, the method shall return all "
          "of Roles to which the subject is associated through "
          "CIM_MemberOfCollection. When Target parameter is "
          "specified and the Subject parameter is not specified, "
          "the method shall all instances of CIM_Role within whose "
          "scope the Target Parameter lies.\n"
          "When the Subject parameter and Target parameter are both "
          "specified, the method shall return an instance of "
          "CIM_Role if and only if the Subject Parameter is "
          "associated to the instance of CIM_Role through "
          "CIM_MemberOfCollection and the Target Parameter lies "
          "within the scope of the instance of CIM_Role.\n"
          "For each instance of CIM_Role returned in the Roles "
          "parameter, the corresponding index of the Privileges "
          "parameter may contain an instance of CIM_Privilege. The "
          "corresponding index of the Privileges parameter may be "
          "null when rights granted through a CIM_Role are not "
          "explicitly managed, or when there are not currently any "
          "instances of CIM_Privilege associated with the CIM_Role "
          "instance. When the corresponding index of of the "
          "Privileges parameter is non-null, the embedded instance "
          "of CIM_Privilege shall reflect the cumulative rights "
          "granted through membership in the Role. \n"
          "Each embedded instance of CIM_Role contained in the "
          "Roles parameter shall correspond to an instrumented "
          "instance of CIM_Role. Each embedded instance of "
          "CIM_Privilege contained in the Privileges parameter may "
          "correspond to an instance of CIM_Privilege associated to "
          "the corresponding instance of CIM_Role through the "
          "CIM_MemberOfCollection. However, this is not required. "
          "Embedded instances of CIM_Role are returned rather than "
          "References in order to simplify the query operation for "
          "clients. The properties of the instances of CIM_Role "
          "provide context to aid a client in selecting which "
          "instance(s) to modify in order to change the privileges "
          "of a Subject or for a Target." ), 
       ValueMap { "0", "1", "2", "..", "32000..65535" }, 
       Values { "Success", "Not Supported", "Failed", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ShowRoles(
         [IN, Description ( 
             "The Subject parameter identifies the instance of "
             "CIM_Identity whose containing instances of "
             "CIM_Role will be returned." )]
      CIM_Identity REF Subject, 
         [IN, Description ( 
             "The Target parameter identifies an instance of "
             "CIM_ManagedElement whose scoping instances of "
             "CIM_Role will be returned." )]
      CIM_ManagedElement REF Target, 
         [IN ( false ), OUT, Description ( 
             "The set of instances of CIM_Role filtered "
             "according to the Subject and Target parameters." ), 
          EmbeddedInstance ( "CIM_Role" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.Privileges" }]
      string Roles[], 
         [IN ( false ), OUT, Description ( 
             "The cumulative rights granted through membership "
             "in the instance of CIM_Role located at the same "
             "array index in the Roles parameter." ), 
          EmbeddedInstance ( "CIM_Privilege" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_PrivilegeManagementService.ShowAccess.Roles" }]
      string Privileges[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SecurityServiceForSystem 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "The CIM_SecurityServiceForSystem provides the association "
       "between a System and a SecurityService that provides services "
       "for that system. Examining the SecurityServiceForSystem class "
       "definition, note that its superclass ProvidesServiceToElement "
       "is deprecated. Unfortunately, ProvidesServiceToElement cannot "
       "be removed from the object hierarchy without a major Schema "
       "release. When/if this occurs, the ProvidesServiceToElement "
       "superclass will be removed, and SecurityServiceForSystem will "
       "subclass from CIM_Dependency directly." )]
class CIM_SecurityServiceForSystem : CIM_ProvidesServiceToElement {

      [Override ( "Antecedent" ), 
       Description ( 
          "The SecurityService that provides services for the system."
           )]
   CIM_SecurityService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The system that is dependent on the security service." )]
   CIM_System REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ServiceUsesSecurityService 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "This relationship associates a Service with the Security "
       "Services that it uses." )]
class CIM_ServiceUsesSecurityService : CIM_ServiceServiceDependency {

      [Override ( "Antecedent" )]
   CIM_SecurityService REF Antecedent;

      [Override ( "Dependent" )]
   CIM_Service REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SharedSecretService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SharedSecret" ), 
    Description ( 
       "CIM_SharedSecretService is a service which ascertains whether "
       "messages received are from the Principal with whom a secret is "
       "shared. Examples include a login service that proves identity "
       "on the basis of knowledge of the shared secret, or a transport "
       "integrity service (like Kerberos provides) that includes a "
       "message authenticity code that proves each message in the "
       "messsage stream came from someone who knows the shared secret "
       "session key." )]
class CIM_SharedSecretService : CIM_LocalCredentialManagementService {

      [Description ( 
          "The Algorithm used to convey the shared secret, such as "
          "HMAC-MD5,or PLAINTEXT." ), 
       MaxLen ( 256 )]
   string Algorithm;

      [Description ( 
          "The Protocol supported by the SharedSecretService." )]
   string Protocol;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="DMTFCR01299" type = "change"> Add iSCSI support to the enum of ID Types used for SCSI LUN Masking </change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_StorageHardwareIDManagementService 
// ==================================================================
   [Version ( "2.8.1000" ), 
    UMLPackagePath ( "CIM::User::StorageHardwareID" ), 
    Description ( 
       "StorageHardwareIDManagementService provides methods for "
       "manipulating instances of StorageHardwareIDs and manipulating "
       "the trust of these IDs in the underlying storage system." )]
class CIM_StorageHardwareIDManagementService : CIM_AuthenticationService {


      [Description ( 
          "This method creates a CIM_StorageHardwareID, it creates "
          "the association CIM_ConcreteDependency between this "
          "service and the new CIM_StorageHardwareID." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..0xFFF", 
          "0x1000", "0x1001", "0x1003..0x7FFF", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "ID already created", 
          "Hardware implementation does not support specified IDType", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateStorageHardwareID(
         [IN, Description ( 
             "The ElementName of the new StorageHardwareID instance."
              )]
      string ElementName, 
         [IN, Description ( 
             "StorageID is the value used by the SecurityService "
             "to represent Identity - in this case, a hardware "
             "worldwide unique name." )]
      string StorageID, 
         [IN, Description ( 
             "The type of the StorageID property. iSCSI IDs may "
             "use one of three iSCSI formats - iqn, eui, or naa. "
             "This three letter format is the name prefix; so a "
             "single iSCSI type is provided here, the prefix can "
             "be used to further refine the format." ), 
          ValueMap { "1", "2", "3", "4", "5" }, 
          Values { "Other", "PortWWN", "NodeWWN", "Hostname", 
             "iSCSI Name" }]
      uint16 IDType, 
         [IN, Description ( 
             "The type of the storage ID, when IDType is \"Other\"."
              )]
      string OtherIDType, 
         [IN, Description ( 
             "REF to the StorageClientSettingData containing the "
             "OSType appropriate for this initiator. If left "
             "NULL, the instrumentation assumes a standard "
             "OSType - i.e., that no OS-specific behavior for "
             "this initiator is defined." )]
      CIM_StorageClientSettingData REF Setting, 
         [IN ( false ), OUT, Description ( 
             "REF to the new StorageHardwareID instance." )]
      CIM_StorageHardwareID REF HardwareID);

      [Description ( 
          "This method deletes a named CIM_StorageHardwareID, and "
          "also tears down the associations that are no longer "
          "needed, including CIM_ConcreteDependency and "
          "CIM_AuthorizedSubject." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..0xFFF", 
          "0x1000", "0x1001..0x7FFF", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Specified instance not found", "Method Reserved", 
          "Vendor Specific" }]
   uint32 DeleteStorageHardwareID(
         [IN, Description ( 
             "The storage hardware ID to be deleted." )]
      CIM_StorageHardwareID REF HardwareID);

      [Description ( 
          "This method creates a CIM_GatewayPathID and the "
          "association CIM_ConcreteDependency between this service "
          "and the new GatewayPathID." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..0xFFF", 
          "0x1000", "0x1001", "0x1003", "0x1004", "0x1005..0x7FFF", 
          "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "ID already created", 
          "Hardware implementation does not support specified IDType", 
          "GatewayPathID already created", 
          "Hardware implementation does not support specified GatewayIDType", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateGatewayPathID(
         [IN, Description ( 
             "The ElementName of the new StorageHardwareID instance."
              )]
      string ElementName, 
         [IN, Description ( 
             "StorageID is the value used by the SecurityService "
             "to represent Identity - in this case, a hardware "
             "worldwide unique name." )]
      string StorageID, 
         [IN, Description ( 
             "The type of the StorageID property. iSCSI IDs may "
             "use one of three iSCSI formats - iqn, eui, or naa. "
             "This three letter format is the name prefix; so a "
             "single iSCSI type is provided here, the prefix can "
             "be used to further refine the format." ), 
          ValueMap { "1", "2", "3", "4", "5" }, 
          Values { "Other", "PortWWN", "NodeWWN", "Hostname", 
             "iSCSI Name" }]
      uint16 IDType, 
         [IN, Description ( 
             "The type of the storage ID, when IDType is \"Other\"."
              )]
      string OtherIDType, 
         [IN, Description ( 
             "GatewayID is the value used by the SecurityService "
             "to represent identity of a Gateway element." )]
      string GatewayID, 
         [IN, Description ( 
             "The type of the GatewayID property. iSCSI IDs may "
             "use one of three iSCSI formats - iqn, eui, or naa. "
             "This three letter format is the name prefix; so a "
             "single iSCSI type is provided here, the prefix can "
             "be used to further refine the format." ), 
          ValueMap { "1", "2", "3", "4", "5" }, 
          Values { "Other", "PortWWN", "NodeWWN", "Hostname", 
             "iSCSI Name" }]
      uint16 GatewayIDType, 
         [IN, Description ( 
             "The type of the storage ID, when GatewayIDType is \"Other\"."
              )]
      string OtherGatewayIDType, 
         [IN ( false ), OUT, Description ( 
             "REF to the new GatewayPathID instance." )]
      CIM_GatewayPathID REF NewGatewayPathID);

      [Description ( 
          "Create a group of StorageHardwareIDs as a new instance "
          "of SystemSpecificCollection. This is useful to define a "
          "set of authorized subjects that can access volumes in a "
          "disk array. This method allows the client to make a "
          "request of a specific Service instance to create the "
          "collection and provide the appropriate class name. When "
          "these capabilities are standardized in CIM/WBEM, this "
          "method can be deprecated and intrinsic methods used. In "
          "addition to creating the collection, this method causes "
          "the creation of the HostedCollection association (to "
          "this service\'s scoping system) and MemberOfCollection "
          "association to members of the IDs parameter." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..0xFFF", 
          "0x1000", "0x1001", "0x1002", "0x1003..0x7FFF", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Invalid HardwareID instance", 
          "Implementation does not support hardware ID collections", 
          "Input hardware IDs cannot be used in same collection", 
          "Method Reserved", "Vendor Specific" }]
   uint32 CreateHardwareIDCollection(
         [IN, Description ( 
             "The ElementName to be assigned to the created collection."
              )]
      string ElementName, 
         [IN, Description ( 
             "Array of strings containing representations of "
             "references to StorageHardwareID instances that "
             "will become members of the new collection." )]
      string HardwareIDs[], 
         [IN ( false ), OUT, Description ( 
             "The new instance of SystemSpecificCollection that is created."
              )]
      CIM_SystemSpecificCollection REF Collection);

      [Description ( 
          "Create MemberOfCollection instances between the "
          "specified Collection and the StorageHardwareIDs. This "
          "method allows the client to make a request of a specific "
          "Service instance to create the associations. When these "
          "capabilities are standardized in CIM/WBEM, this method "
          "can be deprecated and intrinsic methods used." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6..0xFFF", 
          "0x1000", "0x1001", "0x1002", "0x1003..0x7FFF", "0x8000.." }, 
       Values { "Success", "Not Supported", "Unspecified Error", 
          "Timeout", "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Invalid LogicalDevice instance", 
          "Implementation does not support device collections", 
          "Input devices cannot be used in this collection", 
          "Method Reserved", "Vendor Specific" }]
   uint32 AddHardwareIDsToCollection(
         [IN, Description ( 
             "Array of strings containing representations of "
             "references to StorageHardwareID instances that "
             "will become members of the collection." )]
      string HardwareIDs[], 
         [IN, Description ( 
             "The Collection which groups the StorageHardwareIDs." )]
      CIM_SystemSpecificCollection REF Collection);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TrustHierarchy 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_TrustHierarchy is an association between two "
       "CredentialManagementService instances that establishes the "
       "trust hierarchy between them." )]
class CIM_TrustHierarchy : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The superior CredentialManagementService from which the "
          "dependent service gets its authority." )]
   CIM_CredentialManagementService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The subordinate CredentialManagementService." )]
   CIM_CredentialManagementService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_VerificationService 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_VerificationService is the authentication service that "
       "verifies a credential for use and may also verify the "
       "appropriateness of a particular credential in conjunction with "
       "a particular target resource." )]
class CIM_VerificationService : CIM_AuthenticationService {


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "ArchitectureCheck specifies the hardware platform on which a "
       "SoftwareElement can run. The details of this Check are "
       "compared with the information found in the CIM_Processor "
       "object, related to the CIM_ComputerSystem instance that "
       "describes the environment (related by the association, "
       "CIM_ComputerSystemProcessor). There should be at least one "
       "CIM_Processor that satisfies the details of the Check. In "
       "other words, all the processors on the relevant computer "
       "system do not need to satisfy the Check." )]
class CIM_ArchitectureCheck : CIM_Check {

      [Description ( 
          "The ArchitectureType property identifies a particular "
          "type of architecture or architectural family that is "
          "required to properly execute a particular "
          "SoftwareElement. The intent is to capture the details "
          "about the machine instructions exploited by the "
          "executables of the SoftwareElement." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          // 11                   
          "11", "12", "13", "14", 
          "15", "16", "17", "18", "19", "20", "21", 
          // 24                   
          "24", "25", "26", "27", 
          "28", "29", "30", "31", "32", "33", "34", "35", "36", 
          "37", "38", "39", "40", "41", "42", "43", 
          // 48                   
          "48", "49", "50", "51", 
          "52", "53", "54", "55", "56", "57", "58", "59", "60", 
          "61", "62", // 64                   
          "64", "65", 
          "66", "67", "68", "69", "70", "71", "72", "73", 
          // 80                   
          "80", "81", "82", "83", 
          "84", "85", "86", "87", "88", 
          // 96                      
          "96", "97", "98", 
          "99", "100", "101", 
          // 112                   
          "112", "120", "121", 
          "122", "128", "130", "131", "132", "133", "134", 
          // 135
          "135", "136", "137", "138", "139", "140", 
          "141", "142", "143", 
          // 144                      
          "144", "145", 
          "146", "147", "148", "149", "150", 
          // 160                      
          "160", "161", 
          "162", "163", "164", "165", "166", "167", "168", "169", 
          // 170
          "170", "171", "172", "173", "174", "175", 
          "176", "177", "178", "179", // 180
          "180", "181", 
          "182", "183", "184", "185", "186", "187", "188", "189", 
          // 190                   
          "190", "191", "192", 
          "193", "194", "195", "196", "197", "198", "199", 
          // 200                   
          "200", "201", "202", 
          "203", "204", "205", "206", // 210
          "210", "211", 
          "212", "213", "214", "215", "216", "217", "218", "219", 
          // 220
          "221", "222", "223", "224", 
          // 230 
          "230", "231", "232", "233", "234", 
          "235", "236", "237", "238", "239", 
          // 250                 
          "250", "251", "254", 
          "255", "260", "261", "280", "281", 
          // 300                 
          "300", "301", "302", 
          "320", "350", "500", 
          // 65534                 
          "65534", "65535" }, 
       Values { "Other", "Unknown", "8086", "80286", "80386", 
          "80486", "8087", "80287", "80387", "80487", 
          // 11                     
          "Pentium(R) brand", 
          "Pentium(R) Pro", "Pentium(R) II", 
          "Pentium(R) processor with MMX(TM) technology", 
          "Celeron(TM)", "Pentium(R) II Xeon(TM)", "Pentium(R) III", 
          "M1 Family", "M2 Family", 
          "Intel(R) Celeron(R) M processor", 
          "Intel(R) Pentium(R) 4 HT processor", 
          // 24                    
          "K5 Family", 
          "K6 Family", "K6-2", "K6-3", 
          "AMD Athlon(TM) Processor Family", 
          "AMD(R) Duron(TM) Processor", "AMD29000 Family", 
          // 31                    
          "K6-2+", 
          "Power PC Family", "Power PC 601", "Power PC 603", 
          "Power PC 603+", "Power PC 604", "Power PC 620", 
          "Power PC X704", "Power PC 750", 
          "Intel(R) Core(TM) Duo processor", 
          "Intel(R) Core(TM) Duo mobile processor", 
          "Intel(R) Core(TM) Solo mobile processor", 
          "Intel(R) Atom(TM) processor", 
          // 48                     
          "Alpha Family", 
          "Alpha 21064", "Alpha 21066", "Alpha 21164", 
          "Alpha 21164PC", "Alpha 21164a", "Alpha 21264", 
          "Alpha 21364", 
          // 56
          "AMD Turion(TM) II Ultra Dual-Core Mobile M Processor Family", 
          "AMD Turion(TM) II Dual-Core Mobile M Processor Family", 
          "AMD Athlon(TM) II Dual-Core Mobile M Processor Family", 
          "AMD Opteron(TM) 6100 Series Processor", 
          "AMD Opteron(TM) 4100 Series Processor", 
          "AMD Opteron(TM) 6200 Series Processor", 
          "AMD Opteron(TM) 4200 Series Processor", 
          // 64                     
          "MIPS Family", 
          "MIPS R4000", "MIPS R4200", "MIPS R4400", "MIPS R4600", 
          "MIPS R10000", "AMD C-Series Processor", 
          "AMD E-Series Processor", "AMD S-Series Processor", 
          "AMD G-Series Processor", 
          // 80                     
          "SPARC Family", 
          "SuperSPARC", "microSPARC II", "microSPARC IIep", 
          "UltraSPARC", "UltraSPARC II", "UltraSPARC IIi", 
          "UltraSPARC III", "UltraSPARC IIIi", 
          // 96                     
          "68040", 
          "68xxx Family", "68000", "68010", "68020", "68030", 
          // 112                     
          "Hobbit Family", 
          "Crusoe(TM) TM5000 Family", "Crusoe(TM) TM3000 Family", 
          "Efficeon(TM) TM8000 Family", "Weitek", 
          "Itanium(TM) Processor", 
          "AMD Athlon(TM) 64 Processor Family", 
          "AMD Opteron(TM) Processor Family", 
          "AMD Sempron(TM) Processor Family", 
          "AMD Turion(TM) 64 Mobile Technology", 
          // 135                   
          "Dual-Core AMD Opteron(TM) Processor Family", 
          "AMD Athlon(TM) 64 X2 Dual-Core Processor Family", 
          "AMD Turion(TM) 64 X2 Mobile Technology", 
          "Quad-Core AMD Opteron(TM) Processor Family", 
          "Third-Generation AMD Opteron(TM) Processor Family", 
          "AMD Phenom(TM) FX Quad-Core Processor Family", 
          "AMD Phenom(TM) X4 Quad-Core Processor Family", 
          "AMD Phenom(TM) X2 Dual-Core Processor Family", 
          "AMD Athlon(TM) X2 Dual-Core Processor Family", 
          // 144                     
          "PA-RISC Family", 
          "PA-RISC 8500", "PA-RISC 8000", "PA-RISC 7300LC", 
          "PA-RISC 7200", "PA-RISC 7100LC", "PA-RISC 7100", 
          // 160                     
          "V30 Family", 
          // 161 
          "Quad-Core Intel(R) Xeon(R) processor 3200 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 3000 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 5300 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 5100 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 5000 Series", 
          "Dual-Core Intel(R) Xeon(R) processor LV", 
          "Dual-Core Intel(R) Xeon(R) processor ULV", 
          "Dual-Core Intel(R) Xeon(R) processor 7100 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 5400 Series", 
          "Quad-Core Intel(R) Xeon(R) processor", 
          "Dual-Core Intel(R) Xeon(R) processor 5200 Series", 
          "Dual-Core Intel(R) Xeon(R) processor 7200 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 7300 Series", 
          "Quad-Core Intel(R) Xeon(R) processor 7400 Series", 
          "Multi-Core Intel(R) Xeon(R) processor 7400 Series", 
          // 176 
          "Pentium(R) III Xeon(TM)", 
          "Pentium(R) III Processor with Intel(R) SpeedStep(TM) Technology", 
          "Pentium(R) 4", "Intel(R) Xeon(TM)", 
          // 180                     
          "AS400 Family", 
          "Intel(R) Xeon(TM) processor MP", 
          "AMD Athlon(TM) XP Family", "AMD Athlon(TM) MP Family", 
          "Intel(R) Itanium(R) 2", 
          "Intel(R) Pentium(R) M processor", 
          "Intel(R) Celeron(R) D processor", 
          "Intel(R) Pentium(R) D processor", 
          "Intel(R) Pentium(R) Processor Extreme Edition", 
          "Intel(R) Core(TM) Solo Processor", 
          // 190                     
          "K7", 
          "Intel(R) Core(TM)2 Duo Processor", 
          "Intel(R) Core(TM)2 Solo processor", 
          "Intel(R) Core(TM)2 Extreme processor", 
          "Intel(R) Core(TM)2 Quad processor", 
          "Intel(R) Core(TM)2 Extreme mobile processor", 
          "Intel(R) Core(TM)2 Duo mobile processor", 
          "Intel(R) Core(TM)2 Solo mobile processor", 
          "Intel(R) Core(TM) i7 processor", 
          "Dual-Core Intel(R) Celeron(R) Processor", 
          // 200                     
          "S/390 and zSeries Family", 
          "ESA/390 G4", "ESA/390 G5", "ESA/390 G6", 
          "z/Architectur base", 
          // 205
          "Intel(R) Core(TM) i5 processor", 
          "Intel(R) Core(TM) i3 processor", 
          // 210                   
          "VIA C7(TM)-M Processor Family", 
          "VIA C7(TM)-D Processor Family", 
          "VIA C7(TM) Processor Family", 
          "VIA Eden(TM) Processor Family", 
          "Multi-Core Intel(R) Xeon(R) processor", 
          "Dual-Core Intel(R) Xeon(R) processor 3xxx Series", 
          "Quad-Core Intel(R) Xeon(R) processor 3xxx Series", 
          "VIA Nano(TM) Processor Family", 
          "Dual-Core Intel(R) Xeon(R) processor 5xxx Series", 
          "Quad-Core Intel(R) Xeon(R) processor 5xxx Series", 
          // 221
          "Dual-Core Intel(R) Xeon(R) processor 7xxx Series", 
          "Quad-Core Intel(R) Xeon(R) processor 7xxx Series", 
          "Multi-Core Intel(R) Xeon(R) processor 7xxx Series", 
          "Multi-Core Intel(R) Xeon(R) processor 3400 Series", 
          // 230
          "Embedded AMD Opteron(TM) Quad-Core Processor Family", 
          "AMD Phenom(TM) Triple-Core Processor Family", 
          "AMD Turion(TM) Ultra Dual-Core Mobile Processor Family", 
          "AMD Turion(TM) Dual-Core Mobile Processor Family", 
          "AMD Athlon(TM) Dual-Core Processor Family", 
          "AMD Sempron(TM) SI Processor Family", 
          "AMD Phenom(TM) II Processor Family", 
          "AMD Athlon(TM) II Processor Family", 
          "Six-Core AMD Opteron(TM) Processor Family", 
          "AMD Sempron(TM) M Processor Family", 
          // 250                   
          "i860", "i960", 
          "Reserved (SMBIOS Extension)", 
          "Reserved (Un-initialized Flash Content - Lo)", "SH-3", 
          "SH-4", "ARM", "StrongARM", 
          // 300                   
          "6x86", "MediaGX", 
          "MII", "WinChip", "DSP", "Video Processor", 
          // 65534                   
          "Reserved (For Future Special Purpose Assignment)", 
          "Reserved (Un-initialized Flash Content - Hi)" }, 
       MappingStrings { "MIF.DMTF|Processor|017.3" }, 
       ModelCorrespondence { "CIM_Processor.Family" }]
   uint16 ArchitectureType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CopyFileAction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "CopyFileAction specifies the files to be moved or copied to a "
       "new location. The to/from information for the copy is "
       "specified using either the ToDirectorySpecification/ "
       "FromDirectorySpecification or the ToDirectoryAction/ "
       "FromDirectoryAction associations. The first set is used when "
       "the source and/or the target are to exist before any Actions "
       "are taken. The second set is used when the source and/or "
       "target are created as a part of a previous Action (specified "
       "using the association, ActionSequence)." )]
class CIM_CopyFileAction : CIM_FileAction {

      [Description ( "The source directory." ), 
       MaxLen ( 1024 )]
   string Source;

      [Description ( "The destination directory." ), 
       MaxLen ( 1024 )]
   string Destination;

      [Description ( 
          "Boolean indicating that the file should be deleted after "
          "being copied." )]
   boolean DeleteAfterCopy;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CreateDirectoryAction 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "CreateDirectoryAction creates empty directories for "
       "SoftwareElements to be installed locally." )]
class CIM_CreateDirectoryAction : CIM_DirectoryAction {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_DirectorySpecificationFile 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The CIM_DirectorySpecificationFile association identifies the "
       "directory that contains the file being checked in the CIM_ "
       "FileSpecification class." )]
class CIM_DirectorySpecificationFile {

      [Key, Max ( 1 ), 
       Description ( "The directory to be checked." )]
   CIM_DirectorySpecification REF DirectorySpecification;

      [Key, Description ( "The file to be checked." )]
   CIM_FileSpecification REF FileSpecification;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeAppClientModule 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeAppClientModule identifies a deployed Application "
       "Client Module." )]
class CIM_J2eeAppClientModule : CIM_J2eeModule {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeApplicationHostedOnServer 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeApplicationHostedOnServer association identifies a "
       "hosting J2ee Server for a particular J2EE Application." )]
class CIM_J2eeApplicationHostedOnServer : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The hosting J2ee Server." )]
   CIM_J2eeServer REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The hosted J2ee Application." )]
   CIM_J2eeApplication REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeApplicationModule 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeApplicationModule association identifies a "
       "software module for a particular J2EE Application." )]
class CIM_J2eeApplicationModule : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "The J2ee Application that is comprised of modules." )]
   CIM_J2eeApplication REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The Module that is part of a J2ee Application." )]
   CIM_J2eeModule REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeDomain 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeDomain identifies the J2EE Domains that are part of "
       "the J2EE management environment. Domains provide a structure "
       "for grouping J2EE Server objects." )]
class CIM_J2eeDomain : CIM_AdminDomain {

      [Override ( "Name" ), 
       Description ( 
          "The name of the J2EE server domain. The name MUST be "
          "constructed using the form specified in JSR77.3.1.1.1 in "
          "order to avoid the need for manual key propagation." ), 
       MaxLen ( 256 ), 
       MappingStrings { "JSR77.JCP|JSR77.3.1.1.1.1 Domain Name|V1.0" }]
   string Name;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeEJBModule 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeEJBModule identifies a deployed EJB module and is a "
       "container for CIM_J2eeEJBs." )]
class CIM_J2eeEJBModule : CIM_J2eeModule {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJavaMailResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJavaMailResource identifies a JavaMail resource." )]
class CIM_J2eeJavaMailResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJCAConnectionFactoryManagedConnectionFactory 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJCAConnectionFactoryManagedConnectionFactory "
       "identifies the JCA managed connection factory associated with "
       "the corresponding JCA connection factory ." )]
class CIM_J2eeJCAConnectionFactoryManagedConnectionFactory : CIM_HostedDependency {

      [Override ( "Dependent" ), 
       Min ( 1 )]
   CIM_J2eeJCAConnectionFactory REF Dependent;

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 )]
   CIM_J2eeJCAManagedConnectionFactory REF Antecedent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJCAResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( "CIM_J2eeJCAResource identifies a JCA resource." )]
class CIM_J2eeJCAResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJDBCDataSourceDriver 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJDBCDataSourceDriver associates the JDBC driver with a "
       "JDBC data source." )]
class CIM_J2eeJDBCDataSourceDriver : CIM_HostedDependency {

      [Override ( "Dependent" ), 
       Min ( 1 )]
   CIM_J2eeJDBCDataSource REF Dependent;

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 )]
   CIM_J2eeJDBCDriver REF Antecedent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJDBCResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJDBCResource identifies a JDBC resource. A JDBC "
       "resource manages one or more JDBC data sources." )]
class CIM_J2eeJDBCResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJDBCResourceUsesDataSource 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJDBCResourceUsesDataSource is an association that "
       "identifies the JDBC data sources that are available to a "
       "CIM_J2eeJDBCResource." )]
class CIM_J2eeJDBCResourceUsesDataSource : CIM_HostedDependency {

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The JDBC Resource that requires a Data Source." )]
   CIM_J2eeJDBCResource REF Dependent;

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The Data Source that is being used by a JDBC Resource." )]
   CIM_J2eeJDBCDataSource REF Antecedent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJMSResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( "CIM_J2eeJMSResource identifies a JMS resource." )]
class CIM_J2eeJMSResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJNDIResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJNDIResource identifies a Java Naming and Directory "
       "Interface (JNDI) resource." )]
class CIM_J2eeJNDIResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeJTAResource 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeJTAResource identifies a Java Transaction API (JTA) resource."
        )]
class CIM_J2eeJTAResource : CIM_J2eeResource {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeResourceAdapterInModule 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeResourceAdapterInModule is an aggregation of the "
       "resource adapters contained within a deployed RAR Module." )]
class CIM_J2eeResourceAdapterInModule : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Description ( 
          "The ResourceAdapter Module that is comprised of resource adapters."
           )]
   CIM_J2eeResourceAdapterModule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( 
          "The resource adapter that is a part of the resource "
          "adapter Module." )]
   CIM_J2eeResourceAdapter REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeResourceOnServer 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeResourceOnServer is an association that establishes "
       "the relationship between a J2EE server and its resources." )]
class CIM_J2eeResourceOnServer : CIM_ResourceOfSystem {

      [Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Server exposing the resources." )]
   CIM_J2eeServer REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The resource that is a component of the server." )]
   CIM_J2eeResource REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeServerInDomain 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "The CIM_J2eeServerInDomain association identifies the J2EE "
       "Server that are part of a J2EE Domain for management purposes." )]
class CIM_J2eeServerInDomain : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The J2ee Management Domain." )]
   CIM_J2eeDomain REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( 
          "The J2ee Server that is a member of the domain." )]
   CIM_J2eeServer REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeServletInModule 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeServletInModule is a aggregation of the servlet "
       "components within a deployed WAR module." )]
class CIM_J2eeServletInModule : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The Web Module that is comprised of servlets." )]
   CIM_J2eeWebModule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( "The Servlet that is a part of the Web Module." )]
   CIM_J2eeServlet REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ToDirectoryAction 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The ToDirectoryAction association identifies the target "
       "directory for a FileAction. When this association is used, the "
       "assumption is that the target directory was created by a "
       "previous Action. This association cannot co-exist with a "
       "ToDirectorySpecification association, since a FileAction can "
       "only involve a single target directory." )]
class CIM_ToDirectoryAction {

      [Key, Max ( 1 ), 
       Description ( "The destination directory of the Action." )]
   CIM_DirectoryAction REF DestinationDirectory;

      [Key, Description ( "The Action against the directory." )]
   CIM_CopyFileAction REF FileName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ToDirectorySpecification 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Application::CheckAction" ), 
    Description ( 
       "The ToDirectorySpecification association identifies the target "
       "directory for a FileAction. When this association is used, the "
       "assumption is that the target directory already exists. This "
       "association cannot co-exist with a ToDirectoryAction "
       "association, since a FileAction can only involve a single "
       "target directory." )]
class CIM_ToDirectorySpecification {

      [Key, Max ( 1 ), 
       Description ( "The destination directory of the Action." )]
   CIM_DirectorySpecification REF DestinationDirectory;

      [Key, Description ( "The Action against the directory." )]
   CIM_CopyFileAction REF FileName;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ActiveConnection
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "This association defines a connection that is currently "
       "communicating, or is configured to communicate, between two "
       "ServiceAccessPoints. It is used when the connection is not "
       "treated as a ManagedElement itself (that is, with Status, "
       "statistics, and so on), but its existence is known. The SAPs "
       "that are connected are typically at the same networking or "
       "application layer." )]
class CIM_ActiveConnection : CIM_SAPSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "A ServiceAccessPoint that is configured to communicate "
          "or is actively communicating with the Dependent SAP. In "
          "a unidirectional connection, this SAP is the one that is "
          "transmitting." )]
   CIM_ServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A second ServiceAccessPoint that is configured to "
          "communicate or is actively communicating with the "
          "Antecedent SAP. In a unidirectional connection, this SAP "
          "is the one that is receiving the communication." )]
   CIM_ServiceAccessPoint REF Dependent;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this element is deprecated because it "
          "is incorrectly placed on the association. Unicast, "
          "broadcast, or other traffic types are not a function of "
          "the connection between the referenced endpoints, but "
          "rather are a function of the addressing, protocol and "
          "basic functionality of the endpoints. \n"
          "Deprecated description: The type of traffic that is "
          "carried over this connection." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Unicast", "Broadcast", 
          "Multicast", "Anycast" }, 
       ModelCorrespondence { 
          "CIM_ActiveConnection.OtherTrafficDescription" }]
   uint16 TrafficType;

      [Deprecated { "No value" }, 
       Description ( 
          "Note: The use of this element is deprecated because it "
          "is incorrectly placed on the association. Unicast, "
          "broadcast, or other traffic types are not a function of "
          "the connection between the referenced endpoints, but "
          "rather are a function of the addressing, protocol and "
          "basic functionality of the endpoints. \n"
          "Deprecated description: A string that describes the type "
          "of traffic that is being carried over this instance when "
          "its Type property is set, for example, to 1 (Other)." ), 
       MaxLen ( 64 ), 
       ModelCorrespondence { "CIM_ActiveConnection.TrafficType" }]
   string OtherTrafficDescription;

      [Description ( 
          "TRUE means that this connection is unidirectional; FALSE "
          "means that this connection is bidirectional. When the "
          "connection is unidirectional, the \"speaker\" should be "
          "defined as the Antecedent reference. In a bidirectional "
          "connection, the selection of which AccessPoint is the "
          "Antecedent or Dependent is immaterial." )]
   boolean IsUnidirectional;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Association, Version ( "2.24.1" ), 
    UMLPackagePath ( "CIM::Core::PowerMgmt" ), 
    Description ( 
       "The association between a Managed System Element and its power "
       "management service." )]
class CIM_AssociatedPowerManagementService : CIM_ServiceAvailableToElement {

      [Override ( "ServiceProvided" ), 
       Max ( 1 ), 
       Description ( "The Service that is available." )]
   CIM_PowerManagementService REF ServiceProvided;

      [Description ( 
          "The current power state of the associated Managed System Element."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "..", 
          "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", 
          "Diagnostic Interrupt (INIT)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "MIF.DMTF|System Power Controls|001.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerCapabilities" }]
   uint16 PowerState;

      [Description ( 
          "A string describing the additional power management "
          "state of the element, used when the PowerState is set to "
          "the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_AssociatedPowerManagementService.PowerState" }]
   string OtherPowerState;

      [Description ( 
          "The desired or the last requested power state of the "
          "associated Managed System Element, irrespective of the "
          "mechanism through which the request was made. If the "
          "requested power state is unknown, then the property "
          "shall have the value of 0 (\"Unknown\"). If the property "
          "has no meaning or is not supported, then the property "
          "shall have value 12(\"Not Applicable\")." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13", "14", "15", "16", "17", "18", 
          "..", "0x7FFF..0xFFFF" }, 
       Values { "Unknown", "Other", "On", "Sleep - Light", 
          "Sleep -_Deep", "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Not Applicable", 
          "Off - Soft Graceful", "Off - Hard Graceful", 
          "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", 
          "Diagnostic Interrupt (INIT)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "MIF.DMTF|System Power Controls|001.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerCapabilities", 
          "CIM_AssociatedPowerManagementService.OtherRequestedPowerState" }]
   uint16 RequestedPowerState = 12;

      [Description ( 
          "A string describing the additional power management "
          "state of the element, used when the RequestedPowerState "
          "is set to the value 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_AssociatedPowerManagementService.RequestedPowerState" }]
   string OtherRequestedPowerState;

      [Description ( 
          "The time when the element will be powered on again, used "
          "when the RequestedPowerState has the value 2, \"On\", 5, "
          "\"Power Cycle (Off - Soft)\" or 6, \"Power Cycle (Off - "
          "Hard)\"." ), 
       ModelCorrespondence { 
          "CIM_AssociatedPowerManagementService.RequestedPowerState" }]
   datetime PowerOnTime;

      [Description ( 
          "AvailableRequestedPowerStates indicates the possible "
          "values for the PowerState parameter of the method "
          "RequestPowerStateChange, used to initiate a power state "
          "change.The values listed shall be a subset of the values "
          "contained in the RequestedPowerStatesSupported property "
          "of the CIM_PowerManagementCapabilities where the values "
          "selected are a function of the current power state of "
          "the system. This property shall be non-null if an "
          "implementation supports the advertisement of the set of "
          "possible values as a function of the current state. This "
          "property shall be null if an implementation does not "
          "support the advertisement of the set of possible values "
          "as a function of the current state. \n"
          "The current values in the enumeration are: \n"
          "2=On, corresponding to ACPI state G0 or S0 or D0. \n"
          "3=Sleep - Light, corresponding to ACPI state G1, S1/S2, "
          "or D1. \n"
          "4=Sleep - Deep, corresponding to ACPI state G1, S3, or D2.\n"
          "5=Power Cycle (Off - Soft), corresponding to ACPI state "
          "G2, S5, or D3, but where the managed element is set to "
          "return to power state \"On\" at a pre-determined time. \n"
          "6=Off - Hard, corresponding to ACPI state G3, S5, or D3. \n"
          "7=Hibernate (Off - Soft), corresponding to ACPI state "
          "S4, where the state of the managed element is preserved "
          "and will be recovered upon powering on. \n"
          "8=Off - Soft, corresponding to ACPI state G2, S5, or D3. "
          "9= Power Cycle (Off-Hard), corresponds to the managed "
          "element reaching the ACPI state G3 followed by ACPI "
          "state S0. \n"
          "10=Master Bus Reset, corresponds to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system master bus reset. 11=Diagnostic "
          "Interrupt (NMI), corresponding to the system reaching "
          "ACPI state S5 followed by ACPI state S0. This is used to "
          "represent system non-maskable interrupt. 12=Off - Soft "
          "Graceful, equivalent to Off Soft but preceded by a "
          "request to the managed element to perform an orderly "
          "shutdown. \n"
          "13=Off - Hard Graceful, equivalent to Off Hard but "
          "preceded by a request to the managed element to perform "
          "an orderly shutdown. \n"
          "14=Master Bus Rest Graceful, equivalent to Master Bus "
          "Reset but preceded by a request to the managed element "
          "to perform an orderly shutdown. \n"
          "15=Power Cycle (Off - Soft Graceful), equivalent to "
          "Power Cycle (Off - Soft) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "16=Power Cycle (Off - Hard Graceful), equivalent to "
          "Power Cycle (Off - Hard) but preceded by a request to "
          "the managed element to perform an orderly shutdown. \n"
          "..=DMTF Reserved. \n"
          "0x7FFF..0xFFFF = Vendor Specific." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "..", "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", "DMTF Reserved", 
          "Vendor Specific" }, 
       MappingStrings { "IEEE P1621 | 3.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.RequestedPowerStatesSupported", 
          "CIM_PowerManagementService.RequestPowerStateChange", 
          "CIM_AssociatedPowerManagementService.PowerState" }]
   uint16 AvailableRequestedPowerStates[];

      [Description ( 
          "TransitioningToPowerState indicates the target power "
          "state to which the system is transitioning. \n"
          "A value of 19 \"No Change\" shall indicate that no "
          "transition is in progress. A value of 18 \"Not "
          "Applicable\" shall indicate the implementation does not "
          "support representing ongoing transitions. \n"
          "A value other than 18 or 19 shall identify the power "
          "state to which the element is in the process of "
          "transitioning." ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "..", "0x7FFF..0xFFFF" }, 
       Values { "Other", "On", "Sleep - Light", "Sleep -Deep", 
          "Power Cycle (Off - Soft)", "Off - Hard", 
          "Hibernate (Off - Soft)", "Off - Soft", 
          "Power Cycle (Off-Hard)", "Master Bus Reset", 
          "Diagnostic Interrupt (NMI)", "Off - Soft Graceful", 
          "Off - Hard Graceful", "Master Bus Reset Graceful", 
          "Power Cycle (Off - Soft Graceful)", 
          "Power Cycle (Off - Hard Graceful)", 
          "Diagnostic Interrupt (INIT)", "Not Applicable", 
          "No Change", "DMTF Reserved", "Vendor Specific" }, 
       MappingStrings { "MIF.DMTF|System Power Controls|001.2" }, 
       ModelCorrespondence { 
          "CIM_PowerManagementCapabilities.PowerCapabilities" }]
   uint16 TransitioningToPowerState;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BindsTo
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "This association establishes a ServiceAccessPoint as a "
       "requestor of protocol services from a ProtocolEndpoint. "
       "Typically, this association runs between SAPs and endpoints on "
       "a single system. Because a ProtocolEndpoint is a kind of "
       "ServiceAccessPoint, this binding can be used to establish a "
       "layering of two protocols, with the upper layer represented by "
       "the Dependent and the lower layer represented by the "
       "Antecedent." )]
class CIM_BindsTo : CIM_SAPSAPDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The lower-level endpoint that is accessed by the SAP." )]
   CIM_ProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The AccessPoint or ProtocolEndpoint that is dependent on "
          "the lower-level endpoint." )]
   CIM_ServiceAccessPoint REF Dependent;


};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    ClassConstraint { "inv: AccessContext=10", 
       "inv: InfoFormat=200 or InfoFormat=206" }, 
    UMLPackagePath ( "CIM::Core::LaunchInContext" ), 
    Description ( 
       "Each instance provides a flexible representation of a URI "
       "stored in the AccessInfo property that is used to launch a "
       "management service. This URI may contain dynamic information "
       "in the form of parameters that can used to modify the URI for "
       "use in a specific context." )]
class CIM_LaunchInContextSAP : CIM_RemoteServiceAccessPoint {

      [Override ( "AccessContext" ), 
       Description ( 
          "AccessContext shall specify a Management Service (10)." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Default Gateway", "DNS Server", 
          "SNMP Trap Destination", "MPLS Tunnel Destination", 
          "DHCP Server", "SMTP Server", "LDAP Server", 
          "Network Time Protocol (NTP) Server", 
          "Management Service", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.OtherAccessContext" }]
   uint16 AccessContext;

      [Override ( "AccessInfo" ), 
       Description ( 
          "The URL may contain ${ParameterName} strings. The client "
          "is responsible for replacing such strings with the "
          "values of the corresponding parameters. (See the "
          "properties Parameter<Name, Description, Type, "
          "Constraint, and Derivation> below for various ways for a "
          "client to obtain those values." ), 
       ModelCorrespondence { "CIM_LaunchInContextSAP.ParameterName", 
          "CIM_LaunchInContextSAP.InfoFormat" }]
   string AccessInfo;

      [Override ( "InfoFormat" ), 
       Description ( 
          "InfoFormat shall contain either 200(URL) or 206(Paramterized URL)."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "100", "101", "102", "103", "104", 
          "200", "201", "202", "203", "204", "205", "206", "..", 
          "32768..65535" }, 
       Values { "Other", "Host Name", "IPv4 Address", 
          "IPv6 Address", "IPX Address", "DECnet Address", 
          "SNA Address", "Autonomous System Number", "MPLS Label", 
          "IPv4 Subnet Address", "IPv6 Subnet Address", 
          "IPv4 Address Range", "IPv6 Address Range", "Dial String", 
          "Ethernet Address", "Token Ring Address", "ATM Address", 
          "Frame Relay Address", "URL", "FQDN", "User FQDN", 
          "DER ASN1 DN", "DER ASN1 GN", "Key ID", 
          "Parameterized URL", "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_RemoteServiceAccessPoint.OtherInfoFormatDescription" }]
   uint16 InfoFormat;

      [Description ( 
          "Each entry specifies the name of a parameter specified "
          "in the URL string stored in the AccessInfo property as ${ParameterName}.\n"
          "Parameter names should have the format "
          "orgName:specName:specVersion:parameterName. In this "
          "format: orgName shall be a trademarked, or otherwise "
          "owned name of the defining organization, specName "
          "together with specVersion shall name a specification "
          "within that organization and parameterName shall be a "
          "name defined by the specification.\n"
          "For DMTF defined parameters: orgName shall be \'DMTF\'; "
          "specName shall be the DSP name of the specification "
          "defining the parameter; and specVersion shall have the "
          "form M.N.E where M is the major version number, N is the "
          "minor version number, and E shall be the errata number. "
          "Each number shall not include leading zeros." ), 
       ArrayType ( "Indexed" )]
   string ParameterName[];

      [Description ( 
          "Provides information about each parameter to display for "
          "each entry." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_LaunchInContextSAP.ParameterName" }]
   string ParameterDescription[];

      [Description ( 
          "Each non empty entry shall specify a derivation for the "
          "value of the corresponding ParameterName property. Each "
          "derivation shall be specified as an OCL Derive "
          "constraint. (See OMG Object Constraint Language, v2.0, http://www.omg.org/technology/documents/spec_catalog.htm)\n"
          "If specified, the derivation context is an instance of "
          "CIM_ManagedElement specified in the "
          "GetDerivedParametersForElement method of this class. The "
          "derivation context and the \'derive:\' keywords are not "
          "explicitly specified here.\n"
          "Example: to return the Caption of the specified element, "
          "the entry would contain the string: \"self.Caption\".\n"
          "On retrieval, the values returned by the method are used "
          "to replace the corresponding ${ParameterName} string in "
          "Accessinfo or LaunchMessage." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_LaunchInContextSAP.ParameterName", 
          "CIM_LaunchInContextSAP.GetDerivedparametersForElement" }]
   string ParameterDerivation[];

      [Description ( 
          "Each non-empty entry specifies additional constraints on "
          "the corresponding parameter value beyond those that can "
          "be inferred from the corresponding ParameterType entry.\n"
          "Each entry shall be empty if the corresponding "
          "ParameterDerivation value is not empty or null. "
          "Otherwise, this shall be an OCL Invariant constraint "
          "that limits the values of the string. \n"
          "The OCL context, and therefore, the \'self\' variable "
          "shall refer to the parameter\'s value.\n"
          "For patterns, the OCL syntax is extended to include the "
          "use string function \'Like()\' with the regular "
          "expression grammar as defined in DSP0200 Annex C, "
          "(http://www.dmtf.org/standards/published_documents/DSP0202_1.0.0.pdf)."
           ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_LaunchInContextSAP.ParameterName" }]
   string ParameterConstraints[];

      [Description ( 
          "Each entry specifies the type of the corresponding entry "
          "in the ParameterName property. If not specified, "
          "3(string) is assumed.Note, ParameterConstraint entries "
          "can be used to specify valid value ranges." ), 
       ValueMap { "2", "3", "4", "5", "6", "..", "0x8000..0xFFFF" }, 
       Values { "Integer", "String", "Boolean", "Real", "DateTime", 
          "DMTF Reserved", "Vendor Specific" }, 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { "CIM_LaunchInContextSAP.ParameterName" }]
   uint16 ParameterType[];

      [Description ( 
          "Each entry names a feature supported by the service "
          "addressed by AccessInfo.\n"
          "Feature names shall have the format "
          "orgName:specName:specVersion:featureName,where orgName "
          "shall be a trademarked, or otherwise owned name of the "
          "defining organization, specName together with "
          "specVersion shall name a specification within that "
          "organization and featureName shall be a name defined by "
          "the specification.\n"
          "For DMTF defined features: orgName shall be \'DMTF\'; "
          "specName shall be the DSP name of a management profile; "
          "and specVersion shall have the form M.N.E where M is the "
          "major version number, N is the minor version number, and "
          "E shall be the errata number. Each number shall not "
          "include leading zeros." ), 
       ArrayType ( "Indexed" )]
   string SupportedFeatureName[];

      [Description ( 
          "Each entry describes the corresponding feature named in SupportedFeatureName.\n"
          "Each entry should describe the required parameters and "
          "related information used to select the feature when the "
          "service is launched." ), 
       ArrayType ( "Indexed" ), 
       ModelCorrespondence { 
          "CIM_LaunchInContextSAP.SupportedFeatureName" }]
   string SupportedFeatureDescription[];

      [Description ( 
          "This property, together with ManagementIsRestricted "
          "defines the set of instances exposed in the namespace of "
          "this instance, that may be managed by the service "
          "addressed by this instance. \n"
          "The entries of this property identify the classes that "
          "such instances must be a kind of." ), 
       ModelCorrespondence { 
          "CIM_LaunchInContextSAP.ManagementIsRestricted" }]
   string ManagedClasses[];

      [Description ( 
          "This property, together with ManagementIsRestricted "
          "defines the set of instances exposed in the namespace of "
          "this instance, that may be managed by the service "
          "addressed by this instance. \n"
          "If the value of this boolean is false, then all "
          "instances exposed by the namespace which are kinds of "
          "the classes named in the entries of ManagedClasses may "
          "be managed by the addressed service. If true, then only "
          "those instances that are associated via CIM_ManagedSAP "
          "may be managed by the addressed service. This value "
          "shall be true if such associations exist." ), 
       ModelCorrespondence { "CIM_LaunchInContextSAP.ManagedClasses" }]
   boolean ManagementIsRestricted = false;

      [Description ( 
          "LaunchMessage is a template for a message, to be sent to "
          "the URL specified in the AccessContext property. Like "
          "the AccessInfo property, this template may contain "
          "parameter value placeholders as ${ParameterName}, where "
          "ParameterName matches an entry in the ParameterName "
          "property. The format of the template is defined by the "
          "protocol specified by the value of the LaunchMessageProtocol.\n"
          "The client that uses this information to send a request "
          "is responsible for understanding the side-effects of "
          "passing the message. For instance if the message causes "
          "a service to be invoked, the client is responsible for "
          "handling reply messages." ), 
       ModelCorrespondence { 
          "CIM_LaunchInContextSAP.LaunchMessageProtocolOperation" }]
   string LaunchMessage;

      [Description ( 
          "This enumeration defines the protocol used to send the LaunchMessage.\n"
          "The format shall be "
          "orgName:protocolName:protocolVersion:protocolOperation,where "
          "orgName shall be a trademarked, or otherwise owned name "
          "of the defining organization, protocolName together with "
          "protocolVersion shall name protocol defined by that "
          "organization and protocolOperation shall name an "
          "operation of the protocol." ), 
       ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "IETF:HTTP:1.0:GET", "IETF:HTTP:1.0:POST", 
          "IETF:HTTP:1.1:GET", "IETF:HTTP:1.1:POST", 
          "DMTF Reserved", "Vendor Specific" }]
   uint16 LaunchMessageProtocolOperation = 3;


      [Description ( 
          "This method evaluates the parameters in the context of a "
          "specified instance referenced by ManagedElement. For "
          "each parameter entry containing an empty "
          "ParameterDerivation entry, the corresponding "
          "ParameterValue entry shall be an empty string. "
          "Otherwise, the value of the corresponding entry shall be "
          "the result of evaluating the derivation expression "
          "contained in the corresponding ParameterDerivation property.\n"
          "0\'Completed with No Error\' is returned on success.\n"
          "1\'Not Supported\' is returned if this method is not supported.\n"
          "2\'Unknown or Unspecified Error\' is not expected\n"
          "3\'Failed\' is not expected\n"
          "4\'Invalid Parameter\' can happen if Self is not a "
          "well-formed association." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", "Failed", 
          "Invalid Parameter", "DMTF Reserved", "Vendor Specific" }]
   uint32 GetDerivedParametersForElement(
         [Required, In, Description ( 
             "The ManagedElement used as \'self\' in the "
             "derivation expressions contained in the "
             "ParameterDerivation array." )]
      CIM_ManagedElement REF Self, 
         [In ( false ), Out, Description ( 
             "An array of parameter values corresponding to the "
             "entries of the ParameterNames array" ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_LaunchInContextSAP.ParameterName" }]
      string ParameterValue[]);

};

// Copyright (c) 2010 DMTF.  All rights reserved.
   [Version ( "2.27.0" ), 
    UMLPackagePath ( "CIM::Core::LaunchInContext" ), 
    Description ( 
       "The LaunchInContext service provides the means for a client to "
       "manage information naming external services that are available "
       "to manage resources represented by instances in the containing "
       "CIM Namespace." )]
class CIM_LaunchInContextService : CIM_Service {


      [Description ( 
          "This method is used to create a CIM_LaunchInContextSAP "
          "and related associations. When instantiated, a "
          "CIM_ServiceAffectsElement association with an "
          "ElementEffects entry = 5 shall be instantiated. "
          "Additionally, the required CIM_HostedServiceAccessPoint "
          "association shall be created to the CIM_System on which "
          "this service has a CIM_HostedService association. \n"
          "If the RestrictedToElement array is NULL, then the "
          "instantiated CIM_LaunchInContextSAP applies to all "
          "instances of the classes named in the ManagedClasses "
          "array. Otherwise, the new instance applies to only those "
          "instances of CIM_ManagedElement that are explicitly "
          "referenced in the RestrictedToElement array.\n"
          "0\'Completed with No Error\' shall be returned on success.\n"
          "1\'Not Supported\' shall be returned if this method is "
          "not supported.\n"
          "2\'Unknown or Unspecified Error\' is not expected\n"
          "3\'Atomicity Error\' shall be returned if all of the "
          "specified restrictions can not be applied atomically. In "
          "that case, The Launch Point shall not be created and "
          "none of the added restrictions shall be applied and the "
          "recommended fall back is to apply them one by one.\n"
          "4\'Invalid Parameter\' shall be returned if LaunchInfo "
          "does not contain a valid CIM_LaunchInContextSAP instance "
          "specification or if any RestrictedToElement entry is not "
          "a well-formed association.\n"
          "5\'In Use\' shall be returned if an instance of "
          "CIM_LaunchInContextSAP having the same keys is already "
          "instantiated.6\'Restriction Error\' shall be returned if "
          "ManagementIsRestricted is false and the "
          "RestrictedToElement list is not empty or NULL." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", "Atomicity Error", 
          "Invalid Parameter", "In Use", "Restriction Error", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 CreateLaunchPoint(
         [Required, In, Description ( 
             "An instance specification for a "
             "CIM_LaunchInContextSAP. \n"
             "Note: The SystemCreationClassName and SystemName "
             "property specifications shall be ignored and the "
             "instantiated instance shall use the corresponding "
             "values from the System associated to this service "
             "by CIM_HostedService." ), 
          EmbeddedInstance ( "CIM_LaunchInContextSAP" )]
      string LaunchPointSpecification, 
         [In, Description ( 
             "If the specified launch point property, "
             "ManagementIsRestricted is false, then this "
             "property shall be NULL.\n"
             "If Null, then the new instance of "
             "CIM_LaunchInContextSAP shall apply to all "
             "resources belonging to the system associated with "
             "this service or shall apply to no resources, "
             "depending on the value of ManagementIsRestricted. "
             "If not NULL, this property contains a list of "
             "references to instances of CIM_ManagedElement to "
             "which the new launch point is restricted. Such "
             "instances do not have to be related to the system "
             "of this service.\n"
             "A well-formed reference that does not point to an "
             "instance of CIM_ManagedElement at the time of "
             "invocation shall be ignored.\n"
             "On successful completion, a CIM_ManagementSAP "
             "association shall be instantiated between the new "
             "launch point and each element referenced in the "
             "RestrictedToElement list." )]
      CIM_ManagedElement REF RestrictedToElement[], 
         [Out, Description ( 
             "References the created instance of CIM_LaunchInContextSAP."
              )]
      CIM_LaunchInContextSAP REF LaunchPoint);

      [Description ( 
          "This method is used to remove launch point information "
          "and related associations, including restrictions.\n"
          "If the RestrictedToElement array is NULL, then the "
          "removal is unconditional and additionally removes any "
          "related CIM_ManagementSAP associations as well. "
          "Otherwise, the CIM_ManagementSAP associations are "
          "removed and the instance of CIM_LaunchInContextSAP is "
          "removed only if no CIM_ManagementSAP associations remain.\n"
          "When an instance of CIM_LaunchInContextSAP is removed, "
          "related CIM_ServiceAffectsElement and "
          "CIM_HostedServiceAccessPoint associations are also removed.\n"
          "0\'Completed with No Error\' is returned on success.\n"
          "1\'Not Supported\' shall be returned if this method is "
          "not supported.\n"
          "2\'Unknown or Unspecified Error\' is not expected\n"
          "3\'Atomicity Error\' shall be returned if all of the "
          "specified restrictions can not be removed atomically. In "
          "that case, The Launch Point shall not be deleted and "
          "none of the existing restrictions shall be removed and "
          "the recommended fall back is to apply them one by one.\n"
          "4\'Invalid Parameter\' shall be returned if LaunchPoint "
          "does not reference avalid CIM_LaunchInContextSAP "
          "instance specification or if any RestrictedToElement "
          "entry is not a well-formed association.\n"
          "5\'In Use\' is not expected.\n"
          "6\'Restriction Error\' shall be returned if "
          "ManagementIsRestricted is false and the "
          "RestrictedToElement list is not empty or NULL." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", "Atomicity Error", 
          "Invalid Parameter", "In Use", "Restriction Error", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 RemoveLaunchPoint(
         [Required, In, Description ( 
             "Names an instance of CIM_LaunchInContextSAP "
             "representing a launch point that no longer applies.\n"
             "On successful completions, if the "
             "RestrictedToElement array is null or empty, the "
             "referenced LaunchPoint instance shall be removed. "
             "Otherwise the referenced LaunchPoint instance "
             "shall not be removed unless the operation "
             "completes successfully and there are no remaining "
             "CIM_ManagementSAP associations to it." )]
      CIM_LaunchInContextSAP REF LaunchPoint, 
         [In, Description ( 
             "Names specific instances of CIM_ManagedElement to "
             "which the related CIM_LaunchInContextSAP shall no "
             "longer apply.\n"
             "On successful completion, All CIM_ManagementSAP "
             "associations between the named LaunchPoint and "
             "each named CIM_ManagedElement instance shall be "
             "removed." )]
      CIM_ManagedElement REF RestrictedToElement[]);

      [Description ( 
          "Apply the referenced CIM_LaunchInContextSAP to "
          "additional instances of CIM_ManagedElement. These "
          "actions shall be applied atomically.\n"
          "0\'Completed with No Error\' shall be returned on success.\n"
          "1\'Not Supported\' is returned if this method is not supported.\n"
          "2\'Unknown or Unspecified Error\' is not expected\n"
          "3\'Atomicity Error\' shall be returned if all of the "
          "specified restrictions can not be applied atomically. In "
          "that case, no changes shall be made. The recommended "
          "fall back is to apply them one by one.\n"
          "4\'Invalid Parameter\' shall be returned if LaunchPoint "
          "does not reference avalid CIM_LaunchInContextSAP "
          "instance specification or if any RestrictedToElement "
          "entry is not a well-formed association.\n"
          "5\'In Use\' is not expected.\n"
          "6\'Restriction Error\' shall be returned if the "
          "ManagementIsRestricted of the referenced launch point is "
          "false." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown or Unspecified Error", "Atomicity Error", 
          "Invalid Parameter", "In Use", "Restriction Error", 
          "DMTF Reserved", "Vendor Specific" }]
   uint32 ApplyLaunchPoint(
         [Required, In, Description ( 
             "Names an instance of CIM_LaunchInContextSAP "
             "representing a launch point." )]
      CIM_LaunchInContextSAP REF LaunchPoint, 
         [Required, In, Description ( 
             "Names specific instances of CIM_ManagedElement to "
             "which the related CIM_LaunchInContextSAP shall apply.\n"
             "On successful completion, A CIM_ManagementSAP "
             "association shall be instantiated for each "
             "referenced instance." )]
      CIM_ManagedElement REF RestrictedToElement[]);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "ProtocolService represents represents an application layer "
       "service available on a hosting system. Often times, the "
       "service name reflects the employed/supported communication "
       "protocol (e.g. file transfer - FTP), however in some other "
       "cases it does not. (e.g. mail notification service - biff). "
       "Access to the service is modeled with one or more instances of "
       "ProtocolEndpoint. This class represents the availability of "
       "the function on the system. Issuing a stop to this instance is "
       "equivalent to disabling the functionality and making it "
       "unavailable to users. Thus a stop of this service will result "
       "in the removing of all ProtocolEndpoints which are associated "
       "with the instance via ServicAccessBySAP. The functionality can "
       "be made available again by issuing a start to the service. "
       "This class contains service definitions which are currently "
       "needed. Future extensions are expected." )]
class CIM_ProtocolService : CIM_Service {

      [Description ( 
          "The protocol this service provides. Values defined for "
          "this property are limited to the known use cases where "
          "it is desirable to represent the ability to enable or "
          "disable the functionality on the system." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..32767", "32768..65535" }, 
       Values { "Unknown", "Other", "SSH", "Telnet", "CLP", 
          "DMTF Reserved", "Vendor Reserved" }, 
       ModelCorrespondence { "CIM_ProtocolService.OtherProtocol" }]
   uint16 Protocol;

      [Description ( 
          "If the Protocol property is set to 1 \"Other\" then free "
          "form string providing more information about the "
          "protocol. If not set to 1, this string has no meaning." ), 
       ModelCorrespondence { "CIM_ProtocolService.Protocol" }]
   string OtherProtocol;

      [Write, Description ( 
          "MaxConnections specifies the maximum number of "
          "connections currently allowed by the service. The values "
          "32768..65535 are DMTF Reserved." ), 
       MinValue ( 1 ), 
       MaxValue ( 65535 )]
   uint16 MaxConnections = 1;

      [Description ( 
          "CurrentActiveConnections indicates the number of "
          "sessions currently established with the protocol "
          "service. A value of null for this property shall "
          "indicate the number of active sessions is unknown. A "
          "value of zero shall indicate there are no active "
          "sessions. Any other value shall correspond to the number "
          "of active sessions." ), 
       MinValue ( 0 ), 
       MaxValue ( 65535 )]
   uint16 CurrentActiveConnections;


      [Description ( 
          "Create a CIM_TCPProtocoEndpoint instance and associate "
          "it with this CIM_ProtocolService instance via an "
          "instance of CIM_ServiceAccessBySAP. The newly created "
          "instance of CIM_TCPProtocolEndpoint will be for the port "
          "specified. When the CIM_IPProtocolEndpoint is not "
          "specified, the method will create an instance of "
          "CIM_HostedAccessPoint which associates the newly created "
          "CIM_TCPProtocolEndpoint instance with the instance of "
          "CIM_ComputerSystem with which this instance is "
          "associated via an instance of CIM_HostedService (the "
          "scoping system) It will also create instances of "
          "CIM_BindsTo which associate the created "
          "CIM_TCPProtocolEndpoint with each instance "
          "CIM_IPProtocolEndpoint which is associated with the "
          "scoping system. When an instance of "
          "CIM_IPProtocolEndpoint is specified, the "
          "CIM_HostedAccessPoint will associate the "
          "CIM_TCPProtocolEndpoint with the same instance which is "
          "associated with the CIM_IPProtocolEndpoint. In addition, "
          "the implementation will create a single instance of "
          "CIM_BindsTo that associates the CIM_TCPProtocolEndpoint "
          "with the specified instance of CIM_IPProtocolEndpoint. "
          "For each instance of CIM_BindsTo created by this method, "
          "the value of the Dependent property will be a reference "
          "to the newly created instance of "
          "CIM_TCPProtocolEndpoint. An extrinsic method is required "
          "in order to provide atomic creation of multiple, related "
          "instances. Prior to creating the instances, the "
          "implementation will verify that a "
          "CIM_TCPProtocolEndpoint instance can be created and "
          "associated with this instance." ), 
       ValueMap { "0", "1", "2", "4", "..", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occurred", "Invalid Port", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint32 ListenOnPort(
         [Required, IN, Description ( 
             "The desired listening port." )]
      uint32 PortNumber, 
         [IN, Description ( 
             "A specific CIM_IPProtocolEndpoint on which the "
             "service will listen to the specified port." )]
      CIM_IPProtocolEndpoint REF IPEndpoint, 
         [IN ( false ), OUT, Description ( 
             "The created TCPProtocolEndpoint." )]
      CIM_TCPProtocolEndpoint REF TCPEndpoint);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ProvidesEndpoint
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "This association represents a ProtocolEndpoint that is "
       "provided by a Service to allow access to the Service." )]
class CIM_ProvidesEndpoint : CIM_ServiceAccessBySAP {

      [Override ( "Antecedent" ), 
       Description ( 
          "The Service that is accessed by the ProtocolEndpoint." )]
   CIM_Service REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ProtocolEndpoint that provides access to the Service." )]
   CIM_ProtocolEndpoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="SysDevCR00722.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RemotePort
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Core::Service" ), 
    Description ( 
       "RemotePort adds port information to the access data (such as "
       "IP Address) that is specified in and inherited from "
       "RemoteServiceAccessPoint. For example, using the additional "
       "properties in this class, you could indicate that UDP Port 123 "
       "is accessed at IP Address xyz. The IP Address would be "
       "specified in the inherited AccessInfo property, while the UDP "
       "Port number would be specified in the PortInfo property of "
       "this class." )]
class CIM_RemotePort : CIM_RemoteServiceAccessPoint {

      [Description ( 
          "Port information that might further specify the remote "
          "access information." ), 
       ModelCorrespondence { "CIM_RemotePort.PortProtocol" }]
   string PortInfo;

      [Description ( 
          "An enumerated integer that describes the protocol of the "
          "port that is addressed by PortInformation." ), 
       ValueMap { "1", "2", "3", "32768..65535" }, 
       Values { "Other", "TCP", "UDP", "Vendor Specific" }, 
       ModelCorrespondence { 
          "CIM_RemotePort.OtherProtocolDescription" }]
   uint16 PortProtocol;

      [Description ( 
          "Describes the protocol when the property PortProtocol is "
          "set to 1 (Other)." ), 
       ModelCorrespondence { "CIM_RemotePort.PortProtocol" }]
   string OtherProtocolDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Database::System" ), 
    Description ( 
       "The CIM_AssociatedDatabaseSystem association identifies the "
       "database system that is responsible for the database." )]
class CIM_AssociatedDatabaseSystem : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The database system that is responsible for the database." )]
   CIM_DatabaseSystem REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The database." )]
   CIM_CommonDatabase REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Database::Storage" ), 
    Description ( 
       "Databases are comprised of a collection of logical storage "
       "areas that are represented by instances of the "
       "DatabaseStorageArea class. The DatabaseStorage class "
       "represents the relationship between a CommonDatabase and the "
       "storage areas that it uses." )]
class CIM_DatabaseStorage : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The database that makes use of the associated DatabaseStorageArea."
           )]
   CIM_CommonDatabase REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A DatabaseStorageArea that is used by the associated "
          "CommonDatabase. A DatabaseStorageArea must only be used "
          "by a single database." )]
   CIM_DatabaseStorageArea REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AccessLabelReader 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::StorageLib" ), 
    Description ( 
       "AccessLabelReader is used to indicate that one or more Label "
       "Readers works in conjunction with MediaAccessDevices, to "
       "identify PhysicalMedia before read/write." )]
class CIM_AccessLabelReader : CIM_AssociatedLabelReader {

      [Override ( "Antecedent" ), 
       Description ( "The LabelReader." )]
   CIM_LabelReader REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The MediaAccessDevice that is dependent on the Reader Device."
           )]
   CIM_MediaAccessDevice REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_ADSLModem
// ==================================================================
   [Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The ADSLModem class represents Modems of the DSL type = ADSL, "
       "Asymmetric Digital Subscriber Line." )]
class CIM_ADSLModem : CIM_DSLModem {

      [Description ( 
          "Noise Margin of this Modem with respect to its received "
          "signal, in tenths of dB." ), 
       Units ( "Tenths of Decibels" ), 
       PUnit ( "decibel * 10^-1" )]
   uint32 NoiseMargin;

      [Description ( 
          "Measured difference in the total power transmitted by "
          "the peer Modem and the total power received by this "
          "Modem. This value is measured in tenths of dB." ), 
       Units ( "Tenths of Decibels" ), 
       Gauge, PUnit ( "decibel * 10^-1" )]
   uint32 LineAttenuation;

      [Description ( 
          "Status indicates the current state of the connection "
          "(line). The property holds a bit map that describes the "
          "possible conditions. For example, \n"
          "1) No Defect - There are no defects on the line; \n"
          "2) Loss Of Framing - ATUR failure due to the inability "
          "to receive a valid frame; \n"
          "4) Loss Of Signal - ATUR failure due to the inability to "
          "receive a signal; \n"
          "8) Loss Of Power - ATUR failure due to loss of power; \n"
          "32) Loss Of Signal Quality - Loss of Signal Quality is "
          "declared when the NoiseMargin falls below the minimum "
          "NoiseMargin, or the bit-error-rate exceeds 10^-7." ), 
       ValueMap { "1", "2", "4", "8", "32" }, 
       Values { "No Defect", "Loss Of Framing", "Loss Of Signal", 
          "Loss Of Power", "Loss Of Signal Quality" }]
   uint32 LineState;

      [Description ( 
          "Measured total output power (in tenths of dB) "
          "transmitted by this Modem." ), 
       Units ( "Tenths of Decibels" ), 
       Gauge, PUnit ( "decibel * 10^-1" )]
   uint32 TotalOutputPower;

      [Description ( 
          "Indicates the maximum currently attainable data rate for "
          "the Modem. This value will be equal to or greater than "
          "the current line rate." ), 
       Units ( "Bits per Second" ), 
       PUnit ( "bit / second" )]
   uint32 MaxDataRate;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Association, Version ( "2.28.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "Indicates that the Memory provides Cache to the Dependent "
       "Logical Element." )]
class CIM_AssociatedCacheMemory : CIM_AssociatedMemory {

      [Description ( 
          "Defines whether this is the Primary (value=3), Secondary "
          "(value=4) or Tertiary (value=5) Cache. Also, \"Other\" "
          "(1), \"Unknown\" (0) and \"Not Applicable\" (2) can be "
          "defined." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Not Applicable", "Primary", 
          "Secondary", "Tertiary" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.2" }, 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.OtherLevelDescription" }]
   uint16 Level;

      [Description ( 
          "A string describing the cache level when the Level value "
          "is 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_AssociatedCacheMemory.Level" }]
   string OtherLevelDescription;

      [Description ( 
          "Defines whether this is write-back (value=2) or "
          "write-through (value=3) Cache, or whether this "
          "information \"Varies with Address\" (4) or is defined "
          "individually for each I/O (5). Also, \"Other\" (1) and "
          "\"Unknown\" (0) can be specified." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Write Back", "Write Through", 
          "Varies with Address", "Determination Per I/O" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.5" }, 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.OtherWritePolicyDescription" }]
   uint16 WritePolicy;

      [Description ( 
          "A string describing the Write Policy when the "
          "WritePolicy value is 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_AssociatedCacheMemory.WritePolicy" }]
   string OtherWritePolicyDescription;

      [Description ( 
          "Defines whether this is for instruction caching "
          "(value=2), data caching (value=3) or both (value=4, "
          "\"Unified\"). Also, \"Other\" (1) and \"Unknown\" (0) "
          "can be defined." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Instruction", "Data", "Unified" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.9" }, 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.OtherCacheTypeDescription" }]
   uint16 CacheType;

      [Description ( 
          "A string describing the Cache Type when the CacheType "
          "value is 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_AssociatedCacheMemory.CacheType" }]
   string OtherCacheTypeDescription;

      [Description ( 
          "Size, in bytes, of a single cache bucket or line." ), 
       Units ( "Bytes" ), 
       MappingStrings { "MIF.DMTF|System Cache|006.10" }, 
       PUnit ( "byte" )]
   uint32 LineSize;

      [Description ( 
          "An integer enumeration describing the algorithm to "
          "determine which cache lines or buckets should be "
          "re-used." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8" }, 
       Values { "Unknown", "Other", "Unknown", 
          "Least Recently Used (LRU)", "First In First Out (FIFO)", 
          "Last In First Out (LIFO)", "Least Frequently Used (LFU)", 
          "Most Frequently Used (MFU)", 
          "Data Dependent Multiple Algorithms" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.12" }, 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.OtherReplacementPolicyDescription" }]
   uint16 ReplacementPolicy;

      [Description ( 
          "A string describing the Cache replacement policy when "
          "the ReplacementPolicy value is 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.ReplacementPolicy" }]
   string OtherReplacementPolicyDescription;

      [Description ( 
          "Policy that shall be employed by the Cache for handling "
          "read requests. For example, \"Read\", \"Read-Ahead\" or "
          "both can be specified using the values, 2, 3 or 4, "
          "respectively. If the read policy is determined "
          "individually (ie, for each request), then the value 5 "
          "(\"Determination per I/O\") should be specified. \"Other\" "
          "(1) and \"Unknown\" (0) are also valid values." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Read", "Read-Ahead", 
          "Read and Read-Ahead", "Determination Per I/O" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.13" }, 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.OtherReadPolicyDescription" }]
   uint16 ReadPolicy;

      [Description ( 
          "A string describing the read policy when the ReadPolicy "
          "value is 1, \"Other\"." ), 
       ModelCorrespondence { "CIM_AssociatedCacheMemory.ReadPolicy" }]
   string OtherReadPolicyDescription;

      [Description ( 
          "Maximum amount of time, in seconds, dirty lines or "
          "buckets may remain in the Cache before they are flushed. "
          "A value of zero indicated that a cache flush is not "
          "controlled by a flushing timer." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIF.DMTF|System Cache|006.14" }, 
       PUnit ( "second" )]
   uint32 FlushTimer;

      [Description ( 
          "An integer enumeration defining the system cache "
          "associativity. For example, 5 indicates a fully "
          "associative cache." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11", "12", "13" }, 
       Values { "Unknown", "Other", "Direct Mapped", 
          "2-way Set-Associative", "4-way Set-Associative", 
          "Fully Associative", "8-way Set-Associative", 
          "16-way Set-Associative", "12-way Set Associative", 
          "24-way Set Associative", "32-way Set Associative", 
          "48-way Set Associative", "64-way Set Associative", 
          "20-way Set Associative" }, 
       MappingStrings { "MIF.DMTF|System Cache|006.15" }, 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.OtherAssociativityDescription" }]
   uint16 Associativity;

      [Description ( 
          "A string describing the cache associativity when the "
          "Associativity value is 1, \"Other\"." ), 
       ModelCorrespondence { 
          "CIM_AssociatedCacheMemory.Associativity" }]
   string OtherAssociativityDescription;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedSupplyVoltageSensor 
// ==================================================================
   [Association, Deprecated { "CIM_AssociatedSensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The use of this association is being deprecated in lieu of "
       "using AssociatedSensor, since the use of the referenced class "
       "VoltageSensor is deprecated. \n"
       "A PowerSupply may have an associated VoltageSensor, monitoring "
       "its input voltage. This is described by this association." )]
class CIM_AssociatedSupplyVoltageSensor : CIM_AssociatedSensor {

      [Deprecated { "CIM_AssociatedSensor.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( "The VoltageSensor." )]
   CIM_VoltageSensor REF Antecedent;

      [Deprecated { "CIM_AssociatedSensor.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The PowerSupply associated with the VoltageSensor." )]
   CIM_PowerSupply REF Dependent;

      [Deprecated { "No Value" }, 
       Description ( 
          "Indicates the PowerSupply\'s input voltage range "
          "measured by the associated sensor. Range 1, 2 or both "
          "can be specified using the values 2, 3 or 4, "
          "respectively." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Range 1", "Range 2", 
          "Both Range 1 and 2" }]
   uint16 MonitoringRange;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CableModem 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::Modems" ), 
    Description ( 
       "The CableModem class represents a device for transmission "
       "across a cable infrastructure." )]
class CIM_CableModem : CIM_ConnectionBasedModem {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CollectionOfSensors 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The CollectionOfSensors association indicates the Sensors that "
       "make up a MultiStateSensor." )]
class CIM_CollectionOfSensors : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( "The MultiStateSensor." )]
   CIM_MultiStateSensor REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 2 ), 
       Description ( 
          "A Sensor that is part of the MultiStateSensor." )]
   CIM_Sensor REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_CurrentSensor 
// ==================================================================
   [Deprecated { "CIM_NumericSensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The use of this class is being deprecated in lieu of the "
       "additions to Sensor and NumericSensor. A CurrentSensor can be "
       "defined by setting the SensorType property, inherited from "
       "Sensor, to 4 (\"Current\")." )]
class CIM_CurrentSensor : CIM_NumericSensor {

      [Deprecated { "No Value" }, 
       Override ( "SensorType" )]
   uint16 SensorType = 4;

      [Deprecated { "No Value" }, 
       Override ( "BaseUnits" )]
   uint16 BaseUnits = 6;

      [Deprecated { "No Value" }, 
       Override ( "UnitModifier" )]
   sint32 UnitModifier = -3;

      [Deprecated { "No Value" }, 
       Override ( "RateUnits" )]
   uint16 RateUnits = 0;

      [Deprecated { "No Value" }, 
       Override ( "CurrentReading" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.5" }]
   sint32 CurrentReading;

      [Deprecated { "No Value" }, 
       Override ( "NominalReading" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.6" }]
   sint32 NominalReading;

      [Deprecated { "No Value" }, 
       Override ( "NormalMax" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.7" }]
   sint32 NormalMax;

      [Deprecated { "No Value" }, 
       Override ( "NormalMin" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.8" }]
   sint32 NormalMin;

      [Deprecated { "No Value" }, 
       Override ( "MaxReadable" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.9" }]
   sint32 MaxReadable;

      [Deprecated { "No Value" }, 
       Override ( "MinReadable" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.10" }]
   sint32 MinReadable;

      [Deprecated { "No Value" }, 
       Override ( "Resolution" ), 
       Units ( "Tenths of MilliAmps" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.17" }, 
       PUnit ( "ampere * 10^-4" )]
   uint32 Resolution;

      [Deprecated { "No Value" }, 
       Override ( "Tolerance" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.18" }]
   sint32 Tolerance;

      [Deprecated { "No Value" }, 
       Override ( "Accuracy" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.19" }]
   sint32 Accuracy;

      [Deprecated { "No Value" }, 
       Override ( "LowerThresholdNonCritical" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.11" }]
   sint32 LowerThresholdNonCritical;

      [Deprecated { "No Value" }, 
       Override ( "UpperThresholdNonCritical" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.12" }]
   sint32 UpperThresholdNonCritical;

      [Deprecated { "No Value" }, 
       Override ( "LowerThresholdCritical" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.13" }]
   sint32 LowerThresholdCritical;

      [Deprecated { "No Value" }, 
       Override ( "UpperThresholdCritical" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.14" }]
   sint32 UpperThresholdCritical;

      [Deprecated { "No Value" }, 
       Override ( "LowerThresholdFatal" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.15" }]
   sint32 LowerThresholdFatal;

      [Deprecated { "No Value" }, 
       Override ( "UpperThresholdFatal" ), 
       MappingStrings { "MIF.DMTF|Electrical Current Probe|001.16" }]
   sint32 UpperThresholdFatal;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="ArchCR00089.003" type="add">Add PUnit qualifier values
// to Units qualifier values.</change>
// ==================================================================
//  CIM_DesktopMonitor 
// ==================================================================
   [Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "Capabilities and management of the DesktopMonitor (CRT) "
       "LogicalDevice." )]
class CIM_DesktopMonitor : CIM_Display {

      [Description ( 
          "The type of DesktopMonitor or CRT. For example, "
          "multiscan color or monochrome monitors (values 2 or 3, "
          "respectively) can be indicated in this property." ), 
       ValueMap { "0", "1", "2", "3", "4", "5" }, 
       Values { "Unknown", "Other", "Multiscan Color", 
          "Multiscan Monochrome", "Fixed Frequency Color", 
          "Fixed Frequency Monochrome" }]
   uint16 DisplayType;

      [Description ( 
          "Monitor\'s bandwidth in MHertz. If unknown, enter 0." ), 
       Units ( "MegaHertz" ), 
       PUnit ( "hertz * 10^6" )]
   uint32 Bandwidth;

      [Description ( 
          "The logical height of the Display in screen coordinates." )]
   uint32 ScreenHeight;

      [Description ( 
          "The logical width of the Display in screen coordinates." )]
   uint32 ScreenWidth;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_MonitorSetting 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Device::UserDevices" ), 
    Description ( 
       "MonitorSetting associates the MonitorResolution Setting object "
       "with the DesktopMonitor to which it applies." )]
class CIM_MonitorSetting : CIM_ElementSetting {

      [Override ( "Element" ), 
       Description ( "The DesktopMonitor." )]
   CIM_DesktopMonitor REF Element;

      [Override ( "Setting" ), 
       Description ( 
          "The MonitorResolution associated with the DesktopMonitor." )]
   CIM_MonitorResolution REF Setting;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// <change cr="CIMCoreCR00855" type ="change'>Update the
// description of QueuePosition.</
// ==================================================================
//  CIM_OwningPrintQueue
// ==================================================================
   [Association, Version ( "2.14.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This association indicates which Queue holds a PrintJob and "
       "where the Job is located within that Queue. A Job can remain "
       "on its final Queue when it has been printed with a "
       "PrintJobStatus of \"Complete\" or \"Completed With Error\"." )]
class CIM_OwningPrintQueue : CIM_JobDestinationJobs {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The PrintQueue on which the Job is held." )]
   CIM_PrintQueue REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( "The PrintJob." )]
   CIM_PrintJob REF Dependent;

      [Description ( 
          "The position of the PrintJob on the Queue. The head of "
          "the Queue is indicated by a value of 1 with higher "
          "values being used to represent Jobs that are further "
          "away from the head of the Queue. A QueuePosition of 0 "
          "indicates that the Job has completed (either with or "
          "without error)." ), 
       MappingStrings { 
          "MIB.IETF|Job-Monitoring-MIB.jmNumberOfInterveningJobs", 
          "MIB.IETF|Job-Monitoring-MIB.jmJobState", 
          "RFC2911.IETF|Job.number-of-intervening-jobs", 
          "RFC2911.IETF|Job.job-state" }]
   uint32 QueuePosition;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PackageTempSensor 
// ==================================================================
   [Association, Deprecated { "CIM_PackageDependency" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "Often, a TemperatureSensor is installed in a Package such as a "
       "Chassis or a Rack, not to measure any particular Device, but "
       "the Package\'s environment in general. The use of this "
       "association has been deprecated. Instead, use "
       "PackageDependency to describe this relationship." )]
class CIM_PackageTempSensor : CIM_PackageDependency {

      [Deprecated { "CIM_PackageDependency.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( "The TemperatureSensor for the Package." )]
   CIM_TemperatureSensor REF Antecedent;

      [Deprecated { "CIM_PackageDependency.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The PhysicalPackage whose environment is monitored." )]
   CIM_PhysicalPackage REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="CIMCoreCR00752.000" type ="change">Update of
// descriptions based on Tech Edit review.</
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PrinterServicingQueue
// ==================================================================
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::Printing" ), 
    Description ( 
       "This association indicates that PrintJobs can be passed to a "
       "Printer from a particular Queue." )]
class CIM_PrinterServicingQueue : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "A destination Printer for Jobs enqueued on the Dependent Queue."
           )]
   CIM_Printer REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "A Queue that is providing Jobs to the Printer." )]
   CIM_PrintQueue REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.10.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "An association that models a host driver path to a SCSI "
       "logical unit. Each permutation of initiator and target "
       "ProtocolEndpoints and logical units is considered a separate "
       "path. This class describes end-to-end path behavior such as "
       "properties and operations commonly used in multipath "
       "management." )]
class CIM_SCSIInitiatorTargetLogicalUnitPath {

      [Key, Description ( "An initiator endpoint." )]
   CIM_SCSIProtocolEndpoint REF Initiator;

      [Key, Description ( "A target endpoint." )]
   CIM_SCSIProtocolEndpoint REF Target;

      [Key, Description ( 
          "A subclass of LogicalDevice representing a SCSI Logical "
          "Unit (such as StorageVolume or TapeDrive)." )]
   CIM_LogicalDevice REF LogicalUnit;

      [Description ( 
          "The OS Device Name for this path. Only applicable if the "
          "ExposedPathDeviceFiles property is true in the instance "
          "of SCSIMultipathConfigurationCapabilities associated "
          "with the LogicalDevice/RedundancySet this instance is a "
          "member of." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PATH_LOGICAL_UNIT_PROPERTIES|deviceFileName" }]
   string OSDeviceName;

      [Write, Description ( 
          "A value assigned by an administrator specifying a "
          "preference to assign to a path. The drivers will "
          "actively use all available paths with the highest "
          "weight. This allows an administrator to assign a subset "
          "of available paths for load balanced access and reserve "
          "the others as backup paths. For symmetric access "
          "devices, all paths are considered \'available\'. For "
          "asymmetric access devices, all paths in active target "
          "port groups are considered available." ), 
       MappingStrings { 
          "MP_API.SNIA|MP_PATH_LOGICAL_UNIT_PROPERTIES|weight" }]
   uint32 AdministrativeWeight;

      [Write, Description ( 
          "The state of this path. Values are defined as follows: \n"
          "Unknown - the path is unavailable,but the cause is not "
          "known. \n"
          "Active - The path is okay and active. \n"
          "Passive - The path is okay, but is associated with a "
          "target port of target port group in standby access "
          "state. Only applies to devices with asymmetric access. \n"
          "Disabled - The path is disabled by administrative "
          "request (DisablePathLU). \n"
          "Path Error - The path is unusable due to an error on "
          "this path and no SCSI status was received. \n"
          "Logical Unit Error - A SCSI status was received for an "
          "I/O through this path indicating a logical unit error. \n"
          "Reserved - The path is unavailable due to a SCSI "
          "reservation. \n"
          "Removed - The path is unavailable because the OS or "
          "drivers marked the pathunusable. \n"
          "Transitioning - the path is transitioning between two "
          "valid states. \n"
          "The only valid values a client can specify are Disabled "
          "and Active. All other states are determined by the "
          "underlying implementation; attempts to set them should "
          "be given an error response." ), 
       ValueMap { "0", "2", "3", "4", "5", "6", "7", "8", "9" }, 
       Values { "Unknown", "Active", "Passive", "Disabled", 
          "Path Error", "Logical Unit Error", "Reserved", "Removed", 
          "Transitioning" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_PATH_LOGICAL_UNIT_PROPERTIES|pathState" }]
   uint32 State;

      [Description ( 
          "AdministrativeOverride allows an administrator to select "
          "a single path, force all I/O to this path, and disables "
          "load balancing. The steady-state value is \'No override "
          "in effect\'. When an administrator sets an override for "
          "a particular path, that path\'s AdministrativeOverride "
          "is set to \'Overridding\' and all other paths to same "
          "logical unit are assigned a value of \'Overridden\'. "
          "This property is changed using the OverridePath method "
          "in SCSIPathConfigurationService." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Overriding", "Overridden", "No override in effect" }, 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|overridePath" }, 
       ModelCorrespondence { 
          "CIM_SCSIPathConfigurationService.SetOverridePath" }]
   uint16 AdministrativeOverride;

      [Description ( 
          "The SCSI Logical Unit Number. This is the unit number "
          "with values below 16,384 used in management "
          "applications. It is not the full SCSI SAM 8-byte logical "
          "unit number structure. Using the terminology from the "
          "T10 SCSI specifications, this is the LU number with a "
          "value between 0 and 255 using the Peripheral device "
          "addressing method with Bus Identifier zero or a LU "
          "number between 0 and 16,383 using the Flat space (AKA "
          "volume set) addressing method." ), 
       MaxValue ( 16383 ), 
       MappingStrings { 
          "MP_API.SNIA|MP_MULTIPATH_LOGICAL_UNIT_PROPERTIES|overridePathMP_API.SNIA|MP_CancelOverridePath", 
          "MP_API.SNIA|MP_SetOverridePath" }]
   uint16 LogicalUnitNumber;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    UMLPackagePath ( "CIM::Device::StorageDevices" ), 
    Description ( 
       "A class derived from CIM_Service providing methods related to "
       "management of multiple paths to SCSI devices." )]
class CIM_SCSIPathConfigurationService : CIM_Service {


      [Description ( 
          "This method requests that the target change the access "
          "states of the requested SCSITargetPortGroups. This will "
          "have the effect of doing a failover or failback "
          "operation." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097", "4098", "4099", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Unsupported AccessState", "Invalid SCSITargetPortGroup", 
          "Unsupported AccessState combination", 
          "Unsupported SCSITargetPortGroup combination", 
          "Method Reserved", "Vendor Specific" }]
   uint32 SetTPGAccess(
         [IN, Description ( 
             "A reference to an instances of a subclass of "
             "CIM_LogicalDevice representing the SCSI logical "
             "unit where the command will be sent." )]
      CIM_LogicalDevice REF LogicalUnit, 
         [IN, Description ( 
             "Array of references to instances of "
             "SCSITargetPortGroup. All the referenced "
             "TargetPortGroup instances must be part of the same "
             "target device." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { "CIM_SCSITargetPortGroup" }]
      CIM_SCSITargetPortGroup REF TargetPortGroups[], 
         [IN, Description ( 
             "An array of desired access states. Each access "
             "state in this array is the desired access state "
             "for the SCSITargetPortGroup in the corresponding "
             "entry in the TargetPortGroups parameter. \n"
             "\n"
             "The Active value is not part of the SCSI "
             "Specification; it is a convenience for clients "
             "that are not sure whether to specify "
             "Active/Optimized of Active/Non-optimized. The "
             "instrumentation selects a value based on historic "
             "information, knowledge of the target "
             "configuration, or trial and error. \n"
             "\n"
             "Note that SCSITargetPortGroup.AccessState includes "
             "the value \'Transitioning\' that is excluded here "
             "- a caller cannot request transitioning, though it "
             "can be reported by a target device." ), 
          ValueMap { "2", "3", "4", "5", "6" }, 
          Values { "Active/Optimized", "Active/Non-optimized", 
             "StandBy", "Unavailable", "Active" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_SCSITargetPortGroup.AccessState" }]
      uint16 AccessStates[]);

      [Description ( 
          "This method requests that the target change the load "
          "balance algorithm for the referenced LogicalDevice "
          "instance." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "4096", 
          "4097", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Unsupported LogicalDevice", "Invalid LoadBalanceType", 
          "Method Reserved", "Vendor Specific" }]
   uint32 SetLoadBalanceAlgorithm(
         [IN, Description ( 
             "A reference to the LogicalDevice subclass instance "
             "with an LogicalIdentity to the load balance "
             "RedundancySet. If "
             "SCSIMultipathConfigurationCapabilities. "
             "CanLoadBalanceLUsIndependently is true, just the "
             "referenced logical unit is modified. Otherwise, "
             "all logical units sharing the target are modified." )]
      CIM_LogicalDevice REF LogicalDevice, 
         [IN, Description ( "The desired load balance algorithm." ), 
          ValueMap { "0", "1", "2", "3", "4", "5", "6" }, 
          Values { "Unknown", "Other", "No Load Balancing", 
             "Round Robin", "Least Blocks", "Least IO", 
             "Product Specific" }]
      uint16 LoadBalanceAlgorithm, 
         [IN, Description ( 
             "When LoadBalanceAlgorithm is \'Other\', this "
             "parameter specifies a description of the load "
             "balancing algorithm. When LoadBalanceAlgorithm is "
             "\'Product Specific\', this property provides a "
             "string specifying the vendor/product/version of "
             "the ManagedElement." )]
      string OtherLoadBalanceAlgorithmDescription);

      [Description ( 
          "This method allows an administrator to assign a logical "
          "unit to a target port group. At any time, each LU will "
          "typically be associated with two target port groups, one "
          "in active state and one in standby state. The result of "
          "this method will be that the LU associations change to a "
          "pair of target port groups. Only valid if the target "
          "device supports asymmetric access state and "
          "SCSIMultipathConfigurationCapabilities "
          "SupportsLuAssignment is set." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 AssignLogicalUnitToPortGroup(
         [IN, Description ( 
             "A reference to an instance of a subclass of "
             "LogicalDevice representing a SCSI logical unit." )]
      CIM_LogicalDevice REF LogicalUnit, 
         [IN, Description ( 
             "A reference to a target port group. The Target "
             "Port Group should be in an active state." )]
      CIM_SCSITargetPortGroup REF TargetPortGroup);

      [Description ( 
          "This method allows an administrator to temporarily "
          "disable load balancing for a specific logical unit. The "
          "path specified as a parameter will have its "
          "AdministrativeOverride property set to \'Overriding\' "
          "and all I/O to the logical unit will be directed to this "
          "path. All other paths to this logical unit will have "
          "AdministrativeOverride set to \'Overridden\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 SetOverridePath(
         [IN, Description ( 
             "A reference to a SCSIInitiatorTargetLogicalUnitPath."
              )]
      CIM_SCSIInitiatorTargetLogicalUnitPath REF Path);

      [Description ( 
          "This method clears an override path as set in "
          "SetOverridePath and load balancing is enabled. All paths "
          "to the logical unit specified as a parameter will have "
          "AdministrativeOverride property set to \'No override in "
          "effect\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "32768..65535" }, 
       Values { "Success", "Not Supported", "Unknown", "Timeout", 
          "Failed", "Invalid Parameter", "DMTF Reserved", 
          "Vendor Specific" }]
   uint32 CancelOverridePath(
         [IN, Description ( 
             "A reference to a SCSIInitiatorTargetLogicalUnitPath."
              )]
      CIM_LogicalDevice REF LogicalUnit);

};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Network::Wireless" ), 
    Description ( 
       "A wireless communication endpoint which, when its associated "
       "interface device is associated with an IEEE 802.11 wireless "
       "LAN, may send and receive data frames." )]
class CIM_WiFiEndpoint : CIM_LANEndpoint {

      [Override ( "LANID" ), 
       Description ( 
          "LANID shall contain the Service Set Identifier (SSID) of "
          "the wireless LAN with which the Endpoint is associated, "
          "or shall be NULL if the Endpoint is not currently "
          "associated or this information is not known." ), 
       MappingStrings { "IEEE 802.11-2007 | 7.3.2.1" }]
   string LANID;

      [Override ( "ProtocolIFType" ), 
       Description ( 
          "ProtocolIFType\'s enumeration is limited to Wi-Fi and "
          "reserved values for this subclass of ProtocolEndpoint." ), 
       ValueMap { "1", "71", "225..4095", "4301..32767", "32768.." }, 
       Values { "Other", "IEEE 802.11", "IANA Reserved", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 ProtocolIFType = 71;

      [Description ( 
          "EncryptionMethod shall specify the encryption method in "
          "use to protect the confidentiality of data sent and "
          "received by the WiFiEndpoint.\n"
          "\t* Unknown (0): shall indicate that the encryption "
          "method is unknown to the server.\n"
          "\t* Other (1): shall indicate that the encryption method "
          "is known to the server but not defined in the list "
          "below. If EncryptionMethod contains 1, "
          "OtherEncryptionMethod shall not be NULL and shall not be empty.\n"
          "\t* WEP (2): shall indicate that the encryption method "
          "is Wired Equivalency Privacy (WEP). The value of "
          "EncryptionMethod shall be 2 only if the value of "
          "AuthenticationMethod is 2 (\"Open System\") or 3 "
          "(\"Shared Key\").\n"
          "\t* TKIP (3): shall indicate that the encryption method "
          "is Temporal Key Integrity Protocol (TKIP). The value of "
          "EncryptionMethod shall be 3 only if the value of "
          "AuthenticationMethod is 4 (\"WPA PSK\"), 5 (\"WPA IEEE "
          "802.1x\"), 6 (\"WPA2 PSK\"), or 7 (\"WPA2 IEEE 802.1x\").\n"
          "\t* CCMP (4): shall indicate that the encryption method "
          "is Counter Mode with Cipher Block Chaining Message "
          "Authentication Code Protocol (CCMP). The value of "
          "EncryptionMethod shall be 4 only if the value of "
          "AuthenticationMethod is 4 (\"WPA PSK\"), 5 (\"WPA IEEE "
          "802.1x\"), 6 (\"WPA2 PSK\"), or 7 (\"WPA2 IEEE 802.1x\").\n"
          "\t* None (5): shall indicate that no encryption method "
          "is in use. The value of EncryptionMethod shall be 5 only "
          "if the value of AuthenticationMethod is 2 (\"Open "
          "System\") or 3 (\"Shared Key\")." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6.." }, 
       Values { "Unknown", "Other", "WEP", "TKIP", "CCMP", "None", 
          "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 8" }, 
       ModelCorrespondence { 
          "CIM_WiFiEndpoint.AuthenticationMethod", 
          "CIM_WiFiEndpoint.OtherEncryptionMethod" }]
   uint16 EncryptionMethod;

      [Description ( 
          "OtherEncryptionMethod shall specify the 802.11 "
          "encryption method if and only if EncryptionMethod "
          "contains \"Other\". The format of this string shall be "
          "vendor-specific." ), 
       ModelCorrespondence { "CIM_WiFiEndpoint.EncryptionMethod" }]
   string OtherEncryptionMethod;

      [Description ( 
          "AuthenticationMethod shall specify the method used to "
          "authenticate the WiFiEndpoint and the network to one another.\n"
          "\t* Unknown (0): shall indicate that the authentication "
          "method is unknown to the server.\t* Other (1): shall "
          "indicate that the authentication method is known to the "
          "server but not specified in the list below. If "
          "AuthenticationMethod contains 1, "
          "OtherAuthenticationMethod shall not be NULL and shall "
          "not be empty.\n"
          "\t* Open System (2): shall indicate that the "
          "authentication method is Open System. "
          "AuthenticationMethod shall contain 2 only if "
          "EncryptionMethod contains 2 (\"WEP\").\n"
          "\t* Shared Key (3): shall indicate that the "
          "authentication method is Shared Key. "
          "AuthenticationMethod shall contain 3 only if "
          "EncryptionMethod contains 2 (\"WEP\").\n"
          "\t* WPA PSK (4): shall indicate that the authentication "
          "method is WPA (Wi-Fi Protected Access) PSK (Pre-Shared "
          "Key). AuthenticationMethod shall contain 4 only if "
          "EncryptionMethod contains 3 (\"TKIP\") or 4 (\"CCMP\").\n"
          "\t* WPA IEEE 802.1x (5): shall indicate that the "
          "authentication method is WPA (Wi-Fi Protected Access) "
          "IEEE 802.1x. AuthenticationMethod shall contain 5 only "
          "if EncryptionMethod contains 3 (\"TKIP\") or 4 (\"CCMP\").\n"
          "\t* WPA2 PSK (6): shall indicate that the authentication "
          "method is WPA2 (Wi-Fi Protected Access Version 2) PSK "
          "(Pre-Shared Key). AuthenticationMethod shall contain 6 "
          "only if EncryptionMethod contains 3 (\"TKIP\") or 4 (\"CCMP\").\n"
          "\t* WPA2 IEEE 802.1x (7): shall indicate that the "
          "authentication method is WPA2 (Wi-Fi Protected Access "
          "Version 2) IEEE 802.1x. AuthenticationMethod shall "
          "contain 6 only if EncryptionMethod contains 3 (\"TKIP\") "
          "or 4 (\"CCMP\").\n"
          "\t* CCKM IEEE 802.1x (8): CCKM (Cisco Centralized Key "
          "Management with LEAP or EAP-FAST)" ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9.." }, 
       Values { "Unknown", "Other", "Open System", "Shared Key", 
          "WPA PSK", "WPA IEEE 802.1x", "WPA2 PSK", 
          "WPA2 IEEE 802.1x", "CCKM IEEE 802.1x", "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 8" }, 
       ModelCorrespondence { "CIM_WiFiEndpoint.EncryptionMethod", 
          "CIM_WiFiEndpoint.IEEE8021xAuthenticationProtocol", 
          "CIM_WiFiEndpoint.OtherAuthenticationMethod" }]
   uint16 AuthenticationMethod;

      [Description ( 
          "OtherAuthenticationMethod shall specify the 802.11 "
          "authentication method if and only if "
          "AuthenticationMethod contains \"Other\". The format of "
          "this string shall be vendor-specific." ), 
       ModelCorrespondence { "CIM_WiFiEndpoint.AuthenticationMethod" }]
   string OtherAuthenticationMethod;

      [Description ( 
          "IEEE8021xAuthenticationProtocol shall contain the EAP "
          "(Extensible Authentication Protocol) type if and only if "
          "AuthenticationMethod contains \"WPA IEEE 802.1x\" or "
          "\"WPA2 IEEE 802.1x\" or \"CCKM IEEE 802.1x\"\n"
          ".\t* EAP-TLS (0): shall indicate the Transport Layer "
          "Security EAP type specified in RFC 2716.\n"
          "\t* EAP-TTLS/MSCHAPv2 (1): shall indicate the Tunneled "
          "TLS Authentication Protocol EAP type (specified in "
          "draft-ietf-pppext-eap-ttls) with Microsoft PPP CHAP "
          "Extensions, Version 2 (MSCHAPv2) as the inner "
          "authentication method.\n"
          "\t* PEAPv0/EAP-MSCHAPv2 (2): shall indicate the "
          "Protected Extensible Authentication Protocol (PEAP) "
          "Version 0 EAP type (specified in "
          "draft-kamath-pppext-peapv0), with Microsoft PPP CHAP "
          "Extensions, Version 2 (MSCHAPv2) as the inner "
          "authentication method.\n"
          "\t* PEAPv1/EAP-GTC (3): shall indicate the Protected "
          "Extensible Authentication Protocol (PEAP) Version 1 EAP "
          "type (specified in draft-josefsson-pppext-eap-tls-eap), "
          "with Generic Token Card (GTC) as the inner "
          "authentication method.\n"
          "\t* EAP-FAST/MSCHAPv2 (4): shall indicate the Flexible "
          "Authentication Extensible Authentication Protocol EAP "
          "type specified in IETF RFC 4851, with Microsoft PPP CHAP "
          "Extensions, Version 2 (MSCHAPv2) as the inner "
          "authentication method.\n"
          "\t* EAP-FAST/GTC (5): shall indicate the Flexible "
          "Authentication Extensible Authentication Protocol EAP "
          "type specified in IETF RFC 4851, with Generic Token Card "
          "(GTC) as the inner authentication method.\n"
          "\t* EAP-MD5 (6): shall indicate the EAP MD5 "
          "authentication method, specified in RFC 3748.\n"
          "\t* EAP-PSK (7): shall indicate the EAP-PSK (Pre-shared "
          "Key) Protocol specified in RFC 4764.\n"
          "\t* EAP-SIM (8): shall indicate the Extensible "
          "Authentication Protocol Method for Global System for "
          "Mobile Communications (GSM) Subscriber Identity Modules "
          "(EAP-SIM), specified in RFC 4186.\n"
          "\t* EAP-AKA (9): shall indicate the Extensible "
          "Authentication Protocol Method for 3rd Generation "
          "Authentication and Key Agreement (EAP-AKA) "
          "authentication method, specified in RFC 4187.\n"
          "\t* EAP-FAST/TLS (10): shall indicate the Flexible "
          "Authentication Extensible Authentication Protocol EAP "
          "type specified in IETF RFC 4851, with TLS as the inner "
          "authentication method." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", 
          "10", "11.." }, 
       Values { "EAP-TLS", "EAP-TTLS/MSCHAPv2", 
          "PEAPv0/EAP-MSCHAPv2", "PEAPv1/EAP-GTC", 
          "EAP-FAST/MSCHAPv2", "EAP-FAST/GTC", "EAP-MD5", "EAP-PSK", 
          "EAP-SIM", "EAP-AKA", "EAP-FAST/TLS", "DMTF Reserved" }, 
       MappingStrings { "RFC4017.IETF", "RFC2716.IETF", 
          "draft-ietf-pppext-eap-ttls.IETF", 
          "draft-kamath-pppext-peapv0.IETF", 
          "draft-josefsson-pppext-eap-tls-eap", "RFC4851.IETF", 
          "RFC3748.IETF", "RFC4764.IETF", "RFC4186.IETF", 
          "RFC4187.IETF" }, 
       ModelCorrespondence { "CIM_WiFiEndpoint.AuthenticationMethod" }]
   uint16 IEEE8021xAuthenticationProtocol;

      [Description ( 
          "AccessPointAddress shall contain the MAC address of the "
          "access point with which the WiFiEndpoint is currently "
          "associated. If the WiFiEndpoint is not currently "
          "associated, then AccessPointAddress shall be NULL.The "
          "MAC address shall be formatted as twelve hexadecimal "
          "digits (for example, \"010203040506\"), with each pair "
          "representing one of the six octets of the MAC address in "
          "\"canonical\" bit order. (Therefore, the Group address "
          "bit is found in the low order bit of the first character "
          "of the string.)" )]
   string AccessPointAddress;

      [Description ( 
          "BSSType shall indicate the Basic Service Set (BSS) Type "
          "of the network that corresponds to the instance. A Basic "
          "Service Set is a set of stations controlled by a single "
          "coordination function.\n"
          "\t* Independent: the WiFiEndpoint is associated directly "
          "to another client station.\n"
          "\t* Infrastructure: the WiFiEndpoint is associated to a "
          "network via an access point." ), 
       ValueMap { "0", "2", "3", "4.." }, 
       Values { "Unknown", "Independent", "Infrastructure", 
          "DMTF Reserved" }, 
       MappingStrings { "IEEE 802.11-2007 | 3.16" }]
   uint16 BSSType;

      [Description ( 
          "Associated shall indicate whether or not the "
          "WiFiEndpoint is currently associated to an access point "
          "or client station." )]
   boolean Associated;


};

// Copyright (c) 2009 DMTF.  All rights reserved.
   [Version ( "2.22.0" ), 
    UMLPackagePath ( "CIM::Device::Ports" ), 
    Description ( 
       "Provides methods for configuring parameters of Wi-Fi ports and "
       "the Wi-Fi protocol endpoints associated with them." )]
class CIM_WiFiPortConfigurationService : CIM_NetworkPortConfigurationService {


      [Description ( 
          "Shall atomically create settings that enable a "
          "WiFiEndpoint to connect to a given Wi-Fi network. These "
          "settings include the name (SSID) of the network as well "
          "as the security parameters used by the WiFiEndpoint to "
          "authenticate to the network and encrypt frames it "
          "transmits into the network and decrypt the frames it "
          "receives from the network. Upon successful completion, a "
          "new instance of CIM_WiFiEndpointSettings shall be "
          "associated to the CIM_WiFiEndpoint referenced by the "
          "WiFiEndpoint parameter, through a new instance of "
          "CIM_ElementSettingData. If the IEEE8021xSettingsInput "
          "parameter is not null, a new instance of "
          "CIM_IEEE8021xSettings containing its property values "
          "shall be associated to the new instance of "
          "CIM_WiFiEndpointSettings through a new instance of "
          "CIM_ConcreteComponent upon successful completion. "
          "Alternatively, if the IEEE8021xSettingsInputReference "
          "parameter is not null, the CIM_IEEE8021xSettings that it "
          "references shall be associated to the new instance of "
          "CIM_WiFiEndpointSettings through a new instance of "
          "CIM_ConcreteComponent upon successful completion. This "
          "method shall not apply the new settings to WiFiEndpoint. "
          "Rather, it shall make them available for subsequent "
          "manual or autonomous application." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..4095", "4096..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Invalid Parameter", "Invalid Reference", 
          "DMTF Reserved", "Method Reserved", "Vendor Specified" }]
   uint32 AddWiFiSettings(
         [Required, IN, Description ( 
             "References the instance of CIM_WiFiEndpoint with "
             "which the new settings shall be associated." )]
      CIM_WiFiEndpoint REF WiFiEndpoint, 
         [Required, IN, Description ( 
             "Provides the input property values for the "
             "CIM_WiFiEndpointSettings instance that shall be "
             "created by this method. Upon successful completion "
             "of this method, a new instance of "
             "CIM_WiFiEndpointSettings shall be associated to "
             "the CIM_WiFiEndpoint referenced by the "
             "WiFiEndpoint parameter, through a new instance of "
             "CIM_ElementSettingData." ), 
          EmbeddedInstance ( "CIM_WiFiEndpointSettings" )]
      string WiFiEndpointSettingsInput, 
         [IN, Description ( 
             "Provides the property values for a new instance of "
             "CIM_IEEE8021xSettings. If both "
             "IEEE8021xSettingsInput and "
             "IEEE8021xSettingsInputReference are not null, this "
             "method shall return 2 (\"Unknown/Unspecified "
             "Error\").If this parameter is not null and "
             "IEEE8021xSettingsInputReference is null, this "
             "method shall create a new CIM_IEEE8021xSettings "
             "instance with the values in this parameter, and "
             "shall associate it (through a new instance of "
             "CIM_ConcreteComponent) with the newly created "
             "instance of CIM_WiFiEndpointSettings." ), 
          EmbeddedInstance ( "CIM_IEEE8021xSettings" )]
      string IEEE8021xSettingsInput, 
         [IN, Description ( 
             "References a credential that shall be used to "
             "authenticate the CIM_WiFiEndpoint to a IEEE 802.1x "
             "authentication server. This method shall return 2 "
             "(\"Unknown/Unspecified Error\") if "
             "IEEE8021xSettingsInput is null and "
             "IEEE8021xCredential is not null." )]
      CIM_Credential REF ClientCredential, 
         [IN, Description ( 
             "References a credential that shall be used as a "
             "trusted root certificate by the CIM_WiFiEndpoint "
             "when it authenticates the leaf certificate "
             "provided by the authentication server. This method "
             "shall return 2 (\"Unknown/Unspecified Error\") if "
             "IEEE8021xSettingsInput is null and "
             "IEEE8021xCredential is not null." )]
      CIM_Credential REF CACredential, 
         [OUT, Description ( 
             "Upon successful completion, shall contain a "
             "reference to the CIM_WiFiEndpointSettings instance "
             "created by this method." )]
      CIM_WiFiEndpointSettings REF WiFiEndpointSettings, 
         [OUT, Description ( 
             "Upon successful completion, shall contain a "
             "reference to the CIM_IEEE8021xSettings instance "
             "created by this method if and only if "
             "IEEE8021xSettingsInput was not null." )]
      CIM_IEEE8021xSettings REF IEEE8021xSettings);

      [Description ( 
          "Shall atomically update settings that enable a "
          "WiFiEndpoint to connect to a given Wi-Fi network. These "
          "settings include the name (SSID) of the network as well "
          "as the security parameters used by the WiFiEndpoint to "
          "authenticate to the network and encrypt frames it "
          "transmits into the network and decrypt the frames it "
          "receives from the network. This method addresses the "
          "following update scenarios, each of which is given a tag "
          "line that precedes its description. Each tag line is in "
          "the form A to B, in which A indicates the type of "
          "authentication method in the settings before "
          "UpdateWiFiSettings is executed, and B indicates the type "
          "of authentication method in the settings after "
          "UpdateWiFiSettings is executed. Each of A and B is "
          "replaced in the tag lines by either \"IEEE 802.1x\", "
          "which indicates that the authentication method in the "
          "settings is based on IEEE 802.1x, or \"Non-IEEE-802.1x\", "
          "which indicates that the authentication method in the "
          "settings is not based on IEEE 802.1x.\n"
          "\t* IEEE 802.1x to IEEE 802.1x, update all: Updating the "
          "properties of a CIM_WiFiEndpointSettings instance in "
          "which the AuthenticationMethod property indicates an "
          "IEEE 802.1x authentication method and the properties of "
          "the associated CIM_IEEE8021xSettings instance, without "
          "reverting to a non-IEEE-802.1x authentication method. In "
          "this scenario, all parameters should be not null.\n"
          "\t* IEEE 802.1x to IEEE 802.1x, update WiFi only: "
          "Updating the properties of a CIM_WiFiEndpointSettings "
          "instance in which the AuthenticationMethod property "
          "indicates an IEEE 802.1x authentication method and that "
          "accordingly has an associated CIM_IEEE8021xSettings "
          "instance, without updating the CIM_IEEE8021xSettings "
          "instance, and without reverting to a non-IEEE-802.1x "
          "authentication method. In this scenario, the "
          "IEEE8021xSettingsInput parameter should be null and all "
          "other parameters should be not null.\n"
          "\t* IEEE 802.1x to IEEE 802.1x, update IEEE 802.1x only: "
          "Updating the properties of a CIM_IEEE8021xSettings "
          "instance that has an associated CIM_WiFiEndpointSettings "
          "instance without updating the CIM_WiFiEndpointSettings "
          "instance. In this scenario, the "
          "WiFiEndpointSettingsInput parameter should be null and "
          "all other parameters should be not null.\n"
          "\t* Non-IEEE-802.1x to Non-IEEE-802.1x: Updating the "
          "properties of a CIM_WiFiEndpointSettings instance in "
          "which the AuthenticationMethod property indicates a "
          "non-IEEE-802.1x authentication method, and that "
          "accordingly does not have an associated "
          "CIM_IEEE8021xSettings instance, without changing the "
          "authentication method to an IEEE 802.1x method. In this "
          "scenario, the WiFiEndpointSettings and "
          "WiFiEndpointSettingsInput parameters should be not null, "
          "and the IEEE8021xSettings and IEEE8021xSettingsInput "
          "parameters should be null.\n"
          "\t* Non-IEEE-802.1x to IEEE 802.1x: Updating the "
          "properties of a CIM_WiFiEndpointSettings instance in "
          "which the AuthenticationMethod property indicates a "
          "non-IEEE-802.1x authentication method, and that "
          "accordingly does not have an associated "
          "CIM_IEEE8021xSettings instance, and changing the "
          "authentication method to an IEEE 802.1x method. In this "
          "scenario, the IEEE8021xSettingsInput parameter should be "
          "null, and all other parameters should be not null. An "
          "instance of CIM_IEEE8021xSettings should first be "
          "created using the intrinsic method CreateInstance. Then, "
          "this method should be used with all parameters except "
          "IEEE8021xSettingsInput not null. This method shall "
          "update WiFiEndpointSettings and create a new instance of "
          "CIM_ConcreteComponent between WiFiEndpointSettings and IEEE8021xSettings.\n"
          "\t* IEEE 802.1x to Non-IEEE-802.1x: Updating the "
          "properties of a CIM_WiFiEndpointSettings instance in "
          "which the AuthenticationMethod property indicates an "
          "IEEE 802.1x authentication method and that accordingly "
          "has an associated CIM_IEEE8021xSettings instance, and "
          "reverting to a non-IEEE-802.1x authentication method. In "
          "this scenario, the IEEE8021xSettingsInput should be "
          "null, and all other parameters should be not null. This "
          "method shall delete the CIM_ConcreteComponent instance "
          "between the instances referenced by the "
          "WiFiEndpointSettings and IEEE8021xSettings parameters. "
          "If this CIM_ConcreteComponent instance is the last "
          "CIM_ConcreteComponent instance that references the "
          "CIM_IEEE8021xSettings instance referenced by the "
          "IEEE8021xSettings parameter, and the instance of "
          "CIM_IEEE8021xSettings referenced by the "
          "IEEE8021xSettings parameter was created by "
          "AddWiFiEndpointSettings, then this method shall also "
          "delete this CIM_IEEE8021xSettings instance.\n"
          "This method shall not apply the updated settings to any "
          "instance of CIM_WiFiEndpoint." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..4095", "4096..32767", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Failed", "Invalid Parameter", "Invalid Reference", 
          "DMTF Reserved", "Method Reserved", "Vendor Specified" }]
   uint32 UpdateWiFiSettings(
         [Required, IN, OUT, Description ( 
             "Shall reference the CIM_WiFiEndpointSettings "
             "instance that shall be updated by this method." )]
      CIM_WiFiEndpointSettings REF WiFiEndpointSettings, 
         [IN, Description ( 
             "If not null, shall provide the new property values "
             "for the instance of CIM_WiFiEndpointSettings "
             "referenced by the WiFiEndpointSettings parameter." ), 
          EmbeddedInstance ( "CIM_WiFiEndpointSettings" )]
      string WiFiEndpointSettingsInput, 
         [IN, Description ( 
             "If not null, shall provide the new property values "
             "for the instance of CIM_IEEE8021xSettings "
             "referenced by the IEEE8021xSettings parameter. If "
             "the IEEE8021xSettings is null and the "
             "IEEE8021xSettingsInput parameter is not null, this "
             "method shall return 2 (\"Unknown/Unspecified "
             "Error\")." ), 
          EmbeddedInstance ( "CIM_IEEE8021xSettings" )]
      string IEEE8021xSettingsInput, 
         [IN, Description ( 
             "References a credential that shall be used to "
             "authenticate the CIM_WiFiEndpoint to a IEEE 802.1x "
             "authentication server." )]
      CIM_Credential REF ClientCredential, 
         [IN, Description ( 
             "References a credential that shall be used as a "
             "trusted root certificate by the CIM_WiFiEndpoint "
             "when it authenticates the leaf certificate "
             "provided by the authentication server." )]
      CIM_Credential REF CACredential, 
         [IN, OUT, Description ( 
             "If not null, shall reference the "
             "CIM_IEEE8021xSettings instance that shall be "
             "updated by this method." )]
      CIM_IEEE8021xSettings REF IEEE8021xSettings);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_CommMechanismForObjectManagerAdapter" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CommMechanismForAdapter is an association between an "
       "ObjectManager\'s communication mechanism and a ProtocolAdapter "
       "that supports that mechanism to translate requests and "
       "responses for the Object Manager." )]
class CIM_CommMechanismForAdapter : CIM_Dependency {

      [Deprecated { 
          "CIM_CommMechanismForObjectManagerAdapter.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "The specific ProtocolAdapter whose communication "
          "mechanism with the CIM Object Manager is described." )]
   CIM_ProtocolAdapter REF Antecedent;

      [Deprecated { 
          "CIM_CommMechanismForObjectManagerAdapter.Dependent" }, 
       Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The encoding/protocol/set of operations that may be used "
          "to communicate between the Object Manager and the "
          "referenced ProtocolAdapter." )]
   CIM_ObjectManagerCommunicationMechanism REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CommMechanismForManager is an association between an "
       "ObjectManager and an ObjectManagerCommunicationMechanism "
       "class. The latter describes a possible encoding/protocol/ set "
       "of operations for accessing the referenced ObjectManager." )]
class CIM_CommMechanismForManager : CIM_ServiceAccessBySAP {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The specific ObjectManager whose communication mechanism "
          "is described." )]
   CIM_ObjectManager REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The encoding/protocol/set of operations that may be used "
          "to communicate with the referenced ObjectManager." )]
   CIM_ObjectManagerCommunicationMechanism REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "CommMechanismForObjectManagerAdapter is an association between "
       "an ObjectManager\'s communication mechanism and a "
       "ObjectManagerAdapter that supports that mechanism to translate "
       "requests and responses for the Object Manager." )]
class CIM_CommMechanismForObjectManagerAdapter : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The specific ObjectManagerAdapter whose communication "
          "mechanism with the CIM Object Manager is described." )]
   CIM_ObjectManagerAdapter REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Description ( 
          "The encoding/protocol/set of operations that may be used "
          "to communicate between the Object Manager and the "
          "referenced ProtocolAdapter." )]
   CIM_ObjectManagerCommunicationMechanism REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Interop" ), 
    Description ( 
       "NamespaceInManager is an association describing the Namespaces "
       "hosted by a CIM ObjectManager." )]
class CIM_NamespaceInManager : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ObjectManager containing a Namespace." )]
   CIM_ObjectManager REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( "The Namespace in an ObjectManager." )]
   CIM_Namespace REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "IPsecPolicyForEndpoint associates a PolicyGroup with a "
       "specific IP endpoint. This association\'s policies take "
       "priority over any PolicyGroup defined generically for the "
       "hosting system. The latter is defined using the "
       "IPsecPolicyForSystem association." ), 
    MappingStrings { "IPSP Policy Model.IETF|IPsecPolicyForEndpoint" }]
class CIM_IPsecPolicyForEndpoint : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The IPProtocolEndpoint that identifies an interface to "
          "which the PolicyGroup applies." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecPolicyForEndpoint.Antecedent" }]
   CIM_IPProtocolEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( 
          "The PolicyGroup that defines the IPsec negotiation "
          "policy for the Endpoint." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|IPsecPolicyForEndpoint.Dependent" }]
   CIM_PolicyGroup REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::IPsecPolicy" ), 
    Description ( 
       "RuleThatGeneratedSA associates a SecurityAssociationEndpoint "
       "with the SARule used to generate (or negotiate) it." )]
class CIM_RuleThatGeneratedSA : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 0 ), 
       Max ( 1 ), 
       Description ( "SARule that led to the Security Association." )]
   CIM_SARule REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "SecurityAssociationEndpoint created using the rule." )]
   CIM_SecurityAssociationEndpoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AFService 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This class represents a specialization to the general concept "
       "of forwarding network traffic by adding specific semantics "
       "that characterize the operation of the Assured Forwarding (AF) "
       "Service (RFC2597). This RFC defines four different AF classes "
       "to represent four different treatments of traffic (e.g., a "
       "different amount of forwarding resources, such as buffer space "
       "and bandwidth, are allocated). Within each AF class, IP "
       "packets are marked with one of three possible drop precedence "
       "values. The drop precedence of a packet determines the "
       "relative importance of that packet compared to other packets "
       "within the same AF class if congestion occurs. A congested "
       "interface will try to avoid dropping packets with a lower drop "
       "precedence value by instead discarding packets with a higher "
       "drop precedence value. \n"
       "\n"
       "Note that [R2597] defines 12 DSCPs that together represent the "
       "AF Per Hop Behavior (PHB) group. Implementations are free to "
       "extend this (e.g., add more classes and/or drop precedences). \n"
       "\n"
       "The AFService class is modeled as a specialization of "
       "DiffServService, which is in turn a specialization of "
       "QoSService. This enables it to be related to higher-level "
       "QoSServices, as well as to lower-level conditioning "
       "sub-services (e.g., classification, metering, dropping, "
       "queuing, and others)." )]
class CIM_AFService : CIM_DiffServService {

      [Description ( 
          "This property is an 8-bit unsigned integer that "
          "indicates the number of AF classes that this AF "
          "implementation uses. Among the instances aggregated into "
          "AFService (using QoSConditioningSubService), one SHOULD "
          "find markers with as many distinct values as is "
          "indicated by ClassNumber." )]
   uint8 ClassNumber;

      [Description ( 
          "This property is an 8-bit unsigned integer that "
          "indicates the number of drop precedence values that this "
          "AF implementation uses. The number of drop precedence "
          "values is the number PER AF CLASS. The corresponding "
          "droppers are found in the collection of "
          "ConditioningServices aggregated by "
          "QoSConditioningSubService." )]
   uint8 DropperNumber;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ASBGPEndpoints 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "This aggregation defines the different router interfaces that "
       "are running BGP in the AutonomousSystem." )]
class CIM_ASBGPEndpoints : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Max ( 1 ), 
       Description ( 
          "The AutonomousSystem that aggregates the router "
          "interfaces that are running BGP." )]
   CIM_AutonomousSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The router interfaces that are contained in the AS." )]
   CIM_BGPProtocolEndpoint REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPAdminDistance 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This is a specialization of the Dependency association, and "
       "defines the relationship between a BGPService and the "
       "AdministrativeDistances that it uses to control the (BGP) "
       "routing decisions that it makes." )]
class CIM_BGPAdminDistance : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The table of (global) administrative distances that are "
          "used by the BGPService." )]
   CIM_AdministrativeDistance REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The BGPService object that makes BGP routing decisions." )]
   CIM_BGPService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPPeerGroupService 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This defines the relationship between a BGPService and a "
       "specific BGPPeerGroup in which it is executing." )]
class CIM_BGPPeerGroupService : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The BGPPeerGroup in which the BGPService is executing." )]
   CIM_BGPPeerGroup REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The BGPService that is executing in the BGPPeerGroup." )]
   CIM_BGPService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BGPRoutingPolicy 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::BGP" ), 
    Description ( 
       "This is a specialization of the Dependency association, and "
       "defines the relationship between a BGPService and the "
       "RoutingPolicy that control it." )]
class CIM_BGPRoutingPolicy : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The BGP routing policy object." )]
   CIM_RoutingPolicy REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The BGPService that operates according to the routing policy."
           )]
   CIM_BGPService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_BindsToLANEndpoint 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "This association makes explicit the dependency of a SAP or "
       "ProtocolEndpoint on an underlying LANEndpoint, on the same "
       "system." )]
class CIM_BindsToLANEndpoint : CIM_BindsTo {

      [Override ( "Antecedent" ), 
       Description ( 
          "The underlying LANEndpoint, which is depended upon." )]
   CIM_LANEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The AccessPoint or ProtocolEndpoint dependent on the LANEndpoint."
           )]
   CIM_ServiceAccessPoint REF Dependent;

      [Description ( 
          "This describes the framing method for the upper layer "
          "SAP or Endpoint that is bound to the LANEndpoint. Note: "
          "\"Raw802.3\" is only known to be used with the IPX "
          "protocol." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Ethernet", "802.2", "SNAP", "Raw802.3" }]
   uint16 FrameType;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClassifierElement 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "ClassifierElement represents the linkage, within a single "
       "ClassifierService, between a FilterList (that defines the "
       "criteria to select packets from the stream of packets coming "
       "into the Service) and the next ConditioningService (to which "
       "the selected packets go after they leave the "
       "ClassifierService). ClassifierElement has no properties of its "
       "own. It is present to serve as an aggregated entity into "
       "ClassifierService (using the ClassifierElementIn "
       "ClassifierService association), and for associations with its "
       "FilterList (ClassifierElementUsesFilterList) and its next "
       "ConditioningService (NextServiceAfterClassifierElement). \n"
       "\n"
       "Note that a ClassifierElement may be associated with a "
       "ClassifierService through the NextServiceAfterClassifier "
       "Element association. This will occur when implementing "
       "hierarchical classification. In this case, the "
       "ClassifierElement MUST NOT instantiate the ClassifierElement "
       "UsesFilterList association. Further, when a ClassifierElement "
       "is associated with a ClassifierService as described above, the "
       "order of processing of the associated ClassifierService is a "
       "function of the ClassifierOrder property of the "
       "ClassifierElementInClassifierService aggregation." )]
class CIM_ClassifierElement : CIM_ClassifierService {


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClassifierElementInClassifierService 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This aggregation represents the relationship between a "
       "ClassifierService and the ClassifierElements that provide its "
       "fan-out function. ClassifierElements represent the traffic "
       "selectors for the Service. A ClassifierService typically "
       "aggregates multiple ClassifierElements. An individual Element, "
       "however, is aggregated only by a single ClassifierService." )]
class CIM_ClassifierElementInClassifierService : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The ClassifierService which aggregates ClassifierElements."
           )]
   CIM_ClassifierService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "The aggregated ClassifierElement, defined in the context "
          "of one ClassifierService." )]
   CIM_ClassifierElement REF PartComponent;

      [Description ( 
          "Because the filters for a classifier can overlap, it is "
          "necessary to specify the order in which the "
          "ClassifierElements are aggregated by a "
          "ClassifierService. This then dictates the order in which "
          "packets coming into the classifier are presented. Values "
          "are represented in ascending order: first \'1\', then "
          "\'2\', and so on. Different values MUST be assigned for "
          "each of the ClassifierElements aggregated by a given "
          "ClassifierService." )]
   uint32 ClassifierOrder;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClassifierElementUsesFilterList 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association relates one or more ClassifierElements with a "
       "FilterList that defines the criteria to select packets for the "
       "classifier to process. Note that a classifier is always "
       "modeled as a ClassifierService that aggregates a set of "
       "ClassifierElements. Each of these ClassifierElements is EITHER "
       "associated with a single FilterList OR associated to another "
       "ClassifierService (via NextServiceAfterClassifier Element to "
       "describe hierarchical classification)." )]
class CIM_ClassifierElementUsesFilterList : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "The FilterList that specifies the traffic criteria for a "
          "ClassifierElement." )]
   CIM_FilterList REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The ClassifierElement that depends on the FilterList for "
          "its traffic criteria." )]
   CIM_ClassifierElement REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ClassifierFilterSet 
// ==================================================================
   [Association, Deprecated { "CIM_ClassifierElementUsesFilterList", 
       "CIM_ClassifierElementInClassifierService" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "In order for a ClassifierService to correctly identify and "
       "process network traffic, that traffic must be described by "
       "FilterEntries, which are aggregated into FilterLists. This "
       "association defines the Dependency of the ClassifierService on "
       "FilterLists (and therefore, their FilterEntries). The "
       "cardinality of the association requires that the Classifier "
       "Service operate against at least one FilterList. \n"
       "\n"
       "The association is deprecated in lieu of associating Filter "
       "Lists to ClassifierElements, and ClassifierElements into "
       "ClassifierServices. The latter approach is very flexible "
       "regarding the implementations that can be modeled, and removes "
       "the need to track individual traffic streams using an "
       "artificial model property, TrafficClass. Using "
       "ClassifierElements, each stream is processed beginning with a "
       "single FilterList and progressing through various "
       "ConditioningServices, associated via instances of NextService." )]
class CIM_ClassifierFilterSet : CIM_Dependency {

      [Deprecated { "CIM_ClassifierElementUsesFilterList.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( 
          "The FilterList aggregating FilterEntries, these in turn "
          "describe how traffic is identified and processed by the "
          "ClassifierService." )]
   CIM_FilterList REF Antecedent;

      [Deprecated { "CIM_ClassifierElementUsesFilterList.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The ClassifierService which uses the FilterList and its "
          "aggregated FilterEntries." )]
   CIM_ClassifierService REF Dependent;

      [Deprecated { 
          "CIM_ClassifierElementInClassifierService.ClassifierOrder" }, 
       Description ( 
          "The ordering of the FilterLists used in the "
          "classification and forwarding functions of the "
          "ClassifierService." )]
   uint16 FilterListPosition;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EndpointInLink 
// ==================================================================
   [Association, Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "This association connects an OSPFLink to the OSPFProtocol "
       "Endpoints that this link aggregates." )]
class CIM_EndpointInLink : CIM_MemberOfCollection {

      [Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( "The OSPF link." )]
   CIM_OSPFLink REF Collection;

      [Override ( "Member" ), 
       Description ( "The OSPF protocol endpoint." )]
   CIM_OSPFProtocolEndpointBase REF Member;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FailNextScheduler 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "This association is a subclass of NextScheduler, and defines a "
       "predecessor-successor relationship between a NonWork "
       "ConservingSchedulingService and another PacketScheduling "
       "Service. It indicates that the NonWorkConserving scheduler may "
       "pass up a scheduling opportunity (thereby behaving in a "
       "non-work conserving manner), and make the resulting bandwidth "
       "available to the FollowingService scheduler." )]
class CIM_FailNextScheduler : CIM_NextScheduler {

      [Override ( "PrecedingService" ), 
       Description ( 
          "The NonWorkConservingSchedulingService whose excess "
          "bandwidth is made available to the scheduler identified "
          "by the FollowingService reference. The [0..n] "
          "cardinality indicates that a single FollowingService "
          "scheduler may have the opportunity to use the unused "
          "bandwidth of multiple prior non-work-conserving "
          "schedulers." )]
   CIM_NonWorkConservingSchedulingService REF PrecedingService;

      [Override ( "FollowingService" ), 
       Max ( 1 ), 
       Description ( 
          "A scheduler that may use the bandwidth available from "
          "the non-work conserving scheduler." )]
   CIM_PacketSchedulingService REF FollowingService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_FilterOfSecurityAssociation 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "FilterOfSecurityAssociation associates a network traffic "
       "specification (i.e., a FilterList) with a SecurityAssociation "
       "Endpoint, to which the filter list applies." )]
class CIM_FilterOfSecurityAssociation : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "FilterList describing the traffic to be selected/matched." )]
   CIM_FilterList REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "SecurityAssociation using the FilterList as its traffic selector."
           )]
   CIM_SecurityAssociationEndpoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ForwardedRoutes 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Routes" ), 
    Description ( 
       "This assocation makes explicit the IP routes that are defined "
       "in the context of a specific ForwardingService. Every "
       "ForwardingService can have its own unique set of IP routing "
       "destinations. The association is deprecated since it is "
       "incorrect to mandate the existence of a ForwardingService in "
       "order to define the existence of a route." )]
class CIM_ForwardedRoutes : CIM_RouteForwardedByService {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The forwarding service for the route." )]
   CIM_ForwardingService REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The IP route being forwarded." )]
   CIM_IPRoute REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_HostedNetworkPipe 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::Pipes" ), 
    Description ( 
       "HostedNetworkPipe is an association between a pipe and the "
       "network in whose context the pipe is defined. The cardinality "
       "of this association is 1-to-many. A network may host many "
       "pipes, and pipes are scoped/contained by only one network." )]
class CIM_HostedNetworkPipe : CIM_HostedDependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The hosting network." )]
   CIM_Network REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The pipe in the network." )]
   CIM_NetworkPipe REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IKESAEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "IKESAEndpoint is created in the first phase of SA negotiation "
       "and protects the key negotiation traffic. This endpoint is "
       "only created when IKE is the key exchange protocol. Other "
       "protocols and their endpoints will be defined in a future "
       "release." )]
class CIM_IKESAEndpoint : CIM_SecurityAssociationEndpoint {

      [Description ( 
          "Identifier of the IKE phase 1 negotiation initiator. "
          "Combined with the ResponderCookie, this value, in string "
          "form, may be used to construct the value of the key "
          "field \'Name\', inherited from ServiceAccessPoint." )]
   uint64 InitiatorCookie;

      [Description ( 
          "Identifier of the IKE phase 1 negotiation responder. "
          "Combined with the InitiatorCookie, this value, in string "
          "form, may be used to construct the value of the key "
          "field \'Name\', inherited from ServiceAccessPoint." )]
   uint64 ResponderCookie;

      [Description ( 
          "CipherAlgorithm is an enumeration that specifies the "
          "encryption algorithm used by the IKESAEndpoint. The list "
          "of algorithms was generated from Appendix A of RFC2409. "
          "Note that the enumeration is different than the RFC "
          "list, since the values of Unknown and Other are taken "
          "into account." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7", 
          "8..65000", "65001..65535" }, 
       Values { "Unknown", "Other", "DES", "IDEA", "Blowfish", 
          "RC5", "3DES", "CAST", "DMTF/IANA Reserved", 
          "Vendor Reserved" }, 
       MappingStrings { "RFC2409.IETF|Appendix A" }, 
       ModelCorrespondence { "CIM_IKESAEndpoint.OtherCipherAlgorithm" }]
   uint16 CipherAlgorithm;

      [Description ( 
          "Description of the encryption algorithm when the value 1 "
          "(\"Other\") is specified for the property, "
          "CipherAlgorithm." ), 
       ModelCorrespondence { "CIM_IKESAEndpoint.CipherAlgorithm" }]
   string OtherCipherAlgorithm;

      [Description ( 
          "HashAlgorithm is an enumeration that specifies the hash "
          "function used by the IKESAEndpoint. The list of "
          "algorithms was generated from Appendix A of RFC2409. "
          "Note that the enumeration is different than the RFC "
          "list, since the values of Unknown and Other are taken "
          "into account." ), 
       ValueMap { "0", "1", "2", "3", "4", "5..65000", "65001..65535" }, 
       Values { "Unknown", "Other", "MD5", "SHA-1", "Tiger", 
          "DMTF/IANA Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2409.IETF|Appendix A" }, 
       ModelCorrespondence { "CIM_IKESAEndpoint.OtherHashAlgorithm" }]
   uint16 HashAlgorithm;

      [Description ( 
          "Description of the hash function when the value 1 "
          "(\"Other\") is specified for the property, "
          "HashAlgorithm." ), 
       ModelCorrespondence { "CIM_IKESAEndpoint.HashAlgorithm" }]
   string OtherHashAlgorithm;

      [Description ( 
          "AuthenticationMethod is an enumeration that specifies "
          "the operation of the IKESAEndpoint. The list of methods "
          "was generated from Appendix A of RFC2409. Note that the "
          "enumeration is different than the RFC list, since the "
          "values of Unknown and Other are taken into account." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "7..65000", 
          "65001..65535" }, 
       Values { "Unknown", "Other", "Pre-shared Key", 
          "DSS Signatures", "RSA Signatures", "Encryption with RSA", 
          "Revised Encryption with RSA", "DMTF/IANA Reserved", 
          "Vendor Reserved" }, 
       MappingStrings { "RFC2409.IETF|Appendix A" }, 
       ModelCorrespondence { 
          "CIM_IKESAEndpoint.OtherAuthenticationMethod" }]
   uint16 AuthenticationMethod;

      [Description ( 
          "Description of the method when the value 1 (\"Other\") "
          "is specified for the property, AuthenticationMethod." ), 
       ModelCorrespondence { "CIM_IKESAEndpoint.AuthenticationMethod" }]
   string OtherAuthenticationMethod;

      [Description ( 
          "GroupId specifies the key exchange group ID. If the "
          "GroupID number is from the vendor-specific range "
          "(32768-65535), the VendorID qualifies the group number. "
          "Well-known group identifiers from RFC2412, Appendix E, "
          "are: Group 1=\'768 bit prime\', Group 2=\'1024 bit "
          "prime\', Group 3= \'Elliptic Curve Group with 155 bit "
          "field element\', Group 4= \'Large Elliptic Curve Group "
          "with 185 bit field element\', and Group 5=\'1536 bit "
          "prime\'." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "..", "0x8000.." }, 
       Values { "No Group/Non-Diffie-Hellman Exchange", 
          "DH-768 bit prime", "DH-1024 bit prime", 
          "EC2N-155 bit field element", 
          "EC2N-185 bit field element", "DH-1536 bit prime", 
          "Standard Group - Reserved", "Vendor Reserved" }, 
       MappingStrings { "RFC2412.IETF|Appendix E" }, 
       ModelCorrespondence { "CIM_IKESAEndpoint.VendorID" }]
   uint16 GroupId;

      [Description ( 
          "VendorID identifies the vendor when the value of GroupID "
          "is in the vendor-specific range, 32768 to 65535." ), 
       ModelCorrespondence { "CIM_IKESAEndpoint.GroupId" }]
   string VendorID;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InboundVLAN 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "This class is deprecated in lieu or not being necessary to "
       "indicate whether the VLAN is inbound/outbound This association "
       "makes explicit the operational dependencies of a SwitchPort "
       "when operating in a VLAN. If there is an association between a "
       "particular SwitchPort and a particular VLAN, then there is the "
       "possibility that a packet received by the port will be "
       "assigned to the VLAN (or if the packet already has a VLAN tag, "
       "that the packet will not be dropped). If there is no such "
       "association, then there is NO possibility that a packet "
       "received by the port will progress through the switch having "
       "been assigned to the referenced VLAN." )]
class CIM_InboundVLAN : CIM_SAPSAPDependency {

      [Deprecated { "No Value" }, 
       Override ( "Antecedent" ), 
       Description ( "The VLAN to which the SwitchPort is assigned." )]
   CIM_VLAN REF Antecedent;

      [Deprecated { "No Value" }, 
       Override ( "Dependent" ), 
       Description ( "The SwitchPort on the VLAN." )]
   CIM_SwitchPort REF Dependent;

      [Deprecated { "No Value" }, 
       Description ( 
          "If TRUE, packets already tagged with this VLAN number "
          "will be accepted when arriving at this port. For "
          "example, if there is an InboundVLAN association between "
          "port 12 and VLAN 7 for which Tagged is true, then when a "
          "packet tagged with VLAN 7 arrives at port 12, the packet "
          "will be accepted into the switch for further processing. "
          "If there is no such association, then the packet will be "
          "dropped. \n"
          "\n"
          "If FALSE, it means that any untagged packets arriving at "
          "this port MIGHT be classified into the associated VLAN. "
          "If, for a particular SwitchPort, there is only one "
          "instance of the association for which Tagged is FALSE, "
          "then all incoming untagged packets will be classified "
          "into that VLAN. This is the typical configuration of a "
          "non-trunk port in a switch implementing port-based "
          "VLANs. If there is more than one such association "
          "instance, then the packet MIGHT be classified into any "
          "one of them, based on some criterion other than the "
          "identity of the switch port. For example, in a MAC-based "
          "VLAN switch, the decision would be based on the source "
          "MAC address. In a protocol-based VLAN switch, the "
          "decision would be based on the values of some set of "
          "bits in the packet. \n"
          "\n"
          "Note that the MAC address is formatted as twelve "
          "hexadecimal digits (e.g., \"010203040506\"), with each "
          "pair representing one of the six octets of the MAC "
          "address in \"canonical\" bit order according to RFC "
          "2469." )]
   boolean Tagged;

      [Deprecated { "No Value" }, 
       Description ( 
          "Default should be TRUE if untagged packets received by "
          "the SwitchPort are assigned to the VLAN. For "
          "802.1Q-compliant ports, the Default property should be "
          "TRUE on the association instance connecting a SwitchPort "
          "to the VLAN corresponding to the port\'s PVID. Default "
          "MUST never be TRUE if Tagged is true -- it applies only "
          "to untagged packets." )]
   boolean Default;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_InSegment 
// ==================================================================
   [Association, Deprecated { "CIM_MemberOfCollection" }, 
    Aggregation, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "Defines a LANEndpoint as a member of a specific LANSegment. "
       "Note that one of this association\'s references (LANSegment) "
       "is deprecated, as well as its superclass (InLogicalNetwork). "
       "Following the same logic as its parent, this association is "
       "deprecated to the MemberOfCollection association." )]
class CIM_InSegment : CIM_InLogicalNetwork {

      [Deprecated { "CIM_MemberOfCollection.Collection" }, 
       Aggregate, Override ( "Collection" ), 
       Max ( 1 ), 
       Description ( 
          "The LANSegment that groups the LANEndpoint instances." )]
   CIM_LANSegment REF Collection;

      [Deprecated { "CIM_MemberOfCollection.Member" }, 
       Override ( "Member" ), 
       Description ( 
          "A child LANEndpoint that is a component of the LANSegment."
           )]
   CIM_LANEndpoint REF Member;


};

// Copyright (c) 2008 DMTF.  All rights reserved.
   [Version ( "2.19.0" ), 
    UMLPackagePath ( "CIM::Network::IP" ), 
    Description ( 
       "CIM_IPConfigurationService provides management of the IP "
       "configuration associated with a LANEndpoint or "
       "IPProtocolEndpoint." )]
class CIM_IPConfigurationService : CIM_Service {


      [Description ( 
          "Apply the configuration represented by the "
          "CIM_IPAssignmentSettingData to the specified "
          "IPProtocolEndpoint. This will result in the value of the "
          "IsCurrent property of the CIM_ElementSettingData which "
          "associates the specified CIM_IPAssignmentSettingData and "
          "specified CIM_IPProtocolEndpoint having a value of "
          "\"true\". The IsCurrent property of any other instances "
          "of CIM_ElementSettingData which reference the specified "
          "CIM_IPProtocolEndpoint and an instance of "
          "CIM_IPAssignmentSettingData will have a value of "
          "\"false\". Each instance of CIM_IPAssignmentSettingData "
          "which is aggregated into the target "
          "CIM_IPAssignmentSettingData instance will be applied to "
          "the CIM_ProtocolEndpoint to which it is associated via "
          "an instance of CIM_ElementSettingData where the "
          "CIM_ProtocolEndpoint is associated with the target "
          "CIM_IPProtocolEndpoint via an instance of "
          "CIM_EndpointIdentity." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "4096", "..", 
          "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Unknown/Unspecified Error", "Failed", 
          "Invalid Parameter", "Busy", 
          "Method Parameters Checked - Job Started", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint32 ApplySettingToIPProtocolEndpoint(
         [Required, IN, Description ( 
             "The IPAssignmentSettingData to apply." )]
      CIM_IPAssignmentSettingData REF Configuration, 
         [Required, IN, Description ( 
             "The IPProtocolEndpoint to which the configuration "
             "will be applied." )]
      CIM_IPProtocolEndpoint REF Endpoint, 
         [IN ( false ), OUT, Description ( 
             "Reference to the job spawned if the operation "
             "continues after the method returns. This parameter "
             "MUST NOT be null if a value of 4096 is returned. "
             "This parameter MUST be null if any other value is "
             "returned by the method." )]
      CIM_ConcreteJob REF Job);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IPsecSAEndpoint 
// ==================================================================
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "IPsecSAEndpoints are types of SecurityAssociationEndpoints "
       "representing both negotiated and static SAs that correspond to "
       "AH, ESP, or IPCOMP transforms." )]
class CIM_IPsecSAEndpoint : CIM_SecurityAssociationEndpoint {

      [Description ( 
          "SPI contains the Security Parameter Index of the SA. "
          "This value in string form may also be used in the key "
          "field \'Name\' inherited from ServiceAccessPoint." )]
   uint32 SPI;

      [Description ( 
          "InboundDirection specifies whether the SA applies to "
          "inbound (TRUE) or outbound (FALSE) traffic." )]
   boolean InboundDirection;

      [Description ( 
          "EncapsulationMode indicates whether the IPsecSAEndpoint "
          "uses transport or tunnel encapsulation." ), 
       ValueMap { "0", "2", "3" }, 
       Values { "Unknown", "Tunnel", "Transport" }]
   uint16 EncapsulationMode;

      [Description ( 
          "DFHandling controls how the \'Don\'t Fragment\' bit is "
          "managed by the IPsecSAEndpoint." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", 
          "Copy from Internal to External IP Header", 
          "Set DF Bit in External Header to 1", 
          "Set DF Bit in External Header to 0" }]
   uint16 DFHandling;

      [Description ( 
          "PFSInUse indicates whether perfect forward secrecy is "
          "required when refreshing keys." )]
   boolean PFSInUse;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.11.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "This is an iSCSI-specific SCSIProtocolEndpoint. ConnectionType "
       "MUST be \'iSCSI\'. \n"
       "An iSCSIProtocolEndpoint represents an iSCSI port, which is "
       "the usage of a subset of network portals (TCP+IP "
       "ProtocolEndpoints) in a Portal Group by an iSCSI node. The "
       "BindsTo associations from iSCSIProtocolEndpoint to "
       "TCPProtocolEndpoints makes this relationship explicit. \n"
       "For an iSCSI target, the Identifier property (the Target "
       "Portal Group Tag) makes the relationship unique. \n"
       "For an iSCSI initiator, the session identifier makes the "
       "initiator port unique within the node." )]
class CIM_iSCSIProtocolEndpoint : CIM_SCSIProtocolEndpoint {

      [Override ( "Name" ), 
       Description ( 
          "The format of Name is based on the ConnectionType "
          "property. For iSCSI, the Name property of an "
          "SCSIProtocolEndpoint MUST contain the iSCSI port name as "
          "described in the iSCSI RFC (currently "
          "http://www.ietf.org/internet-drafts/draft-ietf- "
          "ips-iscsi-20.txt) - \n"
          "<iSCSI node name> + \'i,\' + ISID for initiators, \n"
          "<iSCSI node name> + \'t,\' + TPGT for targets, \n"
          "where <iSCSI node name> can be any of the standard iSCSI "
          "name namespaces (eg. iqn, eui); and includes the "
          "namespace prefix." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { 
          "CIM_SCSIProtocolEndpoint.ConnectionType", 
          "CIM_SCSIProtocolEndpoint.OtherConnectionType" }]
   string Name;

      [Required, Description ( 
          "If this is an Initiator PE, Identifier MUST contain the "
          "ISID, if this is a Target PE, Identifier MUST contain "
          "the Target Portal Group Tag (TGPT). Each "
          "iSCSIProtocolEndpoint associated to a common "
          "SCSIProtocolController (iSCSI node) MUST have a unique "
          "Identifier. This field is formatted as 12 hexadecimal "
          "digits." ), 
       MaxLen ( 13 )]
   string Identifier;

      [Override ( "Role" ), 
       Description ( 
          "For iSCSI, each SCSIProtocolEndpoint MUST act as either "
          "a target or an initiator endpoint." ), 
       ValueMap { "2", "3" }, 
       Values { "Initiator", "Target" }]
   uint16 Role;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_NextServiceAfterClassifierElement 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "An association used to establish a predecessor-successor "
       "relationship between a single ClassifierElement (within a "
       "ClassifierService) and the next ConditioningService object "
       "that further processes the selected traffic. Note that the "
       "cardinalities indicate that a FollowingService MUST be "
       "defined, after the ClassifierElement. This is because there is "
       "no reason to classify traffic unless further processing will "
       "be done." )]
class CIM_NextServiceAfterClassifierElement : CIM_NextService {

      [Override ( "PrecedingService" ), 
       Description ( 
          "The ClassifierElement that selects traffic to be passed "
          "to the FollowingService." )]
   CIM_ClassifierElement REF PrecedingService;

      [Override ( "FollowingService" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The ConditioningService that follows the ClassifierElement."
           )]
   CIM_ConditioningService REF FollowingService;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFArea 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "This class represents an OSPF area. The definition of an OSPF "
       "area from RFC2328, is \'OSPF allows sets of networks to be "
       "grouped together. Such a grouping is called an area. The "
       "topology of an area is hidden from the rest of the Autonomous "
       "System. This information hiding enables a significant "
       "reduction in routing traffic. Also, routing within the area is "
       "determined only by the area\'s own topology, lending the area "
       "protection from bad routing data.\' This class has a \'Type\' "
       "propery, which distinguishes between the different area types. "
       "This approach was chosen, because it provides a simpler way to "
       "indicate the type of an area, and additional subclassing is "
       "not needed at this time." )]
class CIM_OSPFArea : CIM_RoutingProtocolDomain {

      [Description ( 
          "The area ID of this OSPF area, see C.2 in RFC 2328." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfAreaId" }]
   uint32 AreaID;

      [Required, Description ( "The type of the OSPF area." ), 
       ValueMap { "2", "3", "4" }, 
       Values { "Plain", "Stub", "NSSA" }]
   uint16 AreaType;

      [Description ( 
          "When the number of non-default AS-external-LSAs in a "
          "router\'s link-state database reaches this limit, the "
          "router enters OverflowState, see 2.1 in RFC 1765." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfExtLsdbLimit" }]
   uint32 ExtLsdbLimit;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OSPFProtocolEndpoint 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::ProtocolEndpoints" ), 
    Description ( 
       "This class represents the OSPF configuration of an interface "
       "running OSPF. The instance of this class should be connected "
       "to an IPProtocolEndpoint instance via a BindsTo association. "
       "The IPProtocolEndpoint instance is the Antecedent and the "
       "OSPFProtocolEndpoint instance is the Dependent in the BindsTo "
       "association." )]
class CIM_OSPFProtocolEndpoint : CIM_OSPFProtocolEndpointBase {

      [Description ( 
          "When two routers attached to a network both attempt to "
          "become the Designated Router, the one with the highest "
          "(i.e. largest) Priority takes precedence, see C.3 in RFC "
          "2328. Only routers with greater than zero priority are "
          "eligible to become Designated Router." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfRtrPriority" }]
   uint8 Priority;

      [Description ( 
          "If a neighbouring router on an NBMA (NonBroadcast "
          "MultiAccess) link becomes inactive, it is still "
          "necessary to send Hello Packets to the dead neighbor. "
          "These packets will be sent at the reduced rate, which "
          "should be much larger than HelloInterval, see C.5 in RFC "
          "2328." ), 
       Units ( "Seconds" ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfPollInterval" }]
   uint16 PollInterval;

      [Description ( 
          "The cost of the routes through this OSPF endpoint, see "
          "C.3 in RFC 2328." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfMetricStatus" }]
   uint16 Cost;

      [Description ( 
          "Indicates whether the interface connects to an on-demand "
          "circuit, see RFC 1793." ), 
       MappingStrings { "MIB.IETF|OSPF-MIB.ospfIfDemand" }]
   boolean IfDemand;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_OutboundVLAN 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "This class is deprecated in lieu or not being necessary to "
       "indicate whether the VLAN is inbound/outbound This association "
       "makes explicit the operational dependencies of a SwitchPort "
       "when operating in a VLAN. If there is no instance of "
       "OutboundVLAN between a given SwitchPort and VLAN, then any "
       "packet that has been assigned to the VLAN and whose "
       "destination address is associated with the port will be "
       "dropped by the switch without being transmitted. Otherwise, "
       "the packet will be transmitted." )]
class CIM_OutboundVLAN : CIM_SAPSAPDependency {

      [Deprecated { "No Value" }, 
       Override ( "Antecedent" ), 
       Description ( "The VLAN to which the SwitchPort is assigned." )]
   CIM_VLAN REF Antecedent;

      [Deprecated { "No Value" }, 
       Override ( "Dependent" ), 
       Description ( "The SwitchPort on the VLAN." )]
   CIM_SwitchPort REF Dependent;

      [Deprecated { "No Value" }, 
       Description ( 
          "If Tagged is TRUE, then the packet will be transmitted "
          "in encapsulated form, tagged with the associated VLAN "
          "tag. If Tagged is FALSE, the packet will be trasmitted "
          "without any VLAN tag." )]
   boolean Tagged;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_PeerOfSAEndpoint 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "PeerOfIPsecSAEndpoint identifies the peer of the IPsecSAEndpoint."
        )]
class CIM_PeerOfSAEndpoint : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The peer for the SAEndpoint." )]
   CIM_RemoteServiceAccessPoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The IPsecSAEndpoint which has a peer." )]
   CIM_IPsecSAEndpoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Phase1SAUsedForPhase2 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "Phase1SAUsedForPhase2 associates a phase 1 endpoint (such as "
       "an IKESAEndpoint) with an IPsecSAEndpoint that was negotiated "
       "using that phase 1 Security Association." )]
class CIM_Phase1SAUsedForPhase2 : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "Phase 1 SAEndpoint that protected the negotiation of the "
          "phase 2 Security Association. An example of a phase 1 "
          "endpoint is an IKESAEndpoint." )]
   CIM_SecurityAssociationEndpoint REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The phase 2 SAEndpoint." )]
   CIM_IPsecSAEndpoint REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RelatedSpanningTree 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This association identifies the spanning tree in which a "
       "forwarding database (TransparentBridgingService) is nested." )]
class CIM_RelatedSpanningTree : CIM_ServiceServiceDependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The TransparentBridgingService that supports a "
          "SpanningTreeService." )]
   CIM_TransparentBridgingService REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( 
          "The SpanningTree in which a TransparentBridgingService is nested."
           )]
   CIM_SpanningTreeService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_RelatedTransparentBridgingService 
// ==================================================================
   [Association, Deprecated { "No Value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::VLAN" ), 
    Description ( 
       "This class is deprecated as a fall out of the previous "
       "deprecations within the existing model The association between "
       "a VLAN and the forwarding database (some use the term "
       "filtering database) used to determine which port a packet "
       "should be transmitted on, given that it is assigned to the "
       "VLAN and that it has a particular destination MAC address. The "
       "TransparentBridgingService represents a forwarding database." )]
class CIM_RelatedTransparentBridgingService : CIM_ServiceSAPDependency {

      [Deprecated { "No Value" }, 
       Override ( "Antecedent" ), 
       Description ( "The VLAN." )]
   CIM_VLAN REF Antecedent;

      [Deprecated { "No Value" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The BridgingService that determines the port, given the "
          "the VLAN and addressing information." )]
   CIM_TransparentBridgingService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SNMPTrapTarget 
// ==================================================================
   [Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SNMP" ), 
    Description ( 
       "SNMPTrapTarget contains information describing a remote "
       "system, to which Informs and Traps are sent. An SNMPService is "
       "related via a ServiceSAPDependency association to one or more "
       "instances of this class." )]
class CIM_SNMPTrapTarget : CIM_RemotePort {

      [Override ( "AccessInfo" ), 
       Description ( "The host address." )]
   string AccessInfo;

      [Override ( "PortProtocol" ), 
       Description ( 
          "A UDP port to which the traps/informs are sent." )]
   uint16 PortProtocol = 3;

      [Override ( "PortInfo" ), 
       Description ( 
          "The UDP port number to which the traps/informs are sent. "
          "The default is port 162." )]
   string PortInfo = "162";

      [Description ( 
          "Allows the selection of the notification message - Traps "
          "or Informs. By default, Traps are selected." ), 
       ValueMap { "1", "2" }, 
       Values { "Traps", "Informs" }]
   uint16 NotificationMessage = 1;

      [Description ( 
          "The SNMP version used to send the traps or informs. Note "
          "that v1 does not support informs." ), 
       ValueMap { "1", "2", "3" }, 
       Values { "v1", "v2C", "v3" }]
   uint16 SNMPVersion;

      [Description ( 
          "A community string/password to send with the trap operation."
           )]
   string CommunityString;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_Switchable 
// ==================================================================
   [Association, Deprecated { "CIM_EndpointIdentity" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A switch port has a LANEndpoint that is exposed via this "
       "relationship. The associaiton is deprecated since a binding is "
       "not the correct relationship. The SwitchPort is simply another "
       "aspect of the LANEndpoint - which is indicated by the "
       "EndpointIdentity relationship." )]
class CIM_Switchable : CIM_BindsToLANEndpoint {

      [Deprecated { "CIM_EndpointIdentity.SystemElement" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The switch port." )]
   CIM_LANEndpoint REF Antecedent;

      [Deprecated { "CIM_EndpointIdentity.SameElement" }, 
       Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The LAN endpoint." )]
   CIM_SwitchPort REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchesAmong 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "A SwitchService switches frames between SwitchPorts. This "
       "association makes that relationship explicit." )]
class CIM_SwitchesAmong : CIM_ForwardsAmong {

      [Override ( "Antecedent" ), 
       Description ( "The switch port." )]
   CIM_SwitchPort REF Antecedent;

      [Override ( "Dependent" ), 
       Max ( 1 ), 
       Description ( "The switching service." )]
   CIM_SwitchService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SwitchServiceTransparentBridging 
// ==================================================================
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "An association linking a SwitchService to a component "
       "TransparentBridgingService. The cardinality of the "
       "TransparentBridgingService is 0..1 for a VLAN-unaware switch." )]
class CIM_SwitchServiceTransparentBridging : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Description ( "The parent SwitchService." )]
   CIM_SwitchService REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The component BridgingService." )]
   CIM_TransparentBridgingService REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TransformOfSecurityAssociation 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Network::IPsec" ), 
    Description ( 
       "TransformOfSecurityAssociation maps a SecurityAssociation "
       "Endpoint with the transform that it uses. For security, no "
       "keying material of the SA is exposed." )]
class CIM_TransformOfSecurityAssociation : CIM_ElementSettingData {

      [Override ( "SettingData" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "Transform of the IPsecSAEndpoint." )]
   CIM_SATransform REF SettingData;

      [Override ( "ManagedElement" ), 
       Description ( "The IPsecSAEndpoint that uses the transform." )]
   CIM_IPsecSAEndpoint REF ManagedElement;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_TransparentBridgingDynamicForwarding 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::SwitchingBridging" ), 
    Description ( 
       "This association links an instance of the Transparent "
       "BridgingService to the entries of its forwarding database. The "
       "forwarding database is weak to the Service." )]
class CIM_TransparentBridgingDynamicForwarding : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The transparent bridging service." )]
   CIM_TransparentBridgingService REF Antecedent;

      [Override ( "Dependent" ), 
       Weak, Description ( 
          "Dynamic Forwarding Entry of forwarding database." )]
   CIM_DynamicForwardingEntry REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "This association specifies that a credential management "
       "service (e.g., CertificateAuthority or Kerberos key "
       "distribution service) is to be trusted to certify credentials, "
       "presented at the packet level. The association defines an "
       "\'approved\' CredentialManagementService that is used for "
       "validation. \n"
       "\n"
       "The use of this class is best explained via an example: \n"
       "If a CertificateAuthority is specified using this association, "
       "and a corresponding X509CredentialFilterEntry is also "
       "associated with a PacketFilterCondition (via the relationship, "
       "FilterOfPacketCondition), then the credential MUST match the "
       "FilterEntry data AND be certified by that CA (or one of the "
       "CredentialManagementServices in its trust hierarchy). "
       "Otherwise, the X509CredentialFilterEntry is deemed not to "
       "match. If a credential is certified by a "
       "CredentialManagementService associated with the "
       "PacketFilterCondition through the AcceptCredentialFrom "
       "relationship, but there is no corresponding "
       "CredentialFilterEntry, then all credentials from the related "
       "service are considered to match." ), 
    MappingStrings { "IPSP Policy Model.IETF|AcceptCredentialFrom" }]
class CIM_AcceptCredentialFrom : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( 
          "The CredentialManagementService that is issuing the "
          "credential to be matched in the PacketFilterCondition." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|AcceptCredentialFrom.Antecedent" }]
   CIM_CredentialManagementService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The PacketFilterCondition that associates the "
          "CredentialManagementService and any "
          "FilterLists/FilterEntries." ), 
       MappingStrings { 
          "IPSP Policy Model.IETF|AcceptCredentialFrom.Dependent" }]
   CIM_PacketFilterCondition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_ReusablePolicy" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The ReusablePolicy association is a more general relationship "
       "that incorporates both Conditions and Actions as well as any "
       "other policy subclass. \n"
       "\n"
       "This class represents the hosting of reusable PolicyActions by "
       "a PolicyRepository. A reusable Policy Action is always related "
       "to a single PolicyRepository, via this association. \n"
       "\n"
       "Note, that an instance of PolicyAction can be either reusable "
       "or rule-specific. When the Action is rule- specific, it shall "
       "not be related to any PolicyRepository via the "
       "PolicyActionInPolicyRepository association." )]
class CIM_PolicyActionInPolicyRepository : CIM_PolicyInSystem {

      [Deprecated { "CIM_ReusablePolicy.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "This property represents a PolicyRepository hosting one "
          "or more PolicyActions. A reusable PolicyAction is always "
          "related to exactly one PolicyRepository via the "
          "PolicyActionInPolicyRepository association. The [0..1] "
          "cardinality for this property covers the two types of "
          "PolicyActions: 0 for a rule-specific PolicyAction, 1 for "
          "a reusable one." )]
   CIM_PolicyRepository REF Antecedent;

      [Deprecated { "CIM_ReusablePolicy.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "This property holds the name of a PolicyAction hosted in "
          "the PolicyRepository." )]
   CIM_PolicyAction REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Deprecated { "CIM_ReusablePolicy" }, 
    Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The ReusablePolicy association is a more general relationship "
       "that incorporates both Conditions and Actions as well as any "
       "other policy subclass. \n"
       "\n"
       "This class represents the hosting of reusable PolicyConditions "
       "by a PolicyRepository. A reusable Policy Condition is always "
       "related to a single PolicyRepository, via this association. \n"
       "\n"
       "Note, that an instance of PolicyCondition can be either "
       "reusable or rule-specific. When the Condition is rule- "
       "specific, it shall not be related to any PolicyRepository via "
       "the PolicyConditionInPolicyRepository association." )]
class CIM_PolicyConditionInPolicyRepository : CIM_PolicyInSystem {

      [Deprecated { "CIM_ReusablePolicy.Antecedent" }, 
       Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "This property identifies a PolicyRepository hosting one "
          "or more PolicyConditions. A reusable PolicyCondition is "
          "always related to exactly one PolicyRepository via the "
          "PolicyConditionInPolicyRepository association. The "
          "[0..1] cardinality for this property covers the two "
          "types of PolicyConditions: 0 for a rule-specific "
          "PolicyCondition, 1 for a reusable one." )]
   CIM_PolicyRepository REF Antecedent;

      [Deprecated { "CIM_ReusablePolicy.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "This property holds the name of a PolicyCondition hosted "
          "in the PolicyRepository." )]
   CIM_PolicyCondition REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Aggregation, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "A relationship that aggregates one or more lower-level "
       "ReusablePolicyContainer instances into a higher-level "
       "ReusablePolicyContainer." )]
class CIM_PolicyContainerInPolicyContainer : CIM_SystemComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Description ( 
          "A ReusablePolicyContainer that aggregates other "
          "ReusablePolicyContainers." )]
   CIM_ReusablePolicyContainer REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( 
          "A ReusablePolicyContainer aggregated by another "
          "ReusablePolicyContainer." )]
   CIM_ReusablePolicyContainer REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Policy" ), 
    Description ( 
       "The ReusablePolicy association provides for the reuse of any "
       "subclass of Policy in a ReusablePolicyContainer." )]
class CIM_ReusablePolicy : CIM_PolicyInSystem {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( 
          "This property identifies a ReusablePolicyContainer that "
          "provides the administrative scope for the reuse of the "
          "referenced policy element." )]
   CIM_ReusablePolicyContainer REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "A reusable policy element." )]
   CIM_Policy REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AllocatedDMA 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between a LogicalDevice and a DMA System "
       "Resource indicating that the DMA Channel is assigned to the "
       "Device." )]
class CIM_AllocatedDMA : CIM_AllocatedResource {

      [Override ( "Antecedent" ), 
       Description ( "The DMA Channel." )]
   CIM_DMA REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The LogicalDevice to which the Resource is assigned." )]
   CIM_LogicalDevice REF Dependent;

      [Description ( 
          "Boolean indicating whether the LogicalDevice can act as "
          "a bus master on the DMA Channel." ), 
       MappingStrings { "MIF.DMTF|System Resource DMA Info|001.6" }]
   boolean BusMaster;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemResource 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between a ComputerSystem and the System "
       "Resources available on it." )]
class CIM_ComputerSystemResource : CIM_ResourceOfSystem {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "A SystemResource of the ComputerSystem." )]
   CIM_SystemResource REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AuthenticateForUse 
// ==================================================================
   [Association, Deprecated { "No value" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::AuthenticationReqmt" ), 
    Description ( 
       "CIM_AuthenticateForUse is an association used to provide an "
       "AuthenticationService with the AuthenticationRequirement it "
       "needs to do its job. This association is unnecessary and "
       "therefore deprecated, since it is implied that an Identity "
       "MUST be authenticated (its CurrentlyAuthenticatedBoolean set "
       "to TRUE) in order to have any Privileges." )]
class CIM_AuthenticateForUse : CIM_Dependency {

      [Deprecated { "No value" }, 
       Override ( "Antecedent" ), 
       Description ( "AuthenticationRequirementfor use." )]
   CIM_AuthenticationRequirement REF Antecedent;

      [Deprecated { "No value" }, 
       Override ( "Dependent" ), 
       Description ( 
          "AuthenticationServicethat uses the requirements." )]
   CIM_AuthenticationService REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "A Certificate Authority (CA) is a credential management "
       "service that issues and cryptographically signs certificates. "
       "It acts as an trusted third-party intermediary in establishing "
       "trust relationships. The CA authenticates the identity of the "
       "holder of the \'private\' key, related to the certificate\'s "
       "\'public\' key." )]
class CIM_CertificateAuthority : CIM_CredentialManagementService {

      [Description ( 
          "The CAPolicyStatement describes what care is taken by "
          "the CertificateAuthority when signing a new certificate. "
          "The CAPolicyStatment may be a dot-delimited ASN.1 OID "
          "string which identifies to the formal policy statement." )]
   string CAPolicyStatement;

      [Description ( 
          "A CRL, or CertificateRevocationList, is a list of "
          "certificates which the CertificateAuthority has revoked "
          "and which are not yet expired. Revocation is necessary "
          "when the private key associated with the public key of a "
          "certificate is lost or compromised, or when the person "
          "for whom the certificate is signed no longer is entitled "
          "to use the certificate." ), 
       OctetString]
   string CRL[];

      [Description ( 
          "Certificate revocation lists may be available from a "
          "number of distribution points. CRLDistributionPoint "
          "array values provide URIs for those distribution points." )]
   string CRLDistributionPoint[];

      [Description ( 
          "Certificates refer to their issuing CA by its "
          "Distinguished Name (as defined in X.501)." ), 
       Dn]
   string CADistinguishedName;

      [Description ( 
          "The frequency, expressed in hours, at which the CA will "
          "update its Certificate Revocation List. Zero implies "
          "that the refresh frequency is unknown." ), 
       Units ( "Hours" ), 
       PUnit ( "hour" )]
   uint8 CRLRefreshFrequency;

      [Description ( 
          "The maximum number of certificates in a certificate "
          "chain permitted for credentials issued by this "
          "certificate authority or it\'s subordinate CAs. \n"
          "The MaxChainLength of a superior CA in the trust "
          "hierarchy should be greater than this value and the "
          "MaxChainLength of a subordinate CA in the trust "
          "hierarchy should be less than this value." )]
   uint8 MaxChainLength;


};

// Copyright (c) 2011 DMTF.  All rights reserved.
   [Version ( "2.29.0" ), 
    ClassConstraint { 
       "/* The constraints below aim to efficiently */  /* represent a singular OctetString. Each of the properties*/  /* is a single encoded string, thus only the first element */  /* needs to be populated. */ inv:self.CreateCertificateSigningRequest.Subject->size()<=1 and self.CreateCertificateSigningRequest.AltSubject->size()<=1 and self.CreateCertificateSigningRequest.CSR->size()=1 and self.CreateSelfSignedCertificate.Subject->size()<=1 and self.CreateSelfSignedCertificate.AltSubject->size()<=1 and self.ImportEncodedCertificates.EncodedCertificates->size()=1 and self.ApplyCRL.EncodedCRL->size()=1 and self.ExportEncodedCertificates.EncodedCertificates->size()=1" }, 
    UMLPackagePath ( "CIM::User::SecurityServices" ), 
    Description ( 
       "CIM_CertificateManagementService is used for managing X509 "
       "based certificates." )]
class CIM_CertificateManagementService : CIM_KeyBasedCredentialManagementService {


      [Description ( 
          "This method is called to request a Certificate Signing "
          "Request (CSR) based on the Distinguished Name provided "
          "through Subject parameter. The CSR utilizes PKCS#10 "
          "structure as defined in RFC2986. If either Subject "
          "parameter or AltSubject parameter are NULL, the method "
          "shall return 2 (Error Occured). If the "
          "PublicPrivateKeyPair parameter is NULL, then 1) "
          "PublicKeyAlgorithm shall specify the algorithm to be "
          "used for the public key, 2) the PublicKeySize shall "
          "specify the length for the public key in bits. If the "
          "PublicPrivateKeyPair parameter is NOT NULL then the "
          "following requirements shall apply: 1) the "
          "PublicKeyAlgorithm shall be NULL, 2) the PublicKeySize "
          "shall be NULL, 3) the PublicPrivateKeyPair shall "
          "reference an instance of CIM_UnsignedCredential "
          "representing the public/ private key pair to be used for "
          "the CSR. The OutputFormat parameter shall specify the "
          "output format of the CSR. If the OutputFormat parameter "
          "has a value that is not equal to any values in the "
          "OutputFormatsSupported property on the associated "
          "CIM_CertificateManagementCapabilities instance, then the "
          "method shall return 2 (Error Occured). Upon the "
          "successful execution, the CSR output parameter shall "
          "contain the CSR in PKCS#10 structure." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 CreateCertificateSigningRequest(
         [IN, Description ( 
             "Subject shall contain information as required by "
             "section 4.1.2.6 of RFC 3280 and shall be formatted "
             "based on RFC 4514. An example of the value of the "
             "Subject parameter could be \"CN=Marshall T. Rose, "
             "O=Dover Beach Consulting, L=Santa Clara, "
             "ST=California, C=US\"." ), 
          DN]
      string Subject, 
         [IN, Description ( 
             "Alternate subject identifier for the Certificate "
             "as specified by section 4.2.1.8 of RFC 3280." )]
      string AltSubject, 
         [IN, Description ( 
             "The PublicKeyAlgorithm specifies the algorithm to "
             "be used for the public key." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "RSA", "DSA", "ECDSA", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint16 PublicKeyAlgorithm, 
         [IN, Description ( 
             "The PublicKeySize shall specify the length for the "
             "public key in bits." ), 
          PUNIT ( "bit" )]
      uint16 PublicKeySize, 
         [IN, Description ( 
             "The PublicPrivateKeyPair parameter specifies a "
             "reference to an instance of CIM_UnsignedCredential "
             "which represents a public private key pair to be "
             "utilized by the CSR.The CIM_UnsignedCredential "
             "instance PublicKey and PublicKeyEncoding "
             "properties shall not be NULL." )]
      CIM_UnsignedCredential REF PublicPrivateKeyPair, 
         [In, Description ( 
             "The ExtendedKeyUsageValue indicates one or more "
             "purposes for which the certified public key may be "
             "used in the type specified by the "
             "ExtendedKeyUsageType parameter." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_CertificateManagementService.CreateCertificateSigningRequest.ExtendedKeyUsageType" }]
      string ExtendedKeyUsageValue[], 
         [In, Description ( 
             "Describes the type for ExtendedKeyUsageValue based "
             "on the ASN.1 GeneralName types." ), 
          ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", 
             "..", "32768..65535" }, 
          Values { "other", "rfc822Name", "dNSName", 
             "x400Address", "directoryName", "ediPartyName", 
             "uniformResourceIdentifier", "iPAddress", 
             "registeredID", "DMTF Reserved", "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_CertificateManagementService.CreateCertificateSigningRequest.ExtendedKeyUsageValue" }]
      uint16 ExtendedKeyUsageType[], 
         [In, Description ( 
             "The SignatureAlgorithm parameter defines the "
             "signature algorithm used to sign the "
             "CertificateRequestInfo as part of the CSR as "
             "defined in RFC 2986. This parameter covers the "
             "algorithms specified in the RFC3279." ), 
          ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "13", "14", "15", "16", "17", 
             "18", "19", "20..32767", "32768..65535" }, 
          Values { "Other", "SHA1withDSA", "SHA1withECDSA", 
             "SHA224withECDSA", "SHA256withECDSA", 
             "SHA384withECDSA", "SHA512withECDSA", 
             "GOST3411withGOST3410", "GOST3411withECGOST3410", 
             "MD2withRSA", "MD5withRSA", "SHA1withRSA", 
             "SHA224withRSA", "SHA256withRSA", "SHA384withRSA", 
             "SHA512withRSA", "RIPEMD160withRSA", 
             "RIPEMD128withRSA", "RIPEMD256withRSA", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 SignatureAlgorithm, 
         [Required, IN, Description ( 
             "The OutputFormat property represents the requested "
             "format of the Certificate Signing Request." ), 
          ValueMap { "2", "3", "..", "32768..65535" }, 
          Values { "PEM", "DER", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint16 OutputFormat, 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "The CSR parameter is an output parameter that upon "
             "successful exection of this method will contain "
             "the formated Certificate Signing Request.Only the "
             "first element of the array property shall be "
             "populated." ), 
          OctetString]
      string CSR[]);

      [Description ( 
          "This method is called to generate to generate a "
          "self-signed certificate. If either Subject parameter or "
          "AltSubject parameter are NULL, the method shall return 2 "
          "(Error Occured). If the PublicPrivateKeyPair parameter "
          "is NULL, the following numbered requirements shall "
          "apply: 1) the PublicKeyAlgorithm shall be non-NULL and "
          "specify the algorithm to be used for the public key, 3) "
          "the PublicKeySize shall be non-NULL and specify the "
          "length for the public key in bits. If the "
          "PublicPrivateKeyPair parameter is not NULL, the "
          "following numbered requirements shall apply: 1) the "
          "PublicKeyAlgorithm shall be NULL, 2) the PublicKeySize "
          "shall be NULL, 3) the PublicPrivateKeyPair shall "
          "reference an instance of CIM_UnsignedCredential "
          "representing the public/ private key pair to be used for "
          "the self signed certificate. Upon successful execution "
          "the reference to the newly created instance of "
          "CIM_X509Certificate shall be returned in the "
          "NewCertificate parameter which represents the "
          "self-signed certificate with the public/private key pair "
          "of the size specified by the KeySize parameter. If the "
          "Keystore parameter is not NULL, this instance shall be "
          "associated to the instance of CIM_Keystore referenced by "
          "the Keystore parameter through CIM_MemberOfCollection "
          "association. If the CredentialContext parameter is not "
          "NULL, the newly created instance shall be associated "
          "with the instance of CIM_ManagedElement referenced by "
          "the CredentialContext parameter through "
          "CIM_CredentialContext association. If the "
          "CredentialContext parameter is NULL, the newly created "
          "instance shall not be associated with the instance of "
          "CIM_ManagedElement through CIM_CredentialContext "
          "association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 CreateSelfSignedCertificate(
         [IN, Description ( 
             "Subject shall contain the information as required "
             "by section 4.1.2.6 of RFC 3280 and shall be "
             "formatted based on RFC 4514. An example of the "
             "value of the Subject parameter could be "
             "\"CN=Marshall T. Rose, O=Dover Beach Consulting, "
             "OU=Sales, L=Santa Clara, ST=California, C=US\"." ), 
          DN]
      string Subject, 
         [IN, Description ( 
             "Alternate subject identifier for the Certificate "
             "as specified by section 4.2.1.8 of RFC 3280." )]
      string AltSubject, 
         [IN, Description ( 
             "The PublicKeyAlgorithm specifies the algorithm to "
             "be used for the public key." ), 
          ValueMap { "2", "3", "4", "..", "32768..65535" }, 
          Values { "RSA", "DSA", "ECDSA", "DMTF Reserved", 
             "Vendor Reserved" }]
      uint16 PublicKeyAlgorithm, 
         [IN, Description ( 
             "The PublicKeySize shall specify the length for the "
             "public key in bits. The value shall be of power of "
             "2." ), 
          PUNIT ( "bit" )]
      uint16 PublicKeySize, 
         [IN, Description ( 
             "The PublicPrivateKeyPair parameter specifies a "
             "reference to an instance of CIM_UnsignedCredential "
             "which represents a public private key pair to be "
             "utilized by the newly created selef signed "
             "certificate. The PublicKey and "
             "PublicKeyEncodingproperties of the instance of "
             "CIM_UnsignedCredentialshall be Non-NULL." )]
      CIM_UnsignedCredential REF PublicPrivateKeyPair, 
         [IN, Description ( 
             "The Keystore parameter denotes the reference to "
             "the instance of CIM_Keystore that represents the "
             "key store where the new certificate will be added." )]
      CIM_Keystore REF Keystore, 
         [IN, Description ( 
             "The managed element that represents the user or "
             "owner or the scoping element of the certificate. "
             "Such managed element could be the web service that "
             "owns the certificate or uses it for verification "
             "or account that the certificate is scoped to." )]
      CIM_ManagedElement REF CredentialContext, 
         [IN, Description ( 
             "The usage of the certificate by the managed "
             "element that the certificate is for or is scoped "
             "to." ), 
          ValueMap { "2", "3", "4", "6", "7", "8", "..", 
             "32768..65535" }, 
          Values { "Owned", "Trusted", 
             "Trusted for Authentication", 
             "Trusted for Authorization", 
             "Trusted for Authentication/Authorization", 
             "Trusted for Third-Party Authentication/Authorization", 
             "DMTF Reserved", "Vendor Reserved" }, 
          ModelCorrespondence { "CIM_CredentialContext.Usage" }]
      uint16 Usage, 
         [In, Description ( 
             "The SignatureAlgorithm parameter defines the "
             "signature algorithm used to sign the "
             "TBSCertificate as defined in RFC 3280. This "
             "parameter covers the algorithms specified in the "
             "RFC3279." ), 
          ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", 
             "10", "11", "12", "13", "14", "15", "16", "17", 
             "18", "19", "20..32767", "32768..65535" }, 
          Values { "Other", "SHA1withDSA", "SHA1withECDSA", 
             "SHA224withECDSA", "SHA256withECDSA", 
             "SHA384withECDSA", "SHA512withECDSA", 
             "GOST3411withGOST3410", "GOST3411withECGOST3410", 
             "MD2withRSA", "MD5withRSA", "SHA1withRSA", 
             "SHA224withRSA", "SHA256withRSA", "SHA384withRSA", 
             "SHA512withRSA", "RIPEMD160withRSA", 
             "RIPEMD128withRSA", "RIPEMD256withRSA", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 SignatureAlgorithm, 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [IN ( false ), OUT, Description ( 
             "Reference to the newly created instance of "
             "CIM_X509Certificate representing the self signed "
             "certificate." )]
      CIM_X509Certificate REF SelfSignedCertificate);

      [Description ( 
          "This method is called to import a certificate or a "
          "certificate chain using the certificate\'s encoded "
          "representation. Upon successful execution the array of "
          "references to the instance(s) of CIM_X509Certificate "
          "representing the imported certificate or certificate "
          "chain shall be returned inside the NewCertificates "
          "output parameter. If the Keystore parameter is not NULL, "
          "the newly created instance(s) of CIM_X509Certificate "
          "shall be associated to the instance of the CIM_Keystore "
          "referenced in the Keystore parameter. If the "
          "CredentialContext parameter is not NULL, the newly "
          "created instance(s) of the CIM_X509Certificate shall be "
          "associated to the insatnces of CIM_ManagedElement "
          "referenced in the CredentialContext property through the "
          "CIM_CredentialContext association. If the "
          "CredentialContext parameter is NULL, the newly created "
          "instance(s) of the CIM_X509Certificate shall not be "
          "associated to the insatnces of CIM_ManagedElement "
          "through the CIM_CredentialContext association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 ImportEncodedCertificates(
         [Required, IN, Description ( 
             "An array of strings representing octet string of "
             "an encoded certificate or certificate chain to be "
             "imported. Only the first element of the array "
             "property shall be populated, even if a certificate "
             "chain is imported." ), 
          OctetString]
      string EncodedCertificates[], 
         [Required, IN, Description ( 
             "The Format shall specify the format for the "
             "encoding that is used by octet string "
             "EncodedCertificates parameter." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "DER", "PEM", "PKCS7", "PKCS12", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 Format, 
         [IN, Description ( 
             "The Keystore parameter denotes the reference to "
             "the instance of CIM_Keystore that represents the "
             "key store where the new certificate or certificate "
             "chain will be added." )]
      CIM_Keystore REF Keystore, 
         [IN, Description ( 
             "The managed element that represents the user or "
             "owner or the scoping element of the "
             "certificate(s). Such managed element could be the "
             "web service that owns the certificate(s) or uses "
             "it for verification or account that the "
             "certificate is scoped to." )]
      CIM_ManagedElement REF CredentialContext, 
         [IN, Description ( 
             "The usage of the certificate by the managed "
             "element that the certificate is for or is scoped "
             "to. If a certificate chain is imported, the "
             "sequence of elements in the Usage array shall "
             "correspond to the sequence of the certificates in "
             "the EncodedCertificates octet string parameter." ), 
          ValueMap { "2", "3", "4", "6", "7", "8", "..", 
             "32768..65535" }, 
          Values { "Owned", "Trusted", 
             "Trusted for Authentication", 
             "Trusted for Authorization", 
             "Trusted for Authentication/Authorization", 
             "Trusted for Third-Party Authentication/Authorization", 
             "DMTF Reserved", "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { "CIM_CredentialContext.Usage", 
             "CIM_CertificateManagementService.ImportEncodedCertificates.NewCertificates" }]
      uint16 Usage[], 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "Reference to the newly created instance of "
             "CIM_X509Certificate representing the imported "
             "certificate or certificate chain." ), 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { 
             "CIM_CertificateManagementService.ImportEncodedCertificates.Usage" }]
      CIM_X509Certificate REF NewCertificates[]);

      [Description ( 
          "This method is called to import a certificate or a "
          "certificate chain using an array of embedded instance of "
          "CIM_X509Certificate. Upon successful execution the array "
          "of references to the instance(s) of CIM_X509Certificate "
          "representing the imported certificate or certificate "
          "chain shall be returned by the NewCertificates output "
          "parameter. If the Keystore parameter is not NULL, the "
          "newly created instance(s) of CIM_X509Certificate shall "
          "be associated to the instance of the CIM_Keystore "
          "referenced in the Keystore parameter. If the "
          "CredentialContext parameter is not NULL, the newly "
          "created instance(s) of the CIM_X509Certificate shall be "
          "associated to the insatnces of CIM_ManagedElement "
          "referenced in the CredentialContext property through the "
          "CIM_CredentialContext association.If the "
          "CredentialContext parameter is NULL, the newly created "
          "instance(s) of the CIM_X509Certificate shall not be "
          "associated to the insatnces of CIM_ManagedElement "
          "through the CIM_CredentialContext association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 ImportCertificates(
         [Required, IN, Description ( 
             "An array of embedded instance(s) of "
             "CIM_X509Certificate that contains the necessary "
             "information to import a certificate or a "
             "certificate chain." ), 
          EmbeddedInstance ( "CIM_X509Certificate" )]
      string InputCertificates[], 
         [IN, Description ( 
             "The Keystore parameter denotes the reference to "
             "the instance of CIM_Keystore that represents the "
             "key store where the new certificate or certificate "
             "chain will be added." )]
      CIM_Keystore REF Keystore, 
         [IN, Description ( 
             "The managed element that represents the user or "
             "owner or the scoping element of the "
             "certificate(s). Such managed element could be the "
             "web service that owns the certificate(s) or uses "
             "it for verification or account that the "
             "certificate is scoped to." )]
      CIM_ManagedElement REF CredentialContext, 
         [IN, Description ( 
             "The usage of the certificate by the managed "
             "element that the certificate is for or is scoped "
             "to. If a certificate chain is imported, the "
             "sequence of elements in the Usage array shall "
             "correspond to the sequence of the certificates in "
             "the InputCertificates array parameter." ), 
          ValueMap { "2", "3", "4", "6", "7", "8", "..", 
             "32768..65535" }, 
          Values { "Owned", "Trusted", 
             "Trusted for Authentication", 
             "Trusted for Authorization", 
             "Trusted for Authentication/Authorization", 
             "Trusted for Third-Party Authentication/Authorization", 
             "DMTF Reserved", "Vendor Reserved" }, 
          ArrayType ( "Indexed" ), 
          ModelCorrespondence { "CIM_CredentialContext.Usage", 
             "CIM_CertificateManagementService.ImportCertificates.InputCertificates", 
             "CIM_CertificateManagementService.ImportCertificates.Usage" }]
      uint16 Usage[], 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "Reference to the newly created instance of "
             "CIM_X509Certificate representing the imported "
             "certificate or certificate chain." )]
      CIM_X509Certificate REF NewCertificates[]);

      [Description ( 
          "This method is called to export a certificate or a "
          "certificate chain using the certificate\'s encoded "
          "representation. Upon successful execution the array of "
          "unsigned integers representing octet string of the "
          "exported certificate or certificate chain shall be "
          "returned inside the EncodedCertificates output parameter "
          "based on the encoding specified in the EncodingFormat "
          "parameter." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 ExportEncodedCertificates(
         [Required, IN, Description ( 
             "Reference to the instance(s) of "
             "CIM_SignedCredential representing the certificate "
             "or certificate chain to be exported." )]
      CIM_X509Certificate REF CertificatesToExport[], 
         [Required, IN, Description ( 
             "The Format parameter specifies the format of the "
             "octet string EncodedCertificates parameter." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "DER", "Base64", "PKCS7", "PKCS12", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 Format, 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "An array of strings representing octet string of "
             "an exported encoded certificate or certificate "
             "chain. Only the first element of the array "
             "property shall be populated, even if a certificate "
             "chain is exported." ), 
          OctetString]
      string EncodedCertificates[]);

      [Description ( 
          "This method is called to apply Certificate Revocation "
          "List (CRL) using an encoded format. Upon successful "
          "execution the references to the instance(s) of "
          "CIM_X509CRL representing the applied CRL shall be "
          "returned inside the AppliedCRL output parameter. If the "
          "Keystore parameter is not NULL, the newly created "
          "instance(s) of CIM_X509CRL shall be associated to the "
          "instance of the CIM_Keystore referenced in the Keystore "
          "parameter. The newly created instance(s) of the "
          "CIM_X509CRL shall be associated to the insatnces of "
          "CIM_ManagedElement referenced in the CredentialContext "
          "property through the CIM_CredentialContext association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 ApplyCRL(
         [Required, IN, Description ( 
             "An array of unsigned integers representing octet "
             "string of an encoded CRL to be applied. Only the "
             "first element of the array property shall be "
             "populated." ), 
          OctetString]
      string EncodedCRL[], 
         [Required, IN, Description ( 
             "The Format shall specify the format for the "
             "encoding that is used by octet string EncodedCRL "
             "parameter." ), 
          ValueMap { "2", "3", "4", "5", "..", "32768..65535" }, 
          Values { "DER", "PEM", "PKCS7", "PKCS12", 
             "DMTF Reserved", "Vendor Reserved" }]
      uint16 Format, 
         [IN, Description ( 
             "The Keystore parameter denotes the reference to "
             "the instance of CIM_Keystore that represents the "
             "key store where the CRL will be applied." )]
      CIM_Keystore REF Keystore, 
         [Required, IN, Description ( 
             "The managed element that represents the service or "
             "the managed element for which the certificates "
             "were revoked by the application of the CRL." )]
      CIM_ManagedElement REF CredentialContext, 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "Reference to the newly created instance of "
             "CIM_X509CRL representing the applied CRL." )]
      CIM_X509CRL REF AppliedCRL);

      [Description ( 
          "This method is called to apply Certificate Revocation "
          "List (CRL) using the decoded format. Upon successful "
          "execution the references to the instance(s) of "
          "CIM_X509CRL representing the applied CRL shall be "
          "returned inside the AppliedCRL output parameter. If the "
          "Keystore parameter is not NULL, the newly created "
          "instance(s) of CIM_X509CRL shall be associated to the "
          "instance of the CIM_Keystore referenced in the Keystore "
          "parameter. The newly created instance(s) of the "
          "CIM_X509CRL shall be associated to the insatnces of "
          "CIM_ManagedElement referenced in the CredentialContext "
          "property through the CIM_CredentialContext association." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "4096", 
          "4097..32767", "32768..65535" }, 
       Values { "Completed with No Error", "Not Supported", 
          "Error Occured", "Busy", "Invalid Reference", 
          "Invalid Parameter", "Access Denied", "DMTF Reserved", 
          "Job Started", "Method Reserved", "Vendor Specified" }]
   uint32 ApplyDecodedCRL(
         [Required, IN, Description ( 
             "Issuer represents the information about the issuer "
             "of the CRL. The Issuer property shall contain "
             "information as required by section 4.1.2.4 of RFC "
             "3280 and shall be formatted based on RFC 4514. An "
             "example of the value of the Subject parameter "
             "could be \"CN=Marshall T. Rose, O=Dover Beach "
             "Consulting, OU=Sales, L=Santa Clara, "
             "ST=California, C=US\"." ), 
          DN]
      string Issuer, 
         [Required, IN, Description ( 
             "An array of serial numbers of X.509 certificates "
             "that are part of CRL." ), 
          OctetString]
      string SerialNumbers[], 
         [IN, Description ( 
             "The Keystore parameter denotes the reference to "
             "the instance of CIM_Keystore that represents the "
             "key store where the CRL will be applied." )]
      CIM_Keystore REF Keystore, 
         [Required, IN, Description ( 
             "The managed element that represents the service or "
             "the managed element for which the certificates "
             "were revoked by the application of the CRL." )]
      CIM_ManagedElement REF CredentialContext, 
         [IN ( false ), OUT, Description ( 
             "Contains a reference to the ConcreteJob created to "
             "track the execution initiated by the method "
             "invocation. If the method returns 4096 - job "
             "started, then the parameter shall not have NULL "
             "value." )]
      CIM_ConcreteJob REF Job, 
         [Required, IN ( false ), OUT, Description ( 
             "Reference to the newly created instance of "
             "CIM_X509CRL representing the applied CRL." )]
      CIM_X509CRL REF AppliedCRL);

};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_IKESecretIsNamed 
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAffectsElement" }, 
    Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::SharedSecret" ), 
    Description ( 
       "CIM_IKESecretIsNamed association provides the relationship "
       "between a SharedSecretService and a NamedSharedIKESecret." )]
class CIM_IKESecretIsNamed : CIM_ManagedCredential {

      [Deprecated { "CIM_ServiceAffectsElement.AffectingElement" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The SharedSecretService that manages a NamedSharedIKESecret."
           )]
   CIM_SharedSecretService REF Antecedent;

      [Deprecated { "CIM_ServiceAffectsElement.AffectedElement" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The managed NamedSharedIKESecret." )]
   CIM_NamedSharedIKESecret REF Dependent;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_KDCIssuesKerberosTicket 
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAffectsElement" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::Kerberos" ), 
    Description ( 
       "The KDC issues and owns Kerberos tickets. This association "
       "captures the relationship between the KDC and its issued "
       "tickets." )]
class CIM_KDCIssuesKerberosTicket : CIM_ManagedCredential {

      [Deprecated { "CIM_ServiceAffectsElement.AffectingElement" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The issuing KDC." )]
   CIM_KerberosKeyDistributionCenter REF Antecedent;

      [Deprecated { "CIM_ServiceAffectsElement.AffectedElement" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The managed credential." )]
   CIM_KerberosTicket REF Dependent;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_LocallyManagedPublicKey 
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAffectsElement" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "CIM_LocallyManagedPublicKey association provides the "
       "relationship between a PublicKeyManagementService and an "
       "UnsignedPublicKey." )]
class CIM_LocallyManagedPublicKey : CIM_ManagedCredential {

      [Deprecated { "CIM_ServiceAffectsElement.AffectingElement" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The PublicKeyManagementService that manages an unsigned "
          "public key." )]
   CIM_PublicKeyManagementService REF Antecedent;

      [Deprecated { "CIM_ServiceAffectsElement.AffectedElement" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "An unsigned public key." )]
   CIM_UnsignedPublicKey REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ManagesAccountOnSystem 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::User::Account" ), 
    Description ( 
       "The CIM_ManagesAccountOnSystem provides the association "
       "between a System and the AccountManagementService that manages "
       "accounts for that system." )]
class CIM_ManagesAccountOnSystem : CIM_SecurityServiceForSystem {

      [Override ( "Antecedent" ), 
       Description ( 
          "An AccountManagementService that manages accounts for the system."
           )]
   CIM_AccountManagementService REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The system that is dependent on the AccountManagementService."
           )]
   CIM_System REF Dependent;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_SharedSecretIsShared 
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAffectsElement" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::SharedSecret" ), 
    Description ( 
       "This relationship associates a SharedSecretService with the "
       "SecretKey it verifies." )]
class CIM_SharedSecretIsShared : CIM_ManagedCredential {

      [Deprecated { "CIM_ServiceAffectsElement.AffectingElement" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The credential management service." )]
   CIM_SharedSecretService REF Antecedent;

      [Deprecated { "CIM_ServiceAffectsElement.AffectedElement" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The managed credential." )]
   CIM_SharedSecret REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeConnectionFactoryAvailableToJCAResource 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeConnectionFactoryAvailableToJCAResource is an "
       "association that identifies the connection factory that is "
       "available to a CIM_J2eeJCAResource object." )]
class CIM_J2eeConnectionFactoryAvailableToJCAResource : CIM_HostedDependency {

      [Override ( "Dependent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( 
          "The JCA Resource that requires a Connection Factory." )]
   CIM_J2eeJCAResource REF Dependent;

      [Override ( "Antecedent" ), 
       Min ( 1 ), 
       Description ( 
          "The Connection Factory being used by a JCA Resource." )]
   CIM_J2eeJCAConnectionFactory REF Antecedent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_J2eeEJBInModule 
// ==================================================================
   [Association, Aggregation, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Application::J2eeAppServer" ), 
    Description ( 
       "CIM_J2eeEJBInModule is a aggregation of the EJB components "
       "within a deployed EJB JAR module." )]
class CIM_J2eeEJBInModule : CIM_ServiceComponent {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The EJB Module that is comprised of EJBs." )]
   CIM_J2eeEJBModule REF GroupComponent;

      [Override ( "PartComponent" ), 
       Min ( 1 ), 
       Description ( "The EJB that is a part of the EJB Module." )]
   CIM_J2eeEJB REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AssociatedSupplyCurrentSensor 
// ==================================================================
   [Association, Deprecated { "CIM_AssociatedSensor" }, 
    Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::Device::Sensors" ), 
    Description ( 
       "The use of this association is being deprecated in lieu of "
       "using AssociatedSensor, since the use of the referenced class "
       "CurrentSensor is deprecated. \n"
       "A PowerSupply may have an associated CurrentSensor, monitoring "
       "its input frequency. This is described by this association." )]
class CIM_AssociatedSupplyCurrentSensor : CIM_AssociatedSensor {

      [Deprecated { "CIM_AssociatedSensor.Antecedent" }, 
       Override ( "Antecedent" ), 
       Description ( "The CurrentSensor." )]
   CIM_CurrentSensor REF Antecedent;

      [Deprecated { "CIM_AssociatedSensor.Dependent" }, 
       Override ( "Dependent" ), 
       Description ( 
          "The PowerSupply associated with the CurrentSensor." )]
   CIM_PowerSupply REF Dependent;

      [Deprecated { "No Value" }, 
       Description ( 
          "Indicates the PowerSupply\'s input frequency range "
          "measured by the associated sensor. Range 1, 2 or both "
          "can be specified using the values 2, 3 or 4, "
          "respectively." ), 
       ValueMap { "0", "1", "2", "3", "4" }, 
       Values { "Unknown", "Other", "Range 1", "Range 2", 
          "Both Range 1 and 2" }]
   uint16 MonitoringRange;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AFRelatedServices 
// ==================================================================
   [Association, Version ( "2.6.0" ), 
    UMLPackagePath ( "CIM::Network::QoS" ), 
    Description ( 
       "The IETF\'s RFC2597 describes a Differentiated Services "
       "Per-Hop-Behavior (PHB) Group called Assured Forwarding (AF). "
       "Quoting from the RFC, \'The AF PHB group provides delivery of "
       "IP packets in four independently forwarded AF classes. Within "
       "each AF class, an IP packet can be assigned one of three "
       "different levels of drop precedence.\' The AFRelatedServices "
       "association describes the precedence of the individual AF "
       "drop-related Services within an AF IP packet-forwarding class." )]
class CIM_AFRelatedServices {

      [Key, Max ( 1 ), 
       Description ( 
          "The AFService with a lower drop precedence (ie, lower "
          "probability of dropping packets)." )]
   CIM_AFService REF AFLowerDropPrecedence;

      [Key, Description ( 
          "An AFService at the same IP packet-forwarding class "
          "level, but at a higher drop precedence." )]
   CIM_AFService REF AFHigherDropPrecedence;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_AreaOfConfiguration 
// ==================================================================
   [Association, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( 
       "This association connects an area configuration to its area. "
       "The OSPFAreaConfiguration class is defined to act as a focal "
       "point to bring together the router (indicated as a "
       "ComputerSystem with an instance of OSPFService, associated to "
       "the AreaConfiguration using OSPFServiceConfiguration), the "
       "area (indicated as an OSPFArea, associated to the "
       "AreaConfiguration using AreaOfConfiguration) and the address "
       "ranges for advertising (indicated as instances of "
       "RangeOfIPAddresses, associated to the AreaConfiguration using "
       "RangesOfConfiguration). There is an instance of "
       "OSPFAreaConfiguration for each connected area of a "
       "router/OSPFService." )]
class CIM_AreaOfConfiguration : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Max ( 1 ), 
       Description ( "The OSPF area." )]
   CIM_OSPFArea REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( 
          "The configuration which is applied to an OSPF area. This "
          "is the Dependent reference in this association, since it "
          "depends on the area for any functional significance." )]
   CIM_OSPFAreaConfiguration REF Dependent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_EndpointInArea 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::Network::OSPF" ), 
    Description ( "This relation connects an OSPF endpoint to an area." )]
class CIM_EndpointInArea : CIM_Component {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The OSPF area." )]
   CIM_OSPFArea REF GroupComponent;

      [Override ( "PartComponent" ), 
       Description ( "The OSPF endpoint in the area." )]
   CIM_OSPFProtocolEndpointBase REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemDMA 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between a ComputerSystem and the DMA channels "
       "available on it." )]
class CIM_ComputerSystemDMA : CIM_ComputerSystemResource {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( "A DMA channel of the ComputerSystem." )]
   CIM_DMA REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemIRQ 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between a ComputerSystem and the IRQs available on it."
        )]
class CIM_ComputerSystemIRQ : CIM_ComputerSystemResource {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( "An IRQ of the ComputerSystem." )]
   CIM_IRQ REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_ComputerSystemMappedIO 
// ==================================================================
   [Association, Aggregation, Composition, Version ( "2.7.0" ), 
    UMLPackagePath ( "CIM::System::SystemResources" ), 
    Description ( 
       "An association between a ComputerSystem and the Memory Mapped "
       "I/O ports available on it." )]
class CIM_ComputerSystemMappedIO : CIM_ComputerSystemResource {

      [Aggregate, Override ( "GroupComponent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The ComputerSystem." )]
   CIM_ComputerSystem REF GroupComponent;

      [Override ( "PartComponent" ), 
       Weak, Description ( 
          "A memory mapped I/O port of the ComputerSystem." )]
   CIM_MemoryMappedIO REF PartComponent;


};

// Copyright (c) 2005 DMTF.  All rights reserved.
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CAHasPublicCertificate 
// ==================================================================
   [Association, Version ( "2.8.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "A CertificateAuthority may have certificates issued by other "
       "CAs or self-signed. This association is essentially an "
       "optimization of the CA having an external identity established "
       "by itself or another Authority. This maps closely to "
       "LDAP-based certificate authority implementations." )]
class CIM_CAHasPublicCertificate : CIM_Dependency {

      [Override ( "Antecedent" ), 
       Description ( "The Certificate used by the CA." )]
   CIM_PublicKeyCertificate REF Antecedent;

      [Override ( "Dependent" ), 
       Description ( "The CA that uses a Certificate." )]
   CIM_CertificateAuthority REF Dependent;


};

// Copyright (c) 2005 - 2007, DMTF.  All rights reserved.
// <change cr="WIPCR00383.004" type="add">New Credential class 
// hierarchy</change>
// <change cr="ArchCR00066.004" type="add">Add UmlPackagePath
// qualifier values to CIM Schema.</change>
// ==================================================================
//  CIM_CASignsPublicKeyCertificate 
// ==================================================================
   [Association, Deprecated { "CIM_ServiceAffectsElement" }, 
    Version ( "2.16.0" ), 
    UMLPackagePath ( "CIM::User::PublicKey" ), 
    Description ( 
       "This relationship associates a CertificateAuthority with the "
       "certificates it signs." )]
class CIM_CASignsPublicKeyCertificate : CIM_ManagedCredential {

      [Deprecated { "CIM_ServiceAffectsElement.AffectingElement" }, 
       Override ( "Antecedent" ), 
       Min ( 1 ), 
       Max ( 1 ), 
       Description ( "The CA which signed the certificate." )]
   CIM_CertificateAuthority REF Antecedent;

      [Deprecated { "CIM_ServiceAffectsElement.AffectedElement" }, 
       Override ( "Dependent" ), 
       Weak, Description ( "The certificate issued by the CA." )]
   CIM_PublicKeyCertificate REF Dependent;

      [Deprecated { "No Value" }, 
       Description ( "The Serial Number." )]
   string SerialNumber;

      [Deprecated { "No Value" }, 
       Description ( "The Signature." ), 
       OctetString]
   uint8 Signature[];

      [Deprecated { "CIM_Credential.Expires" }, 
       Description ( "The time it expires." )]
   datetime Expires;

      [Deprecated { "No Value" }, 
       Description ( 
          "The Authority\'s revocation list distribution points." )]
   string CRLDistributionPoint[];


};


// TODO: Remove this when Persistent Memory Profile is part of the standard
// ==================================================================
//  CIM_PersistentMemoryNamespace
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "This class describes a persistent memory storage extent. A "
       "persistent directly or indirectly into the system address "
       "space." )]
class CIM_PersistentMemoryNamespace : CIM_Memory {

      [Override ( "Volatile" ), 
       Description ( 
          "Persistent memory namespaces are always non-volatile." )]
   boolean Volatile = false;


};

// ==================================================================
//  CIM_PersistentMemoryNamespaceSettingData
// ==================================================================
// Copyright (c) 2015 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "PersistentMemoryNamespaceSettingData reflects the parameters specified during persistent "
       "memory namespace creation or modification that define the quality of "
       "service offered by the associated PersistentMemoryNamespace.")]
class CIM_PersistentMemoryNamespaceSettingData : CIM_ResourceAllocationSettingData {
      [Override ( "ResourceType" ), 
       Description ( 
          "The type of resource this allocation setting represents. \n" 
          "\"Storage Volume\" a logical block device. \n"
          "\"Byte Addressable Persistent Memory\" persistent memory accessible by "
          "load/store operations. \n "
          "\"Block Addressable Persistent Memory\" synthetic block device. \n "),
       ValueMap { "0", "1", "32", "35", "36", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "Storage Volume", "Byte Addressable Persistent Memory", 
	  "Block Addressable Persistent Memory", "DMTF reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.OtherResourceType", 
          "CIM_ResourceAllocationSettingData.ResourceSubType" }]
   uint16 ResourceType;

      [Description ( 
          "The type of access supported for the namespace."
          "\"Read\" read access is supported.\n "
          "\"Write\" write access is supported.\n "
          "\"Read/Write\" read and write access is supported.\n "),
       ValueMap { "0", "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Read", "Write", "Read/Write",
	  "DMTF reserved", "Vendor Reserved" }] 
   uint16 AccessType;

      [Description ( 
          "Describes preferences relating to the allocation that "
	  "can be described by flags\n"
          "\"None\" no specific optimizations requested.\n "
          "\"Best Performance\" Namespace optimized for best performance.\n "
          "\"Smallest Size\" Namespace optimized for smallest size.\n "
          "\"Copy On Write\" Namespace optimized for copy on write.\n "),
       ValueMap { "0", "2", "3", "4", "5", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "None", "Best Performance", "Smallest Size", "Copy On Write", 
	"DMTF reserved", "Vendor Reserved" }] 
   uint16 Optimize;
};

// ==================================================================
//  CIM_PersistentMemoryCapabilities
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "CIM_PersistentMemoryCapabilities describes the capabilities of "
       "pool(s) of persistent memory. Capabilities can be derived from "
       "the underlying persistent memory devices, memory controllers, "
       "platform firmware, or other available software." )]
class CIM_PersistentMemoryCapabilities : CIM_Capabilities {

      [Description ( 
          "Indicates the available security features of the "
          "persistent memory pool(s). \n"
          "\"None\" No security features are supported. \n"
          "\"Encryption\" Data encryption is supported. \n"
          "\"Crypto Erase\" Erasing data by destroying "
          "cryptographic keys is supported." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "None", "Encryption", 
          "Crypto Erase", "DMTF reserved", "Vendor Reserved" }]
   uint16 SecurityFeatures[];

      [Description ( 
          "Describes the access type(s) (block vs. byte) supported "
          "by the associated pool(s). \n"
          "\"Block Addressable\" data is accessed by block reads "
          "and writes. \n"
          "\"Byte Addressable\" data is accessed by load/store "
          "operations." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Unknown", "Block Addressable", "Byte Addressable", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 AccessGranularity[];

      [Description ( 
          "Indicates whether ssociated pool(s) supports replication "
          "either locally and/or on a remote system. \n"
          "\"Not Replicated\" there is a single copy of the data. \n"
          "\"Local Replication\" data is replicated on local "
          "resources. \n"
          "\"Remote Replication\" data is replicated on local "
          "resources." ), 
       ValueMap { "0", "1", "2", "3", "4", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "Not Replicated", 
          "Local Replication", "Remote Replication", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 Replication[];

      [Description ( 
          "Indicates which memory architecture types the associated "
          "pool(s) supports. \n"
          "\"UMA\" Uniform Memory Access.\n"
          "\"NUMA\" Non-Uniform Memory Access." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Other", "UMA", "NUMA", "DMTF Reserved", 
          "Vendor Reserved" }]
   uint16 MemoryArchitecture[];


};


// ==================================================================
//  CIM_PersistentMemoryService
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "Instances of the CIM_PersistentMemoryService exist to "
       "facilitate modification of a systems persistent memory "
       "configuration. Support exists for both allocating and "
       "deallocating persistent memory extents from a primordial "
       "persistent memory pool." )]
class CIM_PersistentMemoryService : CIM_Service {


      [Experimental, Description ( 
          "Use this method to provision primordial memory extents. "
          "Input parameters identify the desired configuration and "
          "the primordial pool from which to draw resources." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "4096", "4097", 
          "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Request Was Successfully Executed", 
          "Not Supported", "Unknown", "Timeout", "Failed", 
          "Invalid Parameter", 
          "Request Was Successfully Staged for Future Execution", 
          "Insufficient Resources", "Inconsistent Parameters", 
          "Request did not Complete in its Entirety and Partial Results Could not be Undone", 
          "Method Reserved", "Vendor Specific" }]
   uint32 AllocateFromPool(
         [IN, Description ( 
             "Reference to the persistent memory resource pool." )]
      CIM_ResourcePool REF Pool, 
         [IN, Description ( 
             "An embedded instance of "
             "CIM_PersistentMemoryNamespaceSettingData describe "
             "the allocation request." ), 
          EmbeddedInstance ( 
             "CIM_PersistentMemoryNamespaceSettingData" )]
      string Goal, 
         [OUT, Description ( 
             "When the return result is successful, this "
             "parameter contains a reference to the "
             "CIM_PersistentMemoryNamespace instance created as "
             "a result of this call." )]
      CIM_PersistentMemoryNamespace REF Namespace);

      [Experimental, Description ( 
          "Use this method to delete a persistent memory namespace, "
          "returning its capacity to the ResourcePool from which it "
          "was allocated." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "4096", "4099", 
          "4100..32767", "32768..65535" }, 
       Values { "Request Was Successfully Executed", 
          "Not Supported", "Unknown", "Timeout", "Failed", 
          "Invalid Parameter", 
          "Request Was Successfully Staged for Future Execution", 
          "Request did not Complete in its Entirety and Partial Results Could not be Undone", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ReturnToPool(
         [IN, Description ( 
             "Reference to a persistent memory namespace to be deallocated."
              )]
      CIM_PersistentMemoryNamespace REF Namespace);

      [Experimental, Description ( 
          "Use this method to modify a persistent memory namespace." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "4096", "4097", 
          "4098", "4099", "4100..32767", "32768..65535" }, 
       Values { "Request Was Successfully Executed", 
          "Not Supported", "Unknown", "Timeout", "Failed", 
          "Invalid Parameter", 
          "Request Was Successfully Staged for Future Execution", 
          "Insufficient Resources", "Inconsistent Parameters", 
          "Request did not Complete in its Entirety and Partial Results Could not be Undone", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ModifyNamespace(
         [IN, Description ( 
             "Reference to a persistent memory namespace to be deallocated."
              )]
      CIM_PersistentMemoryNamespace REF Namespace, 
         [IN, Description ( 
             "An embedded instance of "
             "CIM_PersistentMemoryNamespaceSettingData which "
             "describe the modification request." ), 
          EmbeddedInstance ( 
             "CIM_PersistentMemoryNamespaceSettingData" )]
      string Goal);

};


// ==================================================================
//  CIM_PersistentConfigurationCapabilities
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "A subclass of Capabilities that defines the capabilities of a "
       "PersistentMemoryService." )]
class CIM_PersistentConfigurationCapabilities : CIM_Capabilities {

      [Description ( 
          "Enumeration indicating the available synchronous memory "
          "provisioning operations. Synchronous operations result "
          "in an immediate change to the platform memory "
          "configuration. \n"
          "\"Unknown\" No synchronous operations supported \n"
          "\"AllocateFromPool\" persistent namespace allocation is "
          "supported. \n"
          "\"ReturnToPool\" persistent namespace deallocation is "
          "supported. \n"
          "\"ModifyNamespace\" persistent namespace modification is "
          "supported." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "AllocateFromPool", "ReturnToPool", 
          "ModifyNamespace" }]
   uint16 SupportedSynchronousOperations[];

      [Description ( 
          "Enumeration indicating the available asynchronous memory "
          "provisioning operations. Asynchronous operations stage a "
          "memory provisioning request which takes effect after "
          "some triggering action such as a system reboot. \n"
          "\"Unknown\" No synchronous operations supported \n"
          "\"AllocateFromPool\" persistent namespace allocation is "
          "supported. \n"
          "\"ReturnToPool\" persistent namespace deallocation is "
          "supported. \n"
          "\"ModifyNamespace\" persistent namespace modification is "
          "supported." ), 
       ValueMap { "0", "2", "3", "4" }, 
       Values { "Unknown", "AllocateFromPool", "ReturnToPool", 
          "ModifyNamespace" }]
   uint16 SupportedAsynchronousOperations[];


};


// ==================================================================
//  CIM_MemoryCapabilities
// ==================================================================
// Copyright (c) 2015 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "A subclass of Capabilities that defines the capabilities of a "
       "set if primordial memory extents represented by a MemoryResources "
       "pool.")]
class CIM_MemoryCapabilities : CIM_Capabilities {

      [Description ( 
          "Indicates the platform's support for various "
          "memory access modes. \n"
          "\"Direct Volatile\" indicates support for traditional "
          "DRAM type volatile memory. \n"
          "\"Multi-Level Volatile\" indicates support for multi-level "
          "volatile memory where one or more performance tiers act as "
          "a cache for one or more capacity tiers. \n"
          "\"Block\" indicates support for synthetic block access. \n"
          "\"Direct Persistent\" indicates support for load-store access of "
	  "non-volatile data. \n"
	  "\"Multi-Level Persistent\" indicates support for multi-level "
	  "persistent memory where one or more performance tiers act as "
          "a cache for a non-volatile capacity tier. \n"), 
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "Direct Volatile", 
	  "Multi-Level Volatile", "Block", "Direct Persistent", 
	  "Multi-Level Persistent", "DMTF Reserved", "Vendor Reserved"}]
   uint16 MemoryModes[];

      [Description ( 
          "Indicates support for various types of memory "
          "replication. \n"
          "\"None\" No replication is supported. \n"
          "\"Local Replication\" Replication is supported in the context "
	  "of a single system. \n"
          "\"Remote Replication\" Replication is supported across "
	  "multiple systems. \n"),
       ValueMap { "0", "1", "2", "3", "4", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "None", "Local Replication", 
          "Remote Replication", "DMTF Reserved", "Vendor Reserved"}]
   uint16 ReplicationSupport[];

   [Description ( 
          "Indicates the platform's support for memory reliability "
          "features.\n"
          "\"Die Sparing\" Spare memory parts are supported at the "
	  "memory die level. \n"
          "\"Rank Sparing\" Spare memory parts are supported at the "
	  "memory rank level. \n"
          "\"DIMM Sparing\" Spare memory parts are supported at the "
	  "memory DIMM level. \n"
          "\"Memory Migration\" There is support for migrating "
	  "the contents of a failing part to a spare part. \n"),
       ValueMap { "0", "1", "2", "3", "4", "5", "6", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "None", "Die Sparing", "Rank Sparing", 
	  "DIMM Sparing", "Memory Migration",
          "DMTF Reserved", "Vendor Reserved"}]
   uint16 ReliabilitySupport[];

  [Description ( 
          "Describes the alignment requirement when configuring "
	  "a memory region. This value is given as the exponent in an "
	  "exponential expression with 2 as the base.  Example: "
	  "64MB would be given as 26, 2**26=64MB.")]
   uint16 Alignment;

  [Description ( 
          "Describes the memory channel interleave sizes that are "
	  "supported. This value is given as the exponent in an "
	  "exponential expression with 2 as the base.  Example: "
	  "64B would be given as 6, 2**6=64B")]
   uint16 ChannelInterleaveSupport[];

  [Description ( 
          "Describes the number of memory channels a given "
	  "interleave scheme can utilize. A 1 indicates that "
	  "a 1 way channel interleave is supported; 2 indicates that  "
	  "a 2 way channel interleave is supported; and so on.")]
   uint16 ChannelInterleaveWaySupport[];

  [Description ( 
          "Describes the memory controller interleave sizes that are "
	  "supported. This value is given as the exponent in an "
	  "exponential expression with 2 as the base.  Example: "
	  "64B would be given as 6, 2**6=64B")]
   uint16 MemoryControllerInterleaveSupport[];

  [Description ( 
          "Describes platform memory architecture types supported.\n"
          "\"UMA\" Uniform Memory Access.\n"
          "\"NUMA\" Non-Uniform Memory Access.\n"),
       ValueMap { "0", "1", "2", "3", "..", "0x8000.." }, 
       Values { "Unknown", "Other", "UMA", "NUMA", "DMTF Reserved", 
	"Vendor Reserved"}]
   uint16 MemoryAffinitySupport[];
};


// ==================================================================
//  CIM_MemoryConfigurationCapabilities
// ==================================================================
// Copyright (c) 2015 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "A subclass of Capabilities that defines the Capabilities of a "
       "MemoryConfigurationService. An instance of "
       "MemoryConfigurationCapabilities is associated with a "
       "MemoryConfigurationService using ElementCapabilities." )]
class CIM_MemoryConfigurationCapabilities : CIM_Capabilities {

      [Description ( 
          "Enumeration indicating the available synchronous memory "
	  "provisioning operations.  Synchronous operations result "
          "in an immediate change to the platform memory configuration. "),
       ValueMap { "2", "3" }, 
       Values { "AllocateFromPool", "ReturnToPool" },
       ModelCorrespondence { 
          "CIM_MemoryConfigurationCapabilities.SupportedAsynchronousOperations" }]
   uint16 SupportedSynchronousOperations[];

      [Description ( 
          "Enumeration indicating the available asynchronous memory "
	  "provisioning operations.  Asynchronous operations stage "
          "a memory provisioning request which takes effect after "
	  "some triggering action such as a system reboot."),
       ValueMap { "2", "3" }, 
       Values { "AllocateFromPool", "ReturnToPool" },
       ModelCorrespondence { 
          "CIM_MemoryConfigurationCapabilities.SupportedSynchronousOperations" }]
   uint16 SupportedAsynchronousOperations[];

};


// ==================================================================
//  CIM_ElementView
// ==================================================================
// Copyright (c) 2012 DMTF.  All rights reserved.
   [Association, Version ( "2.34.0" ), 
    UMLPackagePath ( "CIM::Core::CoreElements" ), 
    Description ( 
       "CIM_ElementView is used to associate an instance of CIM_View "
       "with an instance representing one or more instances of managed "
       "resources that contribute to the view." )]
class CIM_ElementView : CIM_Dependency {

      [Key, Override ( "Antecedent" ), 
       Description ( 
          "Antecedent shall be a reference to a CIM_ManagedElement "
          "that is an instance in the normalized representation of "
          "the managed resource that contributes to the view." )]
   CIM_ManagedElement REF Antecedent;

      [Key, Override ( "Dependent" ), 
       Description ( 
          "Dependent shall be a reference to an instance of "
          "CIM_View that represents a de-normalized or aggregate "
          "view of one or more instances that contribute to the "
          "view." )]
   CIM_View REF Dependent;


};

// ==================================================================
//  CIM_RawMemory
// ==================================================================
// Copyright (c) 2014 DMTF.  All rights reserved.
   [Version ( "2.43.0" ), 
    UMLPackagePath ( "CIM::Device::Memory" ), 
    Description ( 
       "Describes unconfigured memory capacity.  Instances of "
       "RawMemory become available to the operating system through "
       "some configuration process or are consumed internally as metadata "
       "storage, a cache tier, etc." )]
class CIM_RawMemory : CIM_Memory {

      [Override ( "Primordial" ), 
       Description ( "RawMemory instances are by definition primordial in nature. ")]
   boolean Primordial = true;

};

// ==================================================================
//  CIM_VisibleMemory
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.43.0" ), 
    UMLPackagePath ( "CIM::Core" ), 
    Description ( 
       "Describes an operating system visible memory extent. The term "
       "visible as used here indicates that the memory has been mapped "
       "directly or indirectly into the system address space." )]
class CIM_VisibleMemory : CIM_Memory {

      [Description ( 
          "Describes the granularity (block vs. byte) used by "
          "software accessing this memory. AccessGranularity is "
          "used to identify the units of read and write, while "
          "BlockSize and NumberOfBlocks is used to identify the "
          "capacity of the memory." ), 
       ValueMap { "0", "1", "2", "..", "32768..65535" }, 
       Values { "Unknown", "Block Addressable", "Byte Addressable", 
          "DMTF Reserved", "Vendor Reserved" }]
   uint16 AccessGranularity;

      [Description ( 
          "Indicates whether the contents of this extent are "
          "replicated either locally or on a remote system. "
          "Replication conveys the capabilities of memory "
          "controllers to mirror address ranges and the ability of "
          "system software/hardware to do RDMA type replication to "
          "another system. If Replication has a value, then "
          "PackageRedundancy and DataRedundancy would be used to "
          "expose the level of redundancy." ), 
       ValueMap { "0", "1", "2", "3", "..", "32768..65535" }, 
       Values { "Unknown", "Not Replicated", "Local Replication", 
          "Remote Replication", "DMTF Reserved", "Vendor Reserved" }]
   uint16 Replication;

      [Description ( 
          "If the controller has topology related constraints which "
          "limit its suitability for a given purpose, they can be "
          "exposed using this property. For example, if the visible "
          "memory is such that it can be accessed from one "
          "processor in a multi-processor system its accessed is "
          "constrained to usages from that processor. In that case, "
          "ProcessorAffinity is set to the DeviceID of the "
          "processor." ), 
       MaxLen ( 256 ), 
       ModelCorrespondence { "CIM_Processor.DeviceID" }]
   string ProcessorAffinity;
};

// ==================================================================
//  CIM_MemoryAllocationSettingData
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "The MemoryAllocationSettingData class represents settings used "
       "when allocating a memory extent. Instances can represent a "
       "default or staged setting in which case they are not "
       "associated with an existing extent. Instances can also "
       "represent the specific settings used when allocating an "
       "existing extent in which case they are assocated to that "
       "memory extent." )]
class CIM_MemoryAllocationSettingData : CIM_ResourceAllocationSettingData {

      [Override ( "ResourceType" ), 
       Description ( 
          "The type of resource this allocation setting represents. \n"
          "\"Memory\" volatile memory. \n"
          "\"Non-Volatile Memory\" memory that is energy backed or "
          "otherwise persistent media." ), 
       ValueMap { "0", "1", "4", "35", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Other", "Memory", "Non-Volatile Memory", 
          "DMTF reserved", "Vendor Reserved" }, 
       ModelCorrespondence { 
          "CIM_ResourceAllocationSettingData.OtherResourceType", 
          "CIM_ResourceAllocationSettingData.ResourceSubType" }]
   uint16 ResourceType;

      [Description ( 
          "Indicates the amount of data written to a given channel "
          "before switching to the next channel when a channel "
          "interleave scheme is in use. This value is given as the "
          "exponent in an exponential expression with 2 as the "
          "base. Example: 64B would be given as 6, 2**6=64B." )]
   uint16 ChannelInterleaveSize;

      [Description ( 
          "Indicates the number of channels involved in the channel "
          "interleave scheme." )]
   uint16 ChannelCount;

      [Description ( 
          "Indicates the amount of data written by a given memory "
          "controller before switching to the next controller when "
          "a memory controller interleave scheme is in use. This "
          "value is given as the exponent in an exponential "
          "expression with 2 as the base. Example: 64B would be "
          "given as 6, 2**6=64B" )]
   uint16 ControllerInterleaveSize;

      [Description ( 
          "Indicates whether replication is requested/in-use. \n"
          "\"Not Replicated\" No replication taking place. \n"
          "\"Local Replication\" Replication to resources within "
          "the same system. \n"
          "\"Remote Replication\" Replication to resources external "
          "to the system containing the primary copy." ), 
       ValueMap { "0", "2", "3", "4", "..", "0x8000..0xFFFF" }, 
       Values { "Unknown", "Not Replicated", "Local Replication", 
          "Remote Replication", "DMTF reserved", "Vendor Reserved" }]
   uint16 Replication;


};

// ==================================================================
//  CIM_MemoryConfigurationService
// ==================================================================
// Copyright (c) 2013 DMTF.  All rights reserved.
   [Experimental, Version ( "2.44.0" ), 
    UMLPackagePath ( "CIM::Device::ConfigurableMemory" ), 
    Description ( 
       "Instances of the CIM_MemoryConfigurationService exist to "
       "facilitate provisioning of system memory. Traditionally the "
       "platform BIOS is able to map memory resources into the system "
       "address space without user intervention. Some memory devices "
       "may support or require configuration prior to being made "
       "available in the system address space. The "
       "CIM_MemoryConfigurationService is utilized with this later "
       "type of memory device. It supports allocation, a process by "
       "which primordial, unconfigured memory is made available to the "
       "system. It also supports deallocation, whereby visible extents "
       "are returned to their primordial state." )]
class CIM_MemoryConfigurationService : CIM_Service {


      [Experimental, Description ( 
          "Use this method to provision primordial memory extents. "
          "Input parameters identify the desired configuration and "
          "the primordial pool from which to draw resources." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "4096", "4097", 
          "4098", "4099", "..", "4100..32767", "32768..65535" }, 
       Values { "Request Was Successfully Executed", 
          "Not Supported", "Unknown", "Timeout", "Failed", 
          "Invalid Parameter", 
          "Request Was Successfully Staged for Future Execution", 
          "Insufficient Resources", "Inconsistent Parameters", 
          "Request did not Complete in its Entirety and Partial Results Could not be Undone", 
          "DMTF Reserved", "Method Reserved", "Vendor Specific" }]
   uint32 AllocateFromPool(
         [IN, Description ( "Reference to the resource pool." )]
      CIM_ResourcePool REF Pool, 
         [IN, Description ( 
             "One or more embedded instances of "
             "CIM_MemoryAllocationSettingData which describe the "
             "allocation request." ), 
          EmbeddedInstance ( "CIM_MemoryAllocationSettingData" )]
      string Goal[], 
         [OUT, Description ( 
             "When results are successful, non-staged this "
             "parameter contains references to CIM_VisibleMemory "
             "instances representing the allocated memory "
             "extents." )]
      CIM_VisibleMemory REF MemoryExtents[]);

      [Experimental, Description ( 
          "Use this method to deallocate system visible memory "
          "extents thereby returning their capacity to the "
          "primordial pool from which it was drawn." ), 
       ValueMap { "0", "1", "2", "3", "4", "5", "4096", "4099", 
          "4100..32767", "32768..65535" }, 
       Values { "Request Was Successfully Executed", 
          "Not Supported", "Unknown", "Timeout", "Failed", 
          "Invalid Parameter", 
          "Request Was Successfully Staged for Future Execution", 
          "Request did not Complete in its Entirety and Partial Results Could not be Undone", 
          "Method Reserved", "Vendor Specific" }]
   uint32 ReturnToPool(
         [IN, Description ( 
             "Reference to one or more visible memory extents to "
             "be deallocated." )]
      CIM_VisibleMemory REF MemoryExtent[]);

};

// Copyright (c) 2005 DMTF.  All rights reserved.
   [Abstract, Version ( "2.43.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "Controller is a superclass for grouping the miscellaneous "
       "control-related Devices that provide a classic bus master "
       "interface. Examples of Controllers are USBControllers, "
       "SerialControllers, and so on. The Controller class is an "
       "abstraction for Devices with a single protocol stack, which "
       "exist to control communications (data, control, and reset) to "
       "downstream devices. Note that a new abstract class "
       "(ProtocolController) has been created to model more complex "
       "interface controllers such as SCSI." )]
class CIM_Controller : CIM_LogicalDevice {

      [Description ( "Time of last reset of the Controller." )]
   datetime TimeOfLastReset;

      [Description ( 
          "The protocol used by the Controller to access controlled Devices."
           ), 
       ValueMap { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", 
          "11", "12", "13", "14", "15", "16", "17", "18", "19", 
          "20", "21", "22", "23", "24", "25", "26", "27", "28", 
          "29", "30", "31", "32", "33", "34", "35", "36", "37", 
          "38", "39", "40", "41", "42", "43", "44", "45", "46", 
          "47", "48", "49", "50" }, 
       Values { "Other", "Unknown", "EISA", "ISA", "PCI", 
          "ATA/ATAPI", "Flexible Diskette", "1496", 
          "SCSI Parallel Interface", 
          // 10               
          "SCSI Fibre Channel Protocol", 
          "SCSI Serial Bus Protocol", 
          "SCSI Serial Bus Protocol-2 (1394)", 
          "SCSI Serial Storage Architecture", "VESA", "PCMCIA", 
          "Universal Serial Bus", "Parallel Protocol", "ESCON", 
          "Diagnostic", // 20               
          "I2C", 
          "Power", "HIPPI", "MultiBus", "VME", "IPI", "IEEE-488", 
          "RS232", "IEEE 802.3 10BASE5", "IEEE 802.3 10BASE2", 
          // 30               
          "IEEE 802.3 1BASE5", 
          "IEEE 802.3 10BROAD36", "IEEE 802.3 100BASEVG", 
          "IEEE 802.5 Token-Ring", "ANSI X3T9.5 FDDI", "MCA", 
          "ESDI", "IDE", "CMD", "ST506", 
          // 40               
          "DSSI", "QIC2", 
          "Enhanced ATA/IDE", "AGP", "TWIRP (two-way infrared)", 
          "FIR (fast infrared)", "SIR (serial infrared)", "IrBus", 
          "Serial ATA", "DDR3", "DDR4" }, 
       MappingStrings { "MIF.DMTF|Bus Port|004.2", 
          "MIF.DMTF|Disks|003.3" }, 
       ModelCorrespondence { "CIM_Controller.ProtocolDescription" }]
   uint16 ProtocolSupported;

      [Description ( 
          "Maximum number of directly addressable entities that are "
          "supported by this Controller. A value of 0 should be "
          "used if the number is unknown or unlimited." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.9" }]
   uint32 MaxNumberControlled;

      [Description ( 
          "A free-form string that provides more information that "
          "is related to the ProtocolSupported by the Controller." ), 
       MappingStrings { "MIF.DMTF|Bus Port|004.3" }, 
       ModelCorrespondence { "CIM_Controller.ProtocolSupported" }]
   string ProtocolDescription;
};

// Copyright (c) 2014 DMTF.  All rights reserved.
   [Version ( "2.43.0" ), 
    UMLPackagePath ( "CIM::Device::Controller" ), 
    Description ( 
       "MemoryController instances provide access to and management for "
       "their associated memory devices. " )]
class CIM_MemoryController : CIM_Controller {

	[Override ("ProtocolSupported"),
	Description ( 
          "The protocol used by the Controller to access controlled Devices."), 
       	 ValueMap { "1", "2", "49", "50"}, 
         Values { "Other", "Unknown", "DDR3", "DDR4"}, 
         MappingStrings { "MIF.DMTF|Bus Port|004.2", 
          "MIF.DMTF|Disks|003.3" }, 
         ModelCorrespondence { "CIM_Controller.ProtocolDescription" }]
   uint16 ProtocolSupported;

      [Description ( 
	"If the controller has topology related constraints which limit its suitability " 
	"for a given purpose they can be exposed using this property.  If for example, "
	"the controller physical connectivity is such that it can be accessed from "
	"one processor in a multi-processor system its configurability is constrained to "
	"usages from that processor.  In that case, Affinity is set to the DeviceID "
        "of the processor." ), 
       MaxLen ( 256 )]
   string ProcessorAffinity;

};

